<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PA &amp; CODING</title>
  
  <subtitle>求仁得仁</subtitle>
  <link href="https://jxch.github.io/atom.xml" rel="self"/>
  
  <link href="https://jxch.github.io/"/>
  <updated>2023-06-25T09:01:49.083Z</updated>
  <id>https://jxch.github.io/</id>
  
  <author>
    <name>钱不寒</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日记-20230625-集权社会的运行逻辑</title>
    <link href="https://jxch.github.io/2023/06/25/ri-ji/ri-ji-20230625-ji-quan-she-hui-de-yun-xing-luo-ji/"/>
    <id>https://jxch.github.io/2023/06/25/ri-ji/ri-ji-20230625-ji-quan-she-hui-de-yun-xing-luo-ji/</id>
    <published>2023-06-25T08:49:55.000Z</published>
    <updated>2023-06-25T09:01:49.083Z</updated>
    
    <content type="html"><![CDATA[<p>本质是利用了人类脱离了地方社区的政治庇护会因缺乏安全感而主动向上层移动的本能：</p><ol><li>人只有在社区中才有安全感，打破地方社团（摧毁地方上的政治势力，服从上层社区），使之缺乏安全感（动物本能）</li><li>维护上升通道的相对公平，世界上只有一个社团—即上流社会，不断向上抽血，使地方无强人，更加不会形成独立的政治势力</li><li>保证上升通道足够窄—使其只有一种或几种上升方式，让底层对上升通道形成强依赖，让人与人之间充满上升竞争，这样就不会团结起来反抗上流社会了</li></ol><p>政治是社会的基础，权力是政治的基础，安全感是权力的基础，而制造稀缺就是控制安全感最立竿见影的手段（正常社会也有稀缺，而集权社会在于人为的制造稀缺）<br>集权社会的逻辑漏洞就是稀缺和安全感，只要内心充实，就不会被稀缺所惑；只要内心强大，就不会刻意的去上流社会寻找外在的安全感<br>因此社会的物质文明发展必将导致集权社会的破产而被迫转型为民主社会</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本质是利用了人类脱离了地方社区的政治庇护会因缺乏安全感而主动向上层移动的本能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;人只有在社区中才有安全感，打破地方社团（摧毁地方上的政治势力，服从上层社区），使之缺乏安全感（动物本能）&lt;/li&gt;
&lt;li&gt;维护上升通道的相对公平，世界上只有一个社团—</summary>
      
    
    
    
    <category term="思考" scheme="https://jxch.github.io/categories/%E6%80%9D%E8%80%83/"/>
    
    
    <category term="日记" scheme="https://jxch.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>capital-K线形态识别系统</title>
    <link href="https://jxch.github.io/2023/06/24/capital/capital-k-xian-xing-tai-shi-bie-xi-tong/"/>
    <id>https://jxch.github.io/2023/06/24/capital/capital-k-xian-xing-tai-shi-bie-xi-tong/</id>
    <published>2023-06-24T14:38:07.000Z</published>
    <updated>2023-06-24T14:41:29.332Z</updated>
    
    <content type="html"><![CDATA[<p>k线的周期性和分形性是天然的差值和降维算法，高级的未必是适合的，在k线形态识别上，AI未必优于简单的概率统计。</p><p>模型调优：</p><ul><li>模型的灵敏度取决于前置状态的丰富度</li><li>模型的准确度取决于后置状态的丰富度</li><li>模型分类的数量取决于样本k线的长度</li></ul><p><img src="/static/capital/%E5%88%86%E7%B1%BB%E5%99%A8.png" alt="K线形态识别系统"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;k线的周期性和分形性是天然的差值和降维算法，高级的未必是适合的，在k线形态识别上，AI未必优于简单的概率统计。&lt;/p&gt;
&lt;p&gt;模型调优：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模型的灵敏度取决于前置状态的丰富度&lt;/li&gt;
&lt;li&gt;模型的准确度取决于后置状态的丰富度&lt;/li&gt;
&lt;li&gt;模</summary>
      
    
    
    
    <category term="工作笔记" scheme="https://jxch.github.io/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Capital" scheme="https://jxch.github.io/tags/Capital/"/>
    
  </entry>
  
  <entry>
    <title>Iphone-更换地区解锁应用商店</title>
    <link href="https://jxch.github.io/2023/06/23/yun-wei/iphone-geng-huan-di-qu-jie-suo-ying-yong-shang-dian/"/>
    <id>https://jxch.github.io/2023/06/23/yun-wei/iphone-geng-huan-di-qu-jie-suo-ying-yong-shang-dian/</id>
    <published>2023-06-22T22:48:47.000Z</published>
    <updated>2023-06-22T22:49:45.387Z</updated>
    
    <content type="html"><![CDATA[<ol><li>去设置里将国家设为美国</li><li>去应用商店里将国家设为台湾（无需验证，验证时会自动跳过）</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;去设置里将国家设为美国&lt;/li&gt;
&lt;li&gt;去应用商店里将国家设为台湾（无需验证，验证时会自动跳过）&lt;/li&gt;
&lt;/ol&gt;
</summary>
      
    
    
    
    <category term="运维手册" scheme="https://jxch.github.io/categories/%E8%BF%90%E7%BB%B4%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="Iphone" scheme="https://jxch.github.io/tags/Iphone/"/>
    
  </entry>
  
  <entry>
    <title>K线形态-光K线</title>
    <link href="https://jxch.github.io/2023/06/22/k-xian-xing-tai/k-xian-xing-tai-guang-k-xian/"/>
    <id>https://jxch.github.io/2023/06/22/k-xian-xing-tai/k-xian-xing-tai-guang-k-xian/</id>
    <published>2023-06-22T02:52:26.000Z</published>
    <updated>2023-06-22T02:54:04.299Z</updated>
    
    <content type="html"><![CDATA[<p>一端或两端没有影线的K线<br>只有当其形成于强趋势之中，才是一个建仓形态<br>（比如在强劲上升趋势中，如果出现一根没有上影线或下影线的多头趋势K线，那么它就是一个买入形态）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一端或两端没有影线的K线&lt;br&gt;
只有当其形成于强趋势之中，才是一个建仓形态&lt;br&gt;
（比如在强劲上升趋势中，如果出现一根没有上影线或下影线的多头趋势K线，那么它就是一个买入形态）&lt;/p&gt;
</summary>
      
    
    
    
    <category term="K线形态" scheme="https://jxch.github.io/categories/K%E7%BA%BF%E5%BD%A2%E6%80%81/"/>
    
    
    <category term="K线形态" scheme="https://jxch.github.io/tags/K%E7%BA%BF%E5%BD%A2%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-计算皮尔逊相关系数</title>
    <link href="https://jxch.github.io/2023/06/21/template/javascript-ji-suan-pi-er-xun-xiang-guan-xi-shu/"/>
    <id>https://jxch.github.io/2023/06/21/template/javascript-ji-suan-pi-er-xun-xiang-guan-xi-shu/</id>
    <published>2023-06-21T06:40:25.000Z</published>
    <updated>2023-06-21T06:41:13.122Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算皮尔逊相关系数</span><span class="token keyword">function</span> <span class="token function">pearsonCorrelation</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> sum1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum1Sq <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum2Sq <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> pSum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum1 <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        sum2 <span class="token operator">+=</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        sum1Sq <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sum2Sq <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pSum <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> num <span class="token operator">=</span> pSum <span class="token operator">-</span> <span class="token punctuation">(</span>sum1 <span class="token operator">*</span> sum2<span class="token punctuation">)</span> <span class="token operator">/</span> n<span class="token punctuation">;</span>    <span class="token keyword">let</span> den <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>        <span class="token punctuation">(</span>sum1Sq <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>sum1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>sum2Sq <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>sum2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> n<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>den <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> num <span class="token operator">/</span> den<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算相似度 (0-1，值越大越相似)</span><span class="token keyword">function</span> <span class="token function">pccSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">pearsonCorrelation</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 计算</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="分类算法" scheme="https://jxch.github.io/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
    <category term="皮尔逊相关系数" scheme="https://jxch.github.io/tags/%E7%9A%AE%E5%B0%94%E9%80%8A%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-计算余弦相似度</title>
    <link href="https://jxch.github.io/2023/06/21/template/javascript-ji-suan-yu-xian-xiang-si-du/"/>
    <id>https://jxch.github.io/2023/06/21/template/javascript-ji-suan-yu-xian-xiang-si-du/</id>
    <published>2023-06-21T06:39:28.000Z</published>
    <updated>2023-06-21T06:40:00.323Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算余弦相似度</span><span class="token keyword">function</span> <span class="token function">cosineSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> dotProduct <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> magnitude1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> magnitude2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        dotProduct <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        magnitude1 <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        magnitude2 <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    magnitude1 <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>magnitude1<span class="token punctuation">)</span><span class="token punctuation">;</span>    magnitude2 <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>magnitude2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>magnitude1 <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> magnitude2 <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> dotProduct <span class="token operator">/</span> <span class="token punctuation">(</span>magnitude1 <span class="token operator">*</span> magnitude2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 计算</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="分类算法" scheme="https://jxch.github.io/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
    <category term="余弦相似度" scheme="https://jxch.github.io/tags/%E4%BD%99%E5%BC%A6%E7%9B%B8%E4%BC%BC%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-计算曼哈顿距离</title>
    <link href="https://jxch.github.io/2023/06/21/template/javascript-ji-suan-man-ha-dun-ju-chi/"/>
    <id>https://jxch.github.io/2023/06/21/template/javascript-ji-suan-man-ha-dun-ju-chi/</id>
    <published>2023-06-21T06:38:12.000Z</published>
    <updated>2023-06-21T06:38:51.213Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算曼哈顿距离</span><span class="token keyword">function</span> <span class="token function">manhattanDistance</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> sum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算相似度</span><span class="token keyword">function</span> <span class="token function">manhattanSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token function">manhattanDistance</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 计算</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="分类算法" scheme="https://jxch.github.io/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
    <category term="曼哈顿距离" scheme="https://jxch.github.io/tags/%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-计算斯皮尔曼等级相关系数</title>
    <link href="https://jxch.github.io/2023/06/21/template/javascript-ji-suan-si-pi-er-man-deng-ji-xiang-guan-xi-shu/"/>
    <id>https://jxch.github.io/2023/06/21/template/javascript-ji-suan-si-pi-er-man-deng-ji-xiang-guan-xi-shu/</id>
    <published>2023-06-21T06:36:24.000Z</published>
    <updated>2023-06-21T06:37:48.549Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算斯皮尔曼等级相关系数</span><span class="token keyword">function</span> <span class="token function">spearmanRankCorrelation</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 计算排名</span>    <span class="token keyword">function</span> <span class="token function">rank</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> sorted <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> sorted<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> rankS <span class="token operator">=</span> <span class="token function">rank</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> rankT <span class="token operator">=</span> <span class="token function">rank</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> dSquaredSum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        dSquaredSum <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>rankS<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> rankT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> dSquaredSum<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算相似度 (0-1，值越大越相似)</span><span class="token keyword">function</span> <span class="token function">spearmanRankSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">spearmanRankCorrelation</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 计算</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="分类算法" scheme="https://jxch.github.io/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
    <category term="斯皮尔曼等级相关系数" scheme="https://jxch.github.io/tags/%E6%96%AF%E7%9A%AE%E5%B0%94%E6%9B%BC%E7%AD%89%E7%BA%A7%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-使用条件概率表达式计算对象数组的条件概率</title>
    <link href="https://jxch.github.io/2023/06/20/template/javascript-shi-yong-tiao-jian-gai-lu-biao-da-shi-ji-suan-dui-xiang-shu-zu-de-tiao-jian-gai-lu/"/>
    <id>https://jxch.github.io/2023/06/20/template/javascript-shi-yong-tiao-jian-gai-lu-biao-da-shi-ji-suan-dui-xiang-shu-zu-de-tiao-jian-gai-lu/</id>
    <published>2023-06-20T14:14:01.000Z</published>
    <updated>2023-06-20T17:03:33.540Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">calculateProbability</span><span class="token punctuation">(</span><span class="token parameter">inputObjArr<span class="token punctuation">,</span> expression</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 解析表达式</span>    <span class="token keyword">let</span> match <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^P\((.*)\)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'无效的表达式'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> conditions <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s*\|\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> mainConditions <span class="token operator">=</span> conditions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s*,\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> givenConditions <span class="token operator">=</span> conditions<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s*,\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 解析条件</span>    <span class="token keyword">function</span> <span class="token function">parseCondition</span><span class="token punctuation">(</span><span class="token parameter">condition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> match <span class="token operator">=</span> condition<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([a-zA-Z]+)\s*([&lt;&gt;])\s*([\d.-]+)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'无效的条件'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            <span class="token literal-property property">dimension</span><span class="token operator">:</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">operator</span><span class="token operator">:</span> match<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> mainConditionsParsed <span class="token operator">=</span> mainConditions<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseCondition<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> givenConditionsParsed <span class="token operator">=</span> givenConditions<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseCondition<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 计算概率</span>    <span class="token keyword">let</span> givenCount <span class="token operator">=</span> inputObjArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">point</span> <span class="token operator">=&gt;</span> givenConditionsParsed<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span>operator <span class="token operator">===</span> <span class="token string">'&gt;'</span> <span class="token operator">?</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&gt;</span> condition<span class="token punctuation">.</span>threshold <span class="token operator">:</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&lt;</span> condition<span class="token punctuation">.</span>threshold<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>givenCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> count <span class="token operator">=</span> inputObjArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">point</span> <span class="token operator">=&gt;</span> mainConditionsParsed<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span>operator <span class="token operator">===</span> <span class="token string">'&gt;'</span> <span class="token operator">?</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&gt;</span> condition<span class="token punctuation">.</span>threshold <span class="token operator">:</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&lt;</span> condition<span class="token punctuation">.</span>threshold<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> givenConditionsParsed<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span>operator <span class="token operator">===</span> <span class="token string">'&gt;'</span> <span class="token operator">?</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&gt;</span> condition<span class="token punctuation">.</span>threshold <span class="token operator">:</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&lt;</span> condition<span class="token punctuation">.</span>threshold<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">return</span> count <span class="token operator">/</span> givenCount<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> pointArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> probability <span class="token operator">=</span> <span class="token function">calculateProbability</span><span class="token punctuation">(</span>pointArr<span class="token punctuation">,</span> <span class="token string">'P(a &gt; 2 | b &gt; 3)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>probability<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;funct</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="条件概率" scheme="https://jxch.github.io/tags/%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-计算两个数组之间的DTW距离</title>
    <link href="https://jxch.github.io/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-dtw-ju-chi/"/>
    <id>https://jxch.github.io/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-dtw-ju-chi/</id>
    <published>2023-06-20T13:02:57.000Z</published>
    <updated>2023-06-20T13:05:30.249Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 归一化</span><span class="token keyword">function</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算二维数组的距离</span><span class="token keyword">function</span> <span class="token function">euclideanDistance</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum <span class="token operator">+=</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算DTW距离</span><span class="token keyword">function</span> <span class="token function">dtw</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t<span class="token punctuation">,</span> dist</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> m <span class="token operator">=</span> t<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> <span class="token constant">DTW</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token constant">DTW</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token constant">DTW</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> cost <span class="token operator">=</span> <span class="token function">dist</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token constant">DTW</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> cost <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token constant">DTW</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DTW</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DTW</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token constant">DTW</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 去重，保留相似序列片段中相似度最大的值</span><span class="token keyword">function</span> <span class="token function">deduplication</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span>    keys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> keys<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>            maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token comment">// 计算两个数组之间的DTW距离，找出与inputArr的所有相似序列片段</span><span class="token keyword">function</span> <span class="token function">findSimilarSegmentsDTW</span><span class="token punctuation">(</span><span class="token parameter">inputArr<span class="token punctuation">,</span> largeArr<span class="token punctuation">,</span> threshold <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">,</span> windowSize <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    windowSize <span class="token operator">=</span> windowSize <span class="token operator">||</span> inputArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> nInputArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>inputArr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> similarityDict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> largeArr<span class="token punctuation">.</span>length <span class="token operator">-</span> windowSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> subArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>largeArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> windowSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> similarity <span class="token operator">=</span> <span class="token function">dtw</span><span class="token punctuation">(</span>nInputArr<span class="token punctuation">,</span> subArr<span class="token punctuation">,</span> euclideanDistance<span class="token punctuation">)</span>        similarity <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> similarity<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>similarity <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span> <span class="token punctuation">{</span>            similarityDict<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> similarity<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// return deduplication(similarityDict);</span>    <span class="token keyword">return</span> similarityDict<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 归一</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="DTW" scheme="https://jxch.github.io/tags/DTW/"/>
    
    <category term="分类算法" scheme="https://jxch.github.io/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-计算两个数组之间的欧几里得距离</title>
    <link href="https://jxch.github.io/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-ou-ji-li-de-ju-chi/"/>
    <id>https://jxch.github.io/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-ou-ji-li-de-ju-chi/</id>
    <published>2023-06-20T12:58:49.000Z</published>
    <updated>2023-06-20T13:04:51.214Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 归一化</span><span class="token keyword">function</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算欧几里得距离</span><span class="token keyword">function</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> similarity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> distance <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            distance <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        similarity <span class="token operator">+=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> similarity <span class="token operator">/</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 去重，保留相似序列片段中相似度最大的值</span><span class="token keyword">function</span> <span class="token function">deduplication</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span>    keys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> keys<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>            maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token comment">// 计算两个数组之间的欧几里得距离，找出与inputArr的所有相似序列片段</span><span class="token keyword">function</span> <span class="token function">findSimilarSegments</span><span class="token punctuation">(</span><span class="token parameter">inputArr<span class="token punctuation">,</span> largeArr<span class="token punctuation">,</span> threshold <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">,</span> windowSize <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    windowSize <span class="token operator">=</span> windowSize <span class="token operator">||</span> inputArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> nInputArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>inputArr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> similarityDict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> largeArr<span class="token punctuation">.</span>length <span class="token operator">-</span> windowSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> subArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>largeArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> windowSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> similarity <span class="token operator">=</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span>nInputArr<span class="token punctuation">,</span> subArr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>similarity <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span> <span class="token punctuation">{</span>            similarityDict<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> similarity<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// return deduplication(similarityDict);</span>    <span class="token keyword">return</span> similarityDict<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 归一</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="分类算法" scheme="https://jxch.github.io/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
    <category term="欧几里得距离" scheme="https://jxch.github.io/tags/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E8%B7%9D%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript-数组转SVG</title>
    <link href="https://jxch.github.io/2023/06/20/template/javascript-shu-zu-zhuan-svg/"/>
    <id>https://jxch.github.io/2023/06/20/template/javascript-shu-zu-zhuan-svg/</id>
    <published>2023-06-20T12:53:04.000Z</published>
    <updated>2023-06-20T12:54:55.297Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">svgHtmlByArr</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> color<span class="token punctuation">,</span> strokeWidth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> maxValue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> minValue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> xStep <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> svg <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;svg width="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>width<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">" height="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>height<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    svg <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;polyline points="</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>maxValue <span class="token operator">-</span> minValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> height<span class="token punctuation">;</span>        <span class="token keyword">const</span> x <span class="token operator">=</span> index <span class="token operator">*</span> xStep<span class="token punctuation">;</span>        svg <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>height <span class="token operator">-</span> y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    svg <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">" style="fill:none;stroke:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;stroke-width:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>strokeWidth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">" /&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    svg <span class="token operator">+=</span> <span class="token string">'&lt;/svg&gt;'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> svg<span class="token punctuation">}</span><span class="token keyword">const</span> svgHtml <span class="token operator">=</span> <span class="token function">svgHtmlByArr</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">'black'</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-javascript&quot; data-language=&quot;javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;funct</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="JavaScript" scheme="https://jxch.github.io/tags/JavaScript/"/>
    
    <category term="SVG" scheme="https://jxch.github.io/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>Caddy2-反向代理到其他端口</title>
    <link href="https://jxch.github.io/2023/06/16/template/caddy2-fan-xiang-dai-li-dao-qi-ta-duan-kou/"/>
    <id>https://jxch.github.io/2023/06/16/template/caddy2-fan-xiang-dai-li-dao-qi-ta-duan-kou/</id>
    <published>2023-06-16T05:36:38.000Z</published>
    <updated>2023-06-16T05:43:06.762Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>handle_path</code>: 代理时去除前缀</li><li><code>route</code>: 代理时不去除前缀</li></ul><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">xxx.site</span> <span class="token value attr-value">{</span><span class="token key attr-name">    root</span> <span class="token value attr-value">* /usr/share/caddy</span>    file_server<span class="token key attr-name">    log</span> <span class="token value attr-value">{</span><span class="token key attr-name">        output</span> <span class="token value attr-value">file /var/log/caddy/access.log</span>    }<span class="token key attr-name">    tls</span> <span class="token value attr-value">xxx@gmail.com</span><span class="token key attr-name">    tls</span> <span class="token value attr-value">{</span><span class="token key attr-name">        protocols</span> <span class="token value attr-value">tls1.2 tls1.3</span><span class="token key attr-name">        ciphers</span> <span class="token value attr-value">TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256</span>    }<span class="token key attr-name">    route</span> <span class="token value attr-value">/path/* {</span><span class="token key attr-name">        reverse_proxy</span> <span class="token value attr-value">http://xxx.site:18000</span>    }    <span class="token key attr-name">    handle_path</span> <span class="token value attr-value"> /path_server/* {</span><span class="token key attr-name">        reverse_proxy</span> <span class="token value attr-value">http://xxx.site:15000 </span>    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;handle_path&lt;/code&gt;: 代理时去除前缀&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route&lt;/code&gt;: 代理时不去除前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-properties&quot; da</summary>
      
    
    
    
    <category term="config-template" scheme="https://jxch.github.io/categories/config-template/"/>
    
    
    <category term="Caddy2" scheme="https://jxch.github.io/tags/Caddy2/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes-kubectl 报错 The connection to the server localhost:8080 was refused</title>
    <link href="https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubectl-bao-cuo-the-connection-to-the-server-localhost-8080-was-refused/"/>
    <id>https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubectl-bao-cuo-the-connection-to-the-server-localhost-8080-was-refused/</id>
    <published>2023-06-13T23:30:49.000Z</published>
    <updated>2023-06-13T23:31:51.211Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"export KUBECONFIG=/etc/kubernetes/admin.conf"</span> <span class="token operator">&gt;&gt;</span> /etc/profile<span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; </summary>
      
    
    
    
    <category term="排错笔记" scheme="https://jxch.github.io/categories/%E6%8E%92%E9%94%99%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Kubernetes" scheme="https://jxch.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes-kubeadm init 报错 unknown service runtime.v1.RuntimeService</title>
    <link href="https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubeadm-init-bao-cuo-unknown-service-runtime-v1-runtimeservice/"/>
    <id>https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubeadm-init-bao-cuo-unknown-service-runtime-v1-runtimeservice/</id>
    <published>2023-06-13T23:25:30.000Z</published>
    <updated>2023-06-13T23:31:07.296Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 移除 /etc/containerd/config.toml</span><span class="token function">mv</span> /etc/containerd/config.toml /root/config.toml.baksystemctl restart containerdkubeadm init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 移除 /etc/containerd/co</summary>
      
    
    
    
    <category term="排错笔记" scheme="https://jxch.github.io/categories/%E6%8E%92%E9%94%99%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Kubernetes" scheme="https://jxch.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Redis-单线程+IO多路复用+SCAN</title>
    <link href="https://jxch.github.io/2023/06/13/it/redis-dan-xian-cheng-io-duo-lu-fu-yong-scan/"/>
    <id>https://jxch.github.io/2023/06/13/it/redis-dan-xian-cheng-io-duo-lu-fu-yong-scan/</id>
    <published>2023-06-12T22:03:00.000Z</published>
    <updated>2023-06-12T22:07:32.168Z</updated>
    
    <content type="html"><![CDATA[<h2 id="单线程">单线程</h2><p><font color="orange">Redis 的单线程主要是指 Redis 的网络 IO 和键值对读写是由一个线程来完成的</font>，这也是 Redis 对外提供键值存储服务的主要流程。但 Redis 的其他功能，比如<font color="orange">持久化、异步删除、集群数据同步等，其实是由额外的线程执行的。</font></p><p>因为它所有的数据都在内存中，所有的运算都是内存级别的运算，而且<font color="orange">单线程避免了多线程的切换性能损耗问题</font>。正因为 Redis 是单线程，所以要<font color="orange">小心使用耗时的指令(比如keys)</font>，一不小心就可能会导致 Redis 卡顿。</p><h2 id="IO多路复用">IO多路复用</h2><p>Redis的IO多路复用：<font color="orange">redis利用epoll来实现IO多路复用</font>，将连接信息和事件放到队列中，依次放到文件事件分派器，事件分派器将事件分发给事件处理器。<br>查看redis支持的最大连接数，在redis.conf文件中可修改：<code>CONFIG GET maxclients</code><br><img src="/static/IT/Redis/Redis-IO.png" alt="IO多路复用"></p><h2 id="SCAN">SCAN</h2><p><code>KEYS</code>是全量遍历，当数据量大时，性能很差，应用SCAN取代（手动分段遍历，直到游标为0停止遍历）<br><code>SCAN 0 match jxch** count 100</code><br>以0为游标，分段扫描以jxch开头的key，每次返回100个，然后<font color="orange">以返回值为游标，继续扫描，直到返回的游标为0</font><br>注意，100是个参考值，实际返回的是接近100的数目，可能多也可能少（取决于HASH桶中有几个值，因为Redis的存储结构是哈希表）</p><p>如果在scan的过程中如果有键的变化（增加、 删除、 修改） ，那么遍历效果可能会碰到如下问题： 新增的键可能没有遍历到（不会扫描已经遍历过的HASH桶）， 遍历出了重复的键（发生了RE-HASH）等情况， 也就是说<font color="orange">SCAN并不能保证完整的遍历出来所有的键</font>，这些是我们在开发时需要考虑的，但在追求性能的情况下，往往并不要求一致性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;单线程&quot;&gt;单线程&lt;/h2&gt;
&lt;p&gt;&lt;font color=&quot;orange&quot;&gt;Redis 的单线程主要是指 Redis 的网络 IO 和键值对读写是由一个线程来完成的&lt;/font&gt;，这也是 Redis 对外提供键值存储服务的主要流程。但 Redis 的其他功能，比如</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Redis" scheme="https://jxch.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-自动配置流程</title>
    <link href="https://jxch.github.io/2023/06/11/it/springboot-zi-dong-pei-zhi-liu-cheng/"/>
    <id>https://jxch.github.io/2023/06/11/it/springboot-zi-dong-pei-zhi-liu-cheng/</id>
    <published>2023-06-10T20:58:22.000Z</published>
    <updated>2023-06-10T22:34:52.490Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableAutoConfiguration</span>    <span class="token annotation punctuation">@AutoConfigurationPackage</span>    <span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoConfigurationImportSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector</span><span class="token punctuation">)</span>         <span class="token function">getImportGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token class-name">AutoConfigurationGroup</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector<span class="token punctuation">.</span>Group</span>            <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token function">getAutoConfigurationEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token class-name">ImportCandidates</span><span class="token punctuation">.</span>load  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token operator">/</span><span class="token operator">%</span>s<span class="token punctuation">.</span>imports                <span class="token function">getConfigurationClassFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token class-name">AutoConfigurationMetadataLoader</span><span class="token punctuation">.</span>loadMetadata  <span class="token operator">-&gt;</span>  <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token operator">-</span>autoconfigure<span class="token operator">-</span>metadata<span class="token punctuation">.</span>properties                <span class="token function">fireAutoConfigurationImportEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token operator">-&gt;</span>  <span class="token class-name">SpringFactoriesLoader</span><span class="token punctuation">.</span>loadFactories  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories            <span class="token function">selectImports</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token function">sortAutoConfigurations</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token operator">-&gt;</span>  <span class="token annotation punctuation">@AutoConfigureOrder</span> <span class="token operator">&amp;</span> <span class="token annotation punctuation">@AutoConfigureBefore</span> <span class="token operator">&amp;</span> <span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token annotation punctuation">@ComponentScan</span> <span class="token operator">-&gt;</span>  excludeFilters    <span class="token class-name">AutoConfigurationExcludeFilter</span> <span class="token operator">-&gt;</span>  <span class="token function">isAutoConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories        <span class="token class-name">TypeExcludeFilter</span>   <span class="token operator">-&gt;</span>   <span class="token class-name">ApplicationContextInitialize</span>  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/static/IT/SpringCloud/SpringBootAutoConfiguration.png" alt="SpringBoot 自动配置流程"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-java&quot; data-language=&quot;java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@SpringB</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-核心流程模拟实现</title>
    <link href="https://jxch.github.io/2023/06/10/it/springboot-he-xin-liu-cheng-mo-ni-shi-xian/"/>
    <id>https://jxch.github.io/2023/06/10/it/springboot-he-xin-liu-cheng-mo-ni-shi-xian/</id>
    <published>2023-06-09T23:15:33.000Z</published>
    <updated>2023-06-10T00:12:36.297Z</updated>
    
    <content type="html"><![CDATA[<h2 id="核心流程">核心流程</h2><p>模拟springboot注意事项（启动流程，自动装配，依赖控制）：</p><ol><li>springboot选择一个webserver启动（只能有一个），run启动spring容器，将app作为配置类，随后启动webserver</li><li>根据依赖选择哪个bean生效（当存在哪些类或Bean且不存在哪些类或Bean时生效）</li><li>根据spi自动装配（DeferredImportSelector- 用户自定义bean优先）</li><li>最终项目通过自定义依赖来保证只有一个tomcat容器功能（核心项目实现其他容器功能时需要全部依赖，但是不将这些依赖打入自己的jar包）</li><li>使用ASM绕过类加载器读取class文件注解，避免没有相关依赖时运行报错（class文件不会在编译期报错）</li></ol><p>第四条和第五条由于过于复杂，并未实现，这里只是简单说明</p><pre class="line-numbers language-none"><code class="language-none">项目结构    boot-core 模拟springboot    boot-bean 模拟自定义项目的自动装配，需要boot-core依赖    boot-app  模拟引用boot-core和boot-bean创建app<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="boot-默认启动-Tomcat（boot-core）">boot 默认启动 Tomcat（boot-core）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ComponentScan</span><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoImport</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SpringBootApp</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> app<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">AnnotationConfigWebApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigWebApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        applicationContext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>        applicationContext<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">WebServer</span> webServer <span class="token operator">=</span> <span class="token function">getWebServer</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>        webServer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">WebServer</span> <span class="token function">getWebServer</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">AnnotationConfigWebApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">WebServer</span><span class="token punctuation">&gt;</span></span> webServers <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">WebServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>webServers<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">"请引入WebServer的依赖，如Tomcat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>webServers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"只能保留一个WebServer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> webServers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span><span class="token string">"classpath:application.properties"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebServerAutoConfig</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">,</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">WebApplicationContext</span> applicationContext<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${server.port}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> port<span class="token punctuation">;</span>         <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">Tomcat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">WebServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">TomcatWebServer</span> <span class="token function">tomcatWebServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Tomcat</span> tomcat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tomcat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Server</span> server <span class="token operator">=</span> tomcat<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Service</span> service <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">findService</span><span class="token punctuation">(</span><span class="token string">"Tomcat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connector</span> connector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        connector<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Engine</span> engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        engine<span class="token punctuation">.</span><span class="token function">setDefaultHost</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Host</span> host <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        host<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> contextPath <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">addLifecycleListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Tomcat<span class="token punctuation">.</span>FixContextListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        host<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        engine<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">;</span>        service<span class="token punctuation">.</span><span class="token function">setContainer</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span>        service<span class="token punctuation">.</span><span class="token function">addConnector</span><span class="token punctuation">(</span>connector<span class="token punctuation">)</span><span class="token punctuation">;</span>        tomcat<span class="token punctuation">.</span><span class="token function">addServlet</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> <span class="token string">"dispatcher"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">addServletMappingDecoded</span><span class="token punctuation">(</span><span class="token string">"/*"</span><span class="token punctuation">,</span> <span class="token string">"dispatcher"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatWebServer</span><span class="token punctuation">(</span>tomcat<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WebApplicationContext</span><span class="token punctuation">)</span> applicationContext<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>使用 <code>ConditionalOnClass</code> 保证只有引入 <code>Tomcat</code> 依赖时这个 <code>Bean</code> 才会生效</li><li>使用 <code>ConditionalOnMissingBean</code> 保证只在没有 <code>WebServer</code> 时这个 <code>Bean</code> 才会生效，保证只有一个 <code>WebServer</code> 且用户自定义的优先</li><li>此处可以加入多个 <code>WebServer</code> 的实现，如 <code>Jetty</code>, 客户端控制引入的依赖决定使用哪个 <code>WebServer</code></li><li>打包时分开打包，不将这些依赖打入自己的 <code>jar</code> 包，最终 <code>spring-boot-starter-web</code> 再引入默认的依赖，比如 <code>Tomcat</code></li><li>此处并不会因为依赖类的缺失而报错，因为使用了 <code>ASM</code> 技术绕过了类加载器进行 <code>class</code> 文件注解的读取</li><li>但最终 <code>ConditionalOnClass</code> 验证是否存在这个类时，还是使用了类加载器是否报错来确定的</li></ol><h2 id="使用SPI支持自动配置（boot-core）">使用SPI支持自动配置（boot-core）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置SPI文件，对应的类必须实现了 <code>AutoConfig</code> 接口<br><code>META-INF/services/org.jxch.study.studyspringcloud.boot.core.AutoConfig</code></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">org.jxch.study.studyspringcloud.boot.core.webserver.WebServerAutoConfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用<code>DeferredImportSelector</code>保证先扫描用户自定义的<code>Bean</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoImport</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">selectImports</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">AnnotationMetadata</span> importingClassMetadata<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">StreamSupport</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">AutoConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>autoConfig <span class="token operator">-&gt;</span> autoConfig<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SPI自定义项目的自动装配（boot-bean）">SPI自定义项目的自动装配（boot-bean）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用 <code>ConditionalOnMissingBean</code> 保证只在没有 <code>BeanTest</code> 时这个 <code>Bean</code> 才会生效，即用户自定义的 <code>Bean</code> 优先配置</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanAutoConfig</span> <span class="token keyword">implements</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">BeanTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">BeanTest</span> <span class="token function">beanTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置SPI文件<br><code>META-INF/services/org.jxch.study.studyspringcloud.boot.core.AutoConfig</code></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">org.jxch.study.studyspringcloud.boot.bean.BeanAutoConfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试（boot-app）">测试（boot-app）</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8088</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApp</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApp</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">BootApp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">BeanTest</span> beanTest<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>beanTest<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span>    <span class="token comment">// 验证用户自定义的 Bean 优先使用</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">BeanTest</span> <span class="token function">beanTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖（boot-core）">依赖（boot-core）</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>11.0.0-M7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;核心流程&quot;&gt;核心流程&lt;/h2&gt;
&lt;p&gt;模拟springboot注意事项（启动流程，自动装配，依赖控制）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;springboot选择一个webserver启动（只能有一个），run启动spring容器，将app作为配置类，随后启动webse</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-集成MinIO</title>
    <link href="https://jxch.github.io/2023/06/09/template/springboot-ji-cheng-minio/"/>
    <id>https://jxch.github.io/2023/06/09/template/springboot-ji-cheng-minio/</id>
    <published>2023-06-09T04:12:42.000Z</published>
    <updated>2023-06-09T04:17:30.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集成">集成</h2><p>WEB界面创建 order-bucket 桶和 access-key（生成 secret-key）</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">minio</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">9010</span>  <span class="token key atrule">access-key</span><span class="token punctuation">:</span> 6uajU1xXhYt1X3SvJnoo  <span class="token key atrule">secret-key</span><span class="token punctuation">:</span> rePumpyhi8sHaLzqXtBzOHJZ0bUB3JOijhjZY6oX  <span class="token key atrule">bucket-name</span><span class="token punctuation">:</span> order<span class="token punctuation">-</span>bucket<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Builder</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"minio"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioProperty</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> endpoint<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> accessKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> secretKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">MinioClient</span> <span class="token function">minioClient</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">MinioProperty</span> minioProperty<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">MinioClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">endpoint</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">credentials</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> minioProperty<span class="token punctuation">.</span><span class="token function">getSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MinioClient</span> minioClient<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MinioProperty</span> minioProperty<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">PutObjectArgs</span> args <span class="token operator">=</span> <span class="token class-name">PutObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        minioClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">GetObjectArgs</span> args <span class="token operator">=</span> <span class="token class-name">GetObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> content <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">MinioServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">MinioService</span> minioService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        minioService<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token string">"order-test"</span><span class="token punctuation">,</span> <span class="token string">"E:\\work\\jxch-study\\study-springcloud\\study-springcloud\\cloud-order\\src\\main\\resources\\order-test1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        minioService<span class="token punctuation">.</span><span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token string">"order-test"</span><span class="token punctuation">,</span> <span class="token string">"E:\\work\\jxch-study\\study-springcloud\\study-springcloud\\cloud-order\\src\\main\\resources\\order-test1-d.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="MinIO-伪分布式部署">MinIO 伪分布式部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9010:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9011:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>  <span class="token key atrule">minio2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9020:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9021:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;集成&quot;&gt;集成&lt;/h2&gt;
&lt;p&gt;WEB界面创建 order-bucket 桶和 access-key（生成 secret-key）&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;c</summary>
      
    
    
    
    <category term="java-template" scheme="https://jxch.github.io/categories/java-template/"/>
    
    
    <category term="MinIO" scheme="https://jxch.github.io/tags/MinIO/"/>
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>MinIO-分布式部署</title>
    <link href="https://jxch.github.io/2023/06/09/yun-wei/minio-fen-bu-shi-bu-shu/"/>
    <id>https://jxch.github.io/2023/06/09/yun-wei/minio-fen-bu-shi-bu-shu/</id>
    <published>2023-06-09T03:41:26.000Z</published>
    <updated>2023-06-09T04:12:03.039Z</updated>
    
    <content type="html"><![CDATA[<p>密码和KEY至少8位数</p><h2 id="Docker-Compose-伪分布式部署">Docker Compose 伪分布式部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9010:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9011:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>  <span class="token key atrule">minio2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9020:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9021:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;密码和KEY至少8位数&lt;/p&gt;
&lt;h2 id=&quot;Docker-Compose-伪分布式部署&quot;&gt;Docker Compose 伪分布式部署&lt;/h2&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;c</summary>
      
    
    
    
    <category term="运维手册" scheme="https://jxch.github.io/categories/%E8%BF%90%E7%BB%B4%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="docker-compose.yml" scheme="https://jxch.github.io/tags/docker-compose-yml/"/>
    
    <category term="MinIO" scheme="https://jxch.github.io/tags/MinIO/"/>
    
  </entry>
  
</feed>
