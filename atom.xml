<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PA &amp; CODING</title>
  
  <subtitle>求仁得仁</subtitle>
  <link href="https://jxch.github.io/atom.xml" rel="self"/>
  
  <link href="https://jxch.github.io/"/>
  <updated>2023-06-16T05:43:06.762Z</updated>
  <id>https://jxch.github.io/</id>
  
  <author>
    <name>钱不寒</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Caddy2-反向代理到其他端口</title>
    <link href="https://jxch.github.io/2023/06/16/template/caddy2-fan-xiang-dai-li-dao-qi-ta-duan-kou/"/>
    <id>https://jxch.github.io/2023/06/16/template/caddy2-fan-xiang-dai-li-dao-qi-ta-duan-kou/</id>
    <published>2023-06-16T05:36:38.000Z</published>
    <updated>2023-06-16T05:43:06.762Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>handle_path</code>: 代理时去除前缀</li><li><code>route</code>: 代理时不去除前缀</li></ul><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">xxx.site</span> <span class="token value attr-value">{</span><span class="token key attr-name">    root</span> <span class="token value attr-value">* /usr/share/caddy</span>    file_server<span class="token key attr-name">    log</span> <span class="token value attr-value">{</span><span class="token key attr-name">        output</span> <span class="token value attr-value">file /var/log/caddy/access.log</span>    }<span class="token key attr-name">    tls</span> <span class="token value attr-value">xxx@gmail.com</span><span class="token key attr-name">    tls</span> <span class="token value attr-value">{</span><span class="token key attr-name">        protocols</span> <span class="token value attr-value">tls1.2 tls1.3</span><span class="token key attr-name">        ciphers</span> <span class="token value attr-value">TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256</span>    }<span class="token key attr-name">    route</span> <span class="token value attr-value">/path/* {</span><span class="token key attr-name">        reverse_proxy</span> <span class="token value attr-value">http://xxx.site:18000</span>    }    <span class="token key attr-name">    handle_path</span> <span class="token value attr-value"> /path_server/* {</span><span class="token key attr-name">        reverse_proxy</span> <span class="token value attr-value">http://xxx.site:15000 </span>    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;handle_path&lt;/code&gt;: 代理时去除前缀&lt;/li&gt;
&lt;li&gt;&lt;code&gt;route&lt;/code&gt;: 代理时不去除前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-properties&quot; da</summary>
      
    
    
    
    <category term="config-template" scheme="https://jxch.github.io/categories/config-template/"/>
    
    
    <category term="Caddy2" scheme="https://jxch.github.io/tags/Caddy2/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes-kubectl 报错 The connection to the server localhost:8080 was refused</title>
    <link href="https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubectl-bao-cuo-the-connection-to-the-server-localhost-8080-was-refused/"/>
    <id>https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubectl-bao-cuo-the-connection-to-the-server-localhost-8080-was-refused/</id>
    <published>2023-06-13T23:30:49.000Z</published>
    <updated>2023-06-13T23:31:51.211Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"export KUBECONFIG=/etc/kubernetes/admin.conf"</span> <span class="token operator">&gt;&gt;</span> /etc/profile<span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; </summary>
      
    
    
    
    <category term="排错笔记" scheme="https://jxch.github.io/categories/%E6%8E%92%E9%94%99%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Kubernetes" scheme="https://jxch.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes-kubeadm init 报错 unknown service runtime.v1.RuntimeService</title>
    <link href="https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubeadm-init-bao-cuo-unknown-service-runtime-v1-runtimeservice/"/>
    <id>https://jxch.github.io/2023/06/14/yun-wei/kubernetes-kubeadm-init-bao-cuo-unknown-service-runtime-v1-runtimeservice/</id>
    <published>2023-06-13T23:25:30.000Z</published>
    <updated>2023-06-13T23:31:07.296Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 移除 /etc/containerd/config.toml</span><span class="token function">mv</span> /etc/containerd/config.toml /root/config.toml.baksystemctl restart containerdkubeadm init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 移除 /etc/containerd/co</summary>
      
    
    
    
    <category term="排错笔记" scheme="https://jxch.github.io/categories/%E6%8E%92%E9%94%99%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Kubernetes" scheme="https://jxch.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Redis-单线程+IO多路复用+SCAN</title>
    <link href="https://jxch.github.io/2023/06/13/it/redis-dan-xian-cheng-io-duo-lu-fu-yong-scan/"/>
    <id>https://jxch.github.io/2023/06/13/it/redis-dan-xian-cheng-io-duo-lu-fu-yong-scan/</id>
    <published>2023-06-12T22:03:00.000Z</published>
    <updated>2023-06-12T22:07:32.168Z</updated>
    
    <content type="html"><![CDATA[<h2 id="单线程">单线程</h2><p><font color="orange">Redis 的单线程主要是指 Redis 的网络 IO 和键值对读写是由一个线程来完成的</font>，这也是 Redis 对外提供键值存储服务的主要流程。但 Redis 的其他功能，比如<font color="orange">持久化、异步删除、集群数据同步等，其实是由额外的线程执行的。</font></p><p>因为它所有的数据都在内存中，所有的运算都是内存级别的运算，而且<font color="orange">单线程避免了多线程的切换性能损耗问题</font>。正因为 Redis 是单线程，所以要<font color="orange">小心使用耗时的指令(比如keys)</font>，一不小心就可能会导致 Redis 卡顿。</p><h2 id="IO多路复用">IO多路复用</h2><p>Redis的IO多路复用：<font color="orange">redis利用epoll来实现IO多路复用</font>，将连接信息和事件放到队列中，依次放到文件事件分派器，事件分派器将事件分发给事件处理器。<br>查看redis支持的最大连接数，在redis.conf文件中可修改：<code>CONFIG GET maxclients</code><br><img src="/static/IT/Redis/Redis-IO.png" alt="IO多路复用"></p><h2 id="SCAN">SCAN</h2><p><code>KEYS</code>是全量遍历，当数据量大时，性能很差，应用SCAN取代（手动分段遍历，直到游标为0停止遍历）<br><code>SCAN 0 match jxch** count 100</code><br>以0为游标，分段扫描以jxch开头的key，每次返回100个，然后<font color="orange">以返回值为游标，继续扫描，直到返回的游标为0</font><br>注意，100是个参考值，实际返回的是接近100的数目，可能多也可能少（取决于HASH桶中有几个值，因为Redis的存储结构是哈希表）</p><p>如果在scan的过程中如果有键的变化（增加、 删除、 修改） ，那么遍历效果可能会碰到如下问题： 新增的键可能没有遍历到（不会扫描已经遍历过的HASH桶）， 遍历出了重复的键（发生了RE-HASH）等情况， 也就是说<font color="orange">SCAN并不能保证完整的遍历出来所有的键</font>，这些是我们在开发时需要考虑的，但在追求性能的情况下，往往并不要求一致性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;单线程&quot;&gt;单线程&lt;/h2&gt;
&lt;p&gt;&lt;font color=&quot;orange&quot;&gt;Redis 的单线程主要是指 Redis 的网络 IO 和键值对读写是由一个线程来完成的&lt;/font&gt;，这也是 Redis 对外提供键值存储服务的主要流程。但 Redis 的其他功能，比如</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Redis" scheme="https://jxch.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-自动配置流程</title>
    <link href="https://jxch.github.io/2023/06/11/it/springboot-zi-dong-pei-zhi-liu-cheng/"/>
    <id>https://jxch.github.io/2023/06/11/it/springboot-zi-dong-pei-zhi-liu-cheng/</id>
    <published>2023-06-10T20:58:22.000Z</published>
    <updated>2023-06-10T22:34:52.490Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableAutoConfiguration</span>    <span class="token annotation punctuation">@AutoConfigurationPackage</span>    <span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoConfigurationImportSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector</span><span class="token punctuation">)</span>         <span class="token function">getImportGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token class-name">AutoConfigurationGroup</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector<span class="token punctuation">.</span>Group</span>            <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token function">getAutoConfigurationEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token class-name">ImportCandidates</span><span class="token punctuation">.</span>load  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token operator">/</span><span class="token operator">%</span>s<span class="token punctuation">.</span>imports                <span class="token function">getConfigurationClassFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token class-name">AutoConfigurationMetadataLoader</span><span class="token punctuation">.</span>loadMetadata  <span class="token operator">-&gt;</span>  <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token operator">-</span>autoconfigure<span class="token operator">-</span>metadata<span class="token punctuation">.</span>properties                <span class="token function">fireAutoConfigurationImportEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token operator">-&gt;</span>  <span class="token class-name">SpringFactoriesLoader</span><span class="token punctuation">.</span>loadFactories  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories            <span class="token function">selectImports</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token function">sortAutoConfigurations</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token operator">-&gt;</span>  <span class="token annotation punctuation">@AutoConfigureOrder</span> <span class="token operator">&amp;</span> <span class="token annotation punctuation">@AutoConfigureBefore</span> <span class="token operator">&amp;</span> <span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token annotation punctuation">@ComponentScan</span> <span class="token operator">-&gt;</span>  excludeFilters    <span class="token class-name">AutoConfigurationExcludeFilter</span> <span class="token operator">-&gt;</span>  <span class="token function">isAutoConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories        <span class="token class-name">TypeExcludeFilter</span>   <span class="token operator">-&gt;</span>   <span class="token class-name">ApplicationContextInitialize</span>  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/static/IT/SpringCloud/SpringBootAutoConfiguration.png" alt="SpringBoot 自动配置流程"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-java&quot; data-language=&quot;java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@SpringB</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-核心流程模拟实现</title>
    <link href="https://jxch.github.io/2023/06/10/it/springboot-he-xin-liu-cheng-mo-ni-shi-xian/"/>
    <id>https://jxch.github.io/2023/06/10/it/springboot-he-xin-liu-cheng-mo-ni-shi-xian/</id>
    <published>2023-06-09T23:15:33.000Z</published>
    <updated>2023-06-10T00:12:36.297Z</updated>
    
    <content type="html"><![CDATA[<h2 id="核心流程">核心流程</h2><p>模拟springboot注意事项（启动流程，自动装配，依赖控制）：</p><ol><li>springboot选择一个webserver启动（只能有一个），run启动spring容器，将app作为配置类，随后启动webserver</li><li>根据依赖选择哪个bean生效（当存在哪些类或Bean且不存在哪些类或Bean时生效）</li><li>根据spi自动装配（DeferredImportSelector- 用户自定义bean优先）</li><li>最终项目通过自定义依赖来保证只有一个tomcat容器功能（核心项目实现其他容器功能时需要全部依赖，但是不将这些依赖打入自己的jar包）</li><li>使用ASM绕过类加载器读取class文件注解，避免没有相关依赖时运行报错（class文件不会在编译期报错）</li></ol><p>第四条和第五条由于过于复杂，并未实现，这里只是简单说明</p><pre class="line-numbers language-none"><code class="language-none">项目结构    boot-core 模拟springboot    boot-bean 模拟自定义项目的自动装配，需要boot-core依赖    boot-app  模拟引用boot-core和boot-bean创建app<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="boot-默认启动-Tomcat（boot-core）">boot 默认启动 Tomcat（boot-core）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ComponentScan</span><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoImport</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SpringBootApp</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> app<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">AnnotationConfigWebApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigWebApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        applicationContext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>        applicationContext<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">WebServer</span> webServer <span class="token operator">=</span> <span class="token function">getWebServer</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>        webServer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">WebServer</span> <span class="token function">getWebServer</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">AnnotationConfigWebApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">WebServer</span><span class="token punctuation">&gt;</span></span> webServers <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">WebServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>webServers<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">"请引入WebServer的依赖，如Tomcat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>webServers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"只能保留一个WebServer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> webServers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span><span class="token string">"classpath:application.properties"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebServerAutoConfig</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">,</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">WebApplicationContext</span> applicationContext<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${server.port}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> port<span class="token punctuation">;</span>         <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">Tomcat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">WebServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">TomcatWebServer</span> <span class="token function">tomcatWebServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Tomcat</span> tomcat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tomcat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Server</span> server <span class="token operator">=</span> tomcat<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Service</span> service <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">findService</span><span class="token punctuation">(</span><span class="token string">"Tomcat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connector</span> connector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        connector<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Engine</span> engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        engine<span class="token punctuation">.</span><span class="token function">setDefaultHost</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Host</span> host <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        host<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> contextPath <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">addLifecycleListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Tomcat<span class="token punctuation">.</span>FixContextListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        host<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        engine<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">;</span>        service<span class="token punctuation">.</span><span class="token function">setContainer</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span>        service<span class="token punctuation">.</span><span class="token function">addConnector</span><span class="token punctuation">(</span>connector<span class="token punctuation">)</span><span class="token punctuation">;</span>        tomcat<span class="token punctuation">.</span><span class="token function">addServlet</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> <span class="token string">"dispatcher"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">addServletMappingDecoded</span><span class="token punctuation">(</span><span class="token string">"/*"</span><span class="token punctuation">,</span> <span class="token string">"dispatcher"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatWebServer</span><span class="token punctuation">(</span>tomcat<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WebApplicationContext</span><span class="token punctuation">)</span> applicationContext<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>使用 <code>ConditionalOnClass</code> 保证只有引入 <code>Tomcat</code> 依赖时这个 <code>Bean</code> 才会生效</li><li>使用 <code>ConditionalOnMissingBean</code> 保证只在没有 <code>WebServer</code> 时这个 <code>Bean</code> 才会生效，保证只有一个 <code>WebServer</code> 且用户自定义的优先</li><li>此处可以加入多个 <code>WebServer</code> 的实现，如 <code>Jetty</code>, 客户端控制引入的依赖决定使用哪个 <code>WebServer</code></li><li>打包时分开打包，不将这些依赖打入自己的 <code>jar</code> 包，最终 <code>spring-boot-starter-web</code> 再引入默认的依赖，比如 <code>Tomcat</code></li><li>此处并不会因为依赖类的缺失而报错，因为使用了 <code>ASM</code> 技术绕过了类加载器进行 <code>class</code> 文件注解的读取</li><li>但最终 <code>ConditionalOnClass</code> 验证是否存在这个类时，还是使用了类加载器是否报错来确定的</li></ol><h2 id="使用SPI支持自动配置（boot-core）">使用SPI支持自动配置（boot-core）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置SPI文件，对应的类必须实现了 <code>AutoConfig</code> 接口<br><code>META-INF/services/org.jxch.study.studyspringcloud.boot.core.AutoConfig</code></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">org.jxch.study.studyspringcloud.boot.core.webserver.WebServerAutoConfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用<code>DeferredImportSelector</code>保证先扫描用户自定义的<code>Bean</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoImport</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">selectImports</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">AnnotationMetadata</span> importingClassMetadata<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">StreamSupport</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">AutoConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>autoConfig <span class="token operator">-&gt;</span> autoConfig<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SPI自定义项目的自动装配（boot-bean）">SPI自定义项目的自动装配（boot-bean）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用 <code>ConditionalOnMissingBean</code> 保证只在没有 <code>BeanTest</code> 时这个 <code>Bean</code> 才会生效，即用户自定义的 <code>Bean</code> 优先配置</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanAutoConfig</span> <span class="token keyword">implements</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">BeanTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">BeanTest</span> <span class="token function">beanTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置SPI文件<br><code>META-INF/services/org.jxch.study.studyspringcloud.boot.core.AutoConfig</code></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">org.jxch.study.studyspringcloud.boot.bean.BeanAutoConfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试（boot-app）">测试（boot-app）</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8088</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApp</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApp</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">BootApp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">BeanTest</span> beanTest<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>beanTest<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span>    <span class="token comment">// 验证用户自定义的 Bean 优先使用</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">BeanTest</span> <span class="token function">beanTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖（boot-core）">依赖（boot-core）</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>11.0.0-M7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;核心流程&quot;&gt;核心流程&lt;/h2&gt;
&lt;p&gt;模拟springboot注意事项（启动流程，自动装配，依赖控制）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;springboot选择一个webserver启动（只能有一个），run启动spring容器，将app作为配置类，随后启动webse</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-集成MinIO</title>
    <link href="https://jxch.github.io/2023/06/09/template/springboot-ji-cheng-minio/"/>
    <id>https://jxch.github.io/2023/06/09/template/springboot-ji-cheng-minio/</id>
    <published>2023-06-09T04:12:42.000Z</published>
    <updated>2023-06-09T04:17:30.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集成">集成</h2><p>WEB界面创建 order-bucket 桶和 access-key（生成 secret-key）</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">minio</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">9010</span>  <span class="token key atrule">access-key</span><span class="token punctuation">:</span> 6uajU1xXhYt1X3SvJnoo  <span class="token key atrule">secret-key</span><span class="token punctuation">:</span> rePumpyhi8sHaLzqXtBzOHJZ0bUB3JOijhjZY6oX  <span class="token key atrule">bucket-name</span><span class="token punctuation">:</span> order<span class="token punctuation">-</span>bucket<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Builder</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"minio"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioProperty</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> endpoint<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> accessKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> secretKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">MinioClient</span> <span class="token function">minioClient</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">MinioProperty</span> minioProperty<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">MinioClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">endpoint</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">credentials</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> minioProperty<span class="token punctuation">.</span><span class="token function">getSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MinioClient</span> minioClient<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MinioProperty</span> minioProperty<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">PutObjectArgs</span> args <span class="token operator">=</span> <span class="token class-name">PutObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        minioClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">GetObjectArgs</span> args <span class="token operator">=</span> <span class="token class-name">GetObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> content <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">MinioServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">MinioService</span> minioService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        minioService<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token string">"order-test"</span><span class="token punctuation">,</span> <span class="token string">"E:\\work\\jxch-study\\study-springcloud\\study-springcloud\\cloud-order\\src\\main\\resources\\order-test1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        minioService<span class="token punctuation">.</span><span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token string">"order-test"</span><span class="token punctuation">,</span> <span class="token string">"E:\\work\\jxch-study\\study-springcloud\\study-springcloud\\cloud-order\\src\\main\\resources\\order-test1-d.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="MinIO-伪分布式部署">MinIO 伪分布式部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9010:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9011:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>  <span class="token key atrule">minio2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9020:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9021:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;集成&quot;&gt;集成&lt;/h2&gt;
&lt;p&gt;WEB界面创建 order-bucket 桶和 access-key（生成 secret-key）&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;c</summary>
      
    
    
    
    <category term="java-template" scheme="https://jxch.github.io/categories/java-template/"/>
    
    
    <category term="MinIO" scheme="https://jxch.github.io/tags/MinIO/"/>
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>MinIO-分布式部署</title>
    <link href="https://jxch.github.io/2023/06/09/yun-wei/minio-fen-bu-shi-bu-shu/"/>
    <id>https://jxch.github.io/2023/06/09/yun-wei/minio-fen-bu-shi-bu-shu/</id>
    <published>2023-06-09T03:41:26.000Z</published>
    <updated>2023-06-09T04:12:03.039Z</updated>
    
    <content type="html"><![CDATA[<p>密码和KEY至少8位数</p><h2 id="Docker-Compose-伪分布式部署">Docker Compose 伪分布式部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9010:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9011:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>  <span class="token key atrule">minio2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9020:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9021:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;密码和KEY至少8位数&lt;/p&gt;
&lt;h2 id=&quot;Docker-Compose-伪分布式部署&quot;&gt;Docker Compose 伪分布式部署&lt;/h2&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;c</summary>
      
    
    
    
    <category term="运维手册" scheme="https://jxch.github.io/categories/%E8%BF%90%E7%BB%B4%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="docker-compose.yml" scheme="https://jxch.github.io/tags/docker-compose-yml/"/>
    
    <category term="MinIO" scheme="https://jxch.github.io/tags/MinIO/"/>
    
  </entry>
  
  <entry>
    <title>DDD-主要概念</title>
    <link href="https://jxch.github.io/2023/06/09/it/ddd-zhu-yao-gai-nian/"/>
    <id>https://jxch.github.io/2023/06/09/it/ddd-zhu-yao-gai-nian/</id>
    <published>2023-06-08T21:21:52.000Z</published>
    <updated>2023-06-08T21:25:16.907Z</updated>
    
    <content type="html"><![CDATA[<ol><li>软件的核心复杂性<br>a. 技术主动理解业务（<font color="orange">领域驱动</font>）<br>b. “<font color="orange">刚刚好</font>”解决问题（兼顾灵活性-分层抽象）</li><li>领域设计<br>a. 构建<font color="orange">领域地图</font>（边界）<br>b. 使用<font color="orange">四层架构</font><br>c. 领域的内敛（<font color="orange">业务上的限界</font>，而非技术上的隔离）<br>d. <font color="orange">单体优先</font> -&gt; 拆分成微服务</li><li>DDD 架构（构建通用型领域仓库）<br>a. 包结构： <pre class="line-numbers language-none"><code class="language-none">applicationdomain    xxx     adaptor          interface     entity      infrastructure     repository     service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/static/IT/DDD/DDD-NS.png" alt="领域-菱形架构"><br><img src="/static/IT/DDD/DDD-d.png" alt="DDD 设计方案"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;软件的核心复杂性&lt;br&gt;
a. 技术主动理解业务（&lt;font color=&quot;orange&quot;&gt;领域驱动&lt;/font&gt;）&lt;br&gt;
b. “&lt;font color=&quot;orange&quot;&gt;刚刚好&lt;/font&gt;”解决问题（兼顾灵活性-分层抽象）&lt;/li&gt;
&lt;li&gt;领域设计&lt;b</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="DDD" scheme="https://jxch.github.io/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>DDD-通用型领域</title>
    <link href="https://jxch.github.io/2023/06/09/it/ddd-tong-yong-xing-ling-yu/"/>
    <id>https://jxch.github.io/2023/06/09/it/ddd-tong-yong-xing-ling-yu/</id>
    <published>2023-06-08T21:12:27.000Z</published>
    <updated>2023-06-08T21:19:01.884Z</updated>
    
    <content type="html"><![CDATA[<p>可以<font color="orange">构建领域仓库，实现领域复用</font>：也可以用于优化中台战略，并且取缔大中台（中台拆分），因为一个中台组不可能同时满足所有其他项目组的需求</p><p>通过消息契约层，不光保证逻辑边界清晰，同时也保证数据边界也很清晰<br><img src="/static/IT/DDD/DDD-NS.png" alt="领域-菱形架构"></p><p><img src="/static/IT/DDD/DDD-clear.png" alt="领域-清晰架构"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可以&lt;font color=&quot;orange&quot;&gt;构建领域仓库，实现领域复用&lt;/font&gt;：也可以用于优化中台战略，并且取缔大中台（中台拆分），因为一个中台组不可能同时满足所有其他项目组的需求&lt;/p&gt;
&lt;p&gt;通过消息契约层，不光保证逻辑边界清晰，同时也保证数据边界也很清晰&lt;br</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="DDD" scheme="https://jxch.github.io/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>DDD-领域划分设计</title>
    <link href="https://jxch.github.io/2023/06/09/it/ddd-ling-yu-hua-fen-she-ji/"/>
    <id>https://jxch.github.io/2023/06/09/it/ddd-ling-yu-hua-fen-she-ji/</id>
    <published>2023-06-08T20:45:35.000Z</published>
    <updated>2023-06-08T21:18:35.181Z</updated>
    
    <content type="html"><![CDATA[<p><font color="orange">高内聚，低耦合</font>：单一职责原则、依赖反转原则、开放封闭原则</p><ol><li><font color="orange">构建领域地图（边界）</font><br>a. 在DDD中推荐了<font color="orange">事件风暴会议</font>这样的具体形式，也强调了<font color="orange">统一语言</font>的理论模型。<br>b. 针对各个核心环节，优先构建单元测试案例，从而形成一些<font color="orange">TDD</font>测试驱动设计的实践场景。<br>c. 领域并不是天然存在的，这需要依赖于软件团队对软件需求的合理分析。并且分析的过程，即不能太过偏向于真实的业务领域，也不能太过偏向于极度抽象的技术领域，需要在整个项目团队内形成共识，然后通过初步抽象的通用语言将设计结果固化下来。</li><li>使用<font color="orange">四层架构</font>巩固领域基础（包结构） <pre class="line-numbers language-none"><code class="language-none">applicationdomain    xxx     adaptor          interface     entity      infrastructure     repository     service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><font color="orange">划分限界上下文</font>，巩固领域划分（DDD落地实践的关键）<br>a. 传统MVC设计方式中，强调的是技术隔离，而并没有从业务上的限界上下文边界，所以，逻辑边界是混乱的。<br>b. 领域应该是<font color="orange">足够内敛</font>的，每个领域内的业务能力是与当前领域的知识语境紧密相连的。一个领域想要调用另外一个领域的业务能力，只能通过对方暴露出来的业务能力进行协作，而不能去干预对方领域的实现细节。所谓的单体架构、微服务架构、甚至包括MQ事件驱动架构，在DDD的视野中，都是领域之间的不同协作方式而已，对领域内部都是没有影响的。<br>c. <img src="/static/IT/DDD/DDD-neilian.png" alt="DDD 内敛"></li><li><font color="orange">单体架构优先</font>（SPI）<br>a. 越是复杂的项目，就越应该重视单体架构的快速验证和快速试错，这对于提高复杂项目的运行效率是非常重要的<br>b. 然后将单体架构中的关键领域拆分成微服务（比如SPI切换为Nacos，由于有防腐层，所以只需要切换抽象接口的实现类即可）</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;font color=&quot;orange&quot;&gt;高内聚，低耦合&lt;/font&gt;：单一职责原则、依赖反转原则、开放封闭原则&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;font color=&quot;orange&quot;&gt;构建领域地图（边界）&lt;/font&gt;&lt;br&gt;
a. 在DDD中推荐了&lt;font color=&quot;</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="DDD" scheme="https://jxch.github.io/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>DDD-MVC与DDD四层架构</title>
    <link href="https://jxch.github.io/2023/06/09/it/ddd-mvc-yu-ddd-si-ceng-jia-gou/"/>
    <id>https://jxch.github.io/2023/06/09/it/ddd-mvc-yu-ddd-si-ceng-jia-gou/</id>
    <published>2023-06-08T20:12:02.000Z</published>
    <updated>2023-06-08T20:17:54.009Z</updated>
    
    <content type="html"><![CDATA[<p>一个需求非常确定的项目，不管多复杂，都没有必要非转型成DDD，短平快的设计方式更为快捷。<br>如果项目中有很多不确定性，以往的设计模式会遇到非常多的变数，这时DDD就是一个很好的选项了。</p><h2 id="DDD-重构">DDD 重构</h2><ol><li>抽象数据持久层 - 建立<font color="orange">仓库</font>（让业务逻辑不再需要面向数据库编程，而是面向实体编程）</li><li>ACL <font color="orange">防腐层</font> - 抽象第三方服务（防止第三方服务状态不可控，入参出参强耦合的问题）</li><li>重构业务逻辑<br>a. 使用<font color="orange">值对象</font>（具有业务意义的对象）<br>i. 比如做参数校验，避免类似逻辑分散出去，污染系统代码<br>b. 使用<font color="orange">充血模型</font>改造实体类，保留改变状态的方法<br>c. 使用<font color="orange">领域服务封装实体逻辑</font>（跨领域对象的行为）</li></ol><p>改造之后：</p><ol><li>最底层不再是数据库，而是实体(Entity)，值对象(ValueObject)，领域服务(Domain Service)。这些对象都不依赖任何外部服务和框架。这些对象可以打包成一个领域层(Domain Layer)。<font color="orange">领域层没有任何外部依赖关系</font>。</li><li>原有的Service层，经过重新编排后，只依赖于一些抽象出来的防腐层(ACL)和仓库工厂(Repository)。他们的具体实现都是通过依赖注入进来的。他们一起负责整个组件的编排，这样就可以把他们打包成一个应用层(Application Layer)。<font color="orange">应用层依赖领域层，但是不依赖具体实现</font>。</li><li>最后是一些与外部依赖打交道的组件。这些组件的实现通常依赖外部具体的技术实现和框架，可以统称为<font color="orange">基础设施层</font>(Infrastructure Layer)。</li></ol><p>开发业务时，可以优先开发领域层的业务逻辑，然后再写应用层的服务编排，而具体的外部依赖与具体实现可以最后再完成。整体就形成了一种以<font color="orange">领域优先</font>的架构形式。</p><p><img src="/static/IT/DDD/DDD4.png" alt="DDD 四层架构"></p><hr><h2 id="传统-MVC-事务脚本式编码的问题">传统 MVC 事务脚本式编码的问题</h2><ol><li>代码层面的软件老化风险（代码不断膨胀）<br>a. 数据来源被固定<br>b. 业务逻辑无法复用<br>c. 业务逻辑与数据存储相互依赖</li><li>架构层面的软件老化风险（不敢升级，不敢写新功能）<br>a. 数据结构变更<br>b. JDBC依赖调整<br>c. 第三方服务变更<br>d. MQ中间件调整</li><li>随之而来的实施及测试问题<br>a. 设施搭建困难（依赖的外部组件太多）<br>b. 测试用例覆盖困难</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个需求非常确定的项目，不管多复杂，都没有必要非转型成DDD，短平快的设计方式更为快捷。&lt;br&gt;
如果项目中有很多不确定性，以往的设计模式会遇到非常多的变数，这时DDD就是一个很好的选项了。&lt;/p&gt;
&lt;h2 id=&quot;DDD-重构&quot;&gt;DDD 重构&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="DDD" scheme="https://jxch.github.io/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>DDD-软件的核心复杂性</title>
    <link href="https://jxch.github.io/2023/06/09/it/ddd-ruan-jian-de-he-xin-fu-za-xing/"/>
    <id>https://jxch.github.io/2023/06/09/it/ddd-ruan-jian-de-he-xin-fu-za-xing/</id>
    <published>2023-06-08T19:25:13.000Z</published>
    <updated>2023-06-08T19:30:11.697Z</updated>
    
    <content type="html"><![CDATA[<p>很多软件设计上的不足，表面上看，似乎是技术架构的问题。因为如果架构师经验足够丰富，就能提前考虑到这些问题。如果开发团队技术足够过硬，就可以最快速度解决这些问题。但是，如果你将视野放开，放到到整个项目团队。你就会发现，<font color="orange">一味的要求技术人员能够未卜先知，这是不现实也是不理智的</font>。尤其对于长期建设的大型项目，更是看如此。难道你要求当年开发淘宝时就要支持好双十一吗？DDD希望让整个软件团队都用统一的方式思考解决问题，减少架构师、程序员、产品经理、测试人员等各个参与角色之间的分歧。</p><p>两个非常核心的思想：</p><ol><li><font color="orange">技术主动理解业务</font></li><li><font color="orange">“刚刚好”解决问题</font></li></ol><ul><li><font color="orange">Controller、Service等概念并不具备实际的业务价值</font>。因此，业务专家设计出来的业务流程，总是需要产品人员进行梳理，以及技术人员设计才能最终落地到项目当中。而这其中，不可避免的会产生<font color="orange">信息不对称的情况</font>。尤其在面对频繁变化的复杂业务时。<ul><li>比如业务专家看到的是消息转发、历史请求管理、应用注册管理这三个业务能力，不管多复杂的业务场景，基于这三个能力进行组织就行。但是在技术人员的视野中，却显然更关注MVC的三层架构。会更注重Controller、Service这样一个个技术层面的逻辑分工与复用。当业务需求发生变化后，业务专家考虑的是如何通过这三种业务能力将整个业务场景贯穿起来。而技术专家往往会更多的考虑新的结构对以往的架构有多大的冲突。<font color="orange">如果新的设计对已有的架构造成太大的冲突，就只能考虑重构。而重构对于业务专家来说，没有什么业务价值。</font></li><li>DDD则是主动强调让技术贴近业务，鼓励形成团队内部的<font color="orange">通用语言，业务如何组织，软件就如何构建</font>。让不怎么懂技术的业务专家也能主动参与到软件建设的整个过程当中，而不仅仅是前期的需求设计。</li><li>在DDD的实践过程当中，有很多技术人员容易陷入以往的技术思维中，将DDD理解成某种技术架构，将组件描述成技术实现（用原来技术架构硬套在DDD上，改了个包名而已，领域专家看了依然是一脸懵逼）。相反，<font color="orange">更应该体现业务属性，让领域专家看到这样的组件，即便不了解实现细节，也能够知道这些组件是干什么的</font>，从而有可能继续深入的参与软件建设过程。</li></ul></li><li>在以往的设计过程中，为了更多的兼容日后的需求变化，技术人员往往会做很多的“提前设计”。寄希望于这些“提前设计”能够减少未来业务变化对软件架构的冲击。但是，<font color="orange">往往项目未来的需求变化并不是技术人员能够把控的。如果未来的业务需求不是按照之前设计的路线演进，这些“提前设计“不但无法起到设计时的作用，反而会增加软件项目的复杂度</font>，从而给软件后续的升级改造带来更多的负担。而DDD强调的则是让软件<font color="orange">可以”刚刚好“的解决眼前的业务问题，同时为软件保持足够的灵活性。</font><ul><li>以DDD中的Repository仓库组件为例。在DDD设计中，我们会将实体的持久化逻辑全部交由仓库组件负责，在业务流程中不需要考虑持久化相关的逻辑。当我们需要设计更复杂的持久化策略时，就只需要调整仓库层的实现，而不需要考虑业务上有什么影响。比如，往往很多项目在最初的设计中，都会选择将关键业务信息通过MyBatis这样的框架直接存入到数据库。但是如果软件的并发量逐渐增大，往往我们就需要增加一个Redis缓存层，用来保护数据库，提高系统的并发能力。而围绕Redis缓存，各种缓存穿透、缓存击穿、缓存雪崩、缓存预热等等这样的一些业务逻辑就自然而然的冒出来了。这样一个简单的MyBatis就不够用了。<font color="orange">如果没有抽象出Repository仓库层，那么这些新增加的逻辑就不可避免的要蔓延到上层的DAO或者Service当中。但是，如果抽象出了Repository仓库层，不管多复杂的持久化逻辑，都只是一个仓库实现而已，不会对业务造成任何影响。这些需求就可以比较独立的进行改造。</font></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多软件设计上的不足，表面上看，似乎是技术架构的问题。因为如果架构师经验足够丰富，就能提前考虑到这些问题。如果开发团队技术足够过硬，就可以最快速度解决这些问题。但是，如果你将视野放开，放到到整个项目团队。你就会发现，&lt;font color=&quot;orange&quot;&gt;一味的要求技术人</summary>
      
    
    
    
    <category term="IT学习笔记" scheme="https://jxch.github.io/categories/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="DDD" scheme="https://jxch.github.io/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg-使用示例</title>
    <link href="https://jxch.github.io/2023/06/08/template/ffmpeg-shi-yong-shi-li/"/>
    <id>https://jxch.github.io/2023/06/08/template/ffmpeg-shi-yong-shi-li/</id>
    <published>2023-06-07T20:24:33.000Z</published>
    <updated>2023-06-07T20:41:23.820Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将三个视频完整的拼接成一个视频</span>ffmpeg <span class="token parameter variable">-i</span> input1.mp4 <span class="token parameter variable">-i</span> input2.mp4 <span class="token parameter variable">-i</span> input3.mp4 <span class="token parameter variable">-filter_complex</span> <span class="token string">"[0:v] [0:a] [1:v] [1:a] [2:v] [2:a] concat=n=3:v=1:a=1 [v] [a]"</span> <span class="token parameter variable">-map</span> <span class="token string">"[v]"</span> <span class="token parameter variable">-map</span> <span class="token string">"[a]"</span> output.mp4<span class="token comment"># 截取视频的前一个小时</span>ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-ss</span> 00:00:00 <span class="token parameter variable">-t</span> 01:00:00 <span class="token parameter variable">-c</span> copy output.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 将三个视频完整的拼接成一个视频&lt;/span</summary>
      
    
    
    
    <category term="shell-template" scheme="https://jxch.github.io/categories/shell-template/"/>
    
    
    <category term="FFmpeg" scheme="https://jxch.github.io/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-集成Leaf-Snowflake模式</title>
    <link href="https://jxch.github.io/2023/06/07/template/springboot-ji-cheng-leaf-snowflake-mo-shi/"/>
    <id>https://jxch.github.io/2023/06/07/template/springboot-ji-cheng-leaf-snowflake-mo-shi/</id>
    <published>2023-06-06T19:55:52.000Z</published>
    <updated>2023-06-07T00:11:50.109Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集成">集成</h2><ol><li>依赖 <code>leaf-boot-starter</code></li><li>设置 zookeeper 地址</li><li>开启 <code>@EnableLeafServer</code></li><li>使用 <code>SnowflakeService</code> 获取分布式唯一ID</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">leaf</span><span class="token punctuation">:</span>  <span class="token key atrule">snowflake</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">address</span><span class="token punctuation">:</span> localhost    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@EnableLeafServer</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IDAPP</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token constant">IDAPP</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/id"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IDController</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">SnowflakeService</span> snowflakeService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">"/nextId"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">nextId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// snowflakeService 中并未使用这个参数，因此可以传空字符串</span>        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>snowflakeService<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">LeafServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">SnowflakeService</span> snowflakeService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">nextId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"id: {}"</span><span class="token punctuation">,</span> snowflakeService<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看 zookeeper 节点</span><span class="token comment"># 出现 [services, snowflake] 这两个节点说明部署成功 </span>zkCli.sh <span class="token parameter variable">-server</span> localhost:2181<span class="token function">ls</span> /<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.tencent.devops.leaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>leaf-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.2-RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zookeeper-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="zookeeper">zookeeper</h2><p>注意时区和微服务保持一致</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">zoo1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo1    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"2181:2181"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/zoo1<span class="token punctuation">:</span>/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=0.0.0.0<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=zoo2<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai  <span class="token key atrule">zoo2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo2    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"2182:2181"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/zoo2<span class="token punctuation">:</span>/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">2</span>      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=zoo1<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=0.0.0.0<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;集成&quot;&gt;集成&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;依赖 &lt;code&gt;leaf-boot-starter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置 zookeeper 地址&lt;/li&gt;
&lt;li&gt;开启 &lt;code&gt;@EnableLeafServer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;</summary>
      
    
    
    
    <category term="java-template" scheme="https://jxch.github.io/categories/java-template/"/>
    
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
    <category term="Leaf" scheme="https://jxch.github.io/tags/Leaf/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-集成MongoDB</title>
    <link href="https://jxch.github.io/2023/06/07/template/springboot-ji-cheng-mongodb/"/>
    <id>https://jxch.github.io/2023/06/07/template/springboot-ji-cheng-mongodb/</id>
    <published>2023-06-06T18:53:56.000Z</published>
    <updated>2023-06-07T00:11:11.344Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集成">集成</h2><ol><li>依赖 <code>spring-boot-starter-data-mongodb</code></li><li>设置 uri</li><li>创建 <code>@Document(collection = "table")</code></li><li>创建 <code>MongoRepository</code></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">data</span><span class="token punctuation">:</span>    <span class="token key atrule">mongodb</span><span class="token punctuation">:</span>      <span class="token key atrule">uri</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//order<span class="token punctuation">:</span>order@localhost<span class="token punctuation">:</span>27017/order<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Builder</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>collection <span class="token operator">=</span> <span class="token string">"users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserMongo</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMongoRepository</span> <span class="token keyword">extends</span> <span class="token class-name">MongoRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserMongo</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token class-name">UserMongo</span> <span class="token function">findByName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserMongoRepTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserMongoRepository</span> userMongoRepository<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mongoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        userMongoRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserMongo</span><span class="token punctuation">(</span><span class="token string">"jxch"</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">UserMongo</span> jxch <span class="token operator">=</span> userMongoRepository<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span><span class="token string">"jxch"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>jxch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库部署">数据库部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">mongodb</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 27017<span class="token punctuation">:</span><span class="token number">27017</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/mongodb_data<span class="token punctuation">:</span>/data/db    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">MONGO_INITDB_ROOT_USERNAME</span><span class="token punctuation">:</span> root      <span class="token key atrule">MONGO_INITDB_ROOT_PASSWORD</span><span class="token punctuation">:</span> pw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> <span class="token keyword">order</span>db<span class="token punctuation">.</span>createUser<span class="token punctuation">(</span>{    <span class="token keyword">user</span>: <span class="token string">"order"</span><span class="token punctuation">,</span>    pwd: <span class="token string">"order"</span><span class="token punctuation">,</span>    roles: <span class="token punctuation">[</span>        { role: <span class="token string">"readWrite"</span><span class="token punctuation">,</span> db: <span class="token string">"order"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"dbAdmin"</span><span class="token punctuation">,</span> db: <span class="token string">"order"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"userAdmin"</span><span class="token punctuation">,</span> db: <span class="token string">"order"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"clusterAdmin"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"readAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"readWriteAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"userAdminAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"dbAdminAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"restore"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"backup"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }    <span class="token punctuation">]</span>}<span class="token punctuation">)</span><span class="token comment">// 测试写入数据</span>db<span class="token punctuation">.</span>usersTest<span class="token punctuation">.</span>insertOne<span class="token punctuation">(</span>{name: <span class="token string">"John"</span><span class="token punctuation">,</span> age: <span class="token number">30</span>}<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;集成&quot;&gt;集成&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;依赖 &lt;code&gt;spring-boot-starter-data-mongodb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置 uri&lt;/li&gt;
&lt;li&gt;创建 &lt;code&gt;@Document(collection = &quot;tabl</summary>
      
    
    
    
    <category term="java-template" scheme="https://jxch.github.io/categories/java-template/"/>
    
    
    <category term="MongoDB" scheme="https://jxch.github.io/tags/MongoDB/"/>
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-集成RocksDB</title>
    <link href="https://jxch.github.io/2023/06/07/template/springboot-ji-cheng-rocksdb/"/>
    <id>https://jxch.github.io/2023/06/07/template/springboot-ji-cheng-rocksdb/</id>
    <published>2023-06-06T17:43:38.000Z</published>
    <updated>2023-06-07T00:11:34.494Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集成">集成</h2><ol><li>依赖 <code>rocksdbjni</code></li><li>设置数据库的本地存储路径</li><li>配置 <code>RocksDB</code> 的 Bean</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">rocksdb</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> E<span class="token punctuation">:</span>\work\jxch<span class="token punctuation">-</span>study\study<span class="token punctuation">-</span>springcloud\study<span class="token punctuation">-</span>springcloud\data\rocksdb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${rocksdb.path}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> rocksDBPath<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">RocksDB</span> <span class="token function">rocksDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        <span class="token class-name">Options</span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCreateIfMissing</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">RocksDB</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> rocksDBPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RockDBTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token class-name">RocksDB</span> rocksDB<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        rocksDB<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>rocksDB<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        rocksDB<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.rocksdb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>rocksdbjni<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.1.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;集成&quot;&gt;集成&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;依赖 &lt;code&gt;rocksdbjni&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置数据库的本地存储路径&lt;/li&gt;
&lt;li&gt;配置 &lt;code&gt;RocksDB&lt;/code&gt; 的 Bean&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=</summary>
      
    
    
    
    <category term="java-template" scheme="https://jxch.github.io/categories/java-template/"/>
    
    
    <category term="SpringBoot" scheme="https://jxch.github.io/tags/SpringBoot/"/>
    
    <category term="RocksDB" scheme="https://jxch.github.io/tags/RocksDB/"/>
    
  </entry>
  
  <entry>
    <title>架构-订单支付系统设计</title>
    <link href="https://jxch.github.io/2023/06/05/jia-gou/jia-gou-ding-dan-zhi-fu-xi-tong-she-ji/"/>
    <id>https://jxch.github.io/2023/06/05/jia-gou/jia-gou-ding-dan-zhi-fu-xi-tong-she-ji/</id>
    <published>2023-06-04T20:48:59.000Z</published>
    <updated>2023-06-04T20:51:23.576Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/static/IT/SpringCloud/OrderPay.png" alt="订单支付系统设计"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/static/IT/SpringCloud/OrderPay.png&quot; alt=&quot;订单支付系统设计&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="架构" scheme="https://jxch.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="支付系统" scheme="https://jxch.github.io/tags/%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>架构-订单系统设计</title>
    <link href="https://jxch.github.io/2023/06/04/jia-gou/jia-gou-ding-dan-xi-tong-she-ji/"/>
    <id>https://jxch.github.io/2023/06/04/jia-gou/jia-gou-ding-dan-xi-tong-she-ji/</id>
    <published>2023-06-04T14:24:04.000Z</published>
    <updated>2023-06-04T15:26:11.521Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/static/IT/SpringCloud/OrderSystem.png" alt="订单系统设计"></p><hr><h2 id="幂等">幂等</h2><p>一件事情做几次结果都一样（防止用户提交两次订单）<br>唯一性索引：生成订单ID的操作提前到核对订单页面并在页面携带此ID，提交订单时直接使用此ID</p><p>ABA问题（使用版本号）：<br>如用户修改订单详情，物品颜色（更新订单信息的ABA问题）：</p><ul><li>红色，修改成功，网络响应失败（触发重试）</li><li>绿色，用户修改成功</li><li>红色，重试成功<br>用户想要的是第二次修改的绿色，最后结果确是红色</li></ul><p>使用版本号解决这个问题：<code>update</code> db时检查 <code>version</code> 有没有发生变化</p><h2 id="读写分离">读写分离</h2><p>我的订单中，每个用户的订单都不同，所以不能用 <code>redis</code> 缓存数据，只能用读写分离优化查询速度<br>存在主从同步时数据暂时的不一致情况，可以插入支付成功页面，几秒后跳转详情页面，然后从读库查询<br><em>在要求较高的业务场景下可以在同一事务中，在写库写完就在写库读然后返回给前端</em></p><h2 id="分库分表">分库分表</h2><p>能少拆就少拆，能不拆就不拆，降低维护复杂度<br>在MySQL中，如果一行存1kb的数据，那么一张表可以在不影响性能的情况下，大概存储2100条数据</p><p>数据量大：分表<br>并发量大：分库</p><h3 id="分表分片策略">分表分片策略</h3><p>按时间或按ID取模等</p><ul><li>根据orderid mod缺陷：无法根据userid查询该用户下的所有订单<ul><li>解决方案：根据 orderid 和 userid 后几位拼接一个新的 orderid（基因法），然后 mod 取模<ul><li>缺陷：无法根据店铺ID查询该店铺下的所有订单<ul><li>解决方案 - 数据冗余：订单数据同步到其他存储，比如ES，Hadoop或MySQL（以店铺ID作为分片键的只读订单库）等</li></ul></li></ul></li></ul></li></ul><h3 id="实现方案">实现方案</h3><ul><li>Sharding-JDBC（推荐使用）</li><li>代理方式（MyCat，好久不更新了）：使用起来最简单<ul><li>缺陷：性能损失较大，需要两次请求</li></ul></li><li>历史订单归档（数据迁移，根据热尾效应，只保留近3个月的数据，提高提高表的查询速度）<ul><li>定时任务：MySQL -&gt; MongoDB<ul><li>循环批量插入（mysql delete，mongodb insert）</li><li>数据库负载很大，MySQL可以按ID范围删除（每次2000条），每次循环休眠一个随机数，让MySQL完成页面合并，降低负载</li><li>碎片优化负载很大，建议晚上迁移，一晚上迁移不完，可以暂停，第二天晚上继续迁移</li><li>迁移前做好备份</li></ul></li><li>数据一致性：需要事务，但不需要分布式事务<ul><li>获取上一次成功的最大ID，以它为起始ID：只需保证某一边有数据就可以</li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/static/IT/SpringCloud/OrderSystem.png&quot; alt=&quot;订单系统设计&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;幂等&quot;&gt;幂等&lt;/h2&gt;
&lt;p&gt;一件事情做几次结果都一样（防止用户提交两次订单）&lt;br&gt;
唯一性索引：生成订单ID</summary>
      
    
    
    
    <category term="架构" scheme="https://jxch.github.io/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="幂等" scheme="https://jxch.github.io/tags/%E5%B9%82%E7%AD%89/"/>
    
    <category term="读写分离" scheme="https://jxch.github.io/tags/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
    <category term="分库分表" scheme="https://jxch.github.io/tags/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>PI-树莓派安装Kubernetes</title>
    <link href="https://jxch.github.io/2023/06/04/yun-wei/pi-shu-mei-pai-an-zhuang-kubernetes/"/>
    <id>https://jxch.github.io/2023/06/04/yun-wei/pi-shu-mei-pai-an-zhuang-kubernetes/</id>
    <published>2023-06-03T22:52:26.000Z</published>
    <updated>2023-06-03T23:04:53.471Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span class="token builtin class-name">echo</span> <span class="token string">"deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/kubernetes.list<span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> kubelet kubeadm kubectl kubernetes-cni<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加 cgroup_enable=memory cgroup_memory=1</span><span class="token function">vi</span> /boot/cmdline.txt<span class="token comment"># 重启</span><span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 如果有无法解决的报错，可以添加这个参数暂时跳过 --ignore-preflight-errors all</span><span class="token function">sudo</span> kubeadm initkubectl apply <span class="token parameter variable">-f</span> https://docs.projectcalico.org/v3.14/manifests/calico.yamlkubectl get nodes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; &lt;span clas</summary>
      
    
    
    
    <category term="运维手册" scheme="https://jxch.github.io/categories/%E8%BF%90%E7%BB%B4%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="PI" scheme="https://jxch.github.io/tags/PI/"/>
    
    <category term="Kubernetes" scheme="https://jxch.github.io/tags/Kubernetes/"/>
    
  </entry>
  
</feed>
