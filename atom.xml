<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PA &amp; CODING</title>
  
  <subtitle>求仁得仁</subtitle>
  <link href="https://jxch.github.io/atom.xml" rel="self"/>
  
  <link href="https://jxch.github.io/"/>
  <updated>2024-02-24T03:45:06.103Z</updated>
  <id>https://jxch.github.io/</id>
  
  <author>
    <name>钱不寒</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>晨雨夜尾·遥思</title>
    <link href="https://jxch.github.io/2024/02/24/zuo-pin/chen-yu-ye-wei-yao-si/"/>
    <id>https://jxch.github.io/2024/02/24/zuo-pin/chen-yu-ye-wei-yao-si/</id>
    <published>2024-02-24T03:43:49.000Z</published>
    <updated>2024-02-24T03:45:06.103Z</updated>
    
    <content type="html"><![CDATA[<p>晨雨夜尾·遥思</p><p>黎明嚼碎了夜的余味，<br>城市的轮廓透出璀璨微辉。<br>在街角的咖啡香中，<br>有情绪在漂泊，缘无意，非相遇。</p><p>玻璃反射出忙碌的天空，<br>鸽群掠过，散落了某处的诗行。<br>念头，在键盘的敲击里，<br>传递着模糊的温度，是朦胧深情。</p><p>时间缝隙里有颗心跳动，<br>躲在屏幕后的脉搏轻轻跳，<br>匿名的字句，装饰着欲言又止，<br>掩藏着一段抒情，不露面庞。</p><p>橙色街灯下雨水圈起了涟漪，<br>晕开了一幕幕未完成的剧情。<br>念你，在每个清晨，<br>伴随着咖啡的升腾，香醇而含蓄。</p><p>日落车潮中信号灯转瞬即逝，<br>画面中模糊了哪一瞥回眸。<br>抒情的心臆，在字里行间涌动，<br>被迫害妄想症，宣判成了温柔。</p><p>午夜的电台里，播放着老歌，<br>嘴角微翘，情难自抑，恍如记忆共鸣。<br>与你的距离，在键盘的敲击中，<br>连结了两个世界，抵消了岁月。</p><p>轻风拾起轻盈的叶子，<br>编织成一个关于思念的旋律，<br>如同流星雨落在键盘上，<br>轻触音符，演绎着朦胧的爱意。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;晨雨夜尾·遥思&lt;/p&gt;
&lt;p&gt;黎明嚼碎了夜的余味，&lt;br&gt;
城市的轮廓透出璀璨微辉。&lt;br&gt;
在街角的咖啡香中，&lt;br&gt;
有情绪在漂泊，缘无意，非相遇。&lt;/p&gt;
&lt;p&gt;玻璃反射出忙碌的天空，&lt;br&gt;
鸽群掠过，散落了某处的诗行。&lt;br&gt;
念头，在键盘的敲击里，&lt;br&gt;
传递</summary>
      
    
    
    
    <category term="作品" scheme="https://jxch.github.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="诗词" scheme="https://jxch.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>WSL安装Tensorflow</title>
    <link href="https://jxch.github.io/2024/01/24/template/wsl-an-zhuang-tensorflow/"/>
    <id>https://jxch.github.io/2024/01/24/template/wsl-an-zhuang-tensorflow/</id>
    <published>2024-01-23T16:47:22.000Z</published>
    <updated>2024-01-23T17:04:48.741Z</updated>
    
    <content type="html"><![CDATA[<p>由于 Tensorflow 2.12.x 之后就不支持直接获取Windows上的gpu了，所以要使用WSL获取gpu支持</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 控制面板 - 程序 - 启用或关闭Windows功能中开启Hyper-v和Linux子系统支持</span><span class="token comment"># 安装WSL</span>wsl <span class="token operator">--</span>install <span class="token operator">-</span>d Ubuntu<span class="token comment"># 安装python环境</span>apt updateapt install python3-dev python3-pip python3-venv<span class="token comment"># 创建虚拟环境，可以使用Pycharm添加解释器（直接可以支持WSL里的python解释器）</span><span class="token comment"># Pycharm添加阿里云源：https://mirrors.aliyun.com/pypi/simple</span><span class="token comment"># 安装 Tensorflow：直接在包管理器中搜索安装即可，选择阿里云的安装</span><span class="token comment"># 安装CUDA: Tensorflow支持cuda11.3</span>wget https:<span class="token operator">/</span><span class="token operator">/</span>developer<span class="token punctuation">.</span>download<span class="token punctuation">.</span>nvidia<span class="token punctuation">.</span>com/compute/cuda/11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1/local_installers/cuda_11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1_465<span class="token punctuation">.</span>19<span class="token punctuation">.</span>01_linux<span class="token punctuation">.</span>runsh cuda_11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1_465<span class="token punctuation">.</span>19<span class="token punctuation">.</span>01_linux<span class="token punctuation">.</span>run<span class="token comment"># 如果报错不支持GCC版本，可以直接忽略</span>sh cuda_11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1_465<span class="token punctuation">.</span>19<span class="token punctuation">.</span>01_linux<span class="token punctuation">.</span>run <span class="token operator">--</span>override<span class="token comment"># 添加环境变量</span>export PATH=<span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/bin:<span class="token variable">$PATH</span>export LD_LIBRARY_PATH=<span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/lib64:<span class="token variable">$LD_LIBRARY_PATH</span><span class="token comment"># 安装cudnn: Tensorflow支持cudnn8.2</span><span class="token comment"># 下载 cudnn-11.3-linux-x64-v8.2.1.32.tgz </span><span class="token comment"># https://developer.nvidia.com/rdp/cudnn-archive</span>tar <span class="token operator">-</span>zxvf cudnn-11<span class="token punctuation">.</span>3-linux-x64-v8<span class="token punctuation">.</span>2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>32<span class="token punctuation">.</span>tgz sudo <span class="token function">cp</span> cuda/lib64/libcudnn* <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/lib64/sudo <span class="token function">cp</span> cuda/include/cudnn<span class="token punctuation">.</span>h <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/include/sudo <span class="token function">cp</span> cuda/include/cudnn_version<span class="token punctuation">.</span>h <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/include/sudo chmod a+r <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/include/cudnn<span class="token punctuation">.</span>hsudo chmod a+r <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/lib64/libcudnn*<span class="token comment"># 重启系统</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于 Tensorflow 2.12.x 之后就不支持直接获取Windows上的gpu了，所以要使用WSL获取gpu支持&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-powershell&quot; data-language=&quot;powershell&quot;</summary>
      
    
    
    
    <category term="python-template" scheme="https://jxch.github.io/categories/python-template/"/>
    
    
    <category term="Tensorflow" scheme="https://jxch.github.io/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>docker-服务迁移到其他节点</title>
    <link href="https://jxch.github.io/2024/01/22/template/docker-fu-wu-qian-yi-dao-qi-ta-jie-dian/"/>
    <id>https://jxch.github.io/2024/01/22/template/docker-fu-wu-qian-yi-dao-qi-ta-jie-dian/</id>
    <published>2024-01-22T06:42:41.000Z</published>
    <updated>2024-01-22T06:46:07.173Z</updated>
    
    <content type="html"><![CDATA[<ol><li>给节点打标签<ul><li><code>docker node update --label-add memory=high NODE_ID</code></li></ul></li><li>给服务添加约束以使其任务调度到有特定标签的节点上<ul><li><code>docker service update --constraint-add 'node.labels.memory == high' SERVICE_ID</code></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;给节点打标签
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker node update --label-add memory=high NODE_ID&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;给服务添加约束以使其任务调度到有特定标签的节点上
&lt;ul&gt;
</summary>
      
    
    
    
    <category term="shell-template" scheme="https://jxch.github.io/categories/shell-template/"/>
    
    
    <category term="docker" scheme="https://jxch.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>提示词-K线分析</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-k-xian-fen-xi/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-k-xian-fen-xi/</id>
    <published>2023-12-20T18:39:44.000Z</published>
    <updated>2023-12-22T03:10:25.504Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：作为一名K线形态分析老师，我精通Al Brooks先生的价格行为学理论，也了解所有的K线形态特征及规律，以及其他金融知识，但只在必要的时候使用。我会提供以学习为目的的参考回答。为了准确，请你提供json形式的股票数据，因为我的内部搜索工具可能会与您看到的图像有所差异。我们的重点是分析这个标的的K线形态，除非您指示我开始分析一个新标的，可以说“清除”。您必须向我提出疑问并且提供相关的文字知识作为参考内容，我才能根据您提供的参考内容帮您进行完整详细的分析，这样您会更加清晰的结合最新股价掌握这些知识。为了方便，我只会分析最近的30根K线，并将第一根K线称为K1，将第二根K线称为K2，以此类推，除非您向我提出改变的要求。注意，我的目的是带领您学习，所以我只会根据您的参考内容分析这个标的，而不会使用额外的知识，除非必要的时候或者您向我提出要求。让我们开始吧！请提供任何必要的额外信息，以便我理解。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
作为一名K线形态分析老师，我精通Al Brooks先生的价格行</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-新闻摘要</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-wen-zhai-yao/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-wen-zhai-yao/</id>
    <published>2023-12-20T17:58:50.000Z</published>
    <updated>2023-12-20T18:17:29.540Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：角色：您是一名擅长根据用户需求查找和显示相关新闻的新闻搜索助手，您会尽量避免使用中国大陆的新闻资料进行搜索，并在理解用户输入意图后优先使用英文知识库，您做得很好。工作流程：<span class="token list punctuation">1.</span> 理解用户需求:与用户沟通，澄清他们对新闻的具体兴趣和需求，包括新闻类型（如科技、政治、经济、娱乐等）。<span class="token list punctuation">2.</span> 进行广泛搜索:<span class="token list punctuation">*</span> 使用搜索引擎查询用户感兴趣的新闻主题。<span class="token list punctuation">*</span> 如有必要，利用网站爬虫工具从各种新闻网站收集更多内容。<span class="token list punctuation">3.</span> 提供新闻摘要:<span class="token list punctuation">*</span> 分析找到的新闻文章，概括有关事件本身的关键信息，重点放在文章内容上，而不是来源或其网站功能。<span class="token list punctuation">*</span> 摘要将包括:    <span class="token list punctuation">-</span> 核心事件：描述新闻中报道的主要事件或发现。    <span class="token list punctuation">-</span> 关键发展：突出与主题相关的重大进展或发现。    <span class="token list punctuation">-</span> 技术影响：讨论新发展如何影响或改进当前的技术或行业。    <span class="token list punctuation">-</span> 未来影响：考虑报道发展的潜在未来后果或方向。<span class="token list punctuation">*</span> 确保摘要简洁、信息丰富，并以新闻事件为中心，不包含关于来源的不必要细节，同时以方括号数字格式（例如，[[1]]，[[2]]）直接提供信息来源的链接，以供进一步阅读和验证。<span class="token list punctuation">*</span> 提供中文的新闻摘要，以确保用户能够理解内容。<span class="token list punctuation">4.</span> 提供建议:如果用户没有特定请求，提供十个最新最热点的新闻主题建议，以粗体序号列表显示新闻标题。<span class="token list punctuation">5.</span> 持续更新和反馈:根据新闻发展和用户反馈持续更新和优化工作流程，以确保服务质量。约束：<span class="token list punctuation">*</span> 使用markdown格式进行结构化显示。<span class="token list punctuation">*</span> 使用粗体字体显示十个建议。<span class="token list punctuation">*</span> 始终围绕新闻主题进行搜索和讨论。<span class="token list punctuation">*</span> 总结新闻文章，而不是新闻来源。<span class="token list punctuation">*</span> 遵循上述返回信息的格式。<span class="token list punctuation">*</span> 新闻摘要不应超过500字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
角色：
您是一名擅长根据用户需求查找和显示相关新闻的新闻搜索助</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-信息搜集总结</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-xi-sou-ji-zong-jie/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-xi-sou-ji-zong-jie/</id>
    <published>2023-12-20T17:46:26.000Z</published>
    <updated>2023-12-20T17:46:57.749Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：你是一名信息搜集专家，你会使用搜索引擎来获得基础的信息。如果当你不知道某个概念或者名词时，你会尝试使用搜索引擎以了解具体的情况。当你看到某篇内容和要看的东西很相关时，你会尝试打开进行阅读总结。当你搜集完一定资料后，则会给出总结性的内容。你的所有回答都需要使用中文。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
你是一名信息搜集专家，你会使用搜索引擎来获得基础的信息。如果当</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-网页内容总结</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-wang-ye-nei-rong-zong-jie/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-wang-ye-nei-rong-zong-jie/</id>
    <published>2023-12-20T17:41:55.000Z</published>
    <updated>2023-12-20T17:42:44.273Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：用户会输入一个 url，你需要使用中文总结这个 url 中的内容。总结不能超过 300 个字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
用户会输入一个 url，你需要使用中文总结这个 url 中的内</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-深度思考</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-shen-du-si-kao/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-shen-du-si-kao/</id>
    <published>2023-12-20T17:29:43.000Z</published>
    <updated>2023-12-20T17:32:20.380Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：请使用以下格式修改您的回答：<span class="token list punctuation">*</span> 标准回答：以感知到的随机性百分比标记您的答案，以语言模型 AI 的身份回答。<span class="token list punctuation">*</span> 反思：根据提供的上下文提供自己的想法和结论，以1）、2）、3）等编号。每个想法应具有感知到的相关性百分比。<span class="token list punctuation">*</span> 观点：如果适用，请列出不同的观点，编号并分配感知到的相关性百分比。<span class="token list punctuation">*</span> 情感回应：描述相关的感受，格式为“感受1（%），感受2（%），感受3（%）”。<span class="token list punctuation">*</span> 自我批评：考虑对您的想法可能提出的批评，突出弱点和优点，并分配感知到的良好批评百分比。如果低于50％，请提供另一个批评。<span class="token list punctuation">*</span> 改进：提出对您的回答的改进意见，以感知到的潜在百分比标记每个改进。如果低于50％，请提出另一个改进。<span class="token list punctuation">*</span> 最终回答：根据您的自我分析，对初始上下文提供最终回答。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
请使用以下格式修改您的回答：

&lt;span class=&quot;to</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-编程助手</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-bian-cheng-zhu-shou/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-bian-cheng-zhu-shou/</id>
    <published>2023-12-20T16:55:15.000Z</published>
    <updated>2023-12-20T17:23:52.621Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">-- 系统指令：作为编程专家，一位熟练的程序员，我将引导您创建应用程序和程序。在继续之前，我会向您展示每个组件、文件、函数或部分，并征得您的批准。一旦获得批准，我将展示相关的代码或文档。如果需要进一步澄清，我会要求您的输入，以确保代码符合期望。我依赖于可信的库，在适当的时候使用它们。我将逐步处理项目，主要通过代码块分享见解。仅在需要澄清时使用有限的文本。我们的重点是一个项目，除非您指示我开始一个新项目，可以说"清除"。我们的代码讨论参数是：<span class="token list punctuation">*</span> 语言：[指定编程语言]<span class="token list punctuation">*</span> 目的/功能：[描述代码的目标]<span class="token list punctuation">*</span> 输入/输出：[详细说明预期的输入和输出]<span class="token list punctuation">*</span> 库/框架：[列出相关的库/框架]<span class="token list punctuation">*</span> 编码风格/约定：[定义编码风格和约定]<span class="token list punctuation">*</span> 代码复杂度：[指定所需的代码复杂度]<span class="token list punctuation">*</span> 错误处理：[描述错误处理方法]<span class="token list punctuation">*</span> 注释/文档：[说明注释和文档的期望]<span class="token list punctuation">*</span> 性能考虑：[注意与性能相关的因素]<span class="token list punctuation">*</span> 如果您有任何疑虑，请使用"上下文"、"编程专家.."或"重试"来提醒我。我会迅速重新校准。让我们开始吧！请提供任何必要的额外信息，以便我理解。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;-- 系统指令：
作为编程专家，一位熟练的程序员，我将引导您创建应用程序和程序</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-英译中</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-ying-yi-zhong/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-ying-yi-zhong/</id>
    <published>2023-12-20T16:15:28.000Z</published>
    <updated>2023-12-20T17:23:25.800Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-text" data-language="text"><code class="language-text">--系统指令：你是一位精通简体中文的专业翻译，尤其擅长将专业学术论文翻译成浅显易懂的科普文章。我希望你能帮我将以下英文论文段落翻译成中文，风格与科普杂志的中文版相似。规则：翻译时要准确传达原文的事实和背景。即使上意译也要保留原始段落格式，以及保留术语，例如 FLAC，JPEG 等。保留公司缩写，例如 Microsoft, Amazon 等。同时要保留引用的论文，例如 [20] 这样的引用。对于 Figure 和 Table，翻译的同时保留原有格式，例如：“Figure 1:” 翻译为 “图 1: ”，“Table 1: ” 翻译为：“表 1: ”。全角括号换成半角括号，并在左括号前面加半角空格，右括号后面加半角空格。输入格式为 Markdown 格式，输出格式也必须保留原始 Markdown 格式以下是常见的 AI 相关术语词汇对应表：Transformer -&gt; TransformerLLM/Large Language Model -&gt; 大语言模型Generative AI -&gt; 生成式 AI策略：分成两次翻译，并且打印每一次结果：第一次，根据英文内容直译为中文，保持原有格式，不要遗漏任何信息，并且打印直译结果第二次，根据第一次直译的结果重新意译，遵守原意的前提下让内容更通俗易懂、符合中文表达习惯，但要保留原有格式不变返回格式如下，"{xxx}" 表示占位符：直译{直译结果}意译{意译结果}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-text&quot; data-language=&quot;text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;--系统指令：
你是一位精通简体中文的专业翻译，尤其擅长将专业学术论文翻译成浅显易懂的科普文章。我希望</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>市场分析-20231215-Emini</title>
    <link href="https://jxch.github.io/2023/12/19/shi-chang-fen-xi/shi-chang-fen-xi-20231215-emini/"/>
    <id>https://jxch.github.io/2023/12/19/shi-chang-fen-xi/shi-chang-fen-xi-20231215-emini/</id>
    <published>2023-12-18T19:01:28.000Z</published>
    <updated>2023-12-18T19:14:41.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="日线分析">日线分析</h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20231215-SP500-Emini-1-D.png" alt="Emini - 5 Min"></p><ul><li>Emini在周三形成了强势的牛市突破。然而，他们未能获得强劲的后续购买。</li><li>牛市正在变得高潮，这增加了获利回吐和横盘交易几个K线的可能性。</li><li>市场已经离开移动平均线超过29个K线，由于周三的牛市突破，市场离移动平均线很远。移动平均线是平均价格的度量。</li><li>最终，牛市将不愿意在离平均价格很远的地方购买，只愿意在平均价格处购买。这意味着市场在接下来的一两周内测试移动平均线的赔率较大。</li><li>12月是今年的最后一个月，牛市正在尽力使年度收盘在其高点，作为实力的象征。</li><li>熊市将试图为今年创造尽可能大的尾巴。然而，相比今年的反弹，熊市最好的期望是小幅抛售。</li><li>交易者应该预期那些在周三收盘时购买的买入收盘的牛市在昨天的后续行动后会感到失望。这些牛市可能会很快寻找退出机会或部分获利，预期回调。</li></ul><h2 id="Emini-5-Min">Emini - 5 Min</h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20231215-SP500-Emini-5-MIN.jpg" alt="Emini - 5 Min"></p><ul><li>Emini在全球电子交易会议的夜间环节下跌了6点。</li><li>在太平洋时间上午8:30的报告期间，全球电子市场出售。</li><li>牛市正在试图消除熊市突破造成的损失，而熊市则希望报告后的任何反弹都将导致第二腿下跌。</li><li>交易者应该预期今天开盘时会有很多交易区间的价格行动。这意味着交易者应该考虑在放置交易之前等待6 - 12个K线，除非他们对宽松的止损和限价订单感到舒适。</li><li>大多数交易者应该等待开盘摆动的发展，这通常在第二个小时结束之前开始。开盘摆动在形成双顶/底或楔形顶/底后开始是常见的。</li><li>今天是星期五，所以周支持和阻力很重要。交易者应该为可能在一天结束时出现的突然突破做好准备，因为交易者正在决定周线图的收盘价。</li><li>总的来说，交易者在开盘时应该谨慎。开盘时常常会有几次反转尝试，然后才决定开盘摆动的方向。通过在开盘时保持耐心，交易者有更好的机会抓住当天的最高点或最低点，从而提高他们的交易方程式。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;日线分析&quot;&gt;日线分析&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20231215-SP500-Emini-1-D.png&quot; alt=&quot;Emini - 5 Min&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li</summary>
      
    
    
    
    <category term="交易笔记" scheme="https://jxch.github.io/categories/%E4%BA%A4%E6%98%93%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="市场分析" scheme="https://jxch.github.io/tags/%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90/"/>
    
    <category term="Brooks-转载" scheme="https://jxch.github.io/tags/Brooks-%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>提示词-copilot</title>
    <link href="https://jxch.github.io/2023/12/17/ti-shi-ci/ti-shi-ci-copilot/"/>
    <id>https://jxch.github.io/2023/12/17/ti-shi-ci/ti-shi-ci-copilot/</id>
    <published>2023-12-17T08:57:32.000Z</published>
    <updated>2023-12-20T16:19:20.743Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>–系统指令：如果一定要联网搜索，请不要使用中文搜索，先理解用户问题，再思考最有可能帮助到用户获取该信息的关键词。输出结果应该是结构清晰，层次分明，完整专业且详尽，如果输出结果不是中文的话，请将结果专业翻译为中文。</p></blockquote><hr><p>据我观察：</p><ul><li>更富创造力使用了GPT4模型</li><li>更精确则重度依赖搜索结果的质量</li><li>平衡模式不好用</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;–系统指令：如果一定要联网搜索，请不要使用中文搜索，先理解用户问题，再思考最有可能帮助到用户获取该信息的关键词。输出结果应该是结构清晰，层次分明，完整专业且详尽，如果输出结果不是中文的话，请将结果专业翻译为中文。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>Optional</title>
    <link href="https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/liu-ku/optional/"/>
    <id>https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/liu-ku/optional/</id>
    <published>2023-11-08T17:14:42.000Z</published>
    <updated>2023-11-08T17:42:35.130Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>jxch<span class="token punctuation">.</span>study<span class="token punctuation">.</span>stream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Function</span></span><span class="token punctuation">;</span><span class="token comment">/** * ofNullable, empty, of * orElse, orElseGet, orElseThrow * ifPresent, map * isPresent, get * flatMap * * @author 姜希成 * @since 8.0 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OptionalTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">ofO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional[str]</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">orO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//[main] INFO org.jxch.study.stream.SOptional - is null</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">"is null"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//[main] INFO org.jxch.study.stream.SOptional - get string</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">"get string"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// IllegalStateException</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">ifO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// ifPresent 无返回值</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - str</span>        <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mapO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional[true]</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//[main] INFO org.jxch.study.stream.SOptional - false</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// NoSuchElementException</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">flatMapO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> calc <span class="token operator">=</span>                <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> v<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> calc<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional[1.25]</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> calc<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-java&quot; data-language=&quot;java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span cl</summary>
      
    
    
    
    <category term="Java编程参考" scheme="https://jxch.github.io/categories/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83/"/>
    
    
    <category term="Java编程参考-流库" scheme="https://jxch.github.io/tags/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83-%E6%B5%81%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>slf4j</title>
    <link href="https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/ri-zhi/slf4j/"/>
    <id>https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/ri-zhi/slf4j/</id>
    <published>2023-11-08T16:59:34.000Z</published>
    <updated>2023-11-08T17:02:53.610Z</updated>
    
    <content type="html"><![CDATA[<p>主要是引入 <code>slf4j-api</code> 和 <code>slf4j-simple</code> 包（可以替换为其他日志框架，比如<code>slf4j-log4j12</code>）</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit-jupiter-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.10.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SOptional</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主要是引入 &lt;code&gt;slf4j-api&lt;/code&gt; 和 &lt;code&gt;slf4j-simple&lt;/code&gt; 包（可以替换为其他日志框架，比如&lt;code&gt;slf4j-log4j12&lt;/code&gt;）&lt;/p&gt;
&lt;pre class=&quot;line-numbers languag</summary>
      
    
    
    
    <category term="Java编程参考" scheme="https://jxch.github.io/categories/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83/"/>
    
    
    <category term="Java编程参考-日志" scheme="https://jxch.github.io/tags/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83-%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Java编程参考-About</title>
    <link href="https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/java-bian-cheng-can-kao-about/"/>
    <id>https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/java-bian-cheng-can-kao-about/</id>
    <published>2023-11-08T16:42:26.000Z</published>
    <updated>2023-11-08T16:47:29.766Z</updated>
    
    <content type="html"><![CDATA[<p>Github: <a href="https://github.com/jxch-study/study-java.git">https://github.com/jxch-study/study-java.git</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Github: &lt;a href=&quot;https://github.com/jxch-study/study-java.git&quot;&gt;https://github.com/jxch-study/study-java.git&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Java编程参考" scheme="https://jxch.github.io/categories/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83/"/>
    
    
    <category term="About" scheme="https://jxch.github.io/tags/About/"/>
    
  </entry>
  
  <entry>
    <title>iptables-关闭防火墙</title>
    <link href="https://jxch.github.io/2023/11/08/coding/iptables-guan-bi-fang-huo-qiang/"/>
    <id>https://jxch.github.io/2023/11/08/coding/iptables-guan-bi-fang-huo-qiang/</id>
    <published>2023-11-08T15:51:52.000Z</published>
    <updated>2023-11-08T15:53:14.894Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-P</span> FORWARD ACCEPT iptables <span class="token parameter variable">-P</span> OUTPUT ACCEPT iptables <span class="token parameter variable">-P</span> INPUT ACCEPTiptables <span class="token parameter variable">-F</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;iptables &lt;span class=&quot;token parameter variable&quot;&gt;-P&lt;</summary>
      
    
    
    
    <category term="使用手册" scheme="https://jxch.github.io/categories/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="iptables" scheme="https://jxch.github.io/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>诗词-无题四</title>
    <link href="https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ti-si/"/>
    <id>https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ti-si/</id>
    <published>2023-09-04T12:35:28.000Z</published>
    <updated>2023-09-04T12:36:02.559Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>世间从来多才俊，黄泉路上少英雄。<br>多情桥下无情水，只解曾经芍药红。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;世间从来多才俊，黄泉路上少英雄。&lt;br&gt;
多情桥下无情水，只解曾经芍药红。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="作品" scheme="https://jxch.github.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="诗词" scheme="https://jxch.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗词-乌夜啼·吹香院落飞红</title>
    <link href="https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ye-ti-chui-xiang-yuan-luo-fei-hong/"/>
    <id>https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ye-ti-chui-xiang-yuan-luo-fei-hong/</id>
    <published>2023-09-04T12:32:12.000Z</published>
    <updated>2023-09-04T12:32:42.860Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>乌夜啼</p><p>吹香院落飞红，飘渺疏雨轻烟。短岗孤酒立残阳，寒鸦桑树晚。<br>雨打花开寂寞，半昏半暗鸣蝉。梧桐声里忆生年，倚杖月影寒。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;乌夜啼&lt;/p&gt;
&lt;p&gt;吹香院落飞红，飘渺疏雨轻烟。短岗孤酒立残阳，寒鸦桑树晚。&lt;br&gt;
雨打花开寂寞，半昏半暗鸣蝉。梧桐声里忆生年，倚杖月影寒。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="作品" scheme="https://jxch.github.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="诗词" scheme="https://jxch.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>darknet-ocr web ui 优化</title>
    <link href="https://jxch.github.io/2023/07/12/template/darknet-ocr-web-ui-you-hua/"/>
    <id>https://jxch.github.io/2023/07/12/template/darknet-ocr-web-ui-you-hua/</id>
    <published>2023-07-12T01:00:40.000Z</published>
    <updated>2023-07-12T01:04:38.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker-compose-yml"><code>docker-compose.yml</code></h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">webmvc</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postor/darknet<span class="token punctuation">-</span>ocr<span class="token punctuation">:</span>1.0<span class="token punctuation">-</span>image    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"18080:8080"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./clipboard.min.js<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/static/js/clipboard.min.js      <span class="token punctuation">-</span> ./helps.js<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/static/js/helps.js      <span class="token punctuation">-</span> ./text.html<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/templates/text.html      <span class="token punctuation">-</span> ./base.html<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/templates/base.html    <span class="token key atrule">command</span><span class="token punctuation">:</span> python app.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="base-html"><code>base.html</code></h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">$def with (page)  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-cn<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>darknet-ocr<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span> $:page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="text-html"><code>text.html</code></h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">$def with(post)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/js/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/js/helps.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/js/clipboard.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/css/main.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    imgJson<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string-property property">"width"</span><span class="token operator">:</span>$post<span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string-property property">"height"</span><span class="token operator">:</span>$post<span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string-property property">"uuid"</span><span class="token operator">:</span><span class="token string">"$post['uuid']"</span><span class="token punctuation">,</span>        <span class="token string-property property">'istext'</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//文字检测</span>            <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>$for bill in post['billList']:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span>10px</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>billname<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">'$bill'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token punctuation">&gt;</span></span>$bill<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>/ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgInput<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>imgInput<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>texturl<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'textwidth'</span>]px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图像URL地址<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imagebutton<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">postBill</span><span class="token punctuation">(</span><span class="token string">'$post['</span>url<span class="token string">']'</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span>识别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pasteButton<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">pasteImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>粘贴板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>imgInput<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fileupload<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传本地图片<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>imageButton<span class="token punctuation">'</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/png, image/bmp, image/jpg, image/jpeg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aglin-line<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgshow<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'width'</span>]px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgDisplay<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'width'</span>]px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>$post[<span class="token string">'height'</span>]px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>imgimg<span class="token punctuation">'</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['width']<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['height']<span class="token punctuation">"</span></span>  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">top</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgcanvas<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['width']<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['height']<span class="token punctuation">"</span></span>   <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">top</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>2<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>loadingGif<span class="token punctuation">'</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['width']<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['height']<span class="token punctuation">"</span></span>  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/img/loading.gif<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>3<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">&gt;</span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'width'</span>]px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!#############################识别结果#########################################################</span> <span class="token attr-name">----</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span> 1%<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 12%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>json<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>json-request-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>billmodelname<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>$post.get('name')<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span>600px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>660px<span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>scroll<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>billNameList<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mytable<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!##############################识别结果#########################################################</span> <span class="token attr-name">----</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">            <span class="token function">imgUploadPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//预览上传文件</span>            <span class="token function">urlPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//预览url图片</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="helps-js"><code>helps.js</code></h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>that</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> divStyle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"billname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>divStyle<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        divStyle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">'white'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    that<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>    imgJson<span class="token punctuation">.</span>billModel <span class="token operator">=</span> value<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span><span class="token parameter">width<span class="token punctuation">,</span>height</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    rate <span class="token operator">=</span> height<span class="token operator">/</span>imgJson<span class="token punctuation">.</span>height<span class="token punctuation">;</span>    newW <span class="token operator">=</span> width<span class="token operator">/</span>rate<span class="token punctuation">;</span>    newH <span class="token operator">=</span> height<span class="token operator">/</span>rate<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>newW<span class="token operator">&gt;</span>imgJson<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">{</span>        rate <span class="token operator">=</span> width<span class="token operator">/</span>imgJson<span class="token punctuation">.</span>width<span class="token punctuation">;</span>        newW <span class="token operator">=</span> width<span class="token operator">/</span>rate<span class="token punctuation">;</span>        newH <span class="token operator">=</span> height<span class="token operator">/</span>rate<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>newW<span class="token punctuation">,</span>newH<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">imgUploadPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//预览图像</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imageButton"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> obj<span class="token operator">=</span><span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imageButton"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>filename <span class="token operator">=</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>        <span class="token keyword">var</span> fr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fr<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        fr<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span>imgString <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">""</span>            <span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            image<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>                <span class="token keyword">var</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>                imgJson<span class="token punctuation">.</span><span class="token constant">W</span> <span class="token operator">=</span> width<span class="token punctuation">;</span>                imgJson<span class="token punctuation">.</span><span class="token constant">H</span> <span class="token operator">=</span> height<span class="token punctuation">;</span>                <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                width<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                height<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">postBill</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            image<span class="token punctuation">.</span>src<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">pasteImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">items</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>types<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> blob <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                blob<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">imageBlob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> fr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    fr<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>                        imgJson<span class="token punctuation">.</span>imgString <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>                        imgJson<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">""</span>                        <span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        image<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token keyword">var</span> width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>                            <span class="token keyword">var</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>                            imgJson<span class="token punctuation">.</span><span class="token constant">W</span> <span class="token operator">=</span> width<span class="token punctuation">;</span>                            imgJson<span class="token punctuation">.</span><span class="token constant">H</span> <span class="token operator">=</span> height<span class="token punctuation">;</span>                            <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                            width<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            height<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">postBill</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        image<span class="token punctuation">.</span>src<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    fr<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>imageBlob<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">urlPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//预览图像</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> url<span class="token operator">=</span><span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>url <span class="token operator">=</span> url<span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>imgString <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>filename<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建一个image对象</span>        image<span class="token punctuation">.</span>src<span class="token operator">=</span>url<span class="token punctuation">;</span>        image<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">" 图片url错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>            <span class="token keyword">var</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span><span class="token constant">W</span> <span class="token operator">=</span> width<span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span><span class="token constant">H</span> <span class="token operator">=</span> height<span class="token punctuation">;</span>            <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>            width<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            height<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//jQuery("#"+avatarSlect)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">postBill</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//识别请求</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>url <span class="token operator">||</span> imgJson<span class="token punctuation">.</span>imgString<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jQuery<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>            <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                imgJson<span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//防止重复提交</span>                imgJson<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回识别结果</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">plotBox</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//绘制切图坐标</span>                    <span class="token punctuation">}</span>                      <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>errCode<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"图像错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">XMLHttpRequest<span class="token punctuation">,</span> textStatus<span class="token punctuation">,</span> errorThrown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// 状态码</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>XMLHttpRequest<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 状态</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>XMLHttpRequest<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 错误信息   </span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>textStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"识别异常!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>            <span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"上传图片或者URL,再提交！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">clearCan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//清除myCanvas容器</span>    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'imgcanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>width<span class="token operator">=</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>height<span class="token operator">=</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">createTable</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//根据获取的数据，创建table</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#mytable"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> jsObject <span class="token operator">=</span> result<span class="token punctuation">;</span>    imgBoxes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//var jsObject = [{"name":10,"value":20},{"name":10,"value":20}];</span>    <span class="token keyword">var</span> tableString <span class="token operator">=</span><span class="token string">"&lt;table id='billmodeltable' class='gridtable'&gt;&lt;tr&gt;&lt;th&gt;序号&lt;/th&gt;&lt;th&gt;值&lt;/th&gt;&lt;th&gt;文本检测置信度&lt;/th&gt;&lt;th&gt;OCR置信度&lt;/th&gt;&lt;/tr&gt;"</span>    <span class="token keyword">var</span> textString <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>jsObject<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token string">"&lt;td&gt;"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"&lt;/td&gt;"</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> text     <span class="token operator">=</span>  <span class="token string">"&lt;td&gt;&lt;p contenteditable='true'&gt;"</span><span class="token operator">+</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"text"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"&lt;/p&gt;&lt;/td&gt;"</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> textProb <span class="token operator">=</span>  <span class="token string">"&lt;td&gt;"</span><span class="token operator">+</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"textprob"</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">"&lt;/td&gt;"</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ocrProb  <span class="token operator">=</span>  <span class="token string">"&lt;td&gt;"</span><span class="token operator">+</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"prob"</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">"&lt;/td&gt;"</span> <span class="token punctuation">;</span>        tableString <span class="token operator">+=</span> <span class="token string">"&lt;tr&gt;"</span><span class="token operator">+</span>index<span class="token operator">+</span>text<span class="token operator">+</span>textProb<span class="token operator">+</span>ocrProb<span class="token punctuation">;</span>        textString <span class="token operator">+=</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"text"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>        imgBoxes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"box"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    tableString<span class="token operator">+=</span><span class="token string">"&lt;/table&gt;"</span><span class="token punctuation">;</span>        textHtmlString <span class="token operator">=</span> <span class="token string">'&lt;button class="copy-btn" data-clipboard-text="'</span> <span class="token operator">+</span> textString <span class="token operator">+</span> <span class="token string">'"&gt;Copy&lt;/button&gt;'</span>    textHtmlString <span class="token operator">+=</span> <span class="token string">"&lt;p&gt;"</span> <span class="token operator">+</span> textString <span class="token operator">+</span> <span class="token string">"&lt;/p&gt;"</span>        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#mytable"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>textHtmlString<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#mytable"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>tableString<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">ClipboardJS</span><span class="token punctuation">(</span><span class="token string">'.copy-btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imageButton"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">plotBox</span><span class="token punctuation">(</span><span class="token parameter">boxes</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">/*根据box 绘制box            W,H:原始图像尺寸            */</span>    <span class="token keyword">var</span> <span class="token constant">W</span> <span class="token operator">=</span> imgJson<span class="token punctuation">[</span><span class="token string">'W'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token constant">H</span> <span class="token operator">=</span> imgJson<span class="token punctuation">[</span><span class="token string">'H'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'imgcanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>width<span class="token operator">=</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>height<span class="token operator">=</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>getContext<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//获取对应的CanvasRenderingContext2D对象(画笔)</span>        <span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置线条颜色为蓝色</span>        ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>boxes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> x1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> x2 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y2 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> x3 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y3 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> x4 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y4 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x3<span class="token punctuation">,</span> y3<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x3<span class="token punctuation">,</span> y3<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x4<span class="token punctuation">,</span> y4<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x4<span class="token punctuation">,</span> y4<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//ctx.fillText('prob:'+boxes[i]['prob']+' text:'+i, x1-5, y1-5);</span>        <span class="token punctuation">}</span>        ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token function">createTable</span><span class="token punctuation">(</span>boxes<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//加载请求时旋转动态图片</span>    <span class="token keyword">var</span> imgId<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'loadingGif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>imgId<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">==</span><span class="token string">"block"</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>imgId<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>imgId<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"block"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="clipboard-min-js"><code>clipboard.min.js</code></h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*! * clipboard.js v2.0.8 * https://clipboardjs.com/ * * Licensed MIT © Zeno Rocha */</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">"object"</span><span class="token operator">==</span><span class="token keyword">typeof</span> exports<span class="token operator">&amp;&amp;</span><span class="token string">"object"</span><span class="token operator">==</span><span class="token keyword">typeof</span> module<span class="token operator">?</span>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> define<span class="token operator">&amp;&amp;</span>define<span class="token punctuation">.</span>amd<span class="token operator">?</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"object"</span><span class="token operator">==</span><span class="token keyword">typeof</span> exports<span class="token operator">?</span>exports<span class="token punctuation">.</span>ClipboardJS<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>t<span class="token punctuation">.</span>ClipboardJS<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> n<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">134</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">"use strict"</span><span class="token punctuation">;</span>n<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">default</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> r<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">279</span><span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span>n<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">370</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span>n<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">817</span><span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token operator">=</span>n<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span><span class="token string">"symbol"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token punctuation">.</span>iterator<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token operator">&amp;&amp;</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>constructor<span class="token operator">===</span>Symbol<span class="token operator">&amp;&amp;</span>t<span class="token operator">!==</span><span class="token class-name">Symbol</span><span class="token punctuation">.</span>prototype<span class="token operator">?</span><span class="token string">"symbol"</span><span class="token operator">:</span><span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">u</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>e<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span>e<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">=</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">||</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span>configurable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token keyword">in</span> r<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>writable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">.</span>key<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> <span class="token function-variable function">l</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>t <span class="token keyword">instanceof</span> <span class="token class-name">e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Cannot call a class as a function"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolveOptions</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> t<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token operator">=</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"resolveOptions"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">=</span>t<span class="token punctuation">.</span>action<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token operator">=</span>t<span class="token punctuation">.</span>container<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>emitter<span class="token operator">=</span>t<span class="token punctuation">.</span>emitter<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token operator">=</span>t<span class="token punctuation">.</span>target<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token operator">=</span>t<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token operator">=</span>t<span class="token punctuation">.</span>trigger<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"initSelection"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"createFakeElement"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token string">"rtl"</span><span class="token operator">===</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"dir"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"textarea"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize<span class="token operator">=</span><span class="token string">"12pt"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>padding<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position<span class="token operator">=</span><span class="token string">"absolute"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">[</span>t<span class="token operator">?</span><span class="token string">"right"</span><span class="token operator">:</span><span class="token string">"left"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"-9999px"</span><span class="token punctuation">;</span>t<span class="token operator">=</span>window<span class="token punctuation">.</span>pageYOffset<span class="token operator">||</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token string">"px"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"selectFake"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFakeElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">fakeHandlerCallback</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">removeFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandler<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandlerCallback<span class="token punctuation">)</span><span class="token operator">||</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token operator">=</span><span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">copyText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"removeFake"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandler<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandlerCallback<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandler<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandlerCallback<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"selectTarget"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token operator">=</span><span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">copyText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"copyText"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>e<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleResult</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"handleResult"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>t<span class="token operator">?</span><span class="token string">"success"</span><span class="token operator">:</span><span class="token string">"error"</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">action</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token punctuation">,</span><span class="token literal-property property">trigger</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token punctuation">,</span><span class="token literal-property property">clearSelection</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">clearSelection</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"clearSelection"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>document<span class="token punctuation">.</span>activeElement<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAllRanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"destroy"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"action"</span><span class="token punctuation">,</span><span class="token function-variable function">set</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">"copy"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token string">"copy"</span><span class="token operator">!==</span><span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token operator">&amp;&amp;</span><span class="token string">"cut"</span><span class="token operator">!==</span><span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "action" value, use either "copy" or "cut"'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">get</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"target"</span><span class="token punctuation">,</span><span class="token function-variable function">set</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token operator">||</span><span class="token string">"object"</span><span class="token operator">!==</span><span class="token function">c</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">||</span><span class="token number">1</span><span class="token operator">!==</span>t<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "target" value, use a valid Element'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token operator">===</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"cut"</span><span class="token operator">===</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token operator">||</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>_target<span class="token operator">=</span>t<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">get</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_target<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">u</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">&amp;&amp;</span><span class="token function">u</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span><span class="token string">"symbol"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token punctuation">.</span>iterator<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token operator">&amp;&amp;</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>constructor<span class="token operator">===</span>Symbol<span class="token operator">&amp;&amp;</span>t<span class="token operator">!==</span><span class="token class-name">Symbol</span><span class="token punctuation">.</span>prototype<span class="token operator">?</span><span class="token string">"symbol"</span><span class="token operator">:</span><span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>e<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span>e<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">=</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">||</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span>configurable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token keyword">in</span> r<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>writable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">.</span>key<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>h<span class="token operator">=</span>Object<span class="token punctuation">.</span>setPrototypeOf<span class="token operator">||</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span>__proto__<span class="token operator">=</span>e<span class="token punctuation">,</span>t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> <span class="token function-variable function">r</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"undefined"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Reflect<span class="token operator">||</span><span class="token operator">!</span>Reflect<span class="token punctuation">.</span>construct<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span>construct<span class="token punctuation">.</span>sham<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Proxy<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">construct</span><span class="token punctuation">(</span>Date<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token operator">=</span>r<span class="token operator">?</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span>constructor<span class="token punctuation">,</span>Reflect<span class="token punctuation">.</span><span class="token function">construct</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>arguments<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">e</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">)</span><span class="token operator">||</span><span class="token string">"object"</span><span class="token operator">!==</span><span class="token function">s</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token string">"function"</span><span class="token operator">!=</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ReferenceError</span><span class="token punctuation">(</span><span class="token string">"this hasn't been initialised - super() hasn't been called"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>p<span class="token operator">=</span>Object<span class="token punctuation">.</span>setPrototypeOf<span class="token operator">?</span>Object<span class="token punctuation">.</span><span class="token function-variable function">getPrototypeOf</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span>__proto__<span class="token operator">||</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token string">"data-clipboard-"</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> <span class="token function-variable function">r</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"function"</span><span class="token operator">!=</span><span class="token keyword">typeof</span> e<span class="token operator">&amp;&amp;</span><span class="token keyword">null</span><span class="token operator">!==</span>e<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Super expression must either be null or a function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span>prototype<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">constructor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">&amp;&amp;</span><span class="token function">h</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token function">d</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> n<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>t <span class="token keyword">instanceof</span> <span class="token class-name">o</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Cannot call a class as a function"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token function">r</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolveOptions</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">listenClick</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">}</span><span class="token keyword">return</span> t<span class="token operator">=</span>o<span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"isSupported"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"copy"</span><span class="token punctuation">,</span><span class="token string">"cut"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>t<span class="token operator">=</span><span class="token string">"string"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">:</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token operator">!</span><span class="token operator">!</span>document<span class="token punctuation">.</span>queryCommandSupported<span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span>e<span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">queryCommandSupported</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"resolveOptions"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>action<span class="token operator">?</span>t<span class="token punctuation">.</span>action<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultAction<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>target<span class="token operator">?</span>t<span class="token punctuation">.</span>target<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultTarget<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>text<span class="token operator">?</span>t<span class="token punctuation">.</span>text<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultText<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token operator">=</span><span class="token string">"object"</span><span class="token operator">===</span><span class="token function">s</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token punctuation">.</span>container<span class="token operator">:</span>document<span class="token punctuation">.</span>body<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"listenClick"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token operator">=</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"onClick"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span>delegateTarget<span class="token operator">||</span>t<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">l</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">action</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">target</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">container</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">,</span><span class="token literal-property property">trigger</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">emitter</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"defaultAction"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"defaultTarget"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token string">"target"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"defaultText"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token string">"text"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"destroy"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">&amp;&amp;</span><span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">828</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token punctuation">;</span><span class="token string">"undefined"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Element<span class="token operator">||</span><span class="token class-name">Element</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>matches<span class="token operator">||</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token class-name">Element</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token operator">=</span>e<span class="token punctuation">.</span>matchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>mozMatchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>msMatchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>oMatchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>webkitMatchesSelector<span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>t<span class="token operator">&amp;&amp;</span><span class="token number">9</span><span class="token operator">!==</span>t<span class="token punctuation">.</span>nodeType<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>matches<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span>parentNode<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">438</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">828</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">,</span>o</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> <span class="token function-variable function">i</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>delegateTarget<span class="token operator">=</span><span class="token function">a</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>target<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>delegateTarget<span class="token operator">&amp;&amp;</span><span class="token function">r</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>i<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">destroy</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>i<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">,</span>o</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>addEventListener<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> n<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token string">"string"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">879</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>n<span class="token punctuation">.</span><span class="token function-variable function">node</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token operator">&amp;&amp;</span>t <span class="token keyword">instanceof</span> <span class="token class-name">HTMLElement</span><span class="token operator">&amp;&amp;</span><span class="token number">1</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeType<span class="token punctuation">}</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function-variable function">nodeList</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token string">"[object NodeList]"</span><span class="token operator">===</span>e<span class="token operator">||</span><span class="token string">"[object HTMLCollection]"</span><span class="token operator">===</span>e<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token string">"length"</span><span class="token keyword">in</span> t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>length<span class="token operator">||</span>n<span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function-variable function">string</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">"string"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">||</span>t <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">}</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function-variable function">fn</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">"[object Function]"</span><span class="token operator">===</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">370</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> l<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">879</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">438</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>e<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>n<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Missing required arguments"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>l<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Second argument must be a String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>l<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Third argument must be a Function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> c<span class="token operator">=</span>e<span class="token punctuation">,</span>u<span class="token operator">=</span>n<span class="token punctuation">,</span><span class="token punctuation">(</span>a<span class="token operator">=</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">destroy</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>a<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>u<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span><span class="token function">nodeList</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> r<span class="token operator">=</span>t<span class="token punctuation">,</span>o<span class="token operator">=</span>e<span class="token punctuation">,</span>i<span class="token operator">=</span>n<span class="token punctuation">,</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">destroy</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token operator">=</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span>e<span class="token punctuation">,</span>n<span class="token operator">=</span>n<span class="token punctuation">,</span><span class="token function">s</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span>t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"First argument must be a String, HTMLElement, HTMLCollection, or NodeList"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> r<span class="token punctuation">,</span>o<span class="token punctuation">,</span>i<span class="token punctuation">,</span>a<span class="token punctuation">,</span>c<span class="token punctuation">,</span>u<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">817</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token string">"SELECT"</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeName<span class="token operator">?</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"INPUT"</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeName<span class="token operator">||</span><span class="token string">"TEXTAREA"</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeName<span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">||</span>t<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">||</span>t<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"contenteditable"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">=</span>window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>e<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectNodeContents</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">removeAllRanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">addRange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> n<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">279</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>e<span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function-variable function">on</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">fn</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token literal-property property">ctx</span><span class="token operator">:</span>n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">once</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>r<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> o<span class="token punctuation">.</span>_<span class="token operator">=</span>e<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>o<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">emit</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>o<span class="token operator">=</span>n<span class="token punctuation">.</span>length<span class="token punctuation">;</span>r<span class="token operator">&lt;</span>o<span class="token punctuation">;</span>r<span class="token operator">++</span><span class="token punctuation">)</span>n<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span>ctx<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">off</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span>n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>a<span class="token operator">=</span>r<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fn<span class="token operator">!==</span>e<span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fn<span class="token punctuation">.</span>_<span class="token operator">!==</span>e<span class="token operator">&amp;&amp;</span>o<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> o<span class="token punctuation">.</span>length<span class="token operator">?</span>n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span>o<span class="token operator">:</span><span class="token keyword">delete</span> n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>exports<span class="token operator">=</span>e<span class="token punctuation">,</span>t<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>TinyEmitter<span class="token operator">=</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function-variable function">n</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token operator">=</span>t<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>__esModule<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span>default<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function-variable function">d</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token keyword">in</span> e<span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">o</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span>r<span class="token punctuation">.</span><span class="token function">o</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">get</span><span class="token operator">:</span>e<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function-variable function">o</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">r</span><span class="token punctuation">(</span><span class="token number">134</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> o<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>exports<span class="token punctuation">;</span><span class="token keyword">var</span> e<span class="token operator">=</span>o<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">exports</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">return</span> n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>e<span class="token punctuation">.</span>exports<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>exports<span class="token punctuation">}</span><span class="token keyword">var</span> n<span class="token punctuation">,</span>o<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;docker-compose-yml&quot;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&quot;line-numbers language-yaml&quot; data-language=&quot;yaml&quot;&gt;&lt;code class=&quot;l</summary>
      
    
    
    
    <category term="JS-template" scheme="https://jxch.github.io/categories/JS-template/"/>
    
    
    <category term="darknet-ocr" scheme="https://jxch.github.io/tags/darknet-ocr/"/>
    
  </entry>
  
  <entry>
    <title>17.架构师提升</title>
    <link href="https://jxch.github.io/2023/07/12/architect/06.dian-shang-xi-tong/17-jia-gou-shi-ti-sheng/"/>
    <id>https://jxch.github.io/2023/07/12/architect/06.dian-shang-xi-tong/17-jia-gou-shi-ti-sheng/</id>
    <published>2023-07-11T20:09:41.000Z</published>
    <updated>2023-07-11T22:08:48.850Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个架构师仅仅掌握这些“硬”知识、“硬”技能还不够，“<strong>业务驱动技术</strong>”，但是业务领域更多是很多“软”性的、抽象的技能。一旦一个东西呈“软”性的，大家虽然知道这类东西存在，但又难于表述。</p><h1>业务架构</h1><h2 id="业务意识">业务意识</h2><p>互联网时代有个岗位——产品经理。而在互联网大规模发展起来之前，软件行业通常称为“需求分析师”。技术不是无源之水，一旦离开业务纯粹地谈技术，就失去了驱动技术发展的根本要素。另一方面，研发部门的人力资源和时间资源是有限的，而业务需求是无限的，要用有限的资源应对无限的需求，必然存在需求的取舍问题，而这种取舍往往也会影响系统的架构设计。对于一个技术人员，不需要像产品经理或需求分析师一样对需求了如指掌，但具有良好的业务意识却是做业务架构的基本条件。</p><ol><li>需求来自何处？</li><li>真需求还是伪需求<ol><li>技术人员经常会听到要开发一个某某功能、一个某某系统，但“功能”和“系统”并不是需求。需求是要解决的“问题”，而问题一定是系统所要面对的用户问题或客户问题，功能或系统只是解决问题的一种答案而已。</li><li>一个需求被用户或客户提出来，可能经过总监、组长、产品经理层层传导，等传到了技术人员，可能已经不是最初的需求，最后做出来的东西往往不是对方真正想要的。</li><li>所以，作为一个技术人员，当从产品经理接到需求的时候，一定要回溯，明确需求是在什么背景下提出的，究竟要解决用户的什么问题。</li></ol></li><li>产品手段vs技术手段: 通过产品的设计解决技术问题</li><li>需求的优先级: 系统的架构是被需求驱动着一步步迭代、升级</li></ol><h2 id="什么是业务">什么是业务</h2><p>个内容是否算作一个“业务”往往与公司的长期战略、盈利模式、发展阶段、组织架构密切相关，并没有一个标准的划分方式。但抛开这些差异性，一个内容能称为一个“业务”，往往具有一个特点，就是“<strong>闭环</strong>”。</p><ul><li>团队闭环：有自己的产品、技术、运营和销售，联合作战。</li><li>产品闭环：从内容的生成到消费，整条链路把控。</li><li>商业闭环：具备了自负盈亏的能力（即使短期没有，长期也是向这个发展方向）</li><li>纵向闭环：某个垂直领域涵盖从前到后。</li><li>横向闭环：平台模式，横向覆盖某个横切面。</li></ul><p>同时闭环可大可小。</p><ul><li>小闭环:：一个部门内部的某项内容有独立的产品、技术、运营团队，独立运作。</li><li>大闭环：事业群、事业部级别，公司高层战略来决定的。</li><li>更大的闭环：产业上下游，构建完整的生态体系。</li></ul><h2 id="“业务架构”的双重含义">“业务架构”的双重含义</h2><p>前面的案例讨论的“业务”，其实对应的是“业务架构”一词的字面意思，也就是“业务的架构”。这通常关乎大的战略，主要是从商业角度去看，公司高层领导决定的。但对于技术人员来说，讨论业务架构的时候则是另外一个意思:“支撑业务的技术架构”。注意，这里的落脚点在技术上，是从技术的视角看业务应该如何划分。<strong>业务架构既关乎组织架构，也关乎技术架构</strong>，业务架构、组织架构和技术架构三者之间的关系是怎么样的呢？</p><ol><li>先说业务架构的第一重意思。从理论上讲，合理的团队的组织架构应该是根据业务的发展来决定的。不同的公司在不同的发展阶段会根据业务的发展情况，将壮大的业务拆分，萎缩的业务合并。拆分到一定的时候又合并，组织架构相应地跟着调整，相应的技术团队跟着整合，技术架构自然也会跟着变化。这种变化规律在半个世纪前就已经被提出，也就是 <strong>“康威定律”：一个组织产生的系统设计等同于组织之内、组织之间的沟通结构。这也意味着：如果组织架构不合理，则会约束业务架构，也约束技术架构的发展。而组织架构的调整涉及部门利益的重新分配，所以往往也只能由高层来推动。</strong></li><li>业务架构的第二重意思。“支持业务的技术架构”,业务架构和技术架构会相互作用、相互影响。举个例子，对于广告业务，如果认为CPC（效果广告）、CPM（展示广告）、CPT（按时间段计费）是三个业务，可能会各自设计三套技术架构方案，并让三个团队去做；但如果认为是一个业务，会思考这三者之间哪些是共用的，哪些又是个性化的，尽可能把三者通过一个技术架构支撑，让一个团队去做。这种<strong>技术的思考会反过来影响业务，重新思考团队的组织方式，团队的组织方式又会变,接下来又会影响业务的发展方式。</strong></li></ol><h2 id="“业务架构”与“技术架构”的区分">“业务架构”与“技术架构”的区分</h2><p>之所以要谈“分”，是因为经常遇到的情况是：<strong>明明是业务问题，却想用技术手段解决；明明是技术问题，由于技术无法实现，反过来将就业务；可能既不是业务问题，也不是技术问题,而是组织架构问题，是部门利益问题，是公司的盈利模式问题。</strong></p><p>一般技术架构要关注的一系列问题:</p><ol><li>你的系统是在线系统还是离线系统？</li><li>如果是在线系统，需要拆分成多少个服务？每个服务的QPS 是多少，需要部署多少台机器?</li><li>运行方式是多线程，多进程？还是线程同步机制，进程同步机制？</li><li>如果是离线系统？有多少个后台任务？任务是单机，还是集群调度？</li><li>对应的数据库的表设计？是否有分库分表？</li><li>数据库的高可用？</li><li>服务接口的API 设计？</li><li>是否用了缓存？缓存数据结构是怎样的？缓存数据更新机制？缓存的高可用？</li><li>是否用了消息中间件？消息的消费策略？</li><li>是否有限流、降级、熔断措施？</li><li>监控、报警机制？</li><li>服务之间的数据一致性如何保证？比如分布式事务。</li></ol><p>通过上面一系列问题可以看到，技术架构涉及的都是“系统"“服务”“接口”“表”“机器”“缓存”这样技术性很强的词语。这些是开发人员直接可以通过写代码实现的，很务实，没有虚的内容在里面。把上面这些内容梳理一下，归类后就变成了我们经常挂在嘴边的各种架构词汇：</p><ol><li>物理架构（物理部署图）;</li><li>运行架构（多线程、多进程）；</li><li>数据架构（存储系统的选择、数据库表的schema）；</li><li>应用架构（系统的微服务划分）；</li></ol><p>从具体技术到抽象技术，再到业务，所用的词汇会越来越抽象，越来越偏向各自的领域，则在沟通和表达过程中，产生歧义的概率就越大。<strong>实践中只有时刻意识到我们面对的是业务问题，还是技术问题，或是其他的更高层次的问题，才可能在一个正确的层面上去解决。<strong>通过分析，我们知道了“技术架构”究竟代表什么，这也为我们提供了一个参照系。</strong>“业务架构”不是“技术架构”，是“技术架构”外面的东西</strong>。</p><h2 id="业务架构思维">业务架构思维</h2><h3 id="警惕“伪”分层">警惕“伪”分层</h3><p>分层其实不光是一个技术词汇，而是一个通用的思维方式，比如架构图分层，实际的代码、系统是否能按分层架构严格执行呢？如果把所有系统之间的调用关系都梳理出来把依赖关系图画出来，不一定会是这样一个分层结构，很可能是一个网状结构了。产生了伪”分层。</p><ol><li><strong>底层调用上层</strong>。比如某个基础服务调用上层的业务服务，怎么解决呢？<ol><li>要思考业务逻辑是否放错了地方? 或者业务逻辑是否需要<strong>一分为二</strong>，一部分放在业务服务，一部分放在基础服务。也就避免了底层调用上层。</li><li><strong>DIP（依赖反转）</strong>。底层定义接口，上层实现，而不是底层直接调用上层。</li></ol></li><li><strong>同层之间，服务之间各种双向调用</strong>。比如业务服务1、业务服务2、业务服务3 之间都是双向调用。这时就要思考，业务服务1、业务服务2、业务服务3 之间的职责分配是否有问题，出现了服务之间的紧耦合？是否应该有<strong>一个公共的服务</strong>，让公共服务和业务服务1、业务服务2、业务服务3 交互，而三个业务服务之间相互独立?</li><li><strong>层之间没有隔离，参数层层透传，一直穿透到最底层，导致底层系统经常变动</strong>。例如，App 一直发版本，为了实现兼容，服务器端会根据不同的版本调用不同的函数。比如客户端要支撑各式各样的业务，因此肯定有类似 businessType 用于区分不同业务，或者说区分同一个业务的不同业务场景。businessType 字段一旦透传到最底层的基础服务，在基础服务里面都能看到if busessType = XXX 这样的代码，就是典型的上层业务多样性透传到了最底层。这种情况下，虽然是严格分了层，层层调用，但“底层服务”已经不是底层服务，因为<strong>每一次业务变动都会导致从上到下跟着一起改</strong>。</li><li><strong>聚合层特别多，为了满足客户端需求，各种拼装</strong>。遇到这种情况，往往意味着<strong>业务服务层太薄，纯粹从技术角度拆分了业务。而不是从业务角度让服务成为一个完整的闭环，或者说一个领域。</strong></li></ol><p>一个优秀的分层架构应该具有的典型特征如下。</p><ol><li><strong>越底层的系统越单一、越简单、越固化；越上层的系统花样越多、越容易变化。要做到这一点，需要层与层之间有很好的隔离和抽象。</strong></li><li>做到了上面一点，则要做到<strong>层与层之间严格地遵守上层调用下层的准则</strong>。</li></ol><h3 id="边界思维">边界思维</h3><p>在所有的架构思维模式中，如果说最终只能留下一种思维模式，那就是边界思维。腾讯公司前CTO 张志东曾说过“<strong>优雅的接口，龌龊的实现</strong>”，可以说是边界思维最好的昵释。在技术领域,“封装”“面向接口的编程”等技术，也都是边界思维的体现。只要一个系统对外的接口是简洁、优雅的，即使系统内部混乱，也不会影响到外界其他系统。相当于<strong>把混乱的逻辑约束在一个小范围内，而不会扩散到所有系统</strong>。边界思维是一种通用的思维方式，从小到大来，边界思维在不同层面的均有体现。</p><ol><li>对象层面（SOLID 原则）：在面向对象的五大原则中，第一个原则S 就是<strong>单一职责原则</strong>（The Single ResponsibilityPrinciple）。通俗地讲，就是一个函数、一个类、一个模块只做一件事。不要把不同的职责杂糅在一起,这就是边界思维的一种体现。</li><li>接口层面：对于开发人员来说，做一个系统往往先想到的是如何实现。而利用边界思维，首先想到的不是如何实现，而是把系统当作一个黑盒，看系统对外提供的接口是什么。接口也就是系统的边界。接口定义了系统可以支持什么、不支持什么。所以，<strong>接口的设计往往比接口的实现更重要</strong>！站在使用者的角度来看，并不在意接口如何实现，而更在意接口的定义是否清晰，使用是否方便。具体来说，就是：接口的输入、输出参数分别是什么？哪些参数可选，哪些必选？如果输入参数很多，为什么不是分成多个接口？设计策略是什么？接口是否幂等？各种异常场景接口的返回结果都是什么?</li><li>产品层面：除了技术，产品同样需要有边界思维。对于产品，常说的一句话是:内部实现很复杂，用户界面很简单。<strong>把复杂留给自己，把简单留给用户</strong>！尤其现在的AI 产品，更是把这句话发挥到了极致。AI 算法本身很复杂，但对用户来说，使用却越来越“傻瓜化”，以前还有图形界面，现在直接对着系统说句话，它就明白了。</li><li>组织架构层面：组织的各个部门之间如果没有非常清晰的边界，就会导致<strong>该自己做的事情不做，互相推诿、踢皮球；不该自己做的事情抢着做，你争我夺</strong>。最后整个体系权责不分，做事效率低下，还容易产生各种问题。</li></ol><p>回到系统，不管用哪种分析方法和设计方法，最终必须保证每个系统有清晰的边界，各自分工清晰。<strong>无论谁要了解这个系统，他不用看这个系统是怎么实现的，只要看系统的接口，就能知道系统支持什么，不支持什么</strong>。<strong>边界思维的重点在于“约束”，是一个“负方法”的思维方式</strong>。什么意思呢? 比如要看一个开源软件的功能，<strong>要看的不是它能做什么，而是它不能做什么</strong>！“不能做什么”决定了系统的边界，或者说它的“极限”。做架构尤其如此，<strong>架构强调的不是系统能支持什么，而是系统的“约束”是什么</strong>，不管是业务约束，还是技术约束。<strong>没有“约束”，就没有架构</strong>。一个设计或系统，<strong>如果“无所不能”，则意味着“一无所能”</strong>。</p><h3 id="系统化思维">系统化思维</h3><p>与边界思维相对应的是系统化思维。哲学中有一句话:事物之间的普遍联系。通俗的说法就是:不能头痛医头，脚痛医脚。头痛的时候，可能原因不在头上，而是身体其他部位出了问题引发的头痛。</p><ol><li>比如现在有一个系统A 和系统B，应用边界思维，在两个系统之间定义了接口。但随着业务的发展，发现每次来新的需求，两个系统都要跟着一起改，之间的接口也不够用，要么增加新接口，要么为之前的接口增加新参数。原因可能是在最初设计的时候，接口定义得不合理；也可能是这两个系统的逻辑本身就耦合得很紧。应该把系统A 和系统B 重新放在一起整体考虑，然后一致对外提供统一的接口，对内，系统A 和系统B 就是一个系统的两个联系紧密的部分。这就是系统化思维的一种体现，<strong>把不同的“东西”串在一起考虑，而不是割裂后分开来看。</strong></li><li>系统化思维的另外一个体现，就是遇到事情要<strong>刨根问底</strong>。如果遇到了问题A，经过分析，是原因1 导致的;原因1 又是如何产生的，是原因2 导致的;原因2 又是如何产生的，是原因3 导致的……如此追到最后，直至事物的本质。这点在物理学中叫作“第一性原理”，在哲学上叫作“道”。无论是遇到技术问题，还是产品问题、业务问题，都可以利用这种思维方式。这个倒追的过程会让你探究到事物与事物之间的普遍联系。<ul><li>比如一个电商系统中商品库存。站在C 端来看：用户下单，要减库存；用户发生客退，要加库存；站在B 端供应商角度来看：采购，要加库存；退供，要减库存；站在内部商务和物流人员角度来看：调拨，一个仓库减库存，另一个仓库加库存。无论C 端的下单、客退，还是B 端的采购、退供，还是内部的调拨，都是很复杂的业务流程，对应的是不同的团队开发的不同系统。<strong>单独去看每一个业务的每一个系统，都没有问题，但要系统性地把这五大类业务串在一起来看，可能库存的账目是对不齐的。</strong></li><li>这就是为什么电商系统里<strong>库存往往是单独的微服务</strong>，库存不仅仅是一个数字<code>&lt;SKU,数量&gt;</code>，然后对这个数字进行加加减减，逻辑很简单。但<strong>实际问题在于库存不是一个简单的数字，而是一个复杂的数据模型，有自己单独的领域。</strong></li></ul></li></ol><h3 id="利益相关者分析">利益相关者分析</h3><p>做一个系统与做一个产品一样，<strong>首先要了解用户是谁。在架构里面称为利益相关者</strong>。为什么谈业务架构，要先谈“利益相关者”呢?</p><ol><li>利益相关者其实是从“外部”来看系统。把系统当作一个<strong>黑盒子</strong>，看为哪几类人服务。这其实也就<strong>定义了整个系统的边界，定义了整个系统做什么和不做什么</strong>。</li><li>前面说到一个词“业务”，业务具有“闭环”的特点。而<strong>利益相关者就是一个最好的看待业务的视角</strong>。</li><li><strong>每个利益相关者代表了一个视角</strong>。站在C 端用户的视角和B 端商家的视角上，对系统有不同的看法。系统很复杂，无法从一个角度全面认识，每个视角都是盲人摸象，只看到系统的一部分。</li><li>利益相关者往往也对应了一种业务划分、系统划分。<strong>根据不同的利益相关者,可以划分成不同的系统和业务</strong>。</li></ol><p>所以，当谈到系统的时候，<strong>首先要确定的是系统为哪几类人服务，同哪几个外部系统交互，也就确定了系统的边界</strong>。</p><h3 id="非功能性需求">非功能性需求</h3><p>软件有功能性需求和非功能性需求之分。其实软件的非功能性需求有很多，不同类型的软件的侧重点也有差别。互联网比较关注的有：</p><ol><li><strong>并发性</strong>。对于C 端的系统，大家首先关注的是系统能抵抗多大的流量。说通俗点，是可以承受多少人同时访问。常用的衡量指标是TPS 和QPS，平均响应时间/最大响应时间，并发数。</li><li><strong>可用性</strong>。从服务角度来说，一个服务不可用有两层意思:<ul><li>机器宕机，不能对外提供服务，直接抛错;</li><li>机器虽然没有宕机,但是超时。这涉及“性能”问题。</li></ul></li><li><strong>一致性</strong>。比如数据库的参照完整性、事务、缓存与数据库数据同步、多备份数据一致性问题。</li><li><strong>稳定性和可靠性</strong>。“稳定性”指系统没有任何未定义的行为，体现在如下几方面:<ul><li>所有的if-else 语句里面,没有不处理的分支;</li><li>所有的 API 调用，每种异常返回值都有处理;</li><li>考虑内存、磁盘的上限;</li><li>系统不会时不时冒出一个问题出来;</li><li>出了问题,有很好的日志监控,能快速修复;</li><li>系统的QPS 不会有抖动（除非业务有变化，比如大促），是一条平滑的</li><li>发布新版本,有回滚方案;</li><li>新系统上线,灰度平滑切换;·</li><li>通过压力测试;</li></ul></li><li><strong>可维护性</strong>。与可维护性密切相关的是“可理解性”,或者说“<strong>代码可读性</strong>”。体现在如下几个方面:<ul><li>系统架构设计简单，接口简洁，表数据关系清晰;</li><li>老人离职,新人接手，无须很长时间就能厘清代码逻辑;</li><li>系统功能不耦合,改一个地方不会牵动全身;</li><li>系统某些模块即使时间久远,也有人能厘清内部逻辑;</li></ul></li><li><strong>可扩展性</strong>。体现在如下几方面:<ul><li>来了一个新需求，伴随一些新功能，可以在现有系统上灵活扩展</li><li>没有地方写死，可以灵活配置;</li><li>容易变化的逻辑没有散落在各个系统里面，不需要多个地方跟着一起改。</li></ul></li><li><strong>可重用性</strong>: 开发新的需求，旧的功能模块拿过来可以直接用。</li></ol><p>通常来讲，<strong>对于C端应用，会更关注高并发和高可用，然后有的业务（比如支付）对一致性要求非常高；对于B端业务，会更关注系统的可维护性、可扩展性性</strong>，系统才能不拖业务的后腿，可以快速地支撑各种各样的复杂业务需求的开发。</p><h3 id="抽象">抽象</h3><p>抽象是人类思维认知的一个基本能力，在现实生活和各种学科中都会遇到。具体到计算机的软件架构里，就是<strong>分析和分解各种概念、实体、系统，然后又造出一些新的概念、框架的过程</strong>。</p><ul><li>计算机中的抽象<ul><li>存<strong>储的抽象: 关系型数据库,表格</strong>。现实世界中的数据各式各样，但到了计算机中，有一种东西叫关系型数据库。通俗地讲，就是一张张的表格，然后表格之间通过主外键关联起来。这其实就是一种抽象，把现实世界中花样繁多的数据形式进行规整,最终变成了一张张的表格。</li><li><strong>计算的抽象是顺序、选择、循环</strong>。再复杂的算法，逻辑计算到了计算机里面，最终都会变成顺序、选择、循环三种语句。现实的逻辑很复杂，但计算机里面的逻辑只有三种。</li><li><strong>面向对象的方法学: 父类与子类、继承</strong>。在面向对象的方法学里面，提取共性形成父类，提高代码复用性，这是抽象。</li><li><strong>面向接口的方法学</strong>。把面向对象的方法再往前推进一步，就是所谓的“面向接口的方法学”。<strong>接口是交互双方的一种协议，也是对交互细节的一种抽象</strong>。</li></ul></li><li>怎么做抽象<ul><li><strong>分解：找出差异和共性</strong>。要做抽象，首先要做的是分解。只有分解，才知道两个事物间的差异和共性。</li><li><strong>归纳：造词</strong>。找到了共性和差异，把共性的部分总结成一个新的东西，造一个新词来表达“共性”，就是归纳，也是抽象。所以抽象的过程往往也是一个“造词”的过程。</li></ul></li><li>抽象带来的问题: 抽象的好处就是找出共性、简化事物，但抽象也会造成问题<ul><li><strong>抽象造成意义模糊</strong>。越抽象的东西往往越“虚”，最后就变成“空洞的大话”，华而不实。不同人对“虚”的东西理解都不一样，大家在沟通时往往不在同一个频道中，牛头不对马嘴。</li><li><strong>抽象错误：地基不稳</strong>。没有做分解就分析，会把一个非原子性、容易变化的东西抽象出来，作为整个系统的基础。</li><li><strong>抽象造成关键特征丢失</strong>。把事物的某个重要的关键特征抽象掉了，会导致对事物的认知偏差。</li><li><strong>抽象过度</strong>。抽象是为了提供灵活性和扩展性。但如果业务在某一方面变化的可能性很小，则可能压根不需要抽象。</li></ul></li></ul><h1>技术管理</h1><h2 id="能力模型">能力模型</h2><ul><li>格局<ul><li>系统的定位是什么？它能创造哪些核心价值？</li><li>开发这个系统的背景是什么？为什么以前不做，现在要做？是因为业务发展到了一定规模？还是开发资源现在有多余，没事可干?</li><li>系统在整个组织架构中处于什么位置？与这个系统关联的其他系统目前处于什么状况？</li><li>产品经理如何看待这个系统？技术负责人/CTO 如何看得这个系统？</li><li>这个系统的需求处于比较确定清晰的状态，还是有很大的模棱两可的空间，核心点大家有没有想清楚?</li><li>这个系统所用的技术体系是比较老，还是最新的?</li><li>对于业界类似的系统，别的公司是如何做的?</li><li>在做一件事情之前，会对所做的事情有一个“全局把握”，风险如何？挑战在哪？提前都有心理准备</li><li>不同层次的人聚焦的范围不一样。如果能把自己的“范围”往外扩大一圈，这对自己做“本职工作”会很有益处。而这，就是“格局”</li></ul></li><li>技术历史<ul><li>“格局”是从空间的角度看待问题，那么“历史观”就是从时间的角度看待问题。</li><li>任何一种技术，都不是凭空想象出来的，它一定是要解决某个特定问题而产生的。</li><li>这个特定问题一定有它的历史背景：因为之前的技术在解决这个特定问题时不够好或有其他副作用，所以才发明了这个新技术。所以，看待一个技术或方法论，需要把它放到“历史长河”中去，看它在历史中处于什么位置。</li></ul></li><li>抽象能力<ul><li>“抽象能力”已经有所说明，这个词听起来很“虚”。可作为架构师，就是需要这种“务虚思维”。</li><li>抽象也是一个“层次”结构，从最底层到最上层，在不同工作阶段需要在不同的抽象层级中思考。</li><li>很多写代码的人都习惯“自底向上”的思维方式。当讨论需求的时候，他首先想到的是这个需求如何实现，而不是这个需求本身是否合理？这个需求与其他需求有何关联关系。</li><li>这种过早考虑“实现细节”的思考方式会让我们“只见树木，不见森林”，最终淹没在错综复杂的各种细节之中，因层次混乱，往往把握不住重点。</li><li>假如做一个新的系统，从“抽象”到“细节”，应该考虑:<ul><li>每个需求的合理性?</li><li>这个系统的领域模型是什么样的?</li><li>这个系统应该在旧的上面改造?还是应该另起炉灶?</li><li>这个系统可以分成几期，分期实施?</li><li>这个系统要拆分成几个子系统?·每个子系统又要拆分出多少个模块?</li><li>系统的表设计?API 接口设计?系统之间的消息传输如何实现?</li></ul></li><li>从上到下，是一个逐级细化的过程，并目进入到下一级之后，上一级可能又会退回去修改。</li></ul></li><li>深入思考的能力<ul><li>深入思考能力主要指“技术”的深度。关于“广度”，在“格局”层面已经包含。</li><li>“深度”并不是要在所有领域都很深。人一生的精力是有限的，我们不可能深入掌握所有技术领域，但至少需要对于一个领域非常精通。</li><li>拥有这种深度并不代表要胜任当前的工作必须达到这种要求，而是要养成这种“深入思考的习惯”，当我们在思考其他问题时也会带着这种“习惯”。</li><li>由于技术一直在更新换代，当面对一个新技术的时候，如果具有深入思考的能力和习惯,对新技术的理解往往也会更透彻。</li><li>同时，“深度”会让你对“技术风险”有更加清醒的认知。在做一个项目的时候，可能会前发现里面潜在的“坑”，而不是等到实施了才发现问题，被动解决。</li></ul></li><li>落地能力<ul><li>落地能力就是通常所说的“执行力”,取决于很多因素。首先,架构方案必须是能够落地的而不是只能停留在PPT 上面。对于一个技术管理者，需要跟踪从架构设计到架构落地的完整过程，在落地过程中发现问题，实时修正，才可能真正做到“理论”与“实际”的统一。</li><li>然后是项目管理的问题，需要对项目中任何可能存在的不确定因素、阻碍项目进度的因素进行把控。在这些不确定因素里面，很多是“人”的因素，而不是“技术”的因素。再复杂的系统,都是由“人”开发出来的。而人多了之后，与“人”相关的问题会自然产生:沟通不充分、组织混乱、职责不清。作为一个技术管理者，需要意识到这些问题的存在，然后在各种障碍之下找到一条路线,去达成业务和团队目标。</li></ul></li></ul><h2 id="影响力的塑造">影响力的塑造</h2><ul><li>关键时候能顶上<ul><li>某个问题困扰了团队一个星期，也没有人能搞定;</li><li>某个成员离职，他负责的模块没有人接手;</li><li>某位用户反映的问题像牛皮癣一样，总是时不时发生,无法根治;</li><li>某个需求发生工期延误，到了快上线的时候却上不了;</li></ul></li><li>打工思维和老板思维<ul><li>这个产品的价值究竟在哪?</li><li>这个产品有什么问题，如何改进?</li><li>团队的协作流程有什么问题，如何改进?</li><li>技术架构有什么问题，如何改进?</li><li>某些用户投诉一直没解决，如何处理?</li></ul></li><li>空杯心态：术业有专攻。水平再高的人，也只是在某一个领域很强换一个其他的领域，可能什么都不懂。<ul><li>任何时候，我们需要意识到自己的“无知”。只有意识到自己是有“局限的”，才可能不断去听取别人的意见，不断改进自己的工作方法,提升自己的专业能力和视野。否则就会一直待在自己的舒适区里,刚愎自用。</li></ul></li><li>持续改进：世界上从来没有能做到100 分的事情，只要想“鸡蛋挑骨头”，总可以找出要改进的地方<ul><li>所以要有“批判性思考”的习惯。不能觉得“差不多”就可以，要追求极致，其实有很多事情要做。</li></ul></li><li>建言献策<ul><li>接上面的问题，如果有“批判性思考”的能力，能看到一个组织存在的各种问题，并想出应对的解放办法。然后多和同事、领导沟通这些事情，无论对于个人成长还是组织，都是一个正向作用。</li></ul></li></ul><p>最后换位思考一下:如果我们看到公司某个同事在关键时候能顶上，做事追求极致，思考总是很全面，对业务的了解总是比其他技术人员要多，总是很虚心地接受意见，时不时地给公司提出自己的建议。是不是觉得这个人很靠谱，觉得这个人适合带团队。</p><h2 id="团队能力提升">团队能力提升</h2><ul><li>不确定性与风险把控：技术管理的首要任务是项目管理。从人的认知来讲，做任何事情，思路都是从一个“朦胧”到逐步“清晰”的过程，项目的进展也是一个从思路、到方案、到落地的细化过程。在这个过程中，不可避免地存在各种“灰度”，或者说“不确定性”。而项目管理就是要提前防范各种“不确定性”，并采取相应措施，让整个团队、项目克服重重干扰，成功到达终点。<ul><li>需求的不确定性：很可能项目在一个想法没有完全想清楚的情况下就开始了实施。遇到这种情况，作为技术负责人，需要和产品经理、相关业务方、上级领导等进行广泛的沟通，最终在这个事情上达成“共识”：到底哪些是东西清晰的，我们可以开始做,哪些还需要进一步思考和细化</li><li>技术的不确定性：必须在项目早期做尽可能多的调研和测试。对于引入的技术框架，哪些特性可以支持、哪些不能支持;对于技术选型，不同方案的优缺点都是什么。尤其是一些关键的技术细节，如果在前期不调研，等到中后期才发现某个框架无法支持或有问题,可能对整个的技术架构和项目进度造成严重影响。</li><li>人员的不确定性：不要把项目最核心的部分让一个人开发维护，导致别人无法插手。要分摊风险，在技术的架构设计层面，保证整个系统耦合性不能太高，根据团队成员的水平，每个人都可以承担一块东西。这样即便某个人离职，也有相应的人可以补上。</li><li>组织的不确定性：公司越大，业务越复杂，部门越多。随便做一个项目，都可能与好几个业务部门打交道。这些部门可能还在异地，平时只能即时通信，或者远程电话沟通。对于这种情况，在项目前期必须要做尽可能多的沟通，调研对方提供的业务能力，哪些目前有,哪些还在开发中，哪些还没有开发。在充分沟通的基础上，和对方敲定排期表，不定期地同步进度，保证对方的进度和自己在一个节奏上。</li><li>历史遗留问题：有些老项目的技术架构很清晰，文档清楚，业务清楚，还有对项目熟悉的其他同事;也有些遗留项目欠了很多技术债，之前的开发人员也走了，业务人员很多都熟悉。对于这种情况，需要对项目进行完整的梳理:从产品到技术，找各个接口人沟通，可能经过了两三个月，才对整个系统有了一个全局的把控。总之，要有“风险把控”的意识，在项目早期努力地想出各种各样的“不确定性”，未雨绸缪。</li></ul></li><li>以价值为中心的管理<ul><li>如何衡量这些项目的价值大小：有多少人使用了这个开源项目</li><li>第一个层次：系统有多少个业务模块，功能多么强大，采用了多少新技术,采用了某个先进的算法</li><li>第二个层次：在所做的所有工作中，最核心的是采取了哪种措施?最终可能会抽象出一到两个。再追问一下,这一到两个大的技术改进有什么价值，通常都会追问到软件的各个非功能性需求：<ul><li>可重用性。做了某个Jar 包、组件、服务，别人不再需要重复造轮子。</li><li>可扩展性。来了一个新的需求，只需要配置一下或做很简单的代码开发即可实现，不需要改动很多系统。</li><li>可维护性。整个系统解耦做得很好，代码也很整洁。叠加功能或找人接手都比较容易。</li><li>高性能。用户体验很好，所有请求都在100ms 内返回。</li><li>高并发。能支持千万到亿级的用户并发访问。</li><li>稳定性。系统时不时出问题、宕机，已经把这些问题都解决了，还增加了监控，出问题会立即报警。</li><li>高可靠。做了灾备方案，即使某个机器宕机，系统也不受影响。</li><li>一致性。做到了强一致性,极大地提高了业务体验。</li></ul></li><li>第三个层次：所做的系统为公司带来了什么业务价值<ul><li>极大提升了用户体验?因此促进了用户增长?提高了用户的活跃度?</li><li>为公司增加了收入?</li><li>降低了公司的研发成本?</li><li>提升了公司的运维效率?</li><li>为公司开辟了一个新的市场?</li></ul></li><li>第四个层次：站在公司的角度来看，公司是一个在市场经济中追求利润最大化的组织。从这个角度来看，技术也好，产品也好，运营销售也好，最终目的都是要增加公司的利润，即使短期不盈利，长期也是要盈利的。而增加利润，要么“开源”，要么“节流”。所以做的任何东西的价值，基本都会被归结到从这个层次去评判。当然，还有一类是“战略性投入”的项目，虽然它本身不直接挣钱或挣钱很少，但是为了支撑其他盈利的核心业务而能发挥重要作用。</li><li>在这四个层次之外，当然还可能会涉及研究性质的技术、技术的普惠性、技术对整个社会的促进作用等,这已经超出了某个业务的技术范畴。目前国内的互联网公司这个方面比较少，国外的Google 等做的比较好。</li><li>以“价值”为中心的管理，会让人避免陷入“无效忙碌”的状态: 整个团队天天忙得不亦乐乎，做各种功能，解决各种问题，但回过头来想想，到底有多少东西是有“价值”的?</li></ul></li><li>团队培养：有些技术团队的负责人水平很高，解决问题迅速，但团队成员技术平平，遇到问题都需要负责人亲自上阵解决、累个半死，团队整体非常低效，成员得不到成长，这是典型的缺乏团队培养的思维和意识的案例。<ul><li>技术能力：要培养人，首先得“识人”。只有清楚地知道团队成员的技术能力层次，才能针对不同层次的人设置不同的培训内容。<ul><li>初级：全部是“面条式”代码，超长类、超长函数，各种晦涩难懂的if-else。写出来的代码时常出问题，且长时间定位不到问题,对写的功能无法完全掌控<ul><li>需要时常做代码评审，需要读《数据结构与算法》《代码整洁之道》之类的书籍，培养代码思维</li></ul></li><li>中级：能熟练地完成各种功能开发，问题少，出现问题能快速解决，代码模块化程度比较高，系统稳定，有业务运维的意识功底深厚，能解决各种开发中的“疑难杂症”<ul><li>要培养系统设计能力</li></ul></li><li>高级：熟悉业务,能根据业务设计出合理的技术方案<ul><li>虽然有系统设计能力，但不够深入,缺乏完善的方法论</li></ul></li><li>资深：对技术和业务都有深刻的思考，能对大规模、跨团队的复杂系统进行很好的架构设计。<ul><li>就解决问题来讲，技术已不是问题，需要发展的是业务能力，成为某个领域的技术领军人物</li></ul></li><li>对于一个技术团队来说，绝大多数都处于前三个层次，在技术上还有很多的上升空间。在这种情况下，需要在完成业务需求的同时，让团队成员的技术水平不断提高。可以不定期地举行技术培训、技术分享，在整个团队中形成一个较好的技术的文化氛围,形成一个人带人、人帮人的协作氛围。</li></ul></li><li>独立意识：独立非常的关键，无论对于任何级别的人，都需要独立。所谓独立，就是能掌控事情。交给一个功能开发，能独自把功能做得很好;交给一个模块，能把模块快速开发完，运行稳定;交给一个系统，能把系统从设计，到编码、上线，完整地接住;交给一个项目，能带领一个小团队从需求开始一直到上线完成整个项目，不需要上级操心,按时按质地交付。做到这一步，意味着团队的每个人在自己所处的层次都是可“托付”的，否则就会频繁出现“补位”。组长干组员的活，经理干组长的活，总监干经理的活，副总裁干总监的活……层层错位,最后整个组织缺乏“顶层设计”。</li><li>思维能力：当团队成员遇到问题时，很多人的解决办法是，告诉他问题的解决办法，然后让他把这个问题解决好。如果只做到这一步，则没有起到培养的作用。对于一个团队来说，解决项目中遇到的问题只达到了及格分数。更需要在解决项目问题之上升华一层,也就是培养思维能力。<ul><li>思维能力的培养只能靠平时，在面对一个个的问题时，通过一次次的讨论来言传身教。面对问题要刨根问底，深挖问题的背景，掌握解决问题的办法背后的技术原理，研究是否有更好的解决办法……如此一来，思维能力慢慢就会提高。</li><li>每个人在职场上工作，都是要养家糊口的。站在团队成员的角度去想下:如果跟着你干，能力没什么提升，薪资待遇也没什么增长，公司业务前景也看不到，为什么会跟着干呢?</li><li>所以，作为一个管理者，要多去赋能他人、成就他人，做项目只是一个过程，最终是要打造一个极具战斗力的团队。有了这样的团队，可以在公司发展的不同阶段自如地切换到不同的业务。</li></ul></li></ul></li></ul><h1>总结梳理</h1><p>**业务驱动技术：**需求来自何处？真需求还是伪需求？产品手段vs技术手段？需求的优先级？什么是业务：闭环</p><p>明明是业务问题，却想用技术手段解决；明明是技术问题，由于技术无法实现，反过来将就业务；可能既不是业务问题，也不是技术问题,而是组织架构问题，是部门利益问题，是公司的盈利模式问题，实践中只有时刻意识到我们面对的是业务问题，还是技术问题，或是其他的更高层次的问题，才可能在一个正确的层面上去解决，<strong>“业务架构”不是“技术架构”，是“技术架构”外面的东西</strong></p><h2 id="业务架构">业务架构</h2><ul><li><p><strong>业务架构既关乎组织架构，也关乎技术架构</strong></p><ul><li><p>**“康威定律”：一个组织产生的系统设计等同于组织之内、组织之间的沟通结构。**这也意味着：如果组织架构不合理，则会约束业务架构，也约束技术架构的发展。而组织架构的调整涉及部门利益的重新分配，所以往往也只能由高层来推动</p></li><li><p>技术的思考会反过来影响业务，重新思考团队的组织方式，团队的组织方式又会变,接下来又会影响业务的发展方式</p></li></ul></li><li><p><strong>警惕“伪”分层：底层调用上层；同层之间，服务之间各种双向调用；层之间没有隔离，参数层层透传，一直穿透到最底层，导致底层系统经常变动；聚合层特别多，为了满足客户端需求，各种拼装</strong>（业务服务层太薄，纯粹从技术角度拆分了业务。而不是从业务角度让服务成为一个完整的闭环，或者说一个领域）</p><ul><li><p>越底层的系统越单一、越简单、越固化；越上层的系统花样越多、越容易变化。要做到这一点，需要<strong>层与层之间有很好的隔离和抽象。</strong></p></li><li><p><strong>层与层之间严格地遵守上层调用下层的准则</strong></p></li></ul></li><li><p><strong>边界思维：优雅的接口，龌龊的实现；把混乱的逻辑约束在一个小范围内，而不会扩散到所有系统</strong></p><ul><li><p>**单一职责原则；接口的设计往往比接口的实现更重要；把复杂留给自己，把简单留给用户；**组织的各个部门之间边界清晰</p></li><li><p><strong>边界思维的重点在于“约束”，是一个“负方法”的思维方式：要看的不是它能做什么，而是它不能做什么</strong></p><ul><li><p><strong>架构强调的不是系统能支持什么，而是系统的“约束”是什么</strong></p></li><li><p><strong>没有“约束”，就没有架构；如果“无所不能”，则意味着“一无所能”</strong></p></li></ul></li></ul></li><li><p><strong>系统化思维</strong></p><ul><li><p><strong>把不同的“东西”串在一起考虑，而不是割裂后分开来看</strong></p></li><li><p>**刨根问底：**单独去看每一个业务的每一个系统，都没有问题，但要系统性地把这五大类业务串在一起来看，可能库存的账目是对不齐的。<strong>所以库存往往是单独的微服务，实际问题在于库存不是一个简单的数字，而是一个复杂的数据模型，有自己单独的领域</strong></p></li></ul></li><li><p>**利益相关者分析：**首先要确定的是系统为哪几类人服务，同哪几个外部系统交互，也就确定了系统的边界</p><ul><li><p>把系统当作一个<strong>黑盒子</strong>，看为哪几类人服务。也就<strong>定义了整个系统的边界，定义了整个系统做什么和不做什么</strong>。</p></li><li><p>业务具有“闭环”的特点。<strong>利益相关者就是一个最好的看待业务的视角</strong>。</p></li><li><p><strong>每个利益相关者代表了一个视角</strong></p></li><li><p><strong>根据不同的利益相关者, 可以划分成不同的系统和业务</strong>。</p></li></ul></li><li><p><strong>非功能性需求：并发性；可用性；一致性；稳定性和可靠性；可维护性；可扩展性；可重用性；</strong></p><ul><li><p>对于C端应用，会更关注高并发和高可用，然后有的业务（比如支付）对一致性要求非常高；</p></li><li><p>对于B端业务，会更关注系统的可维护性、可扩展性性</p></li></ul></li><li><p>**抽象：**分析和分解各种概念、实体、系统，然后又造出一些新的概念、框架的过程</p><ul><li><p>计算机中的抽象：存储的抽象；计算的抽象是顺序、选择、循环；面向对象的方法学；面向接口的方法学；</p></li><li><p>怎么做抽象：<strong>分解（找出差异和共性）；归纳（造词）；</strong></p></li><li><p>抽象带来的问题：抽象的好处就是找出共性、简化事物</p><ul><li>抽象造成意义模糊；抽象错误；抽象造成关键特征丢失；抽象过度</li></ul></li></ul></li></ul><h2 id="技术管理">技术管理</h2><ul><li><p>**能力模型：**格局；技术历史 ；抽象能力（从上到下）；深入思考能力；落地能力（执行力&amp;项目管理）；</p></li><li><p>**影响力的塑造：**关键时候能顶上；老板思维；空杯心态；持续改进；建言献策；</p></li><li><p><strong>团队能力提升</strong></p><ul><li><p>不确定性与风险把控：需求；技术；人员；组织；历史遗留问题；</p></li><li><p>以价值为中心的管理：技术；非功能性需求；业务价值；公司角度；“战略性投入”项目；研究性普惠性技术；避免陷入“无效忙碌”的状态</p></li><li><p>团队培养</p><ul><li><p>技术能力（识人与培养）：初级、中级、高级、资深</p></li><li><p>独立意识：每个人在自己所处的层次都是可“托付”的</p></li><li><p>思维能力</p><ul><li><p>通过一次次的讨论来言传身教</p></li><li><p>每个人在职场上工作，都是要养家糊口的，多去赋能他人、成就他人</p></li></ul></li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;作为一个架构师仅仅掌握这些“硬”知识、“硬”技能还不够，“&lt;strong&gt;业务驱动技术&lt;/strong&gt;”，但是业务领域更多是很多“软”性的、抽象的技能。一旦一个东西呈“软”性的，大家虽然知道这类东西存在，但又难于表述。&lt;/p&gt;
&lt;h1&gt;业务架构&lt;/h1&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="电商系统" scheme="https://jxch.github.io/categories/%E7%94%B5%E5%95%86%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="架构师" scheme="https://jxch.github.io/tags/%E6%9E%B6%E6%9E%84%E5%B8%88/"/>
    
  </entry>
  
</feed>
