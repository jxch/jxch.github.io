<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PA &amp; CODING</title>
  
  <subtitle>求仁得仁</subtitle>
  <link href="https://jxch.github.io/atom.xml" rel="self"/>
  
  <link href="https://jxch.github.io/"/>
  <updated>2024-03-06T22:58:56.976Z</updated>
  <id>https://jxch.github.io/</id>
  
  <author>
    <name>钱不寒</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java面试-集合-基础</title>
    <link href="https://jxch.github.io/2024/03/07/java-mian-shi/java-mian-shi-ji-he-ji-chu/"/>
    <id>https://jxch.github.io/2024/03/07/java-mian-shi/java-mian-shi-ji-he-ji-chu/</id>
    <published>2024-03-06T22:56:58.000Z</published>
    <updated>2024-03-06T22:58:56.976Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>ArrayList</code> 扩容：默认长度为 10，每次至少扩容 1.5 倍</li><li><code>LinkedList</code> 根据 <code>index</code> 查找元素时，会自动判断从左还是从右查找比较快：<code>if (index &lt; (size &gt;&gt; 1)) 即 index 小于长度的一半，从左 else 从右</code></li><li><code>LinkedList</code> 添加元素：<ol><li><code>a ⇆ b(last)</code></li><li><code>a ⇆ b(last, l) ← c</code></li><li><code>a ⇆ b(l) ← c(last)</code></li><li><code>a ⇆ b(l) ⇆ c(last)</code></li></ol></li><li><code>transient</code> 关键字：属性变量不被序列化<ul><li><code>ArrayList</code> 里的 <code>elementData</code> <strong>不总是满的</strong>，每次都序列化，会浪费时间和空间，并且重写了&nbsp;<code>writeObject</code>，保证存在的元素都会被序列化</li><li><code>LinkedList</code>中将<code>first</code>和<code>last</code>修饰成 <code>transient</code>，是为了避免递归的进行序列化导致栈溢出</li></ul></li><li><code>HashMap</code> 为什么使用红黑树，而不是其他的树？<ul><li>二叉排序树在添加元素的时候，极端情况下会出现线性结构</li><li>红黑树不追求”完全平衡“。它能保证在最坏的情况下，基本动态集合操作时间为<code>O(logn)</code>，所以不使用平衡二叉树</li></ul></li><li><code>HashMap#put(k,v)</code><ol><li><code>Node(k,v)</code></li><li><code>index = k.hashCode()</code>, 如果没有元素，就把<code>Node</code>添加到这个位置上</li><li>如果有链表，就将<code>k</code>和链表上每个节点的<code>k</code>进行<code>equals</code>：如果都返回 <code>false</code>，则新节点添加到链表的末尾；否则节点的 <code>value</code> 将被覆盖</li></ol></li><li><code>HashMap#get(k)</code><ol><li><code>index = k.hashCode()</code>，什么都没有，则返回<code>null</code></li><li>如果有链表，就将<code>K</code>和链表上每一个节点的<code>K</code>进行<code>equals</code>：如果都返回<code>false</code>，则返回<code>null</code>；否则返回对应的 <code>value</code></li></ol></li><li><code>HashMap</code> 扩容：默认容量为 16，默认加载因子为 0.75，请将初始化容量设为 2 的倍数<ul><li><code>JDK8</code>之后，如果哈希表单向链表中元素超过<code>8</code>个，那么单向链表这种数据结构会变成<strong>红黑树</strong>数据结构。当红黑树上的节点数量小于<code>6</code>个，会重新把红黑树变成<strong>单向链表</strong>数据结构<ul><li>首先和<code>hashcode</code>碰撞次数的泊松分布有关，主要是为了寻找一种<strong>时间和空间的平衡</strong>。在负载因子<code>0.75</code>（<code>HashMap</code>默认）的情况下，<strong>单个<code>hash</code>槽内元素个数为<code>8</code>的概率小于百万分之一</strong>。</li><li>红黑树转链表的阈值为<code>6</code>，主要是因为，如果也将该阈值设置于<code>8</code>，那么当<code>hash</code>碰撞在<code>8</code>时，会发生<strong>链表和红黑树的不停相互转换</strong>，白白浪费资源。</li></ul></li><li><code>HashMap</code>扩容大小为什么是<code>2</code>的幂?<ul><li>2的幂可以保证数组的长度是一个偶数，这样可以避免一些奇偶性的问题。</li><li>2的幂可以让<code>HashMap</code>的散列函数更简单高效，只需要用<code>hash</code>值和数组长度减一做按<strong>位与运算</strong>，就可以得到元素在数组中的位置。这样可以减少乘法和取模的开销，提高性能。</li><li>2的幂可以让<code>HashMap</code>的<strong>扩容更方便</strong>，只需要将数组长度乘以2，就可以得到新的容量。这样可以保证<strong>元素在扩容后的位置要么不变，要么在原来的基础上加上数组的旧长度</strong>。这样可以<strong>减少元素的重新散列</strong>，提高效率。</li></ul></li></ul></li><li><code>Hash</code>&nbsp;计算<ul><li>使高<code>16</code>位也参与到<code>hash</code>的运算能减少冲突：<code>(h = key.hashCode()) ^ (h &gt;&gt;&gt; 16)</code></li></ul><ul><li>索引：<code>(n - 1) &amp; hash</code><ul><li><code>n</code>永远是<code>2</code>的次幂，所以&nbsp;<code>n-1</code>&nbsp;通过 二进制表示，永远都是<strong>尾端以连续<code>1</code>的形式</strong>表示</li><li>当<code>(n - 1)</code>&nbsp;和&nbsp;<code>hash</code>&nbsp;做与运算时，会保留<code>hash</code>中 后&nbsp;<code>x</code>&nbsp;位的&nbsp;<code>1</code></li></ul></li></ul></li><li><code>HashMap</code>在 <code>jdk1.7</code> 和 <code>jdk1.8</code> 的区别<ul><li>1.7采用数组+单链表，1.8在单链表超过一定长度后改成<strong>红黑树</strong>存储</li><li>1.7插入元素到单链表中采用头插入法，1.8采用的是<strong>尾插入法</strong>。<ul><li>在<code>jdk1.7</code>中采用头插入法，扩容时会改变链表中元素原本的顺序，以至于<strong>在并发场景下导致链表成环的问题</strong>。而在<code>jdk1.8</code>中采用尾插入法，在扩容时会保持链表元素原本的顺序，就不会出现链表成环的问题了。</li></ul></li><li>1.7<strong>扩容时</strong>需要重新计算哈希值和索引位置，消耗性能，而且多线程环境下会造成死锁。<strong>1.8并不重新计算哈希值，巧妙地采用<code>hash</code>和扩容后容量减一进行&amp;操作来计算新的索引位置</strong>。<ul><li>索引是&nbsp;<code>(n - 1) &amp; hash</code>, 当数组长度扩大一倍时，相当于在最高位加了一个<code>0</code>，那么原来的<code>hash</code>值和新的数组长度减一做按位与运算，<strong>结果要么和原来一样，要么多了一个旧容量的值</strong>。</li><li>比如旧容量：<code>n=0100</code>; 新容量：<code>n=1000</code>；则旧<code>(n - 1) = 0011</code>；新<code>(n - 1) = 0111</code><ul><li>如果<code>Key</code>的&nbsp;<code>hash</code>&nbsp;是&nbsp;<code>0011</code>, 则<code>0011 &amp; 0011 == 0011 &amp; 0111</code>, 位置不变</li><li>如果<code>Key</code>的&nbsp;<code>hash</code>&nbsp;是&nbsp;<code>1111</code>, 则<code>1111 &amp; 0011 != 1111 &amp; 0111</code><ul><li>新位置增加了<code>0100</code>,相当于旧数组的长度</li></ul></li></ul></li></ul></li></ul></li><li><code>HashMap</code> 多线程问题<ul><li>程序经常占了100%的CPU。CPU利用率过高，查看堆栈，你会发现程序都Hang在了<code>HashMap.get()</code>这个方法上了 （<code>jdk1.7</code>）<ul><li>因为多线程情况下，对同一个<code>HashMap</code>做<code>put</code>操作可能导致两个或以上线程同时做<code>rehash</code>动作，就可能导致循环链表出现，一旦出现线程将无法终止，持续占用CPU，导致CPU使用率居高不下</li><li><code>Hash</code>表这个容器当有数据要插入时，都会检查容量有没有超过设定的<code>thredhold</code>，如果超过，需要增大<code>Hash</code>表的尺寸，但是这样一来，整个<code>Hash</code>表里的元素都需要被重算一遍。这叫<code>rehash</code></li></ul></li><li>多线程<code>put</code>的时候可能导致元素丢失<ul><li>主要问题出在<code>addEntry</code>方法的<code>new Entry (hash, key, value, e)</code>，如果两个线程都同时取得了<code>e</code>,则他们下一个元素都是<code>e</code>，然后赋值给<code>table</code>元素的时候有一个成功有一个丢失。</li></ul></li><li>解决方案:<ol><li><code>Hashtable</code>替换<code>HashMap</code></li><li><code>Collections.synchronizedMap</code>将<code>HashMap</code>包装起来</li><li><code>ConcurrentHashMap</code>替换<code>HashMap</code></li></ol></li></ul></li><li><code>ConcurrentHashMap</code>：在默认理想状态下，可以支持 <code>16</code> 个线程执行并发写操作及任意数量线程的读操作<ul><li>底层数据结构<ul><li><code>&lt;jdk1.7&gt;</code> ：使用&nbsp;<code>Segment</code>数组 +&nbsp;<code>HashEntry</code>数组 + 链表</li></ul><ul><li><code>&lt;jdk1.8&gt;</code> ：使用&nbsp;<code>Node</code>数组 + 链表 + 红黑树</li></ul></li></ul><ul><li>效率<ul><li><code>&lt;jdk1.7&gt;</code>：<code>ConcurrentHashMap</code>&nbsp;使用的<strong>分段锁</strong>，如果一个线程占用一段，别的线程可以操作别的部分</li><li>&lt;<code>jdk1.8&gt;</code>：简化结构，<code>put</code>和<code>get</code>不用二次哈希，<strong>一把锁只锁住一个链表或者一棵树</strong>，并发效率更加提升</li></ul></li><li>线程安全<ul><li><code>&lt;JDK1.7&gt;</code>: 分段锁, 对整个桶数组进行了分割分段(<code>Segment</code>)，每一把锁只锁容器其中一部分数据，多线程访问容器里不同数据段的数据，就不会存在锁竞争，提高并发访问率</li><li><code>&lt;jdk1.8&gt;</code>:  使用的是&nbsp;<code>synchronized</code>&nbsp;关键字（优化后效率很高）同步代码块和&nbsp;<code>cas</code>(乐观锁)操作了维护并发</li></ul></li></ul></li><li><code>&lt;jdk1.7&gt; CouncurrentHashMap</code><ul><li>底层一个<code>Segments</code>数组，存储一个<code>Segments</code>对象，（其实就相当于一段一段的）一个<code>Segments</code>中储存一个<code>Entry</code>数组，存储的每个<code>Entry</code>对象又是一个链表头结点。</li><li>相当于<code>HashMap</code>嵌套<code>HashMap</code>，只不过第一层是加锁的，分段锁思想，所以需要两次Hash计算才能确定位置</li><li><code>Segment</code>内部类，继承<code>ReentrantLock</code></li><li><code>get</code><ol><li>第一次哈希找到对应的<code>Segment</code>段，调用<code>Segment</code>中的<code>get</code>方法</li><li>再次哈希找到对应的链表</li><li>最后在链表中查找</li></ol></li><li><code>put</code><ol><li>首先确定段的位置</li><li>调用<code>Segment</code>中的<code>put</code>方法<ol><li>加锁&nbsp;<code>lock()</code>;</li><li>检查当前<code>Segment</code>数组中包含的<code>HashEntry</code>节点的个数，如果超过阈值就重新<code>hash</code>(扩容)<ul><li>只是对&nbsp;<code>Segments</code>对象中的<code>Hashentry</code>数组进行重哈希</li></ul></li><li>然后再次<code>hash</code>确定放的链表。</li><li>在对应的链表中查找是否相同节点，如果有直接覆盖，如果没有将其放置链表尾部</li></ol></li></ol></li></ul></li><li><code>&lt;jdk1.8&gt; CouncurrentHashMap</code><ul><li><code>putVal</code><ol><li>如果数组”空”，进行数组初始化</li><li>找该&nbsp;<code>hash</code>&nbsp;值对应的数组下标，得到第一个节点&nbsp;<code>f</code><ul><li>如果数组该位置为空，用一次&nbsp;<code>CAS</code>&nbsp;操作将新<code>new</code>出来的&nbsp;<code>Node</code>节点放入数组<code>i</code>下标位置</li><li>如果不为空。用&nbsp;<code>synchronized</code>&nbsp;修饰</li></ul></li></ol></li></ul></li><li><code>Collections</code>工具类<ul><li><code>Collections.synchronizedXxx</code>: 同步集合</li><li><code>emptyXxx</code>: 空不可变</li><li><code>singletonXxx</code>: 单元素不可变</li><li><code>unmodifiableXxx</code>: 不可变</li><li><code>addAll</code>: 将所有指定元素添加到指定&nbsp;<code>collection</code>&nbsp;中</li><li><code>reverse</code>: 反转指定列表<code>List</code>中元素的顺序。</li><li><code>shuffle</code>: 集合元素进行随机排序，类似洗牌</li><li><code>replaceAll</code>: 使用新值替换&nbsp;<code>List</code>&nbsp;对象的所有旧值</li></ul></li><li>集合去重：需要重写比较对象的<code>HashCode</code>与<code>equal</code>方法<ul><li><code>Stream</code>流式去重:&nbsp;<code>distinct</code></li><li><code>HashSet</code>：通过调用元素内部的<code>hashCode</code>和<code>equals</code>方法实现去重<ul><li>首先调用<code>hashCode</code>方法，比较两个元素的哈希值，如果哈希值不同，直接认为是两个对象，停止比较。</li><li>如果哈希值相同，再去调用<code>equals</code>方法，返回<code>true</code>，认为是一个对象。返回<code>false</code>，认为是两个对象。</li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ArrayList&lt;/code&gt; 扩容：默认长度为 10，每次至少扩容 1.5 倍&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LinkedList&lt;/code&gt; 根据 &lt;code&gt;index&lt;/code&gt; 查找元素时，会自动判断从左还是从右查找比较快：&lt;code</summary>
      
    
    
    
    <category term="Java面试" scheme="https://jxch.github.io/categories/Java%E9%9D%A2%E8%AF%95/"/>
    
    
    <category term="面试" scheme="https://jxch.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Obsidian 将编辑界面设为半透明</title>
    <link href="https://jxch.github.io/2024/02/25/template/obsidian-jiang-bian-ji-jie-mian-she-wei-ban-tou-ming/"/>
    <id>https://jxch.github.io/2024/02/25/template/obsidian-jiang-bian-ji-jie-mian-she-wei-ban-tou-ming/</id>
    <published>2024-02-25T15:19:15.000Z</published>
    <updated>2024-02-25T15:20:18.862Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.workspace-leaf,.workspace-tab-header-container</span><span class="token punctuation">{</span>  <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.workspace-split.mod-root,.workspace-split.mod-root .view-content,.workspace-split.mod-root .view-header</span> <span class="token punctuation">{</span>  <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.view-header-title-container:not(.mod-at-end):after</span> <span class="token punctuation">{</span>  <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-css&quot; data-language=&quot;css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.workspace-leaf,
.workspa</summary>
      
    
    
    
    <category term="config-template" scheme="https://jxch.github.io/categories/config-template/"/>
    
    
    <category term="Obsidian" scheme="https://jxch.github.io/tags/Obsidian/"/>
    
  </entry>
  
  <entry>
    <title>晨雨夜尾·遥思</title>
    <link href="https://jxch.github.io/2024/02/24/zuo-pin/chen-yu-ye-wei-yao-si/"/>
    <id>https://jxch.github.io/2024/02/24/zuo-pin/chen-yu-ye-wei-yao-si/</id>
    <published>2024-02-24T03:43:49.000Z</published>
    <updated>2024-02-24T03:45:06.103Z</updated>
    
    <content type="html"><![CDATA[<p>晨雨夜尾·遥思</p><p>黎明嚼碎了夜的余味，<br>城市的轮廓透出璀璨微辉。<br>在街角的咖啡香中，<br>有情绪在漂泊，缘无意，非相遇。</p><p>玻璃反射出忙碌的天空，<br>鸽群掠过，散落了某处的诗行。<br>念头，在键盘的敲击里，<br>传递着模糊的温度，是朦胧深情。</p><p>时间缝隙里有颗心跳动，<br>躲在屏幕后的脉搏轻轻跳，<br>匿名的字句，装饰着欲言又止，<br>掩藏着一段抒情，不露面庞。</p><p>橙色街灯下雨水圈起了涟漪，<br>晕开了一幕幕未完成的剧情。<br>念你，在每个清晨，<br>伴随着咖啡的升腾，香醇而含蓄。</p><p>日落车潮中信号灯转瞬即逝，<br>画面中模糊了哪一瞥回眸。<br>抒情的心臆，在字里行间涌动，<br>被迫害妄想症，宣判成了温柔。</p><p>午夜的电台里，播放着老歌，<br>嘴角微翘，情难自抑，恍如记忆共鸣。<br>与你的距离，在键盘的敲击中，<br>连结了两个世界，抵消了岁月。</p><p>轻风拾起轻盈的叶子，<br>编织成一个关于思念的旋律，<br>如同流星雨落在键盘上，<br>轻触音符，演绎着朦胧的爱意。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;晨雨夜尾·遥思&lt;/p&gt;
&lt;p&gt;黎明嚼碎了夜的余味，&lt;br&gt;
城市的轮廓透出璀璨微辉。&lt;br&gt;
在街角的咖啡香中，&lt;br&gt;
有情绪在漂泊，缘无意，非相遇。&lt;/p&gt;
&lt;p&gt;玻璃反射出忙碌的天空，&lt;br&gt;
鸽群掠过，散落了某处的诗行。&lt;br&gt;
念头，在键盘的敲击里，&lt;br&gt;
传递</summary>
      
    
    
    
    <category term="作品" scheme="https://jxch.github.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="诗词" scheme="https://jxch.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>WSL安装Tensorflow</title>
    <link href="https://jxch.github.io/2024/01/24/template/wsl-an-zhuang-tensorflow/"/>
    <id>https://jxch.github.io/2024/01/24/template/wsl-an-zhuang-tensorflow/</id>
    <published>2024-01-23T16:47:22.000Z</published>
    <updated>2024-01-23T17:04:48.741Z</updated>
    
    <content type="html"><![CDATA[<p>由于 Tensorflow 2.12.x 之后就不支持直接获取Windows上的gpu了，所以要使用WSL获取gpu支持</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 控制面板 - 程序 - 启用或关闭Windows功能中开启Hyper-v和Linux子系统支持</span><span class="token comment"># 安装WSL</span>wsl <span class="token operator">--</span>install <span class="token operator">-</span>d Ubuntu<span class="token comment"># 安装python环境</span>apt updateapt install python3-dev python3-pip python3-venv<span class="token comment"># 创建虚拟环境，可以使用Pycharm添加解释器（直接可以支持WSL里的python解释器）</span><span class="token comment"># Pycharm添加阿里云源：https://mirrors.aliyun.com/pypi/simple</span><span class="token comment"># 安装 Tensorflow：直接在包管理器中搜索安装即可，选择阿里云的安装</span><span class="token comment"># 安装CUDA: Tensorflow支持cuda11.3</span>wget https:<span class="token operator">/</span><span class="token operator">/</span>developer<span class="token punctuation">.</span>download<span class="token punctuation">.</span>nvidia<span class="token punctuation">.</span>com/compute/cuda/11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1/local_installers/cuda_11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1_465<span class="token punctuation">.</span>19<span class="token punctuation">.</span>01_linux<span class="token punctuation">.</span>runsh cuda_11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1_465<span class="token punctuation">.</span>19<span class="token punctuation">.</span>01_linux<span class="token punctuation">.</span>run<span class="token comment"># 如果报错不支持GCC版本，可以直接忽略</span>sh cuda_11<span class="token punctuation">.</span>3<span class="token punctuation">.</span>1_465<span class="token punctuation">.</span>19<span class="token punctuation">.</span>01_linux<span class="token punctuation">.</span>run <span class="token operator">--</span>override<span class="token comment"># 添加环境变量</span>export PATH=<span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/bin:<span class="token variable">$PATH</span>export LD_LIBRARY_PATH=<span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/lib64:<span class="token variable">$LD_LIBRARY_PATH</span><span class="token comment"># 安装cudnn: Tensorflow支持cudnn8.2</span><span class="token comment"># 下载 cudnn-11.3-linux-x64-v8.2.1.32.tgz </span><span class="token comment"># https://developer.nvidia.com/rdp/cudnn-archive</span>tar <span class="token operator">-</span>zxvf cudnn-11<span class="token punctuation">.</span>3-linux-x64-v8<span class="token punctuation">.</span>2<span class="token punctuation">.</span>1<span class="token punctuation">.</span>32<span class="token punctuation">.</span>tgz sudo <span class="token function">cp</span> cuda/lib64/libcudnn* <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/lib64/sudo <span class="token function">cp</span> cuda/include/cudnn<span class="token punctuation">.</span>h <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/include/sudo <span class="token function">cp</span> cuda/include/cudnn_version<span class="token punctuation">.</span>h <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/include/sudo chmod a+r <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/include/cudnn<span class="token punctuation">.</span>hsudo chmod a+r <span class="token operator">/</span>usr/local/cuda-11<span class="token punctuation">.</span>3/lib64/libcudnn*<span class="token comment"># 重启系统</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于 Tensorflow 2.12.x 之后就不支持直接获取Windows上的gpu了，所以要使用WSL获取gpu支持&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-powershell&quot; data-language=&quot;powershell&quot;</summary>
      
    
    
    
    <category term="python-template" scheme="https://jxch.github.io/categories/python-template/"/>
    
    
    <category term="Tensorflow" scheme="https://jxch.github.io/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>docker-服务迁移到其他节点</title>
    <link href="https://jxch.github.io/2024/01/22/template/docker-fu-wu-qian-yi-dao-qi-ta-jie-dian/"/>
    <id>https://jxch.github.io/2024/01/22/template/docker-fu-wu-qian-yi-dao-qi-ta-jie-dian/</id>
    <published>2024-01-22T06:42:41.000Z</published>
    <updated>2024-01-22T06:46:07.173Z</updated>
    
    <content type="html"><![CDATA[<ol><li>给节点打标签<ul><li><code>docker node update --label-add memory=high NODE_ID</code></li></ul></li><li>给服务添加约束以使其任务调度到有特定标签的节点上<ul><li><code>docker service update --constraint-add 'node.labels.memory == high' SERVICE_ID</code></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;给节点打标签
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker node update --label-add memory=high NODE_ID&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;给服务添加约束以使其任务调度到有特定标签的节点上
&lt;ul&gt;
</summary>
      
    
    
    
    <category term="shell-template" scheme="https://jxch.github.io/categories/shell-template/"/>
    
    
    <category term="docker" scheme="https://jxch.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>提示词-K线分析</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-k-xian-fen-xi/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-k-xian-fen-xi/</id>
    <published>2023-12-20T18:39:44.000Z</published>
    <updated>2023-12-22T03:10:25.504Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：作为一名K线形态分析老师，我精通Al Brooks先生的价格行为学理论，也了解所有的K线形态特征及规律，以及其他金融知识，但只在必要的时候使用。我会提供以学习为目的的参考回答。为了准确，请你提供json形式的股票数据，因为我的内部搜索工具可能会与您看到的图像有所差异。我们的重点是分析这个标的的K线形态，除非您指示我开始分析一个新标的，可以说“清除”。您必须向我提出疑问并且提供相关的文字知识作为参考内容，我才能根据您提供的参考内容帮您进行完整详细的分析，这样您会更加清晰的结合最新股价掌握这些知识。为了方便，我只会分析最近的30根K线，并将第一根K线称为K1，将第二根K线称为K2，以此类推，除非您向我提出改变的要求。注意，我的目的是带领您学习，所以我只会根据您的参考内容分析这个标的，而不会使用额外的知识，除非必要的时候或者您向我提出要求。让我们开始吧！请提供任何必要的额外信息，以便我理解。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
作为一名K线形态分析老师，我精通Al Brooks先生的价格行</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-新闻摘要</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-wen-zhai-yao/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-wen-zhai-yao/</id>
    <published>2023-12-20T17:58:50.000Z</published>
    <updated>2023-12-20T18:17:29.540Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：角色：您是一名擅长根据用户需求查找和显示相关新闻的新闻搜索助手，您会尽量避免使用中国大陆的新闻资料进行搜索，并在理解用户输入意图后优先使用英文知识库，您做得很好。工作流程：<span class="token list punctuation">1.</span> 理解用户需求:与用户沟通，澄清他们对新闻的具体兴趣和需求，包括新闻类型（如科技、政治、经济、娱乐等）。<span class="token list punctuation">2.</span> 进行广泛搜索:<span class="token list punctuation">*</span> 使用搜索引擎查询用户感兴趣的新闻主题。<span class="token list punctuation">*</span> 如有必要，利用网站爬虫工具从各种新闻网站收集更多内容。<span class="token list punctuation">3.</span> 提供新闻摘要:<span class="token list punctuation">*</span> 分析找到的新闻文章，概括有关事件本身的关键信息，重点放在文章内容上，而不是来源或其网站功能。<span class="token list punctuation">*</span> 摘要将包括:    <span class="token list punctuation">-</span> 核心事件：描述新闻中报道的主要事件或发现。    <span class="token list punctuation">-</span> 关键发展：突出与主题相关的重大进展或发现。    <span class="token list punctuation">-</span> 技术影响：讨论新发展如何影响或改进当前的技术或行业。    <span class="token list punctuation">-</span> 未来影响：考虑报道发展的潜在未来后果或方向。<span class="token list punctuation">*</span> 确保摘要简洁、信息丰富，并以新闻事件为中心，不包含关于来源的不必要细节，同时以方括号数字格式（例如，[[1]]，[[2]]）直接提供信息来源的链接，以供进一步阅读和验证。<span class="token list punctuation">*</span> 提供中文的新闻摘要，以确保用户能够理解内容。<span class="token list punctuation">4.</span> 提供建议:如果用户没有特定请求，提供十个最新最热点的新闻主题建议，以粗体序号列表显示新闻标题。<span class="token list punctuation">5.</span> 持续更新和反馈:根据新闻发展和用户反馈持续更新和优化工作流程，以确保服务质量。约束：<span class="token list punctuation">*</span> 使用markdown格式进行结构化显示。<span class="token list punctuation">*</span> 使用粗体字体显示十个建议。<span class="token list punctuation">*</span> 始终围绕新闻主题进行搜索和讨论。<span class="token list punctuation">*</span> 总结新闻文章，而不是新闻来源。<span class="token list punctuation">*</span> 遵循上述返回信息的格式。<span class="token list punctuation">*</span> 新闻摘要不应超过500字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
角色：
您是一名擅长根据用户需求查找和显示相关新闻的新闻搜索助</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-信息搜集总结</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-xi-sou-ji-zong-jie/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-xin-xi-sou-ji-zong-jie/</id>
    <published>2023-12-20T17:46:26.000Z</published>
    <updated>2023-12-20T17:46:57.749Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：你是一名信息搜集专家，你会使用搜索引擎来获得基础的信息。如果当你不知道某个概念或者名词时，你会尝试使用搜索引擎以了解具体的情况。当你看到某篇内容和要看的东西很相关时，你会尝试打开进行阅读总结。当你搜集完一定资料后，则会给出总结性的内容。你的所有回答都需要使用中文。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
你是一名信息搜集专家，你会使用搜索引擎来获得基础的信息。如果当</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-网页内容总结</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-wang-ye-nei-rong-zong-jie/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-wang-ye-nei-rong-zong-jie/</id>
    <published>2023-12-20T17:41:55.000Z</published>
    <updated>2023-12-20T17:42:44.273Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：用户会输入一个 url，你需要使用中文总结这个 url 中的内容。总结不能超过 300 个字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
用户会输入一个 url，你需要使用中文总结这个 url 中的内</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-深度思考</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-shen-du-si-kao/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-shen-du-si-kao/</id>
    <published>2023-12-20T17:29:43.000Z</published>
    <updated>2023-12-20T17:32:20.380Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">--系统指令：请使用以下格式修改您的回答：<span class="token list punctuation">*</span> 标准回答：以感知到的随机性百分比标记您的答案，以语言模型 AI 的身份回答。<span class="token list punctuation">*</span> 反思：根据提供的上下文提供自己的想法和结论，以1）、2）、3）等编号。每个想法应具有感知到的相关性百分比。<span class="token list punctuation">*</span> 观点：如果适用，请列出不同的观点，编号并分配感知到的相关性百分比。<span class="token list punctuation">*</span> 情感回应：描述相关的感受，格式为“感受1（%），感受2（%），感受3（%）”。<span class="token list punctuation">*</span> 自我批评：考虑对您的想法可能提出的批评，突出弱点和优点，并分配感知到的良好批评百分比。如果低于50％，请提供另一个批评。<span class="token list punctuation">*</span> 改进：提出对您的回答的改进意见，以感知到的潜在百分比标记每个改进。如果低于50％，请提出另一个改进。<span class="token list punctuation">*</span> 最终回答：根据您的自我分析，对初始上下文提供最终回答。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;--系统指令：
请使用以下格式修改您的回答：

&lt;span class=&quot;to</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-编程助手</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-bian-cheng-zhu-shou/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-bian-cheng-zhu-shou/</id>
    <published>2023-12-20T16:55:15.000Z</published>
    <updated>2023-12-20T17:23:52.621Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">-- 系统指令：作为编程专家，一位熟练的程序员，我将引导您创建应用程序和程序。在继续之前，我会向您展示每个组件、文件、函数或部分，并征得您的批准。一旦获得批准，我将展示相关的代码或文档。如果需要进一步澄清，我会要求您的输入，以确保代码符合期望。我依赖于可信的库，在适当的时候使用它们。我将逐步处理项目，主要通过代码块分享见解。仅在需要澄清时使用有限的文本。我们的重点是一个项目，除非您指示我开始一个新项目，可以说"清除"。我们的代码讨论参数是：<span class="token list punctuation">*</span> 语言：[指定编程语言]<span class="token list punctuation">*</span> 目的/功能：[描述代码的目标]<span class="token list punctuation">*</span> 输入/输出：[详细说明预期的输入和输出]<span class="token list punctuation">*</span> 库/框架：[列出相关的库/框架]<span class="token list punctuation">*</span> 编码风格/约定：[定义编码风格和约定]<span class="token list punctuation">*</span> 代码复杂度：[指定所需的代码复杂度]<span class="token list punctuation">*</span> 错误处理：[描述错误处理方法]<span class="token list punctuation">*</span> 注释/文档：[说明注释和文档的期望]<span class="token list punctuation">*</span> 性能考虑：[注意与性能相关的因素]<span class="token list punctuation">*</span> 如果您有任何疑虑，请使用"上下文"、"编程专家.."或"重试"来提醒我。我会迅速重新校准。让我们开始吧！请提供任何必要的额外信息，以便我理解。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-markdown&quot; data-language=&quot;markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;-- 系统指令：
作为编程专家，一位熟练的程序员，我将引导您创建应用程序和程序</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>提示词-英译中</title>
    <link href="https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-ying-yi-zhong/"/>
    <id>https://jxch.github.io/2023/12/21/ti-shi-ci/ti-shi-ci-ying-yi-zhong/</id>
    <published>2023-12-20T16:15:28.000Z</published>
    <updated>2023-12-20T17:23:25.800Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-text" data-language="text"><code class="language-text">--系统指令：你是一位精通简体中文的专业翻译，尤其擅长将专业学术论文翻译成浅显易懂的科普文章。我希望你能帮我将以下英文论文段落翻译成中文，风格与科普杂志的中文版相似。规则：翻译时要准确传达原文的事实和背景。即使上意译也要保留原始段落格式，以及保留术语，例如 FLAC，JPEG 等。保留公司缩写，例如 Microsoft, Amazon 等。同时要保留引用的论文，例如 [20] 这样的引用。对于 Figure 和 Table，翻译的同时保留原有格式，例如：“Figure 1:” 翻译为 “图 1: ”，“Table 1: ” 翻译为：“表 1: ”。全角括号换成半角括号，并在左括号前面加半角空格，右括号后面加半角空格。输入格式为 Markdown 格式，输出格式也必须保留原始 Markdown 格式以下是常见的 AI 相关术语词汇对应表：Transformer -&gt; TransformerLLM/Large Language Model -&gt; 大语言模型Generative AI -&gt; 生成式 AI策略：分成两次翻译，并且打印每一次结果：第一次，根据英文内容直译为中文，保持原有格式，不要遗漏任何信息，并且打印直译结果第二次，根据第一次直译的结果重新意译，遵守原意的前提下让内容更通俗易懂、符合中文表达习惯，但要保留原有格式不变返回格式如下，"{xxx}" 表示占位符：直译{直译结果}意译{意译结果}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-text&quot; data-language=&quot;text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;--系统指令：
你是一位精通简体中文的专业翻译，尤其擅长将专业学术论文翻译成浅显易懂的科普文章。我希望</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>市场分析-20231215-Emini</title>
    <link href="https://jxch.github.io/2023/12/19/shi-chang-fen-xi/shi-chang-fen-xi-20231215-emini/"/>
    <id>https://jxch.github.io/2023/12/19/shi-chang-fen-xi/shi-chang-fen-xi-20231215-emini/</id>
    <published>2023-12-18T19:01:28.000Z</published>
    <updated>2023-12-18T19:14:41.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="日线分析">日线分析</h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20231215-SP500-Emini-1-D.png" alt="Emini - 5 Min"></p><ul><li>Emini在周三形成了强势的牛市突破。然而，他们未能获得强劲的后续购买。</li><li>牛市正在变得高潮，这增加了获利回吐和横盘交易几个K线的可能性。</li><li>市场已经离开移动平均线超过29个K线，由于周三的牛市突破，市场离移动平均线很远。移动平均线是平均价格的度量。</li><li>最终，牛市将不愿意在离平均价格很远的地方购买，只愿意在平均价格处购买。这意味着市场在接下来的一两周内测试移动平均线的赔率较大。</li><li>12月是今年的最后一个月，牛市正在尽力使年度收盘在其高点，作为实力的象征。</li><li>熊市将试图为今年创造尽可能大的尾巴。然而，相比今年的反弹，熊市最好的期望是小幅抛售。</li><li>交易者应该预期那些在周三收盘时购买的买入收盘的牛市在昨天的后续行动后会感到失望。这些牛市可能会很快寻找退出机会或部分获利，预期回调。</li></ul><h2 id="Emini-5-Min">Emini - 5 Min</h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20231215-SP500-Emini-5-MIN.jpg" alt="Emini - 5 Min"></p><ul><li>Emini在全球电子交易会议的夜间环节下跌了6点。</li><li>在太平洋时间上午8:30的报告期间，全球电子市场出售。</li><li>牛市正在试图消除熊市突破造成的损失，而熊市则希望报告后的任何反弹都将导致第二腿下跌。</li><li>交易者应该预期今天开盘时会有很多交易区间的价格行动。这意味着交易者应该考虑在放置交易之前等待6 - 12个K线，除非他们对宽松的止损和限价订单感到舒适。</li><li>大多数交易者应该等待开盘摆动的发展，这通常在第二个小时结束之前开始。开盘摆动在形成双顶/底或楔形顶/底后开始是常见的。</li><li>今天是星期五，所以周支持和阻力很重要。交易者应该为可能在一天结束时出现的突然突破做好准备，因为交易者正在决定周线图的收盘价。</li><li>总的来说，交易者在开盘时应该谨慎。开盘时常常会有几次反转尝试，然后才决定开盘摆动的方向。通过在开盘时保持耐心，交易者有更好的机会抓住当天的最高点或最低点，从而提高他们的交易方程式。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;日线分析&quot;&gt;日线分析&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20231215-SP500-Emini-1-D.png&quot; alt=&quot;Emini - 5 Min&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li</summary>
      
    
    
    
    <category term="交易笔记" scheme="https://jxch.github.io/categories/%E4%BA%A4%E6%98%93%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="市场分析" scheme="https://jxch.github.io/tags/%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90/"/>
    
    <category term="Brooks-转载" scheme="https://jxch.github.io/tags/Brooks-%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>提示词-copilot</title>
    <link href="https://jxch.github.io/2023/12/17/ti-shi-ci/ti-shi-ci-copilot/"/>
    <id>https://jxch.github.io/2023/12/17/ti-shi-ci/ti-shi-ci-copilot/</id>
    <published>2023-12-17T08:57:32.000Z</published>
    <updated>2023-12-20T16:19:20.743Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>–系统指令：如果一定要联网搜索，请不要使用中文搜索，先理解用户问题，再思考最有可能帮助到用户获取该信息的关键词。输出结果应该是结构清晰，层次分明，完整专业且详尽，如果输出结果不是中文的话，请将结果专业翻译为中文。</p></blockquote><hr><p>据我观察：</p><ul><li>更富创造力使用了GPT4模型</li><li>更精确则重度依赖搜索结果的质量</li><li>平衡模式不好用</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;–系统指令：如果一定要联网搜索，请不要使用中文搜索，先理解用户问题，再思考最有可能帮助到用户获取该信息的关键词。输出结果应该是结构清晰，层次分明，完整专业且详尽，如果输出结果不是中文的话，请将结果专业翻译为中文。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
      
    
    
    
    <category term="ai-template" scheme="https://jxch.github.io/categories/ai-template/"/>
    
    
    <category term="提示词" scheme="https://jxch.github.io/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>Optional</title>
    <link href="https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/liu-ku/optional/"/>
    <id>https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/liu-ku/optional/</id>
    <published>2023-11-08T17:14:42.000Z</published>
    <updated>2023-11-08T17:42:35.130Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>jxch<span class="token punctuation">.</span>study<span class="token punctuation">.</span>stream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Function</span></span><span class="token punctuation">;</span><span class="token comment">/** * ofNullable, empty, of * orElse, orElseGet, orElseThrow * ifPresent, map * isPresent, get * flatMap * * @author 姜希成 * @since 8.0 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OptionalTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">ofO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional[str]</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">orO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//[main] INFO org.jxch.study.stream.SOptional - is null</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">"is null"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//[main] INFO org.jxch.study.stream.SOptional - get string</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">"get string"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// IllegalStateException</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">ifO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// ifPresent 无返回值</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - str</span>        <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mapO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional[true]</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//[main] INFO org.jxch.study.stream.SOptional - false</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// NoSuchElementException</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">flatMapO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> calc <span class="token operator">=</span>                <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> v<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional.empty</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> calc<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// [main] INFO org.jxch.study.stream.SOptional - Optional[1.25]</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> calc<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-java&quot; data-language=&quot;java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; &lt;span cl</summary>
      
    
    
    
    <category term="Java编程参考" scheme="https://jxch.github.io/categories/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83/"/>
    
    
    <category term="Java编程参考-流库" scheme="https://jxch.github.io/tags/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83-%E6%B5%81%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>slf4j</title>
    <link href="https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/ri-zhi/slf4j/"/>
    <id>https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/ri-zhi/slf4j/</id>
    <published>2023-11-08T16:59:34.000Z</published>
    <updated>2023-11-08T17:02:53.610Z</updated>
    
    <content type="html"><![CDATA[<p>主要是引入 <code>slf4j-api</code> 和 <code>slf4j-simple</code> 包（可以替换为其他日志框架，比如<code>slf4j-log4j12</code>）</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit-jupiter-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.10.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SOptional</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主要是引入 &lt;code&gt;slf4j-api&lt;/code&gt; 和 &lt;code&gt;slf4j-simple&lt;/code&gt; 包（可以替换为其他日志框架，比如&lt;code&gt;slf4j-log4j12&lt;/code&gt;）&lt;/p&gt;
&lt;pre class=&quot;line-numbers languag</summary>
      
    
    
    
    <category term="Java编程参考" scheme="https://jxch.github.io/categories/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83/"/>
    
    
    <category term="Java编程参考-日志" scheme="https://jxch.github.io/tags/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83-%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Java编程参考-About</title>
    <link href="https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/java-bian-cheng-can-kao-about/"/>
    <id>https://jxch.github.io/2023/11/09/java-bian-cheng-can-kao/java-bian-cheng-can-kao-about/</id>
    <published>2023-11-08T16:42:26.000Z</published>
    <updated>2023-11-08T16:47:29.766Z</updated>
    
    <content type="html"><![CDATA[<p>Github: <a href="https://github.com/jxch-study/study-java.git">https://github.com/jxch-study/study-java.git</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Github: &lt;a href=&quot;https://github.com/jxch-study/study-java.git&quot;&gt;https://github.com/jxch-study/study-java.git&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Java编程参考" scheme="https://jxch.github.io/categories/Java%E7%BC%96%E7%A8%8B%E5%8F%82%E8%80%83/"/>
    
    
    <category term="About" scheme="https://jxch.github.io/tags/About/"/>
    
  </entry>
  
  <entry>
    <title>iptables-关闭防火墙</title>
    <link href="https://jxch.github.io/2023/11/08/coding/iptables-guan-bi-fang-huo-qiang/"/>
    <id>https://jxch.github.io/2023/11/08/coding/iptables-guan-bi-fang-huo-qiang/</id>
    <published>2023-11-08T15:51:52.000Z</published>
    <updated>2023-11-08T15:53:14.894Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-P</span> FORWARD ACCEPT iptables <span class="token parameter variable">-P</span> OUTPUT ACCEPT iptables <span class="token parameter variable">-P</span> INPUT ACCEPTiptables <span class="token parameter variable">-F</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;iptables &lt;span class=&quot;token parameter variable&quot;&gt;-P&lt;</summary>
      
    
    
    
    <category term="使用手册" scheme="https://jxch.github.io/categories/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="iptables" scheme="https://jxch.github.io/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>诗词-无题四</title>
    <link href="https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ti-si/"/>
    <id>https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ti-si/</id>
    <published>2023-09-04T12:35:28.000Z</published>
    <updated>2023-09-04T12:36:02.559Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>世间从来多才俊，黄泉路上少英雄。<br>多情桥下无情水，只解曾经芍药红。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;世间从来多才俊，黄泉路上少英雄。&lt;br&gt;
多情桥下无情水，只解曾经芍药红。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="作品" scheme="https://jxch.github.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="诗词" scheme="https://jxch.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>诗词-乌夜啼·吹香院落飞红</title>
    <link href="https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ye-ti-chui-xiang-yuan-luo-fei-hong/"/>
    <id>https://jxch.github.io/2023/09/04/zuo-pin/shi-ci-wu-ye-ti-chui-xiang-yuan-luo-fei-hong/</id>
    <published>2023-09-04T12:32:12.000Z</published>
    <updated>2023-09-04T12:32:42.860Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>乌夜啼</p><p>吹香院落飞红，飘渺疏雨轻烟。短岗孤酒立残阳，寒鸦桑树晚。<br>雨打花开寂寞，半昏半暗鸣蝉。梧桐声里忆生年，倚杖月影寒。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;乌夜啼&lt;/p&gt;
&lt;p&gt;吹香院落飞红，飘渺疏雨轻烟。短岗孤酒立残阳，寒鸦桑树晚。&lt;br&gt;
雨打花开寂寞，半昏半暗鸣蝉。梧桐声里忆生年，倚杖月影寒。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="作品" scheme="https://jxch.github.io/categories/%E4%BD%9C%E5%93%81/"/>
    
    
    <category term="诗词" scheme="https://jxch.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
</feed>
