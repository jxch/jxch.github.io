<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>darknet-ocr web ui 优化</title>
      <link href="/2023/07/12/template/darknet-ocr-web-ui-you-hua/"/>
      <url>/2023/07/12/template/darknet-ocr-web-ui-you-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml"><code>docker-compose.yml</code></h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">webmvc</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postor/darknet<span class="token punctuation">-</span>ocr<span class="token punctuation">:</span>1.0<span class="token punctuation">-</span>image    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"18080:8080"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./clipboard.min.js<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/static/js/clipboard.min.js      <span class="token punctuation">-</span> ./helps.js<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/static/js/helps.js      <span class="token punctuation">-</span> ./text.html<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/templates/text.html      <span class="token punctuation">-</span> ./base.html<span class="token punctuation">:</span>/root/darknet<span class="token punctuation">-</span>ocr/templates/base.html    <span class="token key atrule">command</span><span class="token punctuation">:</span> python app.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="base-html"><code>base.html</code></h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">$def with (page)  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-cn<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>darknet-ocr<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span> $:page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="text-html"><code>text.html</code></h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">$def with(post)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/js/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/js/helps.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/js/clipboard.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/css/main.css<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    imgJson<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string-property property">"width"</span><span class="token operator">:</span>$post<span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string-property property">"height"</span><span class="token operator">:</span>$post<span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string-property property">"uuid"</span><span class="token operator">:</span><span class="token string">"$post['uuid']"</span><span class="token punctuation">,</span>        <span class="token string-property property">'istext'</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//文字检测</span>            <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>$for bill in post['billList']:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span>10px</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>billname<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">'$bill'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token punctuation">&gt;</span></span>$bill<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>/ <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgInput<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>imgInput<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>texturl<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'textwidth'</span>]px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span>  <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图像URL地址<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imagebutton<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">postBill</span><span class="token punctuation">(</span><span class="token string">'$post['</span>url<span class="token string">']'</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span>识别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pasteButton<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">pasteImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>粘贴板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>imgInput<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fileupload<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传本地图片<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>imageButton<span class="token punctuation">'</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/png, image/bmp, image/jpg, image/jpeg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>                             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aglin-line<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgshow<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'width'</span>]px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgDisplay<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'width'</span>]px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>$post[<span class="token string">'height'</span>]px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>imgimg<span class="token punctuation">'</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['width']<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['height']<span class="token punctuation">"</span></span>  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">top</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgcanvas<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['width']<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['height']<span class="token punctuation">"</span></span>   <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">top</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>2<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>loadingGif<span class="token punctuation">'</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['width']<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$post['height']<span class="token punctuation">"</span></span>  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/img/loading.gif<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span>3<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">&gt;</span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>$post[<span class="token string">'width'</span>]px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!#############################识别结果#########################################################</span> <span class="token attr-name">----</span><span class="token punctuation">&gt;</span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span> 1%<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 12%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>json<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>json-request-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>billmodelname<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>$post.get('name')<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span>600px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span>660px<span class="token punctuation">;</span> <span class="token property">overflow</span><span class="token punctuation">:</span>scroll<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>billNameList<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mytable<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!##############################识别结果#########################################################</span> <span class="token attr-name">----</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">            <span class="token function">imgUploadPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//预览上传文件</span>            <span class="token function">urlPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//预览url图片</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="helps-js"><code>helps.js</code></h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>that</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> divStyle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"billname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>divStyle<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        divStyle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">'white'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    that<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">'pink'</span><span class="token punctuation">;</span>    imgJson<span class="token punctuation">.</span>billModel <span class="token operator">=</span> value<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span><span class="token parameter">width<span class="token punctuation">,</span>height</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    rate <span class="token operator">=</span> height<span class="token operator">/</span>imgJson<span class="token punctuation">.</span>height<span class="token punctuation">;</span>    newW <span class="token operator">=</span> width<span class="token operator">/</span>rate<span class="token punctuation">;</span>    newH <span class="token operator">=</span> height<span class="token operator">/</span>rate<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>newW<span class="token operator">&gt;</span>imgJson<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">{</span>        rate <span class="token operator">=</span> width<span class="token operator">/</span>imgJson<span class="token punctuation">.</span>width<span class="token punctuation">;</span>        newW <span class="token operator">=</span> width<span class="token operator">/</span>rate<span class="token punctuation">;</span>        newH <span class="token operator">=</span> height<span class="token operator">/</span>rate<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>newW<span class="token punctuation">,</span>newH<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">imgUploadPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//预览图像</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imageButton"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> obj<span class="token operator">=</span><span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imageButton"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>filename <span class="token operator">=</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>        <span class="token keyword">var</span> fr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fr<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        fr<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span>imgString <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">""</span>            <span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            image<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>                <span class="token keyword">var</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>                imgJson<span class="token punctuation">.</span><span class="token constant">W</span> <span class="token operator">=</span> width<span class="token punctuation">;</span>                imgJson<span class="token punctuation">.</span><span class="token constant">H</span> <span class="token operator">=</span> height<span class="token punctuation">;</span>                <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                width<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                height<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">postBill</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            image<span class="token punctuation">.</span>src<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">pasteImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">items</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>types<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> blob <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                blob<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">imageBlob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> fr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    fr<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>                        imgJson<span class="token punctuation">.</span>imgString <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>                        imgJson<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">""</span>                        <span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        image<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token keyword">var</span> width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>                            <span class="token keyword">var</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>                            imgJson<span class="token punctuation">.</span><span class="token constant">W</span> <span class="token operator">=</span> width<span class="token punctuation">;</span>                            imgJson<span class="token punctuation">.</span><span class="token constant">H</span> <span class="token operator">=</span> height<span class="token punctuation">;</span>                            <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                            width<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            height<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token function">postBill</span><span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        image<span class="token punctuation">.</span>src<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    fr<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>imageBlob<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">urlPreview</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//预览图像</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> url<span class="token operator">=</span><span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#texturl"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>url <span class="token operator">=</span> url<span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>imgString <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        imgJson<span class="token punctuation">.</span>filename<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建一个image对象</span>        image<span class="token punctuation">.</span>src<span class="token operator">=</span>url<span class="token punctuation">;</span>        image<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">" 图片url错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>            <span class="token keyword">var</span> height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span><span class="token constant">W</span> <span class="token operator">=</span> width<span class="token punctuation">;</span>            imgJson<span class="token punctuation">.</span><span class="token constant">H</span> <span class="token operator">=</span> height<span class="token punctuation">;</span>            <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token function">resizeImg</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>            width<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            height<span class="token operator">=</span>tmp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgimg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imgcanvas"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//jQuery("#"+avatarSlect)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">postBill</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//识别请求</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>url <span class="token operator">||</span> imgJson<span class="token punctuation">.</span>imgString<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jQuery<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>            <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                imgJson<span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//防止重复提交</span>                imgJson<span class="token punctuation">[</span><span class="token string">"data"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回识别结果</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">plotBox</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//绘制切图坐标</span>                    <span class="token punctuation">}</span>                      <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>imgJson<span class="token punctuation">.</span>data<span class="token punctuation">.</span>errCode<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"图像错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">XMLHttpRequest<span class="token punctuation">,</span> textStatus<span class="token punctuation">,</span> errorThrown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// 状态码</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>XMLHttpRequest<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 状态</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>XMLHttpRequest<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 错误信息   </span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>textStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"识别异常!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>            <span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"上传图片或者URL,再提交！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">clearCan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//清除myCanvas容器</span>    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'imgcanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>width<span class="token operator">=</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>height<span class="token operator">=</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">createTable</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//根据获取的数据，创建table</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#mytable"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> jsObject <span class="token operator">=</span> result<span class="token punctuation">;</span>    imgBoxes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//var jsObject = [{"name":10,"value":20},{"name":10,"value":20}];</span>    <span class="token keyword">var</span> tableString <span class="token operator">=</span><span class="token string">"&lt;table id='billmodeltable' class='gridtable'&gt;&lt;tr&gt;&lt;th&gt;序号&lt;/th&gt;&lt;th&gt;值&lt;/th&gt;&lt;th&gt;文本检测置信度&lt;/th&gt;&lt;th&gt;OCR置信度&lt;/th&gt;&lt;/tr&gt;"</span>    <span class="token keyword">var</span> textString <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>jsObject<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token string">"&lt;td&gt;"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"&lt;/td&gt;"</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> text     <span class="token operator">=</span>  <span class="token string">"&lt;td&gt;&lt;p contenteditable='true'&gt;"</span><span class="token operator">+</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"text"</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"&lt;/p&gt;&lt;/td&gt;"</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> textProb <span class="token operator">=</span>  <span class="token string">"&lt;td&gt;"</span><span class="token operator">+</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"textprob"</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">"&lt;/td&gt;"</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ocrProb  <span class="token operator">=</span>  <span class="token string">"&lt;td&gt;"</span><span class="token operator">+</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"prob"</span><span class="token punctuation">]</span><span class="token operator">+</span> <span class="token string">"&lt;/td&gt;"</span> <span class="token punctuation">;</span>        tableString <span class="token operator">+=</span> <span class="token string">"&lt;tr&gt;"</span><span class="token operator">+</span>index<span class="token operator">+</span>text<span class="token operator">+</span>textProb<span class="token operator">+</span>ocrProb<span class="token punctuation">;</span>        textString <span class="token operator">+=</span> jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"text"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>        imgBoxes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>jsObject<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"box"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    tableString<span class="token operator">+=</span><span class="token string">"&lt;/table&gt;"</span><span class="token punctuation">;</span>        textHtmlString <span class="token operator">=</span> <span class="token string">'&lt;button class="copy-btn" data-clipboard-text="'</span> <span class="token operator">+</span> textString <span class="token operator">+</span> <span class="token string">'"&gt;Copy&lt;/button&gt;'</span>    textHtmlString <span class="token operator">+=</span> <span class="token string">"&lt;p&gt;"</span> <span class="token operator">+</span> textString <span class="token operator">+</span> <span class="token string">"&lt;/p&gt;"</span>        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#mytable"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>textHtmlString<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#mytable"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>tableString<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">new</span> <span class="token class-name">ClipboardJS</span><span class="token punctuation">(</span><span class="token string">'.copy-btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#imageButton"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">plotBox</span><span class="token punctuation">(</span><span class="token parameter">boxes</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">/*根据box 绘制box            W,H:原始图像尺寸            */</span>    <span class="token keyword">var</span> <span class="token constant">W</span> <span class="token operator">=</span> imgJson<span class="token punctuation">[</span><span class="token string">'W'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token constant">H</span> <span class="token operator">=</span> imgJson<span class="token punctuation">[</span><span class="token string">'H'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'imgcanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>width<span class="token operator">=</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>height<span class="token operator">=</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>getContext<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//获取对应的CanvasRenderingContext2D对象(画笔)</span>        <span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置线条颜色为蓝色</span>        ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">"blue"</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>boxes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> x1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> x2 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y2 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> x3 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y3 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> x4 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">W</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> y4 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>boxes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'box'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">H</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x3<span class="token punctuation">,</span> y3<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x3<span class="token punctuation">,</span> y3<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x4<span class="token punctuation">,</span> y4<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x4<span class="token punctuation">,</span> y4<span class="token punctuation">)</span><span class="token punctuation">;</span>            ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//ctx.fillText('prob:'+boxes[i]['prob']+' text:'+i, x1-5, y1-5);</span>        <span class="token punctuation">}</span>        ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token function">createTable</span><span class="token punctuation">(</span>boxes<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">loadingGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//加载请求时旋转动态图片</span>    <span class="token keyword">var</span> imgId<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'loadingGif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>imgId<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">==</span><span class="token string">"block"</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>imgId<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>imgId<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"block"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="clipboard-min-js"><code>clipboard.min.js</code></h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*! * clipboard.js v2.0.8 * https://clipboardjs.com/ * * Licensed MIT © Zeno Rocha */</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">"object"</span><span class="token operator">==</span><span class="token keyword">typeof</span> exports<span class="token operator">&amp;&amp;</span><span class="token string">"object"</span><span class="token operator">==</span><span class="token keyword">typeof</span> module<span class="token operator">?</span>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> define<span class="token operator">&amp;&amp;</span>define<span class="token punctuation">.</span>amd<span class="token operator">?</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"object"</span><span class="token operator">==</span><span class="token keyword">typeof</span> exports<span class="token operator">?</span>exports<span class="token punctuation">.</span>ClipboardJS<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>t<span class="token punctuation">.</span>ClipboardJS<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> n<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">134</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">"use strict"</span><span class="token punctuation">;</span>n<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">default</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> r<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">279</span><span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">=</span>n<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">370</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span>n<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">817</span><span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token operator">=</span>n<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span><span class="token string">"symbol"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token punctuation">.</span>iterator<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token operator">&amp;&amp;</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>constructor<span class="token operator">===</span>Symbol<span class="token operator">&amp;&amp;</span>t<span class="token operator">!==</span><span class="token class-name">Symbol</span><span class="token punctuation">.</span>prototype<span class="token operator">?</span><span class="token string">"symbol"</span><span class="token operator">:</span><span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">u</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>e<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span>e<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">=</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">||</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span>configurable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token keyword">in</span> r<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>writable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">.</span>key<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> <span class="token function-variable function">l</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>t <span class="token keyword">instanceof</span> <span class="token class-name">e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Cannot call a class as a function"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolveOptions</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> t<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token operator">=</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"resolveOptions"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">=</span>t<span class="token punctuation">.</span>action<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token operator">=</span>t<span class="token punctuation">.</span>container<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>emitter<span class="token operator">=</span>t<span class="token punctuation">.</span>emitter<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token operator">=</span>t<span class="token punctuation">.</span>target<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token operator">=</span>t<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token operator">=</span>t<span class="token punctuation">.</span>trigger<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"initSelection"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"createFakeElement"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token string">"rtl"</span><span class="token operator">===</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"dir"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"textarea"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize<span class="token operator">=</span><span class="token string">"12pt"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>padding<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position<span class="token operator">=</span><span class="token string">"absolute"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">[</span>t<span class="token operator">?</span><span class="token string">"right"</span><span class="token operator">:</span><span class="token string">"left"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"-9999px"</span><span class="token punctuation">;</span>t<span class="token operator">=</span>window<span class="token punctuation">.</span>pageYOffset<span class="token operator">||</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token string">"px"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"selectFake"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createFakeElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">fakeHandlerCallback</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">removeFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandler<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandlerCallback<span class="token punctuation">)</span><span class="token operator">||</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token operator">=</span><span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">copyText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"removeFake"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandler<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandlerCallback<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandler<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeHandlerCallback<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>fakeElem<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"selectTarget"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token operator">=</span><span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">copyText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"copyText"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>e<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleResult</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"handleResult"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>t<span class="token operator">?</span><span class="token string">"success"</span><span class="token operator">:</span><span class="token string">"error"</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">action</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>selectedText<span class="token punctuation">,</span><span class="token literal-property property">trigger</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token punctuation">,</span><span class="token literal-property property">clearSelection</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">clearSelection</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"clearSelection"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token operator">&amp;&amp;</span><span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>document<span class="token punctuation">.</span>activeElement<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAllRanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"destroy"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeFake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"action"</span><span class="token punctuation">,</span><span class="token function-variable function">set</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token string">"copy"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token string">"copy"</span><span class="token operator">!==</span><span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token operator">&amp;&amp;</span><span class="token string">"cut"</span><span class="token operator">!==</span><span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "action" value, use either "copy" or "cut"'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">get</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_action<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"target"</span><span class="token punctuation">,</span><span class="token function-variable function">set</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token operator">||</span><span class="token string">"object"</span><span class="token operator">!==</span><span class="token function">c</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">||</span><span class="token number">1</span><span class="token operator">!==</span>t<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "target" value, use a valid Element'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token operator">===</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"cut"</span><span class="token operator">===</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token operator">||</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>_target<span class="token operator">=</span>t<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">get</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_target<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">u</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">&amp;&amp;</span><span class="token function">u</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span><span class="token string">"symbol"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token punctuation">.</span>iterator<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token operator">&amp;&amp;</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Symbol<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>constructor<span class="token operator">===</span>Symbol<span class="token operator">&amp;&amp;</span>t<span class="token operator">!==</span><span class="token class-name">Symbol</span><span class="token punctuation">.</span>prototype<span class="token operator">?</span><span class="token string">"symbol"</span><span class="token operator">:</span><span class="token keyword">typeof</span> t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>e<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span>e<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">=</span>r<span class="token punctuation">.</span>enumerable<span class="token operator">||</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span>configurable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"value"</span><span class="token keyword">in</span> r<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>writable<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>r<span class="token punctuation">.</span>key<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>h<span class="token operator">=</span>Object<span class="token punctuation">.</span>setPrototypeOf<span class="token operator">||</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span>__proto__<span class="token operator">=</span>e<span class="token punctuation">,</span>t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> <span class="token function-variable function">r</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"undefined"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Reflect<span class="token operator">||</span><span class="token operator">!</span>Reflect<span class="token punctuation">.</span>construct<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span>construct<span class="token punctuation">.</span>sham<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Proxy<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">construct</span><span class="token punctuation">(</span>Date<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token operator">=</span>r<span class="token operator">?</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token function">p</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span>constructor<span class="token punctuation">,</span>Reflect<span class="token punctuation">.</span><span class="token function">construct</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>arguments<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">e</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token punctuation">(</span>t<span class="token operator">=</span>t<span class="token punctuation">)</span><span class="token operator">||</span><span class="token string">"object"</span><span class="token operator">!==</span><span class="token function">s</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token string">"function"</span><span class="token operator">!=</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ReferenceError</span><span class="token punctuation">(</span><span class="token string">"this hasn't been initialised - super() hasn't been called"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">p</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">(</span>p<span class="token operator">=</span>Object<span class="token punctuation">.</span>setPrototypeOf<span class="token operator">?</span>Object<span class="token punctuation">.</span><span class="token function-variable function">getPrototypeOf</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span>__proto__<span class="token operator">||</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token string">"data-clipboard-"</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">var</span> <span class="token function-variable function">r</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"function"</span><span class="token operator">!=</span><span class="token keyword">typeof</span> e<span class="token operator">&amp;&amp;</span><span class="token keyword">null</span><span class="token operator">!==</span>e<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Super expression must either be null or a function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span>prototype<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>e<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">constructor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">&amp;&amp;</span><span class="token function">h</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token function">d</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> n<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>t <span class="token keyword">instanceof</span> <span class="token class-name">o</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Cannot call a class as a function"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token function">r</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolveOptions</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">listenClick</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">}</span><span class="token keyword">return</span> t<span class="token operator">=</span>o<span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"isSupported"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"copy"</span><span class="token punctuation">,</span><span class="token string">"cut"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>t<span class="token operator">=</span><span class="token string">"string"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">?</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">:</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token operator">!</span><span class="token operator">!</span>document<span class="token punctuation">.</span>queryCommandSupported<span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>e<span class="token operator">=</span>e<span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">queryCommandSupported</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"resolveOptions"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>action<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>action<span class="token operator">?</span>t<span class="token punctuation">.</span>action<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultAction<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>target<span class="token operator">?</span>t<span class="token punctuation">.</span>target<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultTarget<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>text<span class="token operator">?</span>t<span class="token punctuation">.</span>text<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaultText<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token operator">=</span><span class="token string">"object"</span><span class="token operator">===</span><span class="token function">s</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token punctuation">.</span>container<span class="token operator">:</span>document<span class="token punctuation">.</span>body<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"listenClick"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token operator">=</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"onClick"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span>delegateTarget<span class="token operator">||</span>t<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">l</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">action</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">target</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">container</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>container<span class="token punctuation">,</span><span class="token literal-property property">trigger</span><span class="token operator">:</span>t<span class="token punctuation">,</span><span class="token literal-property property">emitter</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"defaultAction"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"defaultTarget"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token operator">=</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token string">"target"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"defaultText"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token string">"text"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">"destroy"</span><span class="token punctuation">,</span><span class="token function-variable function">value</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>clipboardAction<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">&amp;&amp;</span><span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">828</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token punctuation">;</span><span class="token string">"undefined"</span><span class="token operator">==</span><span class="token keyword">typeof</span> Element<span class="token operator">||</span><span class="token class-name">Element</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>matches<span class="token operator">||</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token class-name">Element</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token operator">=</span>e<span class="token punctuation">.</span>matchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>mozMatchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>msMatchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>oMatchesSelector<span class="token operator">||</span>e<span class="token punctuation">.</span>webkitMatchesSelector<span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>t<span class="token operator">&amp;&amp;</span><span class="token number">9</span><span class="token operator">!==</span>t<span class="token punctuation">.</span>nodeType<span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>matches<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token punctuation">;</span>t<span class="token operator">=</span>t<span class="token punctuation">.</span>parentNode<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">438</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">828</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">,</span>o</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> <span class="token function-variable function">i</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>t<span class="token punctuation">,</span>r</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span>delegateTarget<span class="token operator">=</span><span class="token function">a</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>target<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>delegateTarget<span class="token operator">&amp;&amp;</span><span class="token function">r</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>i<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">destroy</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>i<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">,</span>o</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token punctuation">.</span>addEventListener<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> n<span class="token operator">?</span><span class="token function">i</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token string">"string"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>r<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">879</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>n<span class="token punctuation">.</span><span class="token function-variable function">node</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token operator">&amp;&amp;</span>t <span class="token keyword">instanceof</span> <span class="token class-name">HTMLElement</span><span class="token operator">&amp;&amp;</span><span class="token number">1</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeType<span class="token punctuation">}</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function-variable function">nodeList</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">!==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token string">"[object NodeList]"</span><span class="token operator">===</span>e<span class="token operator">||</span><span class="token string">"[object HTMLCollection]"</span><span class="token operator">===</span>e<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token string">"length"</span><span class="token keyword">in</span> t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">===</span>t<span class="token punctuation">.</span>length<span class="token operator">||</span>n<span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function-variable function">string</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">"string"</span><span class="token operator">==</span><span class="token keyword">typeof</span> t<span class="token operator">||</span>t <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">}</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function-variable function">fn</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token string">"[object Function]"</span><span class="token operator">===</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">370</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> l<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">879</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token number">438</span><span class="token punctuation">)</span><span class="token punctuation">;</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>e<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>n<span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Missing required arguments"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>l<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Second argument must be a String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>l<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"Third argument must be a Function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span><span class="token function">node</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> c<span class="token operator">=</span>e<span class="token punctuation">,</span>u<span class="token operator">=</span>n<span class="token punctuation">,</span><span class="token punctuation">(</span>a<span class="token operator">=</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">destroy</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>a<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>u<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span><span class="token function">nodeList</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> r<span class="token operator">=</span>t<span class="token punctuation">,</span>o<span class="token operator">=</span>e<span class="token punctuation">,</span>i<span class="token operator">=</span>n<span class="token punctuation">,</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function-variable function">destroy</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> t<span class="token operator">=</span>t<span class="token punctuation">,</span>e<span class="token operator">=</span>e<span class="token punctuation">,</span>n<span class="token operator">=</span>n<span class="token punctuation">,</span><span class="token function">s</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span>t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"First argument must be a String, HTMLElement, HTMLCollection, or NodeList"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> r<span class="token punctuation">,</span>o<span class="token punctuation">,</span>i<span class="token punctuation">,</span>a<span class="token punctuation">,</span>c<span class="token punctuation">,</span>u<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">817</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function-variable function">exports</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token string">"SELECT"</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeName<span class="token operator">?</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">"INPUT"</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeName<span class="token operator">||</span><span class="token string">"TEXTAREA"</span><span class="token operator">===</span>t<span class="token punctuation">.</span>nodeName<span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">||</span>t<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">||</span>t<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"readonly"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">"contenteditable"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">=</span>window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>e<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectNodeContents</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">removeAllRanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">addRange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> n<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">279</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>e<span class="token punctuation">.</span>prototype<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function-variable function">on</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">fn</span><span class="token operator">:</span>e<span class="token punctuation">,</span><span class="token literal-property property">ctx</span><span class="token operator">:</span>n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">once</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> r<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>r<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>arguments<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> o<span class="token punctuation">.</span>_<span class="token operator">=</span>e<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>o<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">emit</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>o<span class="token operator">=</span>n<span class="token punctuation">.</span>length<span class="token punctuation">;</span>r<span class="token operator">&lt;</span>o<span class="token punctuation">;</span>r<span class="token operator">++</span><span class="token punctuation">)</span>n<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span>ctx<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">off</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> n<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token operator">=</span>n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>a<span class="token operator">=</span>r<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fn<span class="token operator">!==</span>e<span class="token operator">&amp;&amp;</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>fn<span class="token punctuation">.</span>_<span class="token operator">!==</span>e<span class="token operator">&amp;&amp;</span>o<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> o<span class="token punctuation">.</span>length<span class="token operator">?</span>n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span>o<span class="token operator">:</span><span class="token keyword">delete</span> n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>exports<span class="token operator">=</span>e<span class="token punctuation">,</span>t<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>TinyEmitter<span class="token operator">=</span>e<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function-variable function">n</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> e<span class="token operator">=</span>t<span class="token operator">&amp;&amp;</span>t<span class="token punctuation">.</span>__esModule<span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">.</span>default<span class="token punctuation">}</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> t<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span>e<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function-variable function">d</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token keyword">in</span> e<span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">o</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span>r<span class="token punctuation">.</span><span class="token function">o</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">get</span><span class="token operator">:</span>e<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function-variable function">o</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">r</span><span class="token punctuation">(</span><span class="token number">134</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> o<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>exports<span class="token punctuation">;</span><span class="token keyword">var</span> e<span class="token operator">=</span>o<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">exports</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">return</span> n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>e<span class="token punctuation">.</span>exports<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>exports<span class="token punctuation">}</span><span class="token keyword">var</span> n<span class="token punctuation">,</span>o<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> darknet-ocr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>17.架构师提升</title>
      <link href="/2023/07/12/architect/06.dian-shang-xi-tong/17-jia-gou-shi-ti-sheng/"/>
      <url>/2023/07/12/architect/06.dian-shang-xi-tong/17-jia-gou-shi-ti-sheng/</url>
      
        <content type="html"><![CDATA[<p>作为一个架构师仅仅掌握这些“硬”知识、“硬”技能还不够，“<strong>业务驱动技术</strong>”，但是业务领域更多是很多“软”性的、抽象的技能。一旦一个东西呈“软”性的，大家虽然知道这类东西存在，但又难于表述。</p><h1>业务架构</h1><h2 id="业务意识">业务意识</h2><p>互联网时代有个岗位——产品经理。而在互联网大规模发展起来之前，软件行业通常称为“需求分析师”。技术不是无源之水，一旦离开业务纯粹地谈技术，就失去了驱动技术发展的根本要素。另一方面，研发部门的人力资源和时间资源是有限的，而业务需求是无限的，要用有限的资源应对无限的需求，必然存在需求的取舍问题，而这种取舍往往也会影响系统的架构设计。对于一个技术人员，不需要像产品经理或需求分析师一样对需求了如指掌，但具有良好的业务意识却是做业务架构的基本条件。</p><ol><li>需求来自何处？</li><li>真需求还是伪需求<ol><li>技术人员经常会听到要开发一个某某功能、一个某某系统，但“功能”和“系统”并不是需求。需求是要解决的“问题”，而问题一定是系统所要面对的用户问题或客户问题，功能或系统只是解决问题的一种答案而已。</li><li>一个需求被用户或客户提出来，可能经过总监、组长、产品经理层层传导，等传到了技术人员，可能已经不是最初的需求，最后做出来的东西往往不是对方真正想要的。</li><li>所以，作为一个技术人员，当从产品经理接到需求的时候，一定要回溯，明确需求是在什么背景下提出的，究竟要解决用户的什么问题。</li></ol></li><li>产品手段vs技术手段: 通过产品的设计解决技术问题</li><li>需求的优先级: 系统的架构是被需求驱动着一步步迭代、升级</li></ol><h2 id="什么是业务">什么是业务</h2><p>个内容是否算作一个“业务”往往与公司的长期战略、盈利模式、发展阶段、组织架构密切相关，并没有一个标准的划分方式。但抛开这些差异性，一个内容能称为一个“业务”，往往具有一个特点，就是“<strong>闭环</strong>”。</p><ul><li>团队闭环：有自己的产品、技术、运营和销售，联合作战。</li><li>产品闭环：从内容的生成到消费，整条链路把控。</li><li>商业闭环：具备了自负盈亏的能力（即使短期没有，长期也是向这个发展方向）</li><li>纵向闭环：某个垂直领域涵盖从前到后。</li><li>横向闭环：平台模式，横向覆盖某个横切面。</li></ul><p>同时闭环可大可小。</p><ul><li>小闭环:：一个部门内部的某项内容有独立的产品、技术、运营团队，独立运作。</li><li>大闭环：事业群、事业部级别，公司高层战略来决定的。</li><li>更大的闭环：产业上下游，构建完整的生态体系。</li></ul><h2 id="“业务架构”的双重含义">“业务架构”的双重含义</h2><p>前面的案例讨论的“业务”，其实对应的是“业务架构”一词的字面意思，也就是“业务的架构”。这通常关乎大的战略，主要是从商业角度去看，公司高层领导决定的。但对于技术人员来说，讨论业务架构的时候则是另外一个意思:“支撑业务的技术架构”。注意，这里的落脚点在技术上，是从技术的视角看业务应该如何划分。<strong>业务架构既关乎组织架构，也关乎技术架构</strong>，业务架构、组织架构和技术架构三者之间的关系是怎么样的呢？</p><ol><li>先说业务架构的第一重意思。从理论上讲，合理的团队的组织架构应该是根据业务的发展来决定的。不同的公司在不同的发展阶段会根据业务的发展情况，将壮大的业务拆分，萎缩的业务合并。拆分到一定的时候又合并，组织架构相应地跟着调整，相应的技术团队跟着整合，技术架构自然也会跟着变化。这种变化规律在半个世纪前就已经被提出，也就是 <strong>“康威定律”：一个组织产生的系统设计等同于组织之内、组织之间的沟通结构。这也意味着：如果组织架构不合理，则会约束业务架构，也约束技术架构的发展。而组织架构的调整涉及部门利益的重新分配，所以往往也只能由高层来推动。</strong></li><li>业务架构的第二重意思。“支持业务的技术架构”,业务架构和技术架构会相互作用、相互影响。举个例子，对于广告业务，如果认为CPC（效果广告）、CPM（展示广告）、CPT（按时间段计费）是三个业务，可能会各自设计三套技术架构方案，并让三个团队去做；但如果认为是一个业务，会思考这三者之间哪些是共用的，哪些又是个性化的，尽可能把三者通过一个技术架构支撑，让一个团队去做。这种<strong>技术的思考会反过来影响业务，重新思考团队的组织方式，团队的组织方式又会变,接下来又会影响业务的发展方式。</strong></li></ol><h2 id="“业务架构”与“技术架构”的区分">“业务架构”与“技术架构”的区分</h2><p>之所以要谈“分”，是因为经常遇到的情况是：<strong>明明是业务问题，却想用技术手段解决；明明是技术问题，由于技术无法实现，反过来将就业务；可能既不是业务问题，也不是技术问题,而是组织架构问题，是部门利益问题，是公司的盈利模式问题。</strong></p><p>一般技术架构要关注的一系列问题:</p><ol><li>你的系统是在线系统还是离线系统？</li><li>如果是在线系统，需要拆分成多少个服务？每个服务的QPS 是多少，需要部署多少台机器?</li><li>运行方式是多线程，多进程？还是线程同步机制，进程同步机制？</li><li>如果是离线系统？有多少个后台任务？任务是单机，还是集群调度？</li><li>对应的数据库的表设计？是否有分库分表？</li><li>数据库的高可用？</li><li>服务接口的API 设计？</li><li>是否用了缓存？缓存数据结构是怎样的？缓存数据更新机制？缓存的高可用？</li><li>是否用了消息中间件？消息的消费策略？</li><li>是否有限流、降级、熔断措施？</li><li>监控、报警机制？</li><li>服务之间的数据一致性如何保证？比如分布式事务。</li></ol><p>通过上面一系列问题可以看到，技术架构涉及的都是“系统"“服务”“接口”“表”“机器”“缓存”这样技术性很强的词语。这些是开发人员直接可以通过写代码实现的，很务实，没有虚的内容在里面。把上面这些内容梳理一下，归类后就变成了我们经常挂在嘴边的各种架构词汇：</p><ol><li>物理架构（物理部署图）;</li><li>运行架构（多线程、多进程）；</li><li>数据架构（存储系统的选择、数据库表的schema）；</li><li>应用架构（系统的微服务划分）；</li></ol><p>从具体技术到抽象技术，再到业务，所用的词汇会越来越抽象，越来越偏向各自的领域，则在沟通和表达过程中，产生歧义的概率就越大。<strong>实践中只有时刻意识到我们面对的是业务问题，还是技术问题，或是其他的更高层次的问题，才可能在一个正确的层面上去解决。<strong>通过分析，我们知道了“技术架构”究竟代表什么，这也为我们提供了一个参照系。</strong>“业务架构”不是“技术架构”，是“技术架构”外面的东西</strong>。</p><h2 id="业务架构思维">业务架构思维</h2><h3 id="警惕“伪”分层">警惕“伪”分层</h3><p>分层其实不光是一个技术词汇，而是一个通用的思维方式，比如架构图分层，实际的代码、系统是否能按分层架构严格执行呢？如果把所有系统之间的调用关系都梳理出来把依赖关系图画出来，不一定会是这样一个分层结构，很可能是一个网状结构了。产生了伪”分层。</p><ol><li><strong>底层调用上层</strong>。比如某个基础服务调用上层的业务服务，怎么解决呢？<ol><li>要思考业务逻辑是否放错了地方? 或者业务逻辑是否需要<strong>一分为二</strong>，一部分放在业务服务，一部分放在基础服务。也就避免了底层调用上层。</li><li><strong>DIP（依赖反转）</strong>。底层定义接口，上层实现，而不是底层直接调用上层。</li></ol></li><li><strong>同层之间，服务之间各种双向调用</strong>。比如业务服务1、业务服务2、业务服务3 之间都是双向调用。这时就要思考，业务服务1、业务服务2、业务服务3 之间的职责分配是否有问题，出现了服务之间的紧耦合？是否应该有<strong>一个公共的服务</strong>，让公共服务和业务服务1、业务服务2、业务服务3 交互，而三个业务服务之间相互独立?</li><li><strong>层之间没有隔离，参数层层透传，一直穿透到最底层，导致底层系统经常变动</strong>。例如，App 一直发版本，为了实现兼容，服务器端会根据不同的版本调用不同的函数。比如客户端要支撑各式各样的业务，因此肯定有类似 businessType 用于区分不同业务，或者说区分同一个业务的不同业务场景。businessType 字段一旦透传到最底层的基础服务，在基础服务里面都能看到if busessType = XXX 这样的代码，就是典型的上层业务多样性透传到了最底层。这种情况下，虽然是严格分了层，层层调用，但“底层服务”已经不是底层服务，因为<strong>每一次业务变动都会导致从上到下跟着一起改</strong>。</li><li><strong>聚合层特别多，为了满足客户端需求，各种拼装</strong>。遇到这种情况，往往意味着<strong>业务服务层太薄，纯粹从技术角度拆分了业务。而不是从业务角度让服务成为一个完整的闭环，或者说一个领域。</strong></li></ol><p>一个优秀的分层架构应该具有的典型特征如下。</p><ol><li><strong>越底层的系统越单一、越简单、越固化；越上层的系统花样越多、越容易变化。要做到这一点，需要层与层之间有很好的隔离和抽象。</strong></li><li>做到了上面一点，则要做到<strong>层与层之间严格地遵守上层调用下层的准则</strong>。</li></ol><h3 id="边界思维">边界思维</h3><p>在所有的架构思维模式中，如果说最终只能留下一种思维模式，那就是边界思维。腾讯公司前CTO 张志东曾说过“<strong>优雅的接口，龌龊的实现</strong>”，可以说是边界思维最好的昵释。在技术领域,“封装”“面向接口的编程”等技术，也都是边界思维的体现。只要一个系统对外的接口是简洁、优雅的，即使系统内部混乱，也不会影响到外界其他系统。相当于<strong>把混乱的逻辑约束在一个小范围内，而不会扩散到所有系统</strong>。边界思维是一种通用的思维方式，从小到大来，边界思维在不同层面的均有体现。</p><ol><li>对象层面（SOLID 原则）：在面向对象的五大原则中，第一个原则S 就是<strong>单一职责原则</strong>（The Single ResponsibilityPrinciple）。通俗地讲，就是一个函数、一个类、一个模块只做一件事。不要把不同的职责杂糅在一起,这就是边界思维的一种体现。</li><li>接口层面：对于开发人员来说，做一个系统往往先想到的是如何实现。而利用边界思维，首先想到的不是如何实现，而是把系统当作一个黑盒，看系统对外提供的接口是什么。接口也就是系统的边界。接口定义了系统可以支持什么、不支持什么。所以，<strong>接口的设计往往比接口的实现更重要</strong>！站在使用者的角度来看，并不在意接口如何实现，而更在意接口的定义是否清晰，使用是否方便。具体来说，就是：接口的输入、输出参数分别是什么？哪些参数可选，哪些必选？如果输入参数很多，为什么不是分成多个接口？设计策略是什么？接口是否幂等？各种异常场景接口的返回结果都是什么?</li><li>产品层面：除了技术，产品同样需要有边界思维。对于产品，常说的一句话是:内部实现很复杂，用户界面很简单。<strong>把复杂留给自己，把简单留给用户</strong>！尤其现在的AI 产品，更是把这句话发挥到了极致。AI 算法本身很复杂，但对用户来说，使用却越来越“傻瓜化”，以前还有图形界面，现在直接对着系统说句话，它就明白了。</li><li>组织架构层面：组织的各个部门之间如果没有非常清晰的边界，就会导致<strong>该自己做的事情不做，互相推诿、踢皮球；不该自己做的事情抢着做，你争我夺</strong>。最后整个体系权责不分，做事效率低下，还容易产生各种问题。</li></ol><p>回到系统，不管用哪种分析方法和设计方法，最终必须保证每个系统有清晰的边界，各自分工清晰。<strong>无论谁要了解这个系统，他不用看这个系统是怎么实现的，只要看系统的接口，就能知道系统支持什么，不支持什么</strong>。<strong>边界思维的重点在于“约束”，是一个“负方法”的思维方式</strong>。什么意思呢? 比如要看一个开源软件的功能，<strong>要看的不是它能做什么，而是它不能做什么</strong>！“不能做什么”决定了系统的边界，或者说它的“极限”。做架构尤其如此，<strong>架构强调的不是系统能支持什么，而是系统的“约束”是什么</strong>，不管是业务约束，还是技术约束。<strong>没有“约束”，就没有架构</strong>。一个设计或系统，<strong>如果“无所不能”，则意味着“一无所能”</strong>。</p><h3 id="系统化思维">系统化思维</h3><p>与边界思维相对应的是系统化思维。哲学中有一句话:事物之间的普遍联系。通俗的说法就是:不能头痛医头，脚痛医脚。头痛的时候，可能原因不在头上，而是身体其他部位出了问题引发的头痛。</p><ol><li>比如现在有一个系统A 和系统B，应用边界思维，在两个系统之间定义了接口。但随着业务的发展，发现每次来新的需求，两个系统都要跟着一起改，之间的接口也不够用，要么增加新接口，要么为之前的接口增加新参数。原因可能是在最初设计的时候，接口定义得不合理；也可能是这两个系统的逻辑本身就耦合得很紧。应该把系统A 和系统B 重新放在一起整体考虑，然后一致对外提供统一的接口，对内，系统A 和系统B 就是一个系统的两个联系紧密的部分。这就是系统化思维的一种体现，<strong>把不同的“东西”串在一起考虑，而不是割裂后分开来看。</strong></li><li>系统化思维的另外一个体现，就是遇到事情要<strong>刨根问底</strong>。如果遇到了问题A，经过分析，是原因1 导致的;原因1 又是如何产生的，是原因2 导致的;原因2 又是如何产生的，是原因3 导致的……如此追到最后，直至事物的本质。这点在物理学中叫作“第一性原理”，在哲学上叫作“道”。无论是遇到技术问题，还是产品问题、业务问题，都可以利用这种思维方式。这个倒追的过程会让你探究到事物与事物之间的普遍联系。<ul><li>比如一个电商系统中商品库存。站在C 端来看：用户下单，要减库存；用户发生客退，要加库存；站在B 端供应商角度来看：采购，要加库存；退供，要减库存；站在内部商务和物流人员角度来看：调拨，一个仓库减库存，另一个仓库加库存。无论C 端的下单、客退，还是B 端的采购、退供，还是内部的调拨，都是很复杂的业务流程，对应的是不同的团队开发的不同系统。<strong>单独去看每一个业务的每一个系统，都没有问题，但要系统性地把这五大类业务串在一起来看，可能库存的账目是对不齐的。</strong></li><li>这就是为什么电商系统里<strong>库存往往是单独的微服务</strong>，库存不仅仅是一个数字<code>&lt;SKU,数量&gt;</code>，然后对这个数字进行加加减减，逻辑很简单。但<strong>实际问题在于库存不是一个简单的数字，而是一个复杂的数据模型，有自己单独的领域。</strong></li></ul></li></ol><h3 id="利益相关者分析">利益相关者分析</h3><p>做一个系统与做一个产品一样，<strong>首先要了解用户是谁。在架构里面称为利益相关者</strong>。为什么谈业务架构，要先谈“利益相关者”呢?</p><ol><li>利益相关者其实是从“外部”来看系统。把系统当作一个<strong>黑盒子</strong>，看为哪几类人服务。这其实也就<strong>定义了整个系统的边界，定义了整个系统做什么和不做什么</strong>。</li><li>前面说到一个词“业务”，业务具有“闭环”的特点。而<strong>利益相关者就是一个最好的看待业务的视角</strong>。</li><li><strong>每个利益相关者代表了一个视角</strong>。站在C 端用户的视角和B 端商家的视角上，对系统有不同的看法。系统很复杂，无法从一个角度全面认识，每个视角都是盲人摸象，只看到系统的一部分。</li><li>利益相关者往往也对应了一种业务划分、系统划分。<strong>根据不同的利益相关者,可以划分成不同的系统和业务</strong>。</li></ol><p>所以，当谈到系统的时候，<strong>首先要确定的是系统为哪几类人服务，同哪几个外部系统交互，也就确定了系统的边界</strong>。</p><h3 id="非功能性需求">非功能性需求</h3><p>软件有功能性需求和非功能性需求之分。其实软件的非功能性需求有很多，不同类型的软件的侧重点也有差别。互联网比较关注的有：</p><ol><li><strong>并发性</strong>。对于C 端的系统，大家首先关注的是系统能抵抗多大的流量。说通俗点，是可以承受多少人同时访问。常用的衡量指标是TPS 和QPS，平均响应时间/最大响应时间，并发数。</li><li><strong>可用性</strong>。从服务角度来说，一个服务不可用有两层意思:<ul><li>机器宕机，不能对外提供服务，直接抛错;</li><li>机器虽然没有宕机,但是超时。这涉及“性能”问题。</li></ul></li><li><strong>一致性</strong>。比如数据库的参照完整性、事务、缓存与数据库数据同步、多备份数据一致性问题。</li><li><strong>稳定性和可靠性</strong>。“稳定性”指系统没有任何未定义的行为，体现在如下几方面:<ul><li>所有的if-else 语句里面,没有不处理的分支;</li><li>所有的 API 调用，每种异常返回值都有处理;</li><li>考虑内存、磁盘的上限;</li><li>系统不会时不时冒出一个问题出来;</li><li>出了问题,有很好的日志监控,能快速修复;</li><li>系统的QPS 不会有抖动（除非业务有变化，比如大促），是一条平滑的</li><li>发布新版本,有回滚方案;</li><li>新系统上线,灰度平滑切换;·</li><li>通过压力测试;</li></ul></li><li><strong>可维护性</strong>。与可维护性密切相关的是“可理解性”,或者说“<strong>代码可读性</strong>”。体现在如下几个方面:<ul><li>系统架构设计简单，接口简洁，表数据关系清晰;</li><li>老人离职,新人接手，无须很长时间就能厘清代码逻辑;</li><li>系统功能不耦合,改一个地方不会牵动全身;</li><li>系统某些模块即使时间久远,也有人能厘清内部逻辑;</li></ul></li><li><strong>可扩展性</strong>。体现在如下几方面:<ul><li>来了一个新需求，伴随一些新功能，可以在现有系统上灵活扩展</li><li>没有地方写死，可以灵活配置;</li><li>容易变化的逻辑没有散落在各个系统里面，不需要多个地方跟着一起改。</li></ul></li><li><strong>可重用性</strong>: 开发新的需求，旧的功能模块拿过来可以直接用。</li></ol><p>通常来讲，<strong>对于C端应用，会更关注高并发和高可用，然后有的业务（比如支付）对一致性要求非常高；对于B端业务，会更关注系统的可维护性、可扩展性性</strong>，系统才能不拖业务的后腿，可以快速地支撑各种各样的复杂业务需求的开发。</p><h3 id="抽象">抽象</h3><p>抽象是人类思维认知的一个基本能力，在现实生活和各种学科中都会遇到。具体到计算机的软件架构里，就是<strong>分析和分解各种概念、实体、系统，然后又造出一些新的概念、框架的过程</strong>。</p><ul><li>计算机中的抽象<ul><li>存<strong>储的抽象: 关系型数据库,表格</strong>。现实世界中的数据各式各样，但到了计算机中，有一种东西叫关系型数据库。通俗地讲，就是一张张的表格，然后表格之间通过主外键关联起来。这其实就是一种抽象，把现实世界中花样繁多的数据形式进行规整,最终变成了一张张的表格。</li><li><strong>计算的抽象是顺序、选择、循环</strong>。再复杂的算法，逻辑计算到了计算机里面，最终都会变成顺序、选择、循环三种语句。现实的逻辑很复杂，但计算机里面的逻辑只有三种。</li><li><strong>面向对象的方法学: 父类与子类、继承</strong>。在面向对象的方法学里面，提取共性形成父类，提高代码复用性，这是抽象。</li><li><strong>面向接口的方法学</strong>。把面向对象的方法再往前推进一步，就是所谓的“面向接口的方法学”。<strong>接口是交互双方的一种协议，也是对交互细节的一种抽象</strong>。</li></ul></li><li>怎么做抽象<ul><li><strong>分解：找出差异和共性</strong>。要做抽象，首先要做的是分解。只有分解，才知道两个事物间的差异和共性。</li><li><strong>归纳：造词</strong>。找到了共性和差异，把共性的部分总结成一个新的东西，造一个新词来表达“共性”，就是归纳，也是抽象。所以抽象的过程往往也是一个“造词”的过程。</li></ul></li><li>抽象带来的问题: 抽象的好处就是找出共性、简化事物，但抽象也会造成问题<ul><li><strong>抽象造成意义模糊</strong>。越抽象的东西往往越“虚”，最后就变成“空洞的大话”，华而不实。不同人对“虚”的东西理解都不一样，大家在沟通时往往不在同一个频道中，牛头不对马嘴。</li><li><strong>抽象错误：地基不稳</strong>。没有做分解就分析，会把一个非原子性、容易变化的东西抽象出来，作为整个系统的基础。</li><li><strong>抽象造成关键特征丢失</strong>。把事物的某个重要的关键特征抽象掉了，会导致对事物的认知偏差。</li><li><strong>抽象过度</strong>。抽象是为了提供灵活性和扩展性。但如果业务在某一方面变化的可能性很小，则可能压根不需要抽象。</li></ul></li></ul><h1>技术管理</h1><h2 id="能力模型">能力模型</h2><ul><li>格局<ul><li>系统的定位是什么？它能创造哪些核心价值？</li><li>开发这个系统的背景是什么？为什么以前不做，现在要做？是因为业务发展到了一定规模？还是开发资源现在有多余，没事可干?</li><li>系统在整个组织架构中处于什么位置？与这个系统关联的其他系统目前处于什么状况？</li><li>产品经理如何看待这个系统？技术负责人/CTO 如何看得这个系统？</li><li>这个系统的需求处于比较确定清晰的状态，还是有很大的模棱两可的空间，核心点大家有没有想清楚?</li><li>这个系统所用的技术体系是比较老，还是最新的?</li><li>对于业界类似的系统，别的公司是如何做的?</li><li>在做一件事情之前，会对所做的事情有一个“全局把握”，风险如何？挑战在哪？提前都有心理准备</li><li>不同层次的人聚焦的范围不一样。如果能把自己的“范围”往外扩大一圈，这对自己做“本职工作”会很有益处。而这，就是“格局”</li></ul></li><li>技术历史<ul><li>“格局”是从空间的角度看待问题，那么“历史观”就是从时间的角度看待问题。</li><li>任何一种技术，都不是凭空想象出来的，它一定是要解决某个特定问题而产生的。</li><li>这个特定问题一定有它的历史背景：因为之前的技术在解决这个特定问题时不够好或有其他副作用，所以才发明了这个新技术。所以，看待一个技术或方法论，需要把它放到“历史长河”中去，看它在历史中处于什么位置。</li></ul></li><li>抽象能力<ul><li>“抽象能力”已经有所说明，这个词听起来很“虚”。可作为架构师，就是需要这种“务虚思维”。</li><li>抽象也是一个“层次”结构，从最底层到最上层，在不同工作阶段需要在不同的抽象层级中思考。</li><li>很多写代码的人都习惯“自底向上”的思维方式。当讨论需求的时候，他首先想到的是这个需求如何实现，而不是这个需求本身是否合理？这个需求与其他需求有何关联关系。</li><li>这种过早考虑“实现细节”的思考方式会让我们“只见树木，不见森林”，最终淹没在错综复杂的各种细节之中，因层次混乱，往往把握不住重点。</li><li>假如做一个新的系统，从“抽象”到“细节”，应该考虑:<ul><li>每个需求的合理性?</li><li>这个系统的领域模型是什么样的?</li><li>这个系统应该在旧的上面改造?还是应该另起炉灶?</li><li>这个系统可以分成几期，分期实施?</li><li>这个系统要拆分成几个子系统?·每个子系统又要拆分出多少个模块?</li><li>系统的表设计?API 接口设计?系统之间的消息传输如何实现?</li></ul></li><li>从上到下，是一个逐级细化的过程，并目进入到下一级之后，上一级可能又会退回去修改。</li></ul></li><li>深入思考的能力<ul><li>深入思考能力主要指“技术”的深度。关于“广度”，在“格局”层面已经包含。</li><li>“深度”并不是要在所有领域都很深。人一生的精力是有限的，我们不可能深入掌握所有技术领域，但至少需要对于一个领域非常精通。</li><li>拥有这种深度并不代表要胜任当前的工作必须达到这种要求，而是要养成这种“深入思考的习惯”，当我们在思考其他问题时也会带着这种“习惯”。</li><li>由于技术一直在更新换代，当面对一个新技术的时候，如果具有深入思考的能力和习惯,对新技术的理解往往也会更透彻。</li><li>同时，“深度”会让你对“技术风险”有更加清醒的认知。在做一个项目的时候，可能会前发现里面潜在的“坑”，而不是等到实施了才发现问题，被动解决。</li></ul></li><li>落地能力<ul><li>落地能力就是通常所说的“执行力”,取决于很多因素。首先,架构方案必须是能够落地的而不是只能停留在PPT 上面。对于一个技术管理者，需要跟踪从架构设计到架构落地的完整过程，在落地过程中发现问题，实时修正，才可能真正做到“理论”与“实际”的统一。</li><li>然后是项目管理的问题，需要对项目中任何可能存在的不确定因素、阻碍项目进度的因素进行把控。在这些不确定因素里面，很多是“人”的因素，而不是“技术”的因素。再复杂的系统,都是由“人”开发出来的。而人多了之后，与“人”相关的问题会自然产生:沟通不充分、组织混乱、职责不清。作为一个技术管理者，需要意识到这些问题的存在，然后在各种障碍之下找到一条路线,去达成业务和团队目标。</li></ul></li></ul><h2 id="影响力的塑造">影响力的塑造</h2><ul><li>关键时候能顶上<ul><li>某个问题困扰了团队一个星期，也没有人能搞定;</li><li>某个成员离职，他负责的模块没有人接手;</li><li>某位用户反映的问题像牛皮癣一样，总是时不时发生,无法根治;</li><li>某个需求发生工期延误，到了快上线的时候却上不了;</li></ul></li><li>打工思维和老板思维<ul><li>这个产品的价值究竟在哪?</li><li>这个产品有什么问题，如何改进?</li><li>团队的协作流程有什么问题，如何改进?</li><li>技术架构有什么问题，如何改进?</li><li>某些用户投诉一直没解决，如何处理?</li></ul></li><li>空杯心态：术业有专攻。水平再高的人，也只是在某一个领域很强换一个其他的领域，可能什么都不懂。<ul><li>任何时候，我们需要意识到自己的“无知”。只有意识到自己是有“局限的”，才可能不断去听取别人的意见，不断改进自己的工作方法,提升自己的专业能力和视野。否则就会一直待在自己的舒适区里,刚愎自用。</li></ul></li><li>持续改进：世界上从来没有能做到100 分的事情，只要想“鸡蛋挑骨头”，总可以找出要改进的地方<ul><li>所以要有“批判性思考”的习惯。不能觉得“差不多”就可以，要追求极致，其实有很多事情要做。</li></ul></li><li>建言献策<ul><li>接上面的问题，如果有“批判性思考”的能力，能看到一个组织存在的各种问题，并想出应对的解放办法。然后多和同事、领导沟通这些事情，无论对于个人成长还是组织，都是一个正向作用。</li></ul></li></ul><p>最后换位思考一下:如果我们看到公司某个同事在关键时候能顶上，做事追求极致，思考总是很全面，对业务的了解总是比其他技术人员要多，总是很虚心地接受意见，时不时地给公司提出自己的建议。是不是觉得这个人很靠谱，觉得这个人适合带团队。</p><h2 id="团队能力提升">团队能力提升</h2><ul><li>不确定性与风险把控：技术管理的首要任务是项目管理。从人的认知来讲，做任何事情，思路都是从一个“朦胧”到逐步“清晰”的过程，项目的进展也是一个从思路、到方案、到落地的细化过程。在这个过程中，不可避免地存在各种“灰度”，或者说“不确定性”。而项目管理就是要提前防范各种“不确定性”，并采取相应措施，让整个团队、项目克服重重干扰，成功到达终点。<ul><li>需求的不确定性：很可能项目在一个想法没有完全想清楚的情况下就开始了实施。遇到这种情况，作为技术负责人，需要和产品经理、相关业务方、上级领导等进行广泛的沟通，最终在这个事情上达成“共识”：到底哪些是东西清晰的，我们可以开始做,哪些还需要进一步思考和细化</li><li>技术的不确定性：必须在项目早期做尽可能多的调研和测试。对于引入的技术框架，哪些特性可以支持、哪些不能支持;对于技术选型，不同方案的优缺点都是什么。尤其是一些关键的技术细节，如果在前期不调研，等到中后期才发现某个框架无法支持或有问题,可能对整个的技术架构和项目进度造成严重影响。</li><li>人员的不确定性：不要把项目最核心的部分让一个人开发维护，导致别人无法插手。要分摊风险，在技术的架构设计层面，保证整个系统耦合性不能太高，根据团队成员的水平，每个人都可以承担一块东西。这样即便某个人离职，也有相应的人可以补上。</li><li>组织的不确定性：公司越大，业务越复杂，部门越多。随便做一个项目，都可能与好几个业务部门打交道。这些部门可能还在异地，平时只能即时通信，或者远程电话沟通。对于这种情况，在项目前期必须要做尽可能多的沟通，调研对方提供的业务能力，哪些目前有,哪些还在开发中，哪些还没有开发。在充分沟通的基础上，和对方敲定排期表，不定期地同步进度，保证对方的进度和自己在一个节奏上。</li><li>历史遗留问题：有些老项目的技术架构很清晰，文档清楚，业务清楚，还有对项目熟悉的其他同事;也有些遗留项目欠了很多技术债，之前的开发人员也走了，业务人员很多都熟悉。对于这种情况，需要对项目进行完整的梳理:从产品到技术，找各个接口人沟通，可能经过了两三个月，才对整个系统有了一个全局的把控。总之，要有“风险把控”的意识，在项目早期努力地想出各种各样的“不确定性”，未雨绸缪。</li></ul></li><li>以价值为中心的管理<ul><li>如何衡量这些项目的价值大小：有多少人使用了这个开源项目</li><li>第一个层次：系统有多少个业务模块，功能多么强大，采用了多少新技术,采用了某个先进的算法</li><li>第二个层次：在所做的所有工作中，最核心的是采取了哪种措施?最终可能会抽象出一到两个。再追问一下,这一到两个大的技术改进有什么价值，通常都会追问到软件的各个非功能性需求：<ul><li>可重用性。做了某个Jar 包、组件、服务，别人不再需要重复造轮子。</li><li>可扩展性。来了一个新的需求，只需要配置一下或做很简单的代码开发即可实现，不需要改动很多系统。</li><li>可维护性。整个系统解耦做得很好，代码也很整洁。叠加功能或找人接手都比较容易。</li><li>高性能。用户体验很好，所有请求都在100ms 内返回。</li><li>高并发。能支持千万到亿级的用户并发访问。</li><li>稳定性。系统时不时出问题、宕机，已经把这些问题都解决了，还增加了监控，出问题会立即报警。</li><li>高可靠。做了灾备方案，即使某个机器宕机，系统也不受影响。</li><li>一致性。做到了强一致性,极大地提高了业务体验。</li></ul></li><li>第三个层次：所做的系统为公司带来了什么业务价值<ul><li>极大提升了用户体验?因此促进了用户增长?提高了用户的活跃度?</li><li>为公司增加了收入?</li><li>降低了公司的研发成本?</li><li>提升了公司的运维效率?</li><li>为公司开辟了一个新的市场?</li></ul></li><li>第四个层次：站在公司的角度来看，公司是一个在市场经济中追求利润最大化的组织。从这个角度来看，技术也好，产品也好，运营销售也好，最终目的都是要增加公司的利润，即使短期不盈利，长期也是要盈利的。而增加利润，要么“开源”，要么“节流”。所以做的任何东西的价值，基本都会被归结到从这个层次去评判。当然，还有一类是“战略性投入”的项目，虽然它本身不直接挣钱或挣钱很少，但是为了支撑其他盈利的核心业务而能发挥重要作用。</li><li>在这四个层次之外，当然还可能会涉及研究性质的技术、技术的普惠性、技术对整个社会的促进作用等,这已经超出了某个业务的技术范畴。目前国内的互联网公司这个方面比较少，国外的Google 等做的比较好。</li><li>以“价值”为中心的管理，会让人避免陷入“无效忙碌”的状态: 整个团队天天忙得不亦乐乎，做各种功能，解决各种问题，但回过头来想想，到底有多少东西是有“价值”的?</li></ul></li><li>团队培养：有些技术团队的负责人水平很高，解决问题迅速，但团队成员技术平平，遇到问题都需要负责人亲自上阵解决、累个半死，团队整体非常低效，成员得不到成长，这是典型的缺乏团队培养的思维和意识的案例。<ul><li>技术能力：要培养人，首先得“识人”。只有清楚地知道团队成员的技术能力层次，才能针对不同层次的人设置不同的培训内容。<ul><li>初级：全部是“面条式”代码，超长类、超长函数，各种晦涩难懂的if-else。写出来的代码时常出问题，且长时间定位不到问题,对写的功能无法完全掌控<ul><li>需要时常做代码评审，需要读《数据结构与算法》《代码整洁之道》之类的书籍，培养代码思维</li></ul></li><li>中级：能熟练地完成各种功能开发，问题少，出现问题能快速解决，代码模块化程度比较高，系统稳定，有业务运维的意识功底深厚，能解决各种开发中的“疑难杂症”<ul><li>要培养系统设计能力</li></ul></li><li>高级：熟悉业务,能根据业务设计出合理的技术方案<ul><li>虽然有系统设计能力，但不够深入,缺乏完善的方法论</li></ul></li><li>资深：对技术和业务都有深刻的思考，能对大规模、跨团队的复杂系统进行很好的架构设计。<ul><li>就解决问题来讲，技术已不是问题，需要发展的是业务能力，成为某个领域的技术领军人物</li></ul></li><li>对于一个技术团队来说，绝大多数都处于前三个层次，在技术上还有很多的上升空间。在这种情况下，需要在完成业务需求的同时，让团队成员的技术水平不断提高。可以不定期地举行技术培训、技术分享，在整个团队中形成一个较好的技术的文化氛围,形成一个人带人、人帮人的协作氛围。</li></ul></li><li>独立意识：独立非常的关键，无论对于任何级别的人，都需要独立。所谓独立，就是能掌控事情。交给一个功能开发，能独自把功能做得很好;交给一个模块，能把模块快速开发完，运行稳定;交给一个系统，能把系统从设计，到编码、上线，完整地接住;交给一个项目，能带领一个小团队从需求开始一直到上线完成整个项目，不需要上级操心,按时按质地交付。做到这一步，意味着团队的每个人在自己所处的层次都是可“托付”的，否则就会频繁出现“补位”。组长干组员的活，经理干组长的活，总监干经理的活，副总裁干总监的活……层层错位,最后整个组织缺乏“顶层设计”。</li><li>思维能力：当团队成员遇到问题时，很多人的解决办法是，告诉他问题的解决办法，然后让他把这个问题解决好。如果只做到这一步，则没有起到培养的作用。对于一个团队来说，解决项目中遇到的问题只达到了及格分数。更需要在解决项目问题之上升华一层,也就是培养思维能力。<ul><li>思维能力的培养只能靠平时，在面对一个个的问题时，通过一次次的讨论来言传身教。面对问题要刨根问底，深挖问题的背景，掌握解决问题的办法背后的技术原理，研究是否有更好的解决办法……如此一来，思维能力慢慢就会提高。</li><li>每个人在职场上工作，都是要养家糊口的。站在团队成员的角度去想下:如果跟着你干，能力没什么提升，薪资待遇也没什么增长，公司业务前景也看不到，为什么会跟着干呢?</li><li>所以，作为一个管理者，要多去赋能他人、成就他人，做项目只是一个过程，最终是要打造一个极具战斗力的团队。有了这样的团队，可以在公司发展的不同阶段自如地切换到不同的业务。</li></ul></li></ul></li></ul><h1>总结梳理</h1><p>**业务驱动技术：**需求来自何处？真需求还是伪需求？产品手段vs技术手段？需求的优先级？什么是业务：闭环</p><p>明明是业务问题，却想用技术手段解决；明明是技术问题，由于技术无法实现，反过来将就业务；可能既不是业务问题，也不是技术问题,而是组织架构问题，是部门利益问题，是公司的盈利模式问题，实践中只有时刻意识到我们面对的是业务问题，还是技术问题，或是其他的更高层次的问题，才可能在一个正确的层面上去解决，<strong>“业务架构”不是“技术架构”，是“技术架构”外面的东西</strong></p><h2 id="业务架构">业务架构</h2><ul><li><p><strong>业务架构既关乎组织架构，也关乎技术架构</strong></p><ul><li><p>**“康威定律”：一个组织产生的系统设计等同于组织之内、组织之间的沟通结构。**这也意味着：如果组织架构不合理，则会约束业务架构，也约束技术架构的发展。而组织架构的调整涉及部门利益的重新分配，所以往往也只能由高层来推动</p></li><li><p>技术的思考会反过来影响业务，重新思考团队的组织方式，团队的组织方式又会变,接下来又会影响业务的发展方式</p></li></ul></li><li><p><strong>警惕“伪”分层：底层调用上层；同层之间，服务之间各种双向调用；层之间没有隔离，参数层层透传，一直穿透到最底层，导致底层系统经常变动；聚合层特别多，为了满足客户端需求，各种拼装</strong>（业务服务层太薄，纯粹从技术角度拆分了业务。而不是从业务角度让服务成为一个完整的闭环，或者说一个领域）</p><ul><li><p>越底层的系统越单一、越简单、越固化；越上层的系统花样越多、越容易变化。要做到这一点，需要<strong>层与层之间有很好的隔离和抽象。</strong></p></li><li><p><strong>层与层之间严格地遵守上层调用下层的准则</strong></p></li></ul></li><li><p><strong>边界思维：优雅的接口，龌龊的实现；把混乱的逻辑约束在一个小范围内，而不会扩散到所有系统</strong></p><ul><li><p>**单一职责原则；接口的设计往往比接口的实现更重要；把复杂留给自己，把简单留给用户；**组织的各个部门之间边界清晰</p></li><li><p><strong>边界思维的重点在于“约束”，是一个“负方法”的思维方式：要看的不是它能做什么，而是它不能做什么</strong></p><ul><li><p><strong>架构强调的不是系统能支持什么，而是系统的“约束”是什么</strong></p></li><li><p><strong>没有“约束”，就没有架构；如果“无所不能”，则意味着“一无所能”</strong></p></li></ul></li></ul></li><li><p><strong>系统化思维</strong></p><ul><li><p><strong>把不同的“东西”串在一起考虑，而不是割裂后分开来看</strong></p></li><li><p>**刨根问底：**单独去看每一个业务的每一个系统，都没有问题，但要系统性地把这五大类业务串在一起来看，可能库存的账目是对不齐的。<strong>所以库存往往是单独的微服务，实际问题在于库存不是一个简单的数字，而是一个复杂的数据模型，有自己单独的领域</strong></p></li></ul></li><li><p>**利益相关者分析：**首先要确定的是系统为哪几类人服务，同哪几个外部系统交互，也就确定了系统的边界</p><ul><li><p>把系统当作一个<strong>黑盒子</strong>，看为哪几类人服务。也就<strong>定义了整个系统的边界，定义了整个系统做什么和不做什么</strong>。</p></li><li><p>业务具有“闭环”的特点。<strong>利益相关者就是一个最好的看待业务的视角</strong>。</p></li><li><p><strong>每个利益相关者代表了一个视角</strong></p></li><li><p><strong>根据不同的利益相关者, 可以划分成不同的系统和业务</strong>。</p></li></ul></li><li><p><strong>非功能性需求：并发性；可用性；一致性；稳定性和可靠性；可维护性；可扩展性；可重用性；</strong></p><ul><li><p>对于C端应用，会更关注高并发和高可用，然后有的业务（比如支付）对一致性要求非常高；</p></li><li><p>对于B端业务，会更关注系统的可维护性、可扩展性性</p></li></ul></li><li><p>**抽象：**分析和分解各种概念、实体、系统，然后又造出一些新的概念、框架的过程</p><ul><li><p>计算机中的抽象：存储的抽象；计算的抽象是顺序、选择、循环；面向对象的方法学；面向接口的方法学；</p></li><li><p>怎么做抽象：<strong>分解（找出差异和共性）；归纳（造词）；</strong></p></li><li><p>抽象带来的问题：抽象的好处就是找出共性、简化事物</p><ul><li>抽象造成意义模糊；抽象错误；抽象造成关键特征丢失；抽象过度</li></ul></li></ul></li></ul><h2 id="技术管理">技术管理</h2><ul><li><p>**能力模型：**格局；技术历史 ；抽象能力（从上到下）；深入思考能力；落地能力（执行力&amp;项目管理）；</p></li><li><p>**影响力的塑造：**关键时候能顶上；老板思维；空杯心态；持续改进；建言献策；</p></li><li><p><strong>团队能力提升</strong></p><ul><li><p>不确定性与风险把控：需求；技术；人员；组织；历史遗留问题；</p></li><li><p>以价值为中心的管理：技术；非功能性需求；业务价值；公司角度；“战略性投入”项目；研究性普惠性技术；避免陷入“无效忙碌”的状态</p></li><li><p>团队培养</p><ul><li><p>技术能力（识人与培养）：初级、中级、高级、资深</p></li><li><p>独立意识：每个人在自己所处的层次都是可“托付”的</p></li><li><p>思维能力</p><ul><li><p>通过一次次的讨论来言传身教</p></li><li><p>每个人在职场上工作，都是要养家糊口的，多去赋能他人、成就他人</p></li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架构师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16.ES数据迁移</title>
      <link href="/2023/07/11/architect/06.dian-shang-xi-tong/16-es-shu-ju-qian-yi/"/>
      <url>/2023/07/11/architect/06.dian-shang-xi-tong/16-es-shu-ju-qian-yi/</url>
      
        <content type="html"><![CDATA[<p>不同方法的迁移步骤：</p><ul><li>elasticsearch-dump：适合数据量不大，迁移索引个数不多的场景</li><li>snapshot：适用数据量大的场景，原理就是从源ES集群创建数据快照，然后在目标ES集群中进行恢复<ul><li>创建快照前必须先创建repository仓库，一个repository仓库可以包含多份快照文件</li><li>源ES集群中创建snapshot</li><li>目标ES集群中创建repository</li><li>移动源ES集群snapshot至目标ES集群的仓库</li><li>从快照恢复</li></ul></li><li>reindex：跨索引、跨集群的数据迁移，应用于大量集群数据的迁移<ul><li>配置reindex.remote.whitelist参数，指明能够reindex的远程集群的白名单</li><li>调用reindex&nbsp;api</li></ul></li><li>logstash</li></ul><p>特点：</p><ol><li>elasticsearch-dump和logstash做跨集群数据迁移时，都要求用于执行迁移任务的机器可以同时访问到两个集群，不然网络无法连通的情况下就无法实现迁移。而使用snapshot的方式没有这个限制，因为snapshot方式是完全离线的。因此elasticsearch-dump和logstash迁移方式更适合于源ES集群和目标ES集群处于同一网络的情况下进行迁移，而需要跨云厂商的迁移，比如从阿里云ES集群迁移至腾讯云ES集群，可以选择使用snapshot的方式进行迁移，当然也可以通过打通网络实现集群互通，但是成本较高。</li><li>elasticsearchdump工具和mysql数据库用于做数据备份的工具mysqldump工具类似，都是逻辑备份，需要将数据一条一条导出后再执行导入，所以适合数据量小的场景下进行迁移；</li><li>snapshot的方式适合数据量大的场景下进行迁移。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>15.海量数据</title>
      <link href="/2023/07/11/architect/06.dian-shang-xi-tong/15-hai-liang-shu-ju/"/>
      <url>/2023/07/11/architect/06.dian-shang-xi-tong/15-hai-liang-shu-ju/</url>
      
        <content type="html"><![CDATA[<h1>存储系统的技术选型</h1><h2 id="技术选型时应该考虑哪些因素">技术选型时应该考虑哪些因素</h2><p>首先需要确定的是系统的类型，<strong>是一个在线业务系统，还是一个分析系统</strong>？在线业务系统对应的术语是OLTP ( On-line Transaction Processing，在线事务处理)，分析系统对应的术语是OLAP( Off-line Analytical Processing，离线分析处理)。</p><p>第二个需要考量的维度是<strong>数据量</strong>，系统需要处理的数据在什么量级？这里的数据量不需要特别精确，能估计到量级就可以了。在估算系统数据量级的时候，需要考虑存量数据和增量数据两个部分，简单地说就是，现在有多少数据,未来还会新增多少数据。在估计系统数据量的时候，**不必对未来做过多的预留，一般来说按照未来两年，最多三年来估计就足够了。**不用担心因为预估不足，而无法支撑两年之后业务的问题。一般来讲，很少有新系统在上线之后两三年内，业务没有发生重大改变的。既然系统在不到两三年的时间内就要进行重构，那么存储只需要在重构时，也跟着进行相应的调整即可。退一步来讲，即使系统在两三年内没有进行重构，那么之前预估的两三年的数据量再撑个三四年问题也不大。因为大部分人在对未来业务和数据量做预估的时候，往往都会过于乐观。也就是说，两年后系统的实际数据量大概率要远少于两年前预估的数据量。</p><ol><li>1GB 以下量级，或者数据的条数在千万以下。对于这个量级内的数据来说，几乎所有的存储产品其性能都还不错，因此不需要过多考虑数据量和性能，重点考虑其他维度即可。</li><li>1GB 以上、10GB 以下量级，或者数据的条数在一亿以内。这个量级基本上是单机存储系统能够处理的上限。</li><li><strong>超过10GB 量级，或者数据的条数超过一亿。这个量级的数据必须使用分布式存储，只有将数据分片，才能获得可以接受的性能。</strong></li></ol><p>第三个需要考虑的维度，非常重要，但也最容易被忽略，那就是<strong>总体拥有成本</strong>(Total Cost of Ownership，TOC)。总体拥有成本是指，选择该存储产品，所需要付出的成本。虽然现在大部分存储系统都是开源免费的，但是无论使用哪一款产品，都是有成本的。成本主要来自如下三个方面。</p><ol><li>最重要的，团队是否熟悉该产品？如果不熟悉则意味着使用过程中可能要踩坑，然后填坑。踩坑和填坑的代价可能是系统宕机、丢数据或者开发进度延期。</li><li>需要考虑该产品是否简单、易于学习和使用。</li><li>需要考虑系统上线后的运维成本，比如，Hadoop 生态的一系列产品,维护工作相对来说就比较困难，要想让它们持续正常地运转，一般都需要一个有经验的运维人员专门负责维护。</li></ol><h2 id="在线业务系统如何选择存储产品">在线业务系统如何选择存储产品</h2><p>那些主要对数据库执行<strong>增删改查</strong>操作的系统</p><ol><li>由于需要频繁地对数据进行增删改的操作，因此存储产品需要有较好的<strong>写性能</strong>。</li><li>由于在线业务直接服务于前端，需要快速响应，因此每次存储访问必须要快，至少要达到<strong>毫秒级</strong>的响应。</li><li>另外，存储产品需要能够支撑足够多的<strong>并发请求</strong>，以满足大量用户同时访问的需求。</li><li>最后，很重要的一点是，由于在线业务系统的需求一直都在不停地变化，因此存储产品需要能够提供相对比较<strong>强大的查询能力</strong>，以便应对频繁变化的需求。否则，一旦业务需求稍微有一点儿变动，存储结构就不得不随之做出调整，这就非常麻烦了。</li></ol><p>没有这么完美的产品。但是如果把要求放宽一点，最接近上述要求的就是我们最常用的以MySQL为代表的关系型数据库。由于各关系型数据库产品的存储结构和实现原理都是类似的，因此它们在功能等方面的差别并不大，是可以相互替代的。考虑到成本等诸方面的因素，<strong>MySOL一般是我们的首选</strong>。</p><p>此外，一些KV 存储也可以用于在线业务，比如，Redis、Memcached 等等。Redis 这种基于内存的存储，具有非常好的读写性能，能提供有限的查询功能，但是其并不能保证数据的可靠性，一般来说,Redis 都是配合MySQL 数据库作为缓存来使用。所以，<strong>目前绝大多数的在线业务，仍然使用的是 MySQL(或者其他关系型数据库)加 Redis 这对经典组合</strong>，暂时还没有更好的选择。还有一些存储产品也可以用于在线业务，但大多数局限于特定的业务场景中,不具备通用性,比如,用于存储文档型数据的 <strong>MongoDB</strong>，等等。在线业务系统需要存储产品能够支持高性能写入、毫秒级响应以及高并发。MySOL 加 Redis 的经典组合可以应对大部分的场景需求。而<strong>分析系统则需要存储产品能够在海量数据，并且能够支持在海量数据上快速聚合、分析和查询，而对写入性能、响应时延和并发的要求并不高。</strong></p><p>一般来说量级在GB 以内的可以使田MySQL ；量级超过GB 的数据并且如果还是需要做实时的分析和查询，则可以优先考虑ES，Hbase、Cassandra 和ClickHouse 这些列式数据库也可以视情况选择。量级超过 TB 的数据，一般只能事先对数据做聚合计算，然后再在聚合计算的结果上进行实时查询，这种情况下，一般选择把数据保存在HDFS 中。</p><h2 id="如何存储前端埋点之类的海量数据">如何存储前端埋点之类的海量数据</h2><p>对于大部分互联网公司来说，数据量最大的几类数据是：<strong>前端埋点数据、监控数据和日志数据</strong>。“前端埋点数据”也称为“点击流”，是指在App、小程序和Web 页面上的埋点数据，这些埋点数据主要用于记录用户的行为，比如打开了哪个页面，点击了哪个按钮，在哪个商品上停留了多久等信息。上述三种数据都是真正的“海量”数据，相比于订单、商品之类的业务数据，点击流的数据量要多出2～3 个数量级。在头部大厂，这类数据每天产生的数据量很有可能会超过 TB( 1 TB = 1024 GB)级别，经过一段时间的累积，有些数据会达到PB（1 PB =1024 TB）级别。</p><p>早期对于海量原始数据的存储方案，都倾向于先计算再存储。也就是说，在接收原始数据的服务中，先对数据进行过滤和聚合等初步的计算，将数据压缩收敛之后再进行存储。这样可以降低存储系统的写入压力，同时还能节省磁盘空间。随着存储设备的成本越来越低，以及数据的价值被不断地重新挖掘，很多大型企业都倾向于<strong>先存储再计算</strong>。即直接保存海量的原始数据，再对数据进行实时或批量计算。这种方案成本较高但是优点很多，比如不需要二次分发，就可以同时为多个流和批计算任务提供数据；如果计算任务出现错误，则可以随时回滚，重新计算；如果对数据有新的分析需求，则上线之后，可以直接用历史数据计算出结果，而不用等待收集新的数据。不过先存储再计算的方式，对保存原始数据的存储系统提出了更高的要求：不仅要有足够大的容量，能够水平扩容，而且要求读写速度足够快，要能跟得上数据生产的速度，同时环要为下游计算提供低延迟的读服务。<strong>一般都会选择Kafka/RocketMQ 来存储。<strong>这类产品能够提供“无限”的消息堆积能力，具有招高的吞吐量，与大部分大数据生态圈的开源软件都有非常好的兼容性和集成度。如果是需要长时间(几个月到几年)保存的海量数据，适合用</strong>HDFS之类的分布式文件系统来存储</strong>。还有一类是时序数据库(Time Series Databases)，比如<strong>InfluxDB</strong>，不仅具有非常好的读写性能,还能提供简便的查询和聚合数据的能力。但是它们并不能存储所有类型的数据，而是<strong>专用于存储类似于监控之类的有时间特征，并且数据内容都是数值的数据</strong>。</p><h1>面对海量数据,如何才能查得更快</h1><p><strong>一是数据量太大了，二是目前没有很好的数据结构和查询能力可以支持业务系统的查询</strong></p><p>目前的一般做法是，通过<strong>流计算或批计算</strong>（也就是 MapReduce）对原始数批进行二次或多次讨滤、汇聚和计算的处理,然后<strong>把计算结果保存到另外一个存储系统</strong>中由该存储系统为业务系统提供查询支持。 有的业务计算后的数据变得非常少，比如，一些按大进行汇总的数据，或者排行榜类的数据，无论使用哪种存储，都能满足要求。还有一些业务，无法通过事先计算的方式解决所有的问题。<strong>比如，像点击流、监控和日志之类的原始数据，就属于“海量数据中的海量数据”</strong>，这些原始数据经过过滤汇总和计算之后，在大多数情况下，数据量会出现数量级的下降，比如，从TB 级别的数据量，下降到GB 级别，但仍然属于海量数据。除此之外，我们还要对这个海量数据，提供性能可以接受的查询服务。</p><h2 id="常用的分析类系统应该如何选择存储">常用的分析类系统应该如何选择存储</h2><p>查询海量数据的系统大多是<strong>离线分析类系统</strong>，可以简单地将其理解为类似于做报表的系统，也就是那些主要功能是对数据做统计分析的系统。这类系统大多是重度依赖于存储的。选择什么样的存储系统、使用什么样的数据结构来存储数据，将直接决定数据查询、聚合和分析的性能。分析类系统对存储的需求一般包含如下四点。</p><ol><li>用于分析的数据量一般会比在线业务的数据量高出几个数量级，这就要求存储系统能够<strong>保存海量数据</strong>。</li><li>并且还要能在海量数据上<strong>快速进行聚合、分析和查询的操作</strong>。注意，这里所说的“快速”，前提是处理GB、TB 甚至PB 级别的海量数据，在这么大的数据量上做分析，<strong>几十秒甚至几分钟都算是快速的了</strong>,这一点与在线业务要求的毫秒级速度是不一样的。</li><li>由于在大多数情况下，数据都是异步写入，因此系统<strong>对于写入性能和响应时延，要求一般不高</strong>。</li><li>由于分析类系统不用直接支撑前端业务，因此也<strong>不要求高并发</strong>。</li></ol><p>接下来我们看一下，可供选择的存储产品有哪些。如果系统的数据量在<strong>GB 量级以下，那么MySOL 依然是可以考虑的</strong>，因为它的查询能力足以应付大部分分析系统的业务需求。而且可以与在线业务系统合用一个数据库，不用做ETL(数据抽取),更简便而且实时性更好。当然最好能为分析系统配置单独的MySQL 实例，以避免影响在线业务。</p><p>如果数据量级已经<strong>超过了MySQL 的极限，则还可以选择一些列式数据库，比如Hbase、Cassandra、ClickHouse 等</strong>。这些产品对海量数据都有非常好的查询性能，在正确使用的前提下，<strong>10GB 量级的数据查询基本上可以做到秒级返回</strong>。不过，这些数据库对数据的组织方式会有一些限制，在查询方式上也没有MySQL那么灵活。还可以考虑Elasticsearch (ES)，<strong>ES 本来是一个为了搜索而生的存储产品</strong>，但是其<strong>也支持结构化数据的存储和查询，也支持分布式并行查询</strong>，因此其在海量结构化数据查询方面的性能也非常好。最重要的是ES 对数据组织方式和查询方式的限制,不像其他列式数据库那么死板。也就是说，ES 的查询能力和灵活性是要强于上述这些列式数据库的。不过,<strong>ES 也有一个缺点，那就是需要具有大内存的服务器</strong>，硬件成本比较高。</p><p>当数据量级<strong>超过TB 级的时候</strong>，对这么大量级的数据做统计分析,无论使用哪种存储系统，速度都快不了，这里的性能瓶颈主要在于磁盘IO 和网络带宽，这种情况下肯定做不了实时的查询和分析，这里可以采用的解决方案具定期对数据讲行聚合和计算，然后把结果保存起来，在需要时再对结果做一次查询。这么大量级的数据，一般是选择<strong>存储在HDFS 中，配合Spark、Hive 等大数据生态圈产品，对数据进行聚合和计算</strong>。</p><h2 id="转变思想：根据查询选择存储系统">转变思想：根据查询选择存储系统</h2><p>面对海量数据仅根据数据量级来选择存储系统是远远不够的。因为在过去几十年的时间里,存储技术和分布式技术，在基础理论方面并没有本质上的突破。技术发展更多的是体现在应用层面上，比如集群管理更加简单，查询更加自动化,像MapReduce 之类的产品就是如此。**不同的存储系统之间并没有本质的差异。它们的区别只在于，存储引擎的数据结构、存储集群的构建方式，以及提供的查询能力等这些方面的差异。这些差异，使得不同的存储系统只有在它所擅长的那些领域或场景下，才会有很好的性能表现。**比如我们前面说过的RocksDB 和LevelDB，它们的存储结构LSM-Tree 其实就是日志和跳表的组合，单从数据结构的时间复杂度上来说，相较于MySQL 所采用的B+树，LSM-Tree 并没有本质上的提升，它们的时间复杂度都是O(log n)。但是，LSM-Tree 在某些情况下利用日志能有更好的写性能表现。也就是说没有哪种存储能在所有情况下，都具有明显的性能优势，所以说，存储系统没有银弹，不要指望简单地更换一种数据库就可以解决数据量大、查询慢的问题。不过在特定的场景下，通过一些优化方法，把查询性能提升几十倍甚至几百倍这一点还是有可能的。这里有个很重要的思想就是，根据查询来选择存储系统和数据结构。比如我们经常用Elasticsearch 构建商品搜索系统，就是把这个思想实践得很好的一个例子。ES 采用的倒排索引的数据结构，并没有比 MySQL 的B+树更快,或者说更先进，但是面对“全文搜索”这个查询需求，相较于使用其他的存储系统和数据结构，使用ES 的倒排索引在性能上能高出几十倍。</p><p>说个大厂的实际例子，京东的物流速度是非常快的。京东的物流之所以能够做到这么快，有一个很重要的原因，那就是它有一套<strong>智能的补货系统</strong>。**根据历史的物流数据，对未来的趋势做出预测，来为全国的每个仓库补货。**这样京东就可以做到用户下单购买的商品，有很大概率就在离用户不远的京东仓库里，这样自然就能很快送达了。**这个系统在后台需要分析每天几亿条的物流数据，每条物流数据又细分为几段到几十段，因此每天的物流数据就是几十亿的量级。<strong>这份物流数据的用途非常大，比如</strong>智能补货系统要用；运力调度的系统也要用；评价每个站点、每个快递小哥的时效达成情况要用；物流规划人员同样也要用这个数据进行分析,并对物流网络做持续优化。**那么，采用什么样的存储系统来保存这些物流数据，才能满足这些查询的需求呢？显然，任何一种存储系统都无法满足这么多种查询的需求。需要根据每种需求的具体情况，专门为其选择适合的存储系统；定义适合的数据结构,解决各自的问题。而不是用一种数据结构及一个数据库去解决所有的问题。对于智能补货和运力调度这两个系统，**由于它们具有很强的区域性，因此京东把数据按照区域(省或地市)做分片，再汇总成一份全国的跨区域物流数据，这样绝大部分查询都可以落在一个分片上，查询性能就会很好。**<strong>对于站点和快递人员的时效达成情况，由于这种业务的查询方式大多以点查询为主，因此可以考虑在计算的时候，事先按照站点和快递人员把数据汇总好,存放到分布式KV 存储中，基本上就可以达到毫秒级查询的性能。而对于物流规划的查询需求，查询方式是多变的，把数据放到Hive 表中，按照时间进行分片。物流规划人员可以在上面执行一些分析类的查询任务，这样的查询任务即使是花上数小时的时间，用于验证一个新的规划算法，也是可以接受的。</strong></p><h1>商品系统的存储架构设计</h1><p>电商的商品系统所包含的主要功能就是增、删、改、查商品信息，业务逻辑比较简单，支撑的主要页面就是商品详情页。但是在设计商品系统的存储架构时,仍然需要着重考虑如下两个方面的问题。</p><ol><li>需要考虑<strong>高并发的问题</strong>。不管是哪种电商系统，商品详情页一定是整个系统中DAU(Daily Active User，日均访问人数)最高的页面之一。商品详情页DAU高的原因与用户使用电商App 的习惯息息相关，绝大部分用户浏览完商品详情页之后不一定会购买，但购买之前一定会浏览很多同类商品的详情页，正所谓“货比三家”。所以商品详情页的浏览次数要远高于系统的其他页面。如果在设计商品系统的存储架构时，没有考虑到高并发的问题，那么在电商系统举办大促活动（不是秒杀）的时候，海量的浏览请求会在促销开启的那一刻同时涌向系统，支撑商品详情页的商品系统必然是第一个被流量冲垮的系统。</li><li>需要考虑<strong>商品数据规模的问题</strong>。一般情况下，商品详情页的数据规模，对B2C 的电商系统来说，数量多，体量大。<ul><li>为什么说“数量多”？在国内一线的电商平台中，SKU 的数量大约在几亿到几十亿这个量级。商品数量级这么大的原因有很多，比如，同一个商品通常会有数种不同的版本型号，再比如商家为了促销需要，可能会反复上下架同一个商品，或者为同一个商品加上不同的“马甲”，这些原因都导致了SKU 数量巨大。</li></ul></li></ol><h2 id="商品系统需要保存哪些数据">商品系统需要保存哪些数据</h2><p>商品详情页一般展示的信息有：</p><ul><li>基本信息：标题、副标题、原价、价格、促销价、颜色〔规格型号）…….</li><li>详细信息：商品参数、商品介绍、图片视频…….</li><li>其他信息：促销信息、推荐商品、评价、评论、配送信息、店铺信息</li></ul><p>一般来说其他信息来自电商平台的其他系统，比如促销等等。我们暂且不讨论；基本信息和详细信息都是商品系统需要存储的内容。应该如何存储这么多内容呢?能不能像保存订单数据那样，设计一张商品表，把这些数据全部存放进去？或者说，一张表存不下就再加几张子表，这样存储行不行？其实并不是不可以。现今的一线电商企业，在发展的早期阶段采用的就是这种存储结构。而现今它们所采用的复杂的分布式存储架构，都是在发展的过程中逐步演进而来的。**用数据库表存储的好处就是“糙、快、猛”，简单、可靠而且容易实现，但是缺点是，表能支撑的数据量有限，以及无法满足高并发的需求。如果只是低成本且快速构建一个小规模的电商，这可能会是相对比较合理的选择。**当然规模一旦变大，就不能再采用数据库表存储这种简单粗暴的方案了。如果不能用数据库,那么我们应该选择哪种存储系统来保存这么复杂的商品数据呢？在目前的情况下，<strong>任何一种存储方案都无法完全满足全部需求，最好的解决方案是分而治之，即把商品系统需要存储的数据，按照特点分成商品基本信息、商品参数、图片视频和商品介绍几个部分，分别进行存储。</strong></p><h2 id="如何存储商品的基本信息">如何存储商品的基本信息</h2><p>首先我们分析一下商品的基本信息，其中主要包括商品的主副标题、价格、颜色等一些最基本、最主要的属性。这些属性都是固定的，不太可能会因为需求改变或不同的商品而变化，而且这部分数据不会太大，所以<strong>可以在数据库中建一张表来保存商品的基本信息</strong>。然后，我们还需要<strong>在数据库前面加一个缓存</strong>，以帮助数据库抵挡绝大部分的读请求。当然对于缓存数据的一致性，可以采用Cache Aside 更新策略。但是设计商品基本信息表的时候，需要特别注意的一点是，一定要记得<strong>保留商品数据的每一个历史版本。<strong>因为商品数据是随时变化的，但是</strong>订单中关联的商品数据，必须是下单那个时刻的商品数据</strong>。解决方案则是，在对商品数据进行修改时，要为每个历史版本的商品数据保存一个快照，<strong>可以创建一个历史表保存到MySQL 中，或者其他的存储系统都可以。</strong></p><h2 id="使用-MongoDB-保存商品参数">使用 MongoDB 保存商品参数</h2><p>商品参数就是商品的特征,比如,电脑的内存大小、手机的屏幕尺寸、酒的度数、口红的色号等等。与商品的基本属性一样，参数也是结构化的数据。关于参数需要解决的一个难题是，不同类型的商品其参数是完全不一样的。如果要设计一个商品参数表，那么这个表所要包含的字段就太多了，并且每增加一个品类的商品，这个表就要加入新的字段，所以这个方案行不通。大多数数据库都要求数据表要有一个固定的结构，但MongoDB 没有这个要求，特别适合用于保存像“商品参数”这种属性不固定的数据。MongoDB 最大的特点是，它的“表结构”是不需要事先定义的或者说MongoDB 中根本就没有表结构。由于没有表结构，因此 MongoDB 可以把任意数据都放在同一张表里。MongoDB 也支持按照数据的某个字段进行查询。<strong>MongoDB 可以很好地满足商品参数信息数据量大、数据结构不统一等特性，而且我们也不需要对商品参数进行事务和多表联查</strong>，所以商品参数比较适宜存入MongoDB。</p><h2 id="使用对象存储保存商品图片和视频">使用对象存储保存商品图片和视频</h2><p>图片和视频所占用的存储空间比较大，因此一般的存储方式是<strong>在数据库中只保存图片和视频的ID 或URL</strong>，实际的图片和视频则以文件的方式单独存储。现今，图片和视频的存储技术已经非常成熟了，首选的方式是保存在对象存储（Object Storage）中。各大云厂商都提供了对象存储服务，对图片和视频都进行了大量有针对性的优化。比如，国内的七牛云、阿里云等等。这样上传图片和视频的时候，可以直接保存到对象存储中，然后把对应的键保存在商品系统。访问图片和视频的时候，真正的图片和视频文件，也不需要经过商品系统的后端服务进行读取，而是在Web 页面上通过对象存储提供的URL 直接访问，而且几乎所有的对象存储云服务都自带CDN (Content Delivery Network，内容分发网络)加速服务，响应时间比直接请求业务的服务器更短。</p><h2 id="商品介绍静态化">商品介绍静态化</h2><p>商品介绍在商品详情页中所占的比重是最大的，其中包含了大量的带格式文字、图片和视频。图片和视频自然要存放在对象存储中，而关于商品介绍的文本这部分内容基本上是不会频繁改变的，则一般是随着商品详情页一起静态化，保存在HTML 文件中。<strong>商品详情页静态化之后，不仅可以节省服务器资源，还可以利用CDN 加速</strong>，把商品详情页放到离用户最近的CDN 服务器上，让商品详情页的访问变得更快。至于商品价格、促销等变动的信息，由于不能将其静态化到页面中因此可以在前端而面使用AJAX 请求商品系统动态获取。我们的秒杀系统就使用了商详页的静态化，在一般的大厂会有<strong>专门的CMS（内容管理系统）负责商详页的静态化</strong>。</p><h1>购物车系统的存储架构</h1><p>购物车系统主要用于在用户选购商品时暂存用户想要购买的商品。购物车系统对数据可靠性的要求不高，对性能也没有特别的要求，在整个电商系统中属于相对比较容易设计和实现的一个子系统。购物车系统主要包含如下功能。<strong>把商品加入购物车。展示购物车列表页，发起结算下单</strong>。<strong>购物车实体的主要属性包括SKUID(商品ID)、数量、加购时间和勾选状态</strong>。其中,“勾选状态”属性，即购物车界面中每件商品前面的那个小对号，表示在结算下单时是否要包含这件商品。<strong>至于商品的价格和总价，以及商品介绍等信息，可以从电商的其他系统中实时获取，不需要购物车系统专门保存。</strong></p><h2 id="设计购物车系统的存储架构时需要把握什么原则">设计购物车系统的存储架构时需要把握什么原则</h2><p>请思考下面这几个问题</p><ol><li>如果用户没有登录网站，而是直接在浏览器中将商品加入购物车，那么关闭浏览器后再次打开购物网站，刚才加入购物车的商品是否还在？</li><li>如果用户没有登录网站，而是直接在浏览器中将商品加入购物车、然后再登录，那么刚才加入购物车的商品是否还在？</li><li>再打开手机App，用相同的用户账号登录，第2步中加入购物车的商品是否还在？</li></ol><p>一般情况下：</p><ol><li>即使用户没有登录网站,加入购物车的商品信息也会保存在用户的电脑里，这样关闭浏览器后再打开，购物车的商品仍然存在。</li><li>如果用户先加入购物车，再登录购物网站，那么登录前加入购物车的商品就会自动归并到用户名下的购物车中，所以登录后购物车中仍然有登录前加入购物车的商品。</li><li>使用手机App 登录相同的用户账号,看到的就是该用户的购物车，这时无论是在手机App、电脑还是微信中登录,只要是相同的用户，看到的就是同一个购物车，所以第2 步中加入购物车的商品是存在的。</li></ol><p>所以总之</p><ol><li><strong>如果用户未登录，则需要暂存购物车中的商品</strong>。</li><li><strong>用户登录时，系统需要把暂存在购物车中的商品合并到用户的购物车中,并且清除暂存的购物车</strong>。</li><li>用户登录后,购物车中的商品需要在浏览器、手机App 和微信等终端中<strong>保持同步</strong>。</li></ol><p>也就是说，<strong>购物车系统需要保存两类购物车，一类是未登录情况下的“暂存购物车”，另一类是登录后的“用户购物车”</strong>。当然如果系统业务约束用户必须登录后才能将物品放入购物车，那就没有暂存购物车一说了，<strong>早期的淘宝和京东都是允许用户未登录的暂存购物车，现在已经要求用户必须登录了</strong>。会不会被劫持攻击？黑客向你的暂存购物车中注入商品。</p><h2 id="如何设计“暂存购物车”的存储">如何设计“暂存购物车”的存储</h2><p>暂存购物车的数据应该保存在客户端还是服务端？如果保存在服务端，那么每个暂存购物车都需要有一个全局唯一的标识，这个标识不太好设计，而且还会浪费服务端的资源。所以<strong>将暂存购物车的数据保存在客户端</strong>会更好，既可以节约服务器的存储资源，也不用考虑购物车标识的问题，因为各个客户端只需要保存自己唯一一个购物车就可以了，所以不需要额外标识。浏览器客户端可以选择的存储并不多，只有Session、Cookie 和LocalStorage。暂存购物车的数据存在哪里最合适呢？保存在Session 中是不太合适的，因为Session 的保留时间较短,而且 Session 的数据实际上还是保存在服务端。剩余的两种存储Cookie 和 LocalStorage 都可以用来保存购物车数据，选择哪种方式更好呢？答案是各有优劣。在上述场景中，使用Cookie 和LocalStorage 最关键的区别是，<strong>客户端与服务端的每次交互都会自动带着Cookie 数据往返，这样服务端就可以读写客户端Cookie 中的数据了，而LocalStorage 中的数据只能通过客户端访问。</strong></p><p>使用Cookie 存储实现起来比较简单。在加减购物车、合并购物车的过程中,由于服务端可以读写Cookie，因此全部逻辑都可以在服务端实现，而且客户端和服务端请求的次数相对也少一些。使用LocalStorage 存储，实现相对复杂一些，客户端和服务端都要实现一些业务逻辑，但<strong>使用LocalStorage 的好处是，它的存储容量比Cookie 的4KB 上限要大得多</strong>，而且不用像Cookie 那样，无论用不用得上，每次请求都要带着Cookie，因此<strong>LocalStorage 更能节省带宽</strong>。所以选择Cookie 或LocalStorage 来存储暂存购物车都是可以的，我们可以根据自己的需求来选择。<strong>如果是个小型电商系统，那么选择Cookie 来存储，实现起来会更简单。但如果电商系统面对的用户需要或者喜欢加购大量的商品（比如批发的行业用户），这种情况下选择LocalStorage 更合适。</strong></p><h2 id="用户购物车的存储">用户购物车的存储</h2><p>因为用户购物车必须保证多端的数据同步，所以其数据必须保存在服务端。常规的思路是设计一张购物车表，把数据存在MySQL 中。但是要注意要在user_id 上建一个索引，因为查询购物车表时，是以user_id作为查询条件来进行操作的。也可以选择更快的Redis，以用户ID 作为Key，以一个HASH 作为Value 来保存购物车中的商品。从读写性能上来说Redis 比MySQL 快很多，但是MySQL 的数据可靠性是要好于Redis 的。不过**购物车里的数据，其对可靠性的要求并没有那么苛刻，丢失少量数据的后果也就是个别用户的购物车少了几件商品，问题通常不是很大。所以,在购物车的场景下，Redis 的数据可靠性不高这个缺点并不是不能接受的。**不过,每个电商系统都有其个性化的需求，如果需要以其他方式访问购物车的数据，比如，**统计某一天加入购物车的商品总数，那么使用MySOL.存储数据很容易就能实现,而使用Redis 存储，查询起来就会非常麻烦且低效。**综合比较下来，<strong>考虑到需求总是会不断发生变化这个普遍情况，一般还是推荐使用MySQL 来存储购物车的数据。如果追求高性能，或者支持高并发，则可以加入Redis 来抗压力，比如在用户登录时将用户购物车数据加载入缓存，对购物车的变化可以直接操作缓存，异步的方式写入数据库。</strong></p><p>总的来说，存储架构的设计过程就是一个不断做选择题的过程。很多情况下，可供选择的方案不止一套，选择的时候需要考虑实现的复杂度、性能、系统可用性、数据可靠性、可扩展性等多方面的影响因素。需要强调的是,<strong>这些因素中的每一个都是可以根据业务适当牺牲的</strong>。比如我们一般都会认为数据是绝对不可以丢失的，也就是说不能牺牲数据的可靠性。但是像用户购物车的存储，<strong>使用Redis 替代MySQL 就是牺牲了数据的可靠性来换取高性能。即在购物车这样的场景下，很低概率地丢失少量数据是可以接受的。如果性能提升带来的收益远大于丢失少量数据所付出的代价，那么这个选择就是合理的。如果说不考虑需求变化的因素，牺牲一点点数据可靠性换取大幅度的性能提升，那么选择Redis 是最优解。</strong></p><h1>总结梳理</h1><h2 id="存储系统的技术选型">存储系统的技术选型</h2><ol><li><p><strong>在线业务系统? 分析系统?</strong></p></li><li><p><strong>数据量.</strong> 不必对未来做过多的预留, 最多三年来估计就足够了</p><ol><li><p>1GB以下或数据量在千万以下：都可以</p></li><li><p>1-10G或数据量在一亿以内：单机存储系统的上限</p></li><li><p><strong>超过10GB或数据量超过一亿：分布式存储，数据分片</strong></p></li></ol></li><li><p>**总体拥有成本：**团队是否熟悉该产品；是否简单、易于学习和使用；运维成本</p></li></ol><h2 id="在线业务系统（增删改查）">在线业务系统（<strong>增删改查</strong>）</h2><ul><li><p><strong>MySOL一般是首选：写性能、毫秒级、并发、强大的查询能力</strong></p></li><li><p>存储选型</p><ul><li><p>GB级：MySQL</p></li><li><p>超过GB级：ES，Hbase、Cassandra、ClickHouse</p></li><li><p>超过TB级：HDFS；只能事先对数据做聚合计算，然后再在聚合计算的结果上进行实时查询</p></li></ul></li><li><p><strong>商品系统（高并发、SKU数据规模）</strong></p><ul><li><p><strong>小规模的电商：用数据库表存储</strong></p></li><li><p><strong>分而治之：把商品系统需要存储的数据，按照特点分别进行存储</strong></p><ul><li><p><strong>可以在数据库中建一张表来保存商品的基本信息，在数据库前面加一个缓存</strong></p></li><li><p><strong>保留商品数据的每一个历史版本：订单中关联的商品数据，必须是下单那个时刻的商品数据</strong></p></li><li><p><strong>使用 MongoDB 保存商品参数（参数信息数据量大、数据结构不统一，不需要对商品参数进行事务和多表联查）</strong></p></li><li><p><strong>使用对象存储保存商品图片和视频（在数据库中只保存图片和视频的ID或URL）</strong></p></li><li><p><strong>商品介绍静态化+CDN：CMS（内容管理系统）</strong></p></li></ul></li></ul></li><li><p><strong>购物车系统（展示、结算）：存储SKUID(商品ID)、数量、加购时间和勾选状态。商品的价格和总价，以及商品介绍等信息，可以从电商的其他系统中实时获取，不需要购物车系统专门保存</strong></p><ul><li><p><strong>暂存购物车（用户未登录时加入的购物车）</strong></p><ul><li><p><strong>小型电商系统：Cookie存储</strong></p></li><li><p><strong>节省带宽：LocalStorage</strong></p></li></ul></li><li><p><strong>用户购物车（保持同步）</strong></p><ul><li><p>复杂查询：MySQL</p></li><li><p>高性能高并发：Redis（对可靠性要求不高），异步写入DB</p></li></ul></li></ul></li><li><p>选择方案：复杂度、性能、系统可用性、数据可靠性、可扩展性</p><ul><li><p><strong>这些因素中的每一个都是可以根据业务适当牺牲的</strong></p></li><li><p><strong>如果性能提升带来的收益远大于丢失少量数据所付出的代价，那么这个选择就是合理的</strong></p></li></ul></li></ul><h2 id="离线分析系统-（海量数据的存储和计算）">离线分析系统 （海量数据的存储和计算）</h2><ul><li><p>前端海量数据（<strong>前端埋点数据、监控数据和日志数据</strong>）：<strong>先存储再计算</strong></p><ul><li><p><strong>一般都会选择Kafka/RocketMQ 来存储</strong></p></li><li><p>如果是需要长时间(几个月到几年)保存的海量数据，适合用<strong>HDFS之类的分布式文件系统来存储</strong></p></li><li><p>时序数据库<strong>InfluxDB：专用于存储类似于监控之类的有时间特征，并且数据内容都是数值的数据</strong></p></li></ul></li><li><p><strong>提高查询速度：流计算或批计算，几十秒甚至几分钟都算是快速的</strong></p><ul><li><p><strong>把计算结果保存到另外一个存储系统</strong></p></li><li><p><strong>对于写入性能和响应时延，要求一般不高，也不要求高并发</strong></p></li><li><p>数据库选型</p><ul><li><p>GB级以下：MySQL</p></li><li><p>超过MySQL极限：<strong>Hbase、Cassandra、ClickHouse</strong></p><ul><li><strong>10GB量级的数据查询基本上可以做到秒级返回</strong></li></ul></li><li><p><strong>ES：支持结构化数据的存储和查询，也支持分布式并行查询</strong></p><ul><li>缺点：需要具有大内存的服务器</li></ul></li><li><p>超过TB级：<strong>HDFS、Spark、Hive</strong></p></li></ul></li></ul></li><li><p><strong>根据查询选择存储系统：不同的存储系统之间并没有本质的差异，只有在它所擅长的那些领域或场景下，才会有很好的性能表现</strong></p></li><li><p><strong>京东智能的补货系统：根据历史的物流数据，对未来的趋势做出预测，为全国的每个仓库补货（几十亿的量级）</strong></p><ul><li><p><strong>按照区域做分片，再汇总</strong></p></li><li><p><strong>站点和快递人员的时效达成情况：事先按照站点和快递人员把数据汇总好,存放到分布式KV存储中</strong></p></li><li><p><strong>物流规划：把数据放到Hive 表中，按照时间进行分片</strong></p><ul><li>物流规划人员可以在上面执行一些分析类的查询任务，这样的查询任务即使是花上数小时的时间，用于验证一个新的规划算法，也是可以接受的</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 海量数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.RockDB</title>
      <link href="/2023/07/11/architect/03.xing-neng-diao-you/04.rockdb/01-rockdb/"/>
      <url>/2023/07/11/architect/03.xing-neng-diao-you/04.rockdb/01-rockdb/</url>
      
        <content type="html"><![CDATA[<p>RocksDB 是Facebook 开源的一个高性能、持久化的KV存储引擎，最初是Facebook 的数据库工程师团队基于Google LevelDB 开发。一般来说我们很少见到过哪个项目直接使用RocksDB 来保存数据，即使未来大概也不会像Redis 那样被业务系统直接使用。</p><p>但是越来越多的新生代数据库都选择RocksDB 作为它们的存储引擎。比如：</p><ul><li>CockroachDB（中文名蟑螂，一个开源、可伸缩、跨地域复制且兼容事务的ACID特性的分布式数据库，思路源自Google 的全球性分布式数据库 Spanner。其理念是将数据分布在多数据中心的多台服务器上）</li><li>YugabyteDB，Tidb 作为CockroachDB 的竞争产品，底层也是RocksDB开源项目MyRocks 使用RocksDB 给MySQL 做存储引擎，目的是取代现有的InnoDB 存储引擎。</li><li>MySQL 的亲兄弟 MariaDB 也已经接纳了MyRocks，作为它的存储引擎。</li><li>实时计算引擎Flink，其State 就是一个KV 存储,它使用的也是RocksDB。</li><li>此外包括MongoDB、Cassandra、Hbase 等在内的很多数据库,都在开发基于RocksDB 的存储引擎。</li><li></li></ul><p>这其中的主要原因就是RocksDB 高性能、支持事务。随机读最高可以达到19W/S，平均水平13W/S，覆盖操作可以达到9W/S，多读单写的情况下在10W/S 左右。批量写入5000 万数据，RocksDB 只花了1m26.9s，在几个对照引擎中（LevelDB与RocksDB 与HyperLevelDB 与LMDB），RocksDB 读取和删除方面表现最好，InfluxDB 也认为根据测试用例，RocksDB 作为存储引擎是个非常好的选择</p><h1>RocksDB VS Redis</h1><p>说到KV存储,我们最熟悉的就是Redis了。RocksDB 和 Redis 都是KV 存储。其实Redis 和 RocksDB 之间并没有可比性，一个是缓存，一个是数据库存储引擎。Redis 是一个内存数据库，它的性能非常好，主要原因之一是它的数据全都保存在内存中。按照 Redis 官方网站提供的测试数据来看，它的随机读写性能大约为50 万次/秒，当然我们普遍的认可的说法是10W/S。从我们上面的文字可以看到RocksDB 相应的随机读写性能大约为20 万次/秒，<strong>虽然其性能还不如 Redis，但是已经可以算是在同一个量级水平了，毕竟一个是内存操作，另一个是磁盘IO操作。</strong></p><p>但是我们也知道，Redis 只是一个内存数据库，并不是一个可靠的存储引擎。在Redis 中，数据写到内存中就算成功了，其并不能保证将数据安全地保存到磁盘上。而 RocksDB 则是一个持久化的KV 存储引擎，它需要保证每条数据都已安全地写到磁盘上。这种情况下，RocksDB 的优势就很明显，磁盘的读写性能与内存的读写性能本就相差了一两个数量级，读写磁盘的RocksDB 能达到与读写内存的Redis 相近的性能这就是RocksDB 的价值所在了。一个存储系统的读写性能主要取决于它的存储结构，也就是数据是如何组织的。RocksDB 采用了一个非常复杂的数据存储结构，并且这个存储结构采用了内存和磁盘混合存储的方式，它使用磁盘来保证数据的可靠存储的,并且会利用速度更快的内存来提升读写性能。</p><p>RocksDB 为什么能实现这么高的写入性能呢？大多数存储系统为了能够实现快速查找都会采用树或哈希表之类的存储结构。数据在写入的时候必须写到特定的位置上。比如,我们在向B+树中写入一条数据时，必须按照B+树的排序方式,写到某个固定的节点下面。哈希表也与之类似，必须要写到特定的哈希槽中。这样的数据结构会导致在写入数据的时候,不得不先在磁盘的这里写一部分，再到那里写一部分这样跳来跳去地写，即我们所说的“随机写”。MySQL 为了减少随机读写，下了不少功夫。<strong>而RocksDB 的数据结构，可以保证写入磁盘的绝大多数操作都是顺序写入的。</strong></p><p>Kafka 所采用的也是顺序读写的方式，所以读写性能也非常好。凡事有利也有弊，这种数据基本上是没法查询的因为数据没有结构,只能采用遍历的方式。RocksDB 究竟如何在保证数据顺序写入的前提下，还能兼顾很好的查询性能呢?？其实使用了数据结构LSM-Tree。</p><h1>LSM-Tree 如何兼顾读写性能</h1><p>LSM-Tree 的全称是The Log-Structured Merge-Tree，是一种非常复杂的复合数据结构。它包含了WAL (Write Ahead Log)、跳表(SkipList)和一个分层的有序表(Sorted String Table, SSTable)，LSM-tree 专门为key-value 存储系统设计的，以牺牲部分读取性能为代价提高写入性能，通常适合于写多读少的场景。</p><p>数据的写入过程。当LSM-Tree 收到一个写请求时，比如“PUT foo bar”，即把Key foo 的值设置为bar，这条操作命令会被<strong>写入磁盘的 WAL 日志中</strong>，图中右侧的Log，<strong>这是一个顺序写磁盘的操作</strong>，性能很好。这个日志的<strong>唯一作用就是从故障中恢复系统数据</strong>，一旦系统宕机，就可以根据日志把内存中还没有来得及写入磁盘的数据恢复出来。写完日志之后，数据可靠性的问题就解决了**。然后数据会被写入内存的MemTable 中**，这个 <strong>MemTable 就是一个按照Key 组织的跳表</strong>(SkipList)，跳表的查找性能与平衡树类似，但实现起来更简单一些。写MemTable 是一项内存操作，速度也非常快。</p><p>数据<strong>写入MemTable 之后就可以返回写入成功</strong>的信息了。不过LSM-Tree 在处理写入数据的过程中会<strong>直接将Key 写入 MemTable，而不会预先查看MemTable中是否已经存在该Key</strong>。很明显MemTable 不能无限制地写入内存，一是内存的容量毕竟有限，另外，<strong>MemTable 太大会导致读写性能下降</strong>。所以MemTable 有一个固定的上限大小,一般是<strong>32MB</strong>。<strong>MemTable 写满之后，就会转换成Immutable(不可变的)MemTable，然后再创建一个空的MemTable 继续写</strong>。这个Immutable MemTable 是只读的MemTable，它与MemTable 的数据结构完全一样唯一的区别就是不允许再写入了。<strong>Immutable MemTable 也不能在内存中无限地占地方，而是会有一个后台线程，不停地把Immutable MemTable 复制到磁盘文件中，然后释放内存空间。每个Immutable MemTable 对应于一个磁盘文件</strong>，MemTable 的数据结构跳表本身就是一个有序表，写入文件的数据结构也是按照Key 来排序的，<strong>这些文件就是SSTable</strong>。由于把MemTable 写入 SSTable 的这个写操作,是把整块内存写入整个文件中，因此该操作同样也是一个顺序写操作。虽然数据已经保存到磁盘上了，而且<strong>这些SSTable 文件中的Key 是有序的,但是文件之间却是完全无序的，所以还是无法查找。SSTable 采用了一个分层合并机制来解决这个问题。SSTable 被分为很多层，每一层的容量都有一个固定的上限。</strong></p><p>一般来说，<strong>下一层的容量是上一层的10 倍</strong>。<strong>当某一层写满时，就会触发后台线程往下一层合并，数据合并到下一层之后，本层的SSTable 文件就可以删除了。合并的过程也是排序的过程，除了Level 0 以外，每层中的文件都是有序的</strong>,文件内的KV 也是有序的，这样就比较便于查找了。**LSM-Tree 查找的过程也是分层查找，先在内存中的 MemTable 和Immutable MemTable 中查找，然后再按照顺序依次在磁盘的每层SSTable 文件中查找，一旦找到了就直接返回。<strong>看起来这样的查找方式很低效的，可能需要多次查找内存和多个文件才能找到一个Key，但实际上这样一个分层的结构，它会天然形成一个非常有利于查找的状况，即</strong>越是经常被读写到的热数据，它在这个分层结构中就越靠上，对这样的Key 查找就越快。**比如最经常读写的Key 很大概率会在内存中，这样不用读写磁盘就能完成查找。即使在内存中查不到真正需要穿透很多层SSTable，一直查到最底层的请求,实际也还是很少的。另外在工程实现上，还会做很多优化。</p><p>比如RocksDB 里，<strong>为存储的数据逻辑分族，独特的filter 对读优化，使用多个memtable 并在immutbale memtable 提前进行数据合并的优化</strong>，<strong>在内存中缓存SSTable文件的Key用布隆过滤器避免无谓的查找等，以加速查找过程</strong>；不同的合并算法，SSTFile-Indexing 机制，针对sstfile 有自己的block cache 和table cache。这样综合优化下来最终的性能，尤其是查找会相对较好。</p><h2 id="流程总结">流程总结</h2><ol><li>操作命令写入磁盘的 WAL 日志中（顺序写）：唯一作用就是从故障中恢复系统数据</li><li>写入内存的MemTable中（按照Key组织的跳表，MemTable 太大会导致读写性能下降，一般是32MB）<ol><li>直接将Key 写入 MemTable，而不会预先查看MemTable中是否已经存在该Key</li><li>写入MemTable之后就可以返回写入成功</li></ol></li><li>MemTable写满之后，就会转换成Immutable(不可变的)MemTable，然后再创建一个空的MemTable继续写<ol><li>Immutable MemTable也不能在内存中无限地占地方，而是会有一个后台线程，不停地把Immutable MemTable复制到磁盘文件中，然后释放内存空间。</li><li>每个Immutable MemTable 对应于一个磁盘文件，这些文件就是SSTable（这些SSTable文件中的Key是有序的,但是文件之间却是完全无序的，所以还是无法查找）</li></ol></li><li>SSTable 采用分层合并机制，SSTable被分为很多层，每一层的容量都有一个固定的上限。下一层的容量是上一层的10倍。<ol><li>当某一层写满时，就会触发后台线程往下一层合并</li><li>数据合并到下一层之后，本层的SSTable文件就可以删除了</li><li>合并的过程也是排序的过程，除了Level 0以外，每层中的文件都是有序的</li></ol></li><li>LSM-Tree 查找的过程也是分层查找<ol><li>先在内存中的 MemTable 和Immutable MemTable 中查找，然后再按照顺序依次在磁盘的每层SSTable 文件中查找，一旦找到了就直接返回</li><li>越是经常被读写到的热数据，它在这个分层结构中就越靠上，对这样的Key 查找就越快</li><li>在内存中缓存SSTable文件的Key用布隆过滤器避免无谓的查找等，以加速查找过程</li><li>使用多个memtable并在immutbale memtable提前进行数据合并的优</li><li>为存储的数据逻辑分族，独特的filter 对读优化</li></ol></li></ol><h1>总结梳理</h1><p>虽然其性能还不如 Redis，但是已经可以算是在同一个量级水平了，毕竟一个是内存操作，另一个是磁盘IO操作。RocksDB 的数据结构，可以保证写入磁盘的绝大多数操作都是顺序写入的。</p><h2 id="LSM-Tree-如何兼顾读写性能">LSM-Tree 如何兼顾读写性能</h2><ol><li><p>操作命令写入磁盘的 WAL 日志中（顺序写）：唯一作用就是从故障中恢复系统数据</p></li><li><p>写入内存的MemTable中（按照Key组织的跳表，MemTable 太大会导致读写性能下降，一般是32MB）</p><ol><li><p>直接将Key 写入 MemTable，而不会预先查看MemTable中是否已经存在该Key</p></li><li><p>写入MemTable之后就可以返回写入成功</p></li></ol></li><li><p>MemTable写满之后，就会转换成Immutable(不可变的)MemTable，然后再创建一个空的MemTable继续写</p><ol><li><p>Immutable MemTable也不能在内存中无限地占地方，而是会有一个后台线程，不停地把Immutable MemTable复制到磁盘文件中，然后释放内存空间。</p></li><li><p>每个Immutable MemTable 对应于一个磁盘文件，这些文件就是SSTable（这些SSTable文件中的Key是有序的,但是文件之间却是完全无序的，所以还是无法查找）</p></li></ol></li><li><p>SSTable 采用分层合并机制，SSTable被分为很多层，每一层的容量都有一个固定的上限。下一层的容量是上一层的10倍。</p><ol><li><p>当某一层写满时，就会触发后台线程往下一层合并</p></li><li><p>数据合并到下一层之后，本层的SSTable文件就可以删除了</p></li><li><p>合并的过程也是排序的过程，除了Level 0以外，每层中的文件都是有序的</p></li></ol></li><li><p>LSM-Tree 查找的过程也是分层查找</p><ol><li><p>先在内存中的 MemTable 和Immutable MemTable 中查找，然后再按照顺序依次在磁盘的每层SSTable 文件中查找，一旦找到了就直接返回</p></li><li><p>越是经常被读写到的热数据，它在这个分层结构中就越靠上，对这样的Key 查找就越快</p></li><li><p>在内存中缓存SSTable文件的Key用布隆过滤器避免无谓的查找等，以加速查找过程</p></li><li><p>使用多个memtable并在immutbale memtable提前进行数据合并的优</p></li><li><p>为存储的数据逻辑分族，独特的filter 对读优化</p></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 性能调优 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RockDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14.高并发读写</title>
      <link href="/2023/07/11/architect/06.dian-shang-xi-tong/14-gao-bing-fa-du-xie/"/>
      <url>/2023/07/11/architect/06.dian-shang-xi-tong/14-gao-bing-fa-du-xie/</url>
      
        <content type="html"><![CDATA[<ul><li>侧重于“高并发读”的系统<ul><li>搜索引擎</li><li>电商的商品搜索</li><li>电商系统的商品描述、图片和价格</li></ul></li><li>侧重于“高并发写”的系统<ul><li>广告扣费系统</li></ul></li><li>同时有“高并发读”和“高并发写”的系统<ul><li>电商的库存系统和秒杀系统</li><li>支付系统和微信红包</li><li>IM、微博和朋友圈</li></ul></li></ul><h1>高并发读</h1><ul><li>加缓存/读副本<ul><li>本地缓存或集中式缓存（主动更新/被动更新）<ul><li>高可用问题</li><li>不回源策略：缓存为空时直接返回空，不设置缓存的过期时间</li><li>回源策略：缓存为空时查库更新缓存<ul><li>缓存穿透/缓存击穿/热Key过期/缓存雪崩</li></ul></li></ul></li><li>MySQL 的 Master/Slave</li><li>CDN/静态文件加速/动静分离</li></ul></li><li>并发读<ul><li>异步RPC</li><li>冗余请求：100台机器每台延迟率为1%，则C端延迟率为 (1-99%<sup>100</sup>)=63.4%<ul><li>客户端同时向多台服务器发送请求，哪个返回得快就用哪个（但是会调用量翻倍）</li><li>对冲请求<ul><li>如果客户端在一定的时间内（内部服务95%请求的响应时间）没有收到服务端的响应，则马上给另一台（或多台）服务器发送同样的请求</li><li>采用这种方法，可以仅用2%的额外请求将系统99.9%的请求响应时间从1800ms 降低到74ms</li></ul></li><li>捆绑请求<ul><li>当一个上游系统向下游系统分发请求时，将请求分发给任务队列较短，负载较轻的服务器，因为服务抖动一个常见的来源是请求被执行前在服务端的排队延迟</li><li>但是探测负载后服务器负载会发生变化，而且多个服务探测到一个低负载服务时，会使该服务瞬间过热<ul><li>上游系统同时发送两个一样的请求给下游多个服务器，当下游服务器处理完成后，通知其他服务器不用再处理该请求。</li><li>为了防止由于任务队列为空而导致的所有服务器同时处理任务的情况，上游系统需要在发给下游多个系统的两个请求之间引入一个延迟，该延迟时间要足够第一个系统处理完任务并通知其他系统。</li></ul></li></ul></li><li>不要在底层设置太长的任务队列，而由上层基于任务的优先级进行动态的下发<ul><li>自己维护一个队列允许服务器跳过那些更早到来的非延迟敏感的批处理操作，优先往下传那些高优先级的交互请求</li></ul></li><li>将需要长时间运行的任务拆成多个短时间运行的任务</li><li>控制好定时任务和后台运行的任务<ul><li>将后台的大任务拆分成一系列的小任务，在后台任务运行的时候首先确认系统的负载，如果负载太高，则延迟运行后台任务等</li></ul></li></ul></li></ul></li><li>重写轻读<ul><li>微博Feeds流：不是查询的时候再去聚合，而是提前为每个user_id准备一个Feeds流，或者叫收件箱，每个用户都有一个发件箱和收件箱<ul><li>写扩散：发布1条微博后，只写入自己的发件箱就返回成功。然后后台异步地把这条微博推送到1000个粉丝的收件箱</li><li>限制数量：Redis最多保存2000条，2000条以外的丢弃。2000个以前的数据持久化存储并且支持分页查询<ul><li>DB分库分表同时按user_id和时间范围进行分片</li><li>DB二级索引：记录<code>&lt;user_id,月份,count&gt;</code>，快速地定位到offset = 5000的微博发生在哪个月份，也就是哪个数据库的分片</li></ul></li><li>推拉结合：大V的粉丝太多了<ul><li>对于粉丝数多的用户，只推送给在线的粉丝们，离线用户上线时主动去拉</li></ul></li></ul></li><li>多表的关联查询：宽表与搜索引擎<ul><li>分库分表下的关联查询：提前把关联数据计算好，存在一个地方，读的时候直接去读聚合好的数据，而不是读取的时候再去做Join</li><li>可以另外准备一张宽表：把要关联的表的数据算好后保存在宽表里<ul><li>可以定时算，也可能任何一张原始表发生变化之后就触发一次宽表数据的计算</li><li>ES搜索引擎：把多张表的Join结果做成一个个的文档</li></ul></li></ul></li></ul></li><li>读写分离（CQRS 架构）<ul><li>分别为读和写设计不同的数据结构</li><li>写-分库分表；读-缓存；join宽表存ES</li><li>读和写的串联<ul><li>定时任务定期把业务数据库中的数据转换成适合高并发读的数据结构</li><li>写的一端把数据的变更发送到消息中间件，然后读的一端消费消息</li><li>直接监听业务数据库中的 Binlog，监听数据库的变化来更新读的一端的数据</li></ul></li><li>读比写有延迟（最终一致性）<ul><li>但是对对于用户自己的数据，自己写自己读，在用户体验上肯定要保证自己修改的数据马上能看到<ul><li>读和写完全同步</li><li>异步的，但要控制读比写的延迟非常小,用户感知不到</li></ul></li><li>保证数据不能丢失、不能乱序</li></ul></li></ul></li></ul><h1>高并发写</h1><ul><li>数据分片：对要处理的数据或请求分成多份并行处理<ul><li>分库分表</li><li>ES分布式索引：并行地在n个索引上查询，再把查询结果进行合并</li></ul></li><li>异步化：凡是不阻碍主流程的业务逻辑，都可以异步化，放到后台去做<ul><li>短信验证码注册或登录：60s之后没有收到短信，用户会再次点击</li><li>电商的订单系统：拆单<ul><li>支付完成后，服务器会立即返回成功，而不是等1个拆成3个之后再返回成功</li></ul></li><li>广告计费系统<ul><li>在扣费之前其实还有一系列的业务逻辑要处理，比如判断是否为机器人在刷单</li><li>实际上用户的点击请求或浏览请求首先会以日志的形式进行落盘。一般是支持持久化的消息队列</li><li>落盘之后，立即给客户端返回数据。后续的所有处理，当然也包括扣费，全部是异步化的，而且会使用流式计算模型完成后续的所有工作。</li></ul></li><li>写内存 + Write-Ahead 日志：MySQL 中为了提高磁盘IO 的写性能，使用了Write-Ahead 日志，也就是Redo Log。<ul><li>高并发地扣减 MySOL 中的账户余额，或者电商系统中扣库存，如果直接在数据库中扣，数据库会扛不住，则可以在Redis 中扣，同时落一条日志（日志可以在一个高可靠的消息中间件或数据库中插入一条条的日志）。当Redis 宕机，把所有的日志重放完毕，再用数据库中的数据初始化Redis 中的数据。</li></ul></li></ul></li><li>批量写<ul><li>广告计费系统的合并扣费<ul><li>扣费模块一次性地从持久化消息队列中取多条消息，对多条消息按广告主的账号ID进行分组，同一个组内的消息的扣费金额累加合并，然后从数据库里扣除</li></ul></li><li>MySQL 的小事务合并机制<ul><li>比如扣库存，对同一个SKU，本来是扣10 次、每次扣1 个，也就是10 个事务；在MySQL 内核里面合并成1 次扣10 个，也就是10 个事务变成了1 个事务。</li><li>我们同样可以借鉴这一点，比如我们的Canal 同步代码中，首页广告内容的更新就采用同样的机制</li><li>在多机房的数据库多活（跨数据中心的数据库复制）场景中，事务合并也是加速数据库复制的一个重要策略</li></ul></li></ul></li></ul><h1>总结梳理</h1><h2 id="高并发读">高并发读</h2><ul><li><p>加缓存/读副本</p><ul><li><p>本地缓存或集中式缓存（主动更新/被动更新）</p><ul><li><p>高可用问题</p></li><li><p>不回源策略：缓存为空时直接返回空，不设置缓存的过期时间</p></li><li><p>回源策略：缓存为空时查库更新缓存</p><ul><li>缓存穿透/缓存击穿/热Key过期/缓存雪崩</li></ul></li></ul></li><li><p>MySQL 的 Master/Slave</p></li><li><p>CDN/静态文件加速/动静分离</p></li></ul></li><li><p>并发读</p><ul><li><p>异步RPC</p></li><li><p>冗余请求：100台机器每台延迟率为1%，则C端延迟率为 (1-99%100)=63.4%</p><ul><li><p>客户端同时向多台服务器发送请求，哪个返回得快就用哪个（但是会调用量翻倍）</p></li><li><p>对冲请求</p><ul><li><p>如果客户端在一定的时间内（内部服务95%请求的响应时间）没有收到服务端的响应，则马上给另一台（或多台）服务器发送同样的请求</p></li><li><p>采用这种方法，可以仅用2%的额外请求将系统99.9%的请求响应时间从1800ms 降低到74ms</p></li></ul></li><li><p>捆绑请求</p><ul><li><p>当一个上游系统向下游系统分发请求时，将请求分发给任务队列较短，负载较轻的服务器，因为服务抖动一个常见的来源是请求被执行前在服务端的排队延迟</p></li><li><p>但是探测负载后服务器负载会发生变化，而且多个服务探测到一个低负载服务时，会使该服务瞬间过热</p><ul><li><p>上游系统同时发送两个一样的请求给下游多个服务器，当下游服务器处理完成后，通知其他服务器不用再处理该请求。</p></li><li><p>为了防止由于任务队列为空而导致的所有服务器同时处理任务的情况，上游系统需要在发给下游多个系统的两个请求之间引入一个延迟，该延迟时间要足够第一个系统处理完任务并通知其他系统。</p></li></ul></li></ul></li><li><p>不要在底层设置太长的任务队列，而由上层基于任务的优先级进行动态的下发</p><ul><li>自己维护一个队列允许服务器跳过那些更早到来的非延迟敏感的批处理操作，优先往下传那些高优先级的交互请求</li></ul></li><li><p>将需要长时间运行的任务拆成多个短时间运行的任务</p></li><li><p>控制好定时任务和后台运行的任务</p><ul><li>将后台的大任务拆分成一系列的小任务，在后台任务运行的时候首先确认系统的负载，如果负载太高，则延迟运行后台任务等</li></ul></li></ul></li></ul></li><li><p>重写轻读</p><ul><li><p>微博Feeds流：不是查询的时候再去聚合，而是提前为每个user_id准备一个Feeds流，或者叫收件箱，每个用户都有一个发件箱和收件箱</p><ul><li><p>写扩散：发布1条微博后，只写入自己的发件箱就返回成功。然后后台异步地把这条微博推送到1000个粉丝的收件箱</p></li><li><p>限制数量：Redis最多保存2000条，2000条以外的丢弃。2000个以前的数据持久化存储并且支持分页查询</p><ul><li><p>DB分库分表同时按user_id和时间范围进行分片</p></li><li><p>DB二级索引：记录<code>&lt;user_id,月份,count&gt;</code>，快速地定位到offset = 5000的微博发生在哪个月份，也就是哪个数据库的分片</p></li></ul></li><li><p>推拉结合：大V的粉丝太多了</p><ul><li>对于粉丝数多的用户，只推送给在线的粉丝们，离线用户上线时主动去拉</li></ul></li></ul></li><li><p>多表的关联查询：宽表与搜索引擎</p><ul><li><p>分库分表下的关联查询：提前把关联数据计算好，存在一个地方，读的时候直接去读聚合好的数据，而不是读取的时候再去做Join</p></li><li><p>可以另外准备一张宽表：把要关联的表的数据算好后保存在宽表里</p><ul><li><p>可以定时算，也可能任何一张原始表发生变化之后就触发一次宽表数据的计算</p></li><li><p>ES搜索引擎：把多张表的Join结果做成一个个的文档</p></li></ul></li></ul></li></ul></li><li><p>读写分离（CQRS 架构）</p><ul><li><p>分别为读和写设计不同的数据结构</p></li><li><p>写-分库分表；读-缓存；join宽表存ES</p></li><li><p>读和写的串联</p><ul><li><p>定时任务定期把业务数据库中的数据转换成适合高并发读的数据结构</p></li><li><p>写的一端把数据的变更发送到消息中间件，然后读的一端消费消息</p></li><li><p>直接监听业务数据库中的 Binlog，监听数据库的变化来更新读的一端的数据</p></li></ul></li><li><p>读比写有延迟（最终一致性）</p><ul><li><p>但是对对于用户自己的数据，自己写自己读，在用户体验上肯定要保证自己修改的数据马上能看到</p><ul><li><p>读和写完全同步</p></li><li><p>异步的，但要控制读比写的延迟非常小,用户感知不到</p></li></ul></li><li><p>保证数据不能丢失、不能乱序</p></li></ul></li></ul></li></ul><h2 id="高并发写">高并发写</h2><ul><li><p>数据分片：对要处理的数据或请求分成多份并行处理</p><ul><li><p>分库分表</p></li><li><p>ES分布式索引：并行地在n个索引上查询，再把查询结果进行合并</p></li></ul></li><li><p>异步化：凡是不阻碍主流程的业务逻辑，都可以异步化，放到后台去做</p><ul><li><p>短信验证码注册或登录：60s之后没有收到短信，用户会再次点击</p></li><li><p>电商的订单系统：拆单</p><ul><li>支付完成后，服务器会立即返回成功，而不是等1个拆成3个之后再返回成功</li></ul></li><li><p>广告计费系统</p><ul><li><p>在扣费之前其实还有一系列的业务逻辑要处理，比如判断是否为机器人在刷单</p></li><li><p>实际上用户的点击请求或浏览请求首先会以日志的形式进行落盘。一般是支持持久化的消息队列</p></li><li><p>落盘之后，立即给客户端返回数据。后续的所有处理，当然也包括扣费，全部是异步化的，而且会使用流式计算模型完成后续的所有工作。</p></li></ul></li><li><p>写内存 + Write-Ahead 日志：MySQL 中为了提高磁盘IO 的写性能，使用了Write-Ahead 日志，也就是Redo Log。</p><ul><li>高并发地扣减 MySOL 中的账户余额，或者电商系统中扣库存，如果直接在数据库中扣，数据库会扛不住，则可以在Redis 中扣，同时落一条日志（日志可以在一个高可靠的消息中间件或数据库中插入一条条的日志）。当Redis 宕机，把所有的日志重放完毕，再用数据库中的数据初始化Redis 中的数据。</li></ul></li></ul></li><li><p>批量写</p><ul><li><p>广告计费系统的合并扣费</p><ul><li>扣费模块一次性地从持久化消息队列中取多条消息，对多条消息按广告主的账号ID进行分组，同一个组内的消息的扣费金额累加合并，然后从数据库里扣除</li></ul></li><li><p>MySQL 的小事务合并机制</p><ul><li><p>比如扣库存，对同一个SKU，本来是扣10 次、每次扣1 个，也就是10 个事务；在MySQL 内核里面合并成1 次扣10 个，也就是10 个事务变成了1 个事务。</p></li><li><p>我们同样可以借鉴这一点，比如我们的Canal 同步代码中，首页广告内容的更新就采用同样的机制</p></li><li><p>在多机房的数据库多活（跨数据中心的数据库复制）场景中，事务合并也是加速数据库复制的一个重要策略</p></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高并发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13.Sentinel限流</title>
      <link href="/2023/07/11/architect/06.dian-shang-xi-tong/13-sentinel-xian-liu/"/>
      <url>/2023/07/11/architect/06.dian-shang-xi-tong/13-sentinel-xian-liu/</url>
      
        <content type="html"><![CDATA[<p>针对电商系统，在遇到大流量时，更多考虑的是运行阶段如何保障系统的稳定运行，常用的手段：<strong>限流，降级，拒绝服务</strong>。</p><h1>限流</h1><p>客户端限流</p><ul><li>好处：可以限制请求的发出，通过减少发出无用请求从而减少对系统的消耗。</li><li>缺点：当客户端比较分散时，没法设置合理的限流阈值：如果阈值设的太小，会导致服务端没有达到瓶颈时客户端已经被限制；而如果设的太大，则起不到限制的作用。</li></ul><p>服务端限流</p><ul><li>好处：可以根据服务端的性能设置合理的阈值</li><li>缺点：被限制的请求都是无效的请求，处理这些无效的请求本身也会消耗服务器资源。</li></ul><p>在限流的实现手段上来讲，基于&nbsp;QPS&nbsp;和线程数的限流应用最多，最大&nbsp;QPS&nbsp;很容易通过压测提前获取。线程数限流在客户端比较有效，例如在远程调用时我们设置连接池的线程数，超出这个并发线程请求，就将线程进行排队或者直接超时丢弃。限流必然会导致一部分用户请求失败，因此在系统处理这种异常时一定要设置超时时间，防止因被限流的请求不能&nbsp;fast&nbsp;fail（快速失败）而拖垮系统。</p><p>限流的方案</p><ul><li>前端限流</li><li>接入层nginx限流</li><li>网关限流<ul><li>基于redis+lua脚本限流（RequestRateLimiter过滤器工厂，令牌桶）</li><li>sentinel限流<ul><li>route维度限流<ul><li>针对请求属性进行流控</li></ul></li><li>API维度限流</li><li>规则持久化<ul><li>启动持久化改造后的Sentinel控制台（指定端口和nacos配置中心地址）</li><li>网关规则改造的坑<ul><li>网关规则实体转换<ul><li>RuleEntity#toRule</li><li>ApiDefinitionEntity#toApiDefinition</li><li>GatewayFlowRuleEntity#toGatewayFlowRule</li></ul></li><li>json解析丢失数据<ul><li>ApiDefinition的属性<code>Set&lt;ApiPredicateItem&gt;&nbsp;predicateItems</code>中元素是接口类型，JSON解析丢失数据</li><li>重写实体类MyApiDefinition,再转换为ApiDefinition</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>应用层限流<ul><li>微服务接入sentinel<ul><li>匀速排队限流<ul><li>Sentinel<strong>匀速排队</strong>方式会严格控制请求通过的间隔时间，也即是让请求以均匀的速度通过，对应的是漏桶算法。</li><li>这种方式主要用于处理间隔性突发的流量（匀速排队模式暂时不支持&nbsp;QPS&nbsp;&gt;&nbsp;1000&nbsp;的场景）</li></ul></li><li>热点参数限流<ul><li>热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。</li><li>热点规则需要使用<code>@SentinelResource("resourceName")</code>注解，否则不生效</li><li>参数必须是7种基本数据类型才会生效</li></ul></li></ul></li></ul></li></ul><h1>降级</h1><p>降级就是当系统的容量达到一定程度时，限制或者关闭系统的某些非核心功能，从而把有限的资源保留给更核心的业务。降级的核心目标是牺牲次要的功能和用户体验来保证核心业务流程的稳定，是一个不得已而为之的举措。</p><p>服务降级的策略</p><ul><li>自动化运维<ul><li>自动开关降级（超时、失败次数、故障、限流）</li><li>手动开关降级</li></ul></li><li>功能维度：读服务降级、写服务降级</li><li>系统层次维度：JS降级开关、接入层降级开关、应用层降级开关（OpenFeign整合Sentinel）</li></ul><h1>拒绝服务</h1><p>拒绝服务可以说是一种不得已的兜底方案，用以防止最坏情况发生，防止因把服务器压跨而长时间彻底无法提供服务。</p><ul><li>系统资源过载保护</li><li><a href="https://github.com/alibaba/nginx-http-sysguard">Nginx过载保护</a></li><li>Sentinel自适应限流<ul><li>Load&nbsp;自适应（仅对&nbsp;Linux/Unix­like&nbsp;机器生效）：系统的&nbsp;load1&nbsp;作为启发指标，进行自适应系统保护。当系统&nbsp;load1&nbsp;超过设定的启发值，且系统当前的并发线程数超过估算的系统容量时才会触发系统保护（BBR&nbsp;阶段）。系统容量由系统的&nbsp;maxQps * minRt&nbsp;估算得出。设定参考值一般是&nbsp;CPU cores * 2.5。</li><li>CPU&nbsp;usage（1.5.0+&nbsp;版本）：当系统&nbsp;CPU&nbsp;使用率超过阈值即触发系统保护（取值范围&nbsp;0.0-­1.0），比较灵敏。</li><li>平均&nbsp;RT：当单台机器上所有入口流量的平均&nbsp;RT&nbsp;达到阈值即触发系统保护，单位是毫秒。</li><li>并发线程数：当单台机器上所有入口流量的并发线程数达到阈值即触发系统保护。</li><li>入口&nbsp;QPS：当单台机器上所有入口流量的&nbsp;QPS&nbsp;达到阈值即触发系统保护。</li><li>系统规则持久化yml配置<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">system‐rules</span><span class="token punctuation">:</span>  <span class="token key atrule">nacos</span><span class="token punctuation">:</span>  <span class="token key atrule">server‐addr</span><span class="token punctuation">:</span> 192.168.65.103<span class="token punctuation">:</span><span class="token number">8848</span>  <span class="token key atrule">dataId</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>spring.application.name<span class="token punctuation">}</span>‐system‐rules  <span class="token key atrule">groupId</span><span class="token punctuation">:</span> SENTINEL_GROUP  <span class="token key atrule">data‐type</span><span class="token punctuation">:</span> json  <span class="token key atrule">rule‐type</span><span class="token punctuation">:</span> system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h1>总结梳理</h1><h2 id="限流">限流</h2><ul><li><p>前端限流</p></li><li><p>接入层nginx限流</p></li><li><p>网关限流</p><ul><li><p>基于redis+lua脚本限流（RequestRateLimiter，令牌桶）</p></li><li><p>sentinel限流</p><ul><li><p>route维度限流：针对请求属性进行流控</p></li><li><p>API维度限流</p></li><li><p>规则持久化</p><ul><li><p>改造Sentinel控制台（指定端口和nacos配置中心地址）</p></li><li><p>网关规则实体转换： RuleEntity#toRule； ApiDefinitionEntity#toApiDefinition； GatewayFlowRuleEntity#toGatewayFlowRule</p></li><li><p>json解析丢失数据：重写实体类MyApiDefinition,再转换为ApiDefinition</p></li></ul></li></ul></li></ul></li><li><p>应用层限流（微服务接入sentinel）</p><ul><li><p>匀速排队限流：处理间隔性突发的流量（漏桶算法）</p><ul><li>暂时不支持&nbsp;QPS&nbsp;&gt;&nbsp;1000&nbsp;的场景</li></ul></li><li><p>热点参数限流（<code>@SentinelResource("resourceName")</code>）</p><ul><li>参数必须是7种基本数据类型才会生效</li></ul></li></ul></li></ul><h2 id="降级">降级</h2><ul><li><p>自动化运维</p><ul><li><p>自动开关降级（超时、失败次数、故障、限流）</p></li><li><p>手动开关降级</p></li></ul></li><li><p>功能维度：读服务降级、写服务降级</p></li><li><p>系统层次维度：JS降级开关、接入层降级开关、应用层降级开关（OpenFeign整合Sentinel）</p></li></ul><h2 id="拒绝服务">拒绝服务</h2><ul><li><p>系统资源过载保护</p></li><li><p><a href="https://github.com/alibaba/nginx-http-sysguard">Nginx过载保护</a></p></li><li><p>Sentinel自适应限流</p><ul><li><p>Load&nbsp;自适应（Linux/Unix­like）：参考值 CPU cores * 2.5</p></li><li><p>CPU&nbsp;usage：比较灵敏</p></li><li><p>平均&nbsp;RT：单位是毫秒</p></li><li><p>并发线程数</p></li><li><p>入口&nbsp;QPS</p></li><li><p>系统规则持久化（system‐rules.nacos）</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sentinel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12.秒杀系统</title>
      <link href="/2023/07/10/architect/06.dian-shang-xi-tong/12-miao-sha-xi-tong/"/>
      <url>/2023/07/10/architect/06.dian-shang-xi-tong/12-miao-sha-xi-tong/</url>
      
        <content type="html"><![CDATA[<p>秒杀系统的挑战:巨大的瞬时流量、热点数据问题、刷子流量</p><ol><li>CDN</li><li>将Nginx 的职责放大，前置用来做Web 网关，承担部分业务逻辑校验，并且可能增加黑白名单、限流和流控的功能<ul><li>刷子:无效:正常请求 = 6:1:3</li></ul></li></ol><h1>秒杀业务流程梳理</h1><p>1．运营人员在秒杀系统的运营后台，根据指定商品，创建秒杀活动，指定活动的开始时间、结束时间、活动库存等。<br>2．活动开始之前，由秒杀系统运营后台开启秒杀，会同时往商城系统的RedisCluster 集群写入首页秒杀活动信息和往秒杀系统的Redis主从集群写诸如秒杀商品库存等信息。<br>3．用户进入到秒杀商详页准备秒杀。<br>4．商详页可以看到立即抢购的按钮，这里我们可以通过增加一些逻辑判断来限制按钮是否可以点击，比如是否设置了抢购用户等级限制，是否还有活动库存，是否设置了预约等等。如果都没限制，用户可以点击抢购按钮，进入到秒杀结算页。<br>5．在结算页，用户可更改购买数量，切换地址、支付方式等，这里的结算元素也需要按实际业务来定，更复杂的场景还可以支持积分、优惠券、红包、配送时效等，并且这些都会影响最终价格的计算。<br>6．确认无误后，用户提交订单，在这里后端服务可以调用风控、限购等接口，来完善校验，都通过之后，完成库存的扣减和订单的生成。<br>7.订单完成后，根据用户选择的支付方式跳转到对应的页面，比如在线支付就跳转到收银台，货到付款的话，就跳到下单成功提示页。</p><h1>秒杀的隔离</h1><p>因为秒杀流量是突发式的，而且流量规模很难提前准确预估，如果混合在一起，势必会对普通商品的交易造成比较大的冲击。需要单独搭建秒杀系统，它天然为流量而生。</p><h2 id="业务隔离">业务隔离</h2><p>大部分的电商平台，会有一个专门的<strong>提报系统</strong>(提报系统的建设不是秒杀的核心部分，我们系统没有实现)，商家或者业务可以根据自己的运营计划在提报系统里进行活动提报，提供参与秒杀的商品编号、活动起止时间、库存量、限购规则、风控规则以及参与活动群体的地域分布、预计人数、会员级别等基本信息。电商平台的提报过程和这些基本信息，对于大厂是比较重要的，有了这些信息作为输入，<strong>技术部门就能预估出大致的流量、并发数等</strong>，并结合系统当前能支撑的容量情况，评估是否需要扩容，是否需要降级或者调整限流策略等，因此业务隔离重要性也很高。</p><h2 id="系统隔离">系统隔离</h2><p>比较常见的实践是<strong>对会被流量冲击比较大的核心系统进行物理隔离</strong>，而相对链路末端的一些系统，经过前面的削峰之后，流量比较可控了，这些系统就可以不做物理隔离。<br>用户的秒杀一定是首先进入商品详情页（很多电商的秒杀系统还会在商详页进行倒计时等待，时间到了点击秒杀按钮进行抢购）。因此第一个需要关注的系统就是商品详情页，我们需要申请<strong>独立的秒杀详情页域名，独立的 Nginx 负载均衡器，以及独立的详情页后端服务</strong>。<br>如有可能，还需要对域名进行隔离，可以申请一个独立的域名，专门用来承接秒杀流量，流量从专有域名进来之后，分配到专有的负载均衡器，再路由到专门的微服务分组，这样就做到了应用服务层面从入口到微服务的流量隔离。<br>一般来说，秒杀中流量冲击比较大的核心系统就是<strong>秒杀详情页、秒杀结算页、秒杀下单库存扣减</strong>是需要我们重点关注的对象，而相对链路末端的一些系统，经过前面的削峰之后，流量比较可控了，如收银台、支付系统，物理隔离的意义就不大，反而会增加成本。</p><h2 id="数据隔离">数据隔离</h2><p>数据层的专有部署，需要结合秒杀的场景来设计部署拓扑结构，比如 Redis缓存，一般的场景一主一从就够了，但是在秒杀场景，需要<strong>一主多从来扛读热点数据</strong>。</p><h1>Nginx(OpenResty)</h1><p>Nginx 有5 大优点，即模块化、事件驱动、异步、非阻塞、多进程单线程。</p><p>OpenResty 是一个基于 Nginx 与Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。快速构造出足以胜任 10K 乃至 1000K 以上单机并发连接的高性能Web 应用系统。Lua的线程模型是单线程多协程的模式，而Nginx 刚好是单进程单线程</p><h2 id="原理">原理</h2><p>Nginx 服务器启动后，产生一个 Master 进程（Master Process），Master 进程执行一系列工作后产生一个或者多个 Worker 进程（Worker Processes）。其中，**Master 进程用于接收来自外界的信号，并向各 Worker 进程发送信号，同时监控Worker 进程的工作状态。**当 Worker 进程退出后(异常情况下)，Master 进程也会自动重新启动新的 Worker 进程。Worker 进程则是外部请求真正的处理者。<br>多个 Worker 进程之间是对等的，他们同等竞争来自客户端的请求，各进程互相之间是独立的。<strong>一个请求，只可能在一个 Worker 进程中处理，一个 Worker 进程不可能处理其它进程的请求</strong>。Worker 进程的个数是可以设置的，<strong>一般我们会设置与机器CPU 核数一致</strong>。同时，Nginx 为了更好的利用多核特性，具有 CPU 绑定选项，我们可以将某一个进程绑定在某一个核上，这样就不会因为进程的切换带来cache 的失效（CPU affinity）。所有的进程的都是单线程（即只有一个主线程）的，进程之间通信主要是通过共享内存机制实现的。</p><p>OpenResty 本质上是将LuaJIT 的虚拟机嵌入到Nginx 的管理进程和工作进程中，<strong>同一个进程内的所有协程都会共享这个虚拟机</strong>，并在虚拟机中执行Lua 代码。在性能上，OpenResty 接近或超过 Nginx 的C 模块，而且开发效率更高。<br>Nginx 将HTTP 请求的处理过程划分为多个阶段。这样可以使一个HTTP 请求的处理过程由很多模块参与处理，每个模块只专注于一个独立而简单的功能处理，可以使性能更好、更稳定，同时拥有更好的扩展性。</p><ol><li>ngx_http_post_read_phase：接收到完整的http 头部后处理的阶段，它位于uri 重写之前。</li><li>ngx_http_server_rewrite_phase：uri 与location 匹配前，修改uri 的阶段，用于重定向。</li><li>ngx_http_find_config_phase：根据uri 寻找匹配的location 块配置项阶段，该阶段使用重写之后的uri 来查找对应的location，值得注意的是该阶段可能会被执行多次，因为也可能有location 级别的重写指令。</li><li>ngx_http_rewrite_phase：上一阶段找到location 块后再修改uri，location 级别的uri 重写阶段，该阶段执行location 基本的重写指令，也可能会被执行多次。</li><li>ngx_http_post_rewrite_phase：防止重写url 后导致的死循环，location 级别重写的后一阶段，用来检查上阶段是否有uri 重写，并根据结果跳转到合适的阶段。</li><li>ngx_http_preaccess_phase：下一阶段之前的准备，访问权限控制的前一阶段，该阶段在权限控制阶段之前，一般也用于访问控制，比如限制访问频率，链接数等。</li><li>ngx_http_access_phase：让http 模块判断是否允许这个请求进入nginx 服务器，访问权限控制阶段，比如基于ip 黑白名单的权限控制，基于用户名密码的权限控制等。标准模块 ngx_access、第三方模块 ngx_auth_request 以及第三方模块ngx_lua 的 access_by_lua 指令就运行在这个阶段。</li><li>ngx_http_post_access_phase：访问权限控制的后一阶段，该阶段根据权限控制阶段的执行结果进行相应处理。</li><li>ngx_http_try_files_phase：为访问静态文件资源而设置，try_files 指令的处理阶段，如果没有配置try_files 指令，则该阶段被跳过。</li><li>ngx_http_content_phase：处理http 请求内容的阶段，大部分http 模块介入这个阶段，内容生成阶段，该阶段产生响应，并发送到客户端。Nginx 的 content 阶段是所有请求处理阶段中最为重要的一个，因为运行在这个阶段的配置指令一般都肩负着生成“内容”（content）并输出HTTP 响应的使命。</li><li>ngx_http_log_phase：log 阶段处理，比如记录访问量/统计平均响应时间。log_by_lua处理完请求后的日志记录阶段，该阶段记录访问日志。</li></ol><p>以上11个阶段中，http 无法介入的阶段有4 个：3）ngx_http_find_config_phase、5）ngx_http_post_rewrite_phase、8）ngx_http_post_access_phase、9）ngx_http_try_files_phase。</p><p>OpenResty 在HTTP 处理阶段基础上分别在Rewrite/Access 阶段、Content 阶段、Log 阶段注册了自己的handler，加上系统初始阶段master 的两个阶段，共11 个阶段为Lua 脚本提供处理介入的能力。</p><ol><li>init_by_lua*：Master 进程加载Nginx 配置文件时运行，一般用来注册全局变量或者预加载Lua 模块。</li><li>init_worker_by_lua*：每个worker 进程启动时执行，通常用于定时拉取配置/数据或者进行后端服务的健康检查。</li><li>set_by_lua*：变量初始化。</li><li>rewrite_by_lua*:可以实现复杂的转发、重定向逻辑。</li><li>access_by_lua*:IP 准入、接口权限等情况集中处理。</li><li>content_by_lua*:内容处理器，接收请求处理并输出响应。</li><li>header_filter_by_lua*:响应头部或者cookie 处理。</li><li>body_filter_by_lua*:对响应数据进行过滤，如截断或者替换。</li><li>log_by_lua*:会话完成后，本地异步完成日志记录</li></ol><h2 id="秒杀系统中的OpenResty">秒杀系统中的OpenResty</h2><p>所以我们秒杀的OpenResty 就不仅仅承担着反向代理和负载均衡的职能。还承担着网关、静态模板化网页访问、静态资源访问、流量管控、防刷等一系列职能。这些都需要我们使用Lua 脚本来完成，配置一下对Lua 脚本的支持</p><h2 id="商详页的静态化">商详页的静态化</h2><p>首先当然是生成静态html，我们使用freemarker 来处理，将通用的产品模板文件product.ftl 变为确定的商品Html<br>命名规则为seckill_+秒杀活动id + “_” + 秒杀产品ID，如 seckill_1_3.html，并保存在本地磁盘。<br>然后将产生的商品Html 上传到Nginx 服务器，用 jsch 组件<br>利用sftp 进行上传，注意，因为秒杀的Nginx服务器可能有多台，所以要循环服务器列表依次上传。</p><h2 id="OpenResty中的处理">OpenResty中的处理</h2><p>还需要把访问链接和实际的Html 页面进行对应，而且在把页面作为结果返回给用户之前，我们可能还有一些其他的事情要做，这就需要在Nginx 中再将已经生成的seckill_1_3.html 作为模板文件再处理一次。于是我们引入第三方的模板文件处理Lua 脚本，并放置到Nginx 服务器Lua 库目录下<br>当用户访问秒杀的商详页时，还需要告诉Nginx 返回给用户的网页内容需要由product.lua 进行处理</p><h2 id="商详页的库存获取">商详页的库存获取</h2><p>用户访问秒杀的商详页，我们用静态网页展示给了用户，但是有些数据还是需要动态获取的，比如秒杀商品的库存。</p><ol><li>直接让Nginx 访问Redis 来获得商品的当前库存</li><li>让Redis 的从库和Nginx在部署在同一台服务器<ol><li>如果本地Redis 宕机的情况，需要我们回源到微服务中查询主Redis 或者数据库</li></ol></li><li>还可以直接使用Unix Domain Socket 来避免真实的网络通讯实现下占用网络连接、并且需要经过网络协议栈，需要打包拆包、计算校验和、维护序号和应答等TCPIP 协议固有要求，进一步提高访问效率。</li></ol><h1>秒杀前期流量管控</h1><p>通过对秒杀流量的隔离，我们已经能够把巨大瞬时流量的影响范围控制在隔离的秒杀环境里了。接下来，我们开始考虑隔离环境的高可用问题，通俗点说，普通商品交易流程保住了，现在就要看怎么把秒杀系统搞稳定，来应对流量冲击，让秒杀系统也不出问题。方法很多，有流量控制、削峰、限流、缓存热点处理、扩容、熔断等一系列措施。</p><p>先来看流量控制。<strong>在库存有限的情况下，过多的用户参与实际上对电商平台的价值是边际递减的</strong>。举个例子，1 万的荣耀手机，100 万用户进来秒杀和1000万用户进来秒杀，对电商平台而言，所带来的经济效益、社会影响不会有10 倍的差距。相反，用户越多，一方面消耗机器资源越多；另一方面，越多的人抢不到商品，电商平台的客诉和舆情压力也就越大。当然如果为了满足用户，让所有用户都能参与，秒杀系统也可以通过堆机器扩容来实现，但是成本太高，ROI 不划算，所以我们需要，也可以提前对流量进行管控。</p><p>一般来说，很多电商平台，特别是头部电商很多时候会用“<strong>预约＋秒杀</strong>”作为主流营销玩法。预约期内，开放用户预约，获取秒杀抢购资格，秒杀期内，具备抢购资格的用户真正开始秒杀。<strong>在预约期内，关键是锁定用户</strong>，这也是做前期流量管控的核心。</p><h2 id="预约系统设计">预约系统设计</h2><p>先从角色看，参与的有运营方，提供商品，进行预约活动的计划安排；终端用户，进行预约和秒杀行为；以及支撑预约活动的交易链路系统。</p><ol><li>需要一个预约管理后台，进行活动的设置和关闭；</li><li>需要一个预约系统向预约过的用户发短信或消息提醒；</li><li>需要一个面向终端的预约核心微服务，提供给用户预约和取消预约能力；</li><li>商详在展示时获取预约信息的能力，比如当前商品是否预约，当前预约人数等等；</li><li>秒杀下单时检查用户预约资格的能力。</li></ol><p>所以在数据库层面，对预约来讲，核心就是两个维度：<strong>预约活动和用户预约关系</strong>。所以需要两张表，一张是预约活动信息表，记录预约活动本身的信息，比如预约活动的开始结束时间，预约活动对应的秒杀活动信息，预约的商品信息等等；另一张是用户预约关系表，比如用户的ID，预约的活动ID，预约的商品等等。</p><h2 id="预约系统优化">预约系统优化</h2><p>传统的预约模式，预约期是固定的时间段，用户在这个阶段内都可以预约;但在秒杀场景下，为了能够准确把控流量，控制预约人数上限，我们需要拓展预约期的定义，<strong>除了时间维度外，还要加入预约人数上限的维度</strong>，一旦达到上限，预约期就即时结束。<br>这实际上是给预约活动添加了一个自动熔断的功能，一旦活动太火爆，到达上限后系统自动关闭预约入口，提前进入等待秒杀状态。这样就可以准确把控人数，从而为秒杀期护航。但是当用户都知道必须有预约才能参加秒杀时，用户就会在预约期抢占预约资格，那么此时的<strong>预约系统也具备一定程度秒杀系统的特点了。不过预约人数的把控不需要那么精确，只需要即时熔断即可</strong>，比如准备预约人数为100 万，实际105 万或者110 万都没有什么问题。对于头部电商平台，<strong>每次预约人数都可以达到千万量级的，因此为了更好的性能，往往还需要对数据库分库分表，主要是用户预约关系表</strong>。另外，<strong>对于预约历史数据，也需要有个定时任务进行结转归档，以减轻数据库的压力</strong>。但是仅仅分库分表还是不够的，对高并发系统来说，要扛住大流量，肯定不能让流量击穿到数据库，所以需要设计缓存来抵挡。首先是预约活动信息表，这是个很明显的读热点，所有的预约商品展示的时候都需要这份数据，很自然我们可以将数据在 Redis 缓存里存储，如果 Redis 缓存也扛不住，可以使用Redis <strong>一主多从</strong>来扛，也可以使用服务的<strong>本地缓存</strong>。对于用户预约关系表，是跟着用户走的，没有读热点问题，只要用户登录或者合适的时机将该用户的本次预约关系加载到Redis 缓存即可，在预约商品展示时从Redis 读取然后告诉用户是否已经预约。用户进行预约的时候怎么办呢？虽然用户预约关系表可以做分库分表，本身又是个纯粹的insert 操作，MySQL 执行相对来说速度较快，但是要考虑某些热门商品会短时间挤入大量的用户，这个时候可以考虑使用<strong>消息中间件异步写入，做好消息的防重防丢失，同时前端提醒用户“预约排队中”。</strong><br>另外，一般预约系统在业务设计上，需要在商详页展示<strong>当前预约人数</strong>给用户看，以营造商品火爆的气氛。我们自然就想到了可以在Redis 里记录一个预约人数的记录。商详页展示氛围的时候，会从Redis 里获取到这个记录进行提示，而用户点击“立即预约”按钮进行预约时，会往这个key 进行累加操作。这个设计在预约流量没那么聚集时没什么问题，因为一般 Redis 单片也能扛个七八万的OPS。而当预约期每秒中十几万，甚至几十万预约呢？显然这个Redis key 就是典型的写热 key 问题了。考虑到这个预约人数并不需要非常精确，这个热key 问题的解决我们可以考虑<strong>在本地缓存中累加，然后批量的方式写入Redis</strong>，比如累加了1000 个人后一次性在Redis 中incr 1000，这样就把对Redis 的写压力降低了1000 倍。通过预约来控制流量属于事前管控</p><h1>秒杀的事中流量管控</h1><h2 id="流量削峰">流量削峰</h2><p>我们已经知道了秒杀有隔离和事前流量控制，其目的是降低流量的相互耦合和量级，减少对系统的冲击。秒杀系统事中流量管控——削峰和限流让系统更加稳健。<br>真实场景下的秒杀流量一般几秒内爬升到峰值，然后很快往平常值回归。我们现在需要做的就是通过削峰和限流，把这超大的瞬时流量平稳地承接下来，落到秒杀系统里。<br>削峰填谷概念一开始出现在电力行业，是调整用电负荷的一种措施，在互联网分布式高可用架构的演进过程中，也经常会采用类似的削峰填谷手段来构建稳定的系统。<br>削峰的方法有很多，可以分为无损和有损削峰。本质上，限流是一种有损技术削峰；而引入验证码、问答题以及异步化消息队列可以归为无损削峰，不过我们习惯上会把限流和削峰分开来说，所以我们这里也分开阐述。</p><p>我们已经知道秒杀的业务特点是库存少，最终能够抢到商品的人数取决于库存数量，而参与秒杀的人越多，并发数就越高，随之无效请求也就越多。在秒杀开始的时刻，会出现巨大的瞬时流量，这个流量对资源的消耗也是巨大且瞬时的。<br>我们支撑秒杀系统的硬件资源是一定是有限的，它的处理能力也是恒定的，当有秒杀活动的时候，很容易繁忙导致请求处理不过来，而没有活动的时候，机器又是低负载运转。但是为了保证用户的秒杀体验，一般情况下我们的处理资源只能按照忙的时候来预估，这会导致资源的一个浪费。因此我们需要设计一些规则，延缓并发请求，甚至过滤掉无效的请求，让真正可以下单的请求越少越好。总结来说，<strong>削峰的本质，一是让服务端处理变得更加平稳，二是节省服务器的机器成本。</strong></p><h3 id="验证码和问答题">验证码和问答题</h3><p>在秒杀交易流程中，引入验证码和问答题，有两个目的：<strong>一是快速拦截掉部分刷子流量，防止机器作弊，起到防刷的作用；二是平滑秒杀的毛刺请求，延缓并发，对流量进行削峰。</strong> 让用户在秒杀前输入验证码或者做问答题，不同用户的手速有快有慢，这就起到了让1s 的瞬时流量平均到30s 甚至1 分钟的平滑流量中，这样就不需要堆积过多的机器应对1s 的瞬时流量了。</p><p><strong>从session 共享角度来说，验证码应该放入Redis</strong><br>还需注意的是验证码放入主Redis 后，如果选择从Nginx 直接读取从Redis 的方式，需要注意Redis 主从同步的延迟问题，解决方案可以在Lua 脚本中引入以下两者之一：1. 休眠后重试”os.execute("sleep " … n)”；<strong>读从Redis 未果，则读主Redis</strong></p><p>当然，<strong>验证码本身也可以独立为一个微服务</strong>，因为当生成验证码本身成为性能瓶颈，可以验证码服务集群化或者预生成批量验证码并缓存，但是缓存的内容除了验证码的文字结果外，验证图片也要缓存。很多大厂就有独立的验证码服务集群，这个时候直接调用即可。</p><h3 id="消息队列">消息队列</h3><p>如果服务A 的流量非常高(假设10 万QPS)，远远大于服务B 所能支持的能力(假设1 万QPS)，那么服务B 的CPU 很快就会升高，TP99 也随之变高，最终服务B 被服务A 的流量冲垮。这个时候，消息队列就派上用场了，我们把一步调用的直接紧耦合方式，通过消息队列改造成两步异步调用，让超过服务B 范围的流量，暂存在消息队列里，由B 根据自己的服务能力来决定处理快慢，这就是通过消息队列进行调用解耦的常见手段。</p><p>而在秒杀系统拉取消息队列进行处理的时候，也有个小技巧，那就是<strong>当前面的请求已经把库存消耗光之后，在缓存里设置占位符，让后续的请求快速失败</strong>，从而最快地进行响应。</p><h2 id="限流">限流</h2><p>主流的做法是从上游开始，对流量进行<strong>逐级限流，分层过滤</strong>，优质的有效的流量最终才能参与下单。</p><p>通过一系列的<strong>逐级限流，分层过滤</strong>，比如风控和防刷筛选刷子流量，通过限购和预约校验过滤无效流量，通过限流丢弃多余流量，最终秒杀系统给到下游的流量就是非常优质且少量的了。限流常用的算法有<strong>令牌桶和漏桶</strong></p><h3 id="Nginx-限流">Nginx 限流</h3><p>Nginx 本身也提供了非常强大的限流功能，比如有两个专门的限流模块<strong>HttpLimitzone 和HttpLimitReqest</strong>，HttpLimitzone 用来限制一个客户端的并发连接数，HttpLimitReqest 通过漏桶算法来限制用户的连接频率，我们用HttpLimitReqest来说明如何限流。</p><pre class="line-numbers language-config" data-language="config"><code class="language-config">http {     limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;     server {        location /search/ {            limit_req zone=one burst=2 nodelay;         }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>limit_req_zone 是指令名称，也就是关键字，只能在http 块中使用；</li><li>$binary_remote_addr 是Nginx 内置绑定变量，比如$remote_port 是客户端端口号；</li><li>zone=one:10m zone 是关键字，one 是自定义的规则名称，后续代码中可以指定使用哪个规则；10m 是指声明多大内存来支撑限流的功能，从理论上说一个1MB 的区域可以包含大约16000 个会话状态；</li><li>rate=1r/s rate 是关键字，可以指定限流的阈值，r/s 意为每秒允许通过的请求数，我们这里就限定了每秒1 请求。</li></ul><p>再看两个实际例子：</p><ul><li><p><code>limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;</code></p><ul><li>表示同一ip 不同请求地址，进入名为one 的zone，限制速率为5 请求/秒。</li></ul></li><li><p><code>limit_req_zone $binary_remote_addr $uri zone=two:10m rate=1r/s;</code></p><ul><li>同一ip 同一请求地址，进入名为two 的zone，限制速率为1 请求/秒。</li></ul></li><li><p>limit_req 是指令名称，可在http，server，location 块中使用，这个指令主要用于设置共享的内存zone 和最大的突发请求大小；</p></li><li><p>zone=one 使用名为one 的zone，这个zone 之前使用limit_req_zone 声明过；</p></li><li><p>burst=2 burst 用于指定最大突发请求数，超过这个数目的请求会被延时；</p></li><li><p>nodelay 设置了nodelay，在突发请求数大于burst 时，会立刻丢弃掉这部分请求，一般情况下会给客户端返回503 状态。</p></li></ul><p><strong>在秒杀的场景下，一般会把 rate 和 burst 设置的很低，可以都为 1，即要求1 个IP 1 秒内只能访问1 次</strong>。<br>这种设置一般对公司用户不太友好，公司内用户，他们的出口 IP 就那么几个，很容易就触发了限流，所以大家在参与头部电商的秒杀活动时，最好切换到自己的手机网络，避免被“误杀”。</p><h3 id="应用-服务层限流">应用/服务层限流</h3><ul><li><strong>线程池限流: 配置最大连接数</strong>，以请求处理队列长度以及拒绝策略等参数来达到限流的目的。当处理队列满，而且最大线程都在处理时，多余的请求就会被拒绝策略丢弃，也就是被限流了。</li><li><strong>API 限流: 我们希望根据QPS多少来进行限流</strong>，这时就不能用线程池策略了但是可以用Google 提供的 <strong>RateLimiter</strong> 开源包，自己手写一个基于令牌桶的限流注解和实现，在业务API 代码里使用。<ul><li>现在大家用的<strong>Sentinel</strong> 流量治理组件会比较多，可以从从流量路由、流量控制、流量整形、熔断降级、系统自适应过载保护、热点流量防护等多个维度来帮助保障微服务的稳定性</li></ul></li><li>自定义限流<ul><li>在用户进入订单结算页面时，前端页面会先调用生成订单号的服务得到一个订单号，在用户提交订单的时候，在创建订单的请求中带着这个订单号</li><li>如果每个用户的请求都去申请一个订单号，在秒杀高并发的情况下是无法应对的</li><li><strong>用一个线程安全的ConcurrentLinkedQueue 预先存放一批订单ID，这样的话订单的ID 无需去远程获取了。ConcurrentLinkedQueue 中订单号的刷新则是通过定时任务刷新。</strong></li><li>目前设定是100 毫秒刷新一次，1 秒钟最多从生成订单号的服务获得2000个订单ID，以常数的形式的写死在代码中的，这两个值其实可以写入<strong>配置中心进行热部署</strong>，方便秒杀根据实际情况来调整。而从生成订单号的服务获得批量订单ID 数，则是通过公式计算出来的，按照缺省值ConcurrentLinkedQueue 每100 毫秒最多有200 个订单ID，这其实就起了一个限流的作用，因为在从ConcurrentLinkedQueue 获得订单ID 的时候，<strong>如果没有获取到，会直接返回中断用户的请求处理，返回一个处理失败。</strong></li></ul></li></ul><h3 id="分层过滤">分层过滤</h3><p>仔细考察秒杀的流量特征，比如某个秒杀商品1000 个，秒杀时间为5 分钟，现在有10 万人来抢，2 分钟内商品抢购完毕，那么后面3 分钟其实商品已经无库存了。但是对<strong>后面3 分钟的人发出的请求对于我们系统来说，其实是无效的请求，是没有必要把请求链路全部完成一遍的</strong>，这对资源其实是很大的浪费，所以我们可以在请求链路上层层过滤，把这部分无效请求提前筛选掉。</p><ul><li>Nginx 中，启用了本地缓存</li><li>与之相配合的，商详页中会根据这个返回值提示用户“秒杀商品已无库存，秒杀结束”，并关闭秒杀按钮。</li><li>在服务层，不管是秒杀确认单处理服务还是秒杀订单处理服务都会对库存进行检查<ul><li>作用就是在实际下单和扣减库存前中断用户的请求链路的执行，起到一个层层过滤的作用</li></ul></li></ul><h1>限购</h1><p>对于像秒杀这种大流量、高并发的业务场景，更不适合直接将全部流量打到库存服务，所以这个时候就需要有个系统能够承接大流量，并且只放和商品库存相匹配的请求量到库存服务，而限购就能够承担这样的角色。限购之于库存，就像秒杀之于下单，前者都是后者的过滤网和保护伞。<br>限购的主要功能就是做商品的限制性购买。因为参加秒杀活动的商品都是爆品、稀缺品，所以为了让更多的用户参与进来，并让有限的投放量惠及到更多的人，所以往往会对商品的售卖做限制，一般限制的维度主要包括两方面。<br>商品维度限制：最基本的限制就是<strong>商品活动库存的限制</strong>，即每次参加秒杀活动的商品投放量。如果再细分，还可以支持针对不同地区做投放的场景，比如我只想在北京、上海、广州、深圳这些一线城市投放，那么就只有收货地址是这些城市的用户才能参与抢购，而且各地区库存量是隔离的，互不影响。<br><strong>个人维度限制</strong>：就是以个人维度来做限制，这里不单单指同一用户ID，还会从同一手机号、同一收货地址、同一设备IP 等维度来做限制。比如限制同一手机号每天只能下1 单，每单只能购买1 件，并且一个月内只能购买2 件等。个人维度的限购，体现了秒杀的公平性。<br>有了这些功能支持之后，再做一个热门秒杀活动时，首先会在限购系统中配置活动库存以及各种个人维度的限购策略；<strong>然后在用户提单时，走下限购系统，通过限购的请求，再去做真实库存的扣减，这个时候可以减少到库存服务的量。</strong></p><h1>库存扣减</h1><p>用户成功购买一个商品，对应的库存就要完成相应的扣减。而库存的扣减主要涉及到两个核心操作，**一个是查询商品库存，另一个是在活动库存充足的情况下，做对应数量的扣减。**两个操作拆分开来，都是非常简单的操作，但是在高并发场景下，不好的事情就发生了。</p><p>库存超卖的问题主要是由两个原因引起的，<strong>一个是查询和扣减不是原子操作，另一个是并发引起的请求无序</strong>。</p><h2 id="数据库方案">数据库方案</h2><ul><li>行锁机制<ol><li>查询和扣减放在一个事务中，在查询库存的时候使用<code>for update</code>，事务结束行锁释放。</li><li>通过SQL 语句，比如where 语句的条件，保证库存不会被减到 0 以下</li></ol></li><li>乐观锁<ol><li>每次查询库存的时候，除了库存值还有一个版本号，每次扣减库存时带上这个版本号进行扣减</li><li>扣减失败，则需要重新查询，重新扣减。但会加重数据库的负担</li></ol></li><li>数据库特性<ol><li>直接设置数据库的字段数据为无符号整数</li><li>这样减后库存字段值小于零时会直接执行SQL 语句来报错</li></ol></li></ul><p><strong>数据库方案简单安全，但是其性能比较差</strong>，无法适用于我们秒杀业务场景，在请求量比较小的业务场景下，是可以考虑的</p><h2 id="分布式锁方案">分布式锁方案</h2><p>不管通过哪种方式实现的分布式锁，都是有弊端的。以Redis 的实现来说，仅仅在设置锁的有效期问题上，就让人头大。如果时间太短，那么业务程序还没有执行完，锁就自动释放了，这就失去了锁的作用；而如果时间偏长，一旦在释放锁的过程中出现异常，没能及时地释放，那么所有的业务线程都得阻塞等待直到锁自动失效，这与我们要实现高性能的秒杀系统是相悖的。所以通过分<strong>布式锁的方式可以实现，但不建议使用</strong>。</p><h2 id="高并发的扣减">高并发的扣减</h2><p>当秒杀活动开启，流量洪峰来临时，交易系统压力陡增，具体表现一般会包括CPU 升高，IО 等待变长，请求响应时间TP99 指标变差，整个系统变得越来越不稳定。为了力保核心交易流程，我们需要对非核心的一些服务进行降级，减轻系统负担，这种降级一般是有损的，属于“弃卒保帅”。而秒杀的核心问题，是要解决单个商品的高并发读和高并发写的问题，这是典型的热点数据问题，我们需要有相应的机制，避免热点数据打垮系统。</p><h3 id="降级">降级</h3><p>降级其实和削峰一样，降级解决的也是有限的机器资源和超大的流量需求之间的矛盾。如果你的资源够多，或者你的流量不够大，就不需要对系统进行降级了；只有当资源和流量的矛盾突出时，我们才需要考虑系统的降级。降级一般是有损的，那么必然要有所牺牲，几种常见的降级:</p><ul><li>写服务降级：牺牲数据一致性获取更高的性能；</li><li>读服务降级：故障场景下紧急降级快速止损。</li></ul><h4 id="写服务降级">写服务降级</h4><p>在多数据源（MySQL 和Redis）的场景下，数据一致性一般是很难保证的。除非引入分布式事务，但分布式事务也会带来一些缺点，比如实现复杂、性能问题、可靠性问题等。因此一般在涉及金融资产类对一致性要求高的场景时，我们才会考虑分布式事务。</p><p>在流量不高的时候，我们的写请求可以直接先落入MySQL 数据库，再通过监听数据库的Binlog 变化，把数据更新进Redis 缓存，这种设计，缓存和数据库是最终一致的。通过缓存，我们可以扛更高流量的读操作，但是写操作仍然受制于数据库的磁盘IOPS，一般考虑一个数据库也就能支持3000~5000 TPS 的写操作。</p><p>当流量激增的时候，我们就需要对以上的写路径进行降级，<strong>由同步写数据库降级成同步写缓存、异步写数据库</strong>，利用Redis 强大的OPS 来扛流量，一般单个Redis 分片可达8~10 万的OPS，Redis 集群的OPS 就更高了。</p><p>写请求首先直接写入Redis 缓存，写入成功之后，发出写操作MQ（这一步可以放入另一个线程中操作），就可以返回客户端了。其他应用消费MQ，通过MQ 异步化写数据库。</p><h5 id="商城库存扣减的实现">商城库存扣减的实现</h5><p>这里根本没检查库存是否足够，是会导致超卖的。要知道，秒杀是一种促销活动，为了吸引更多的人气，更多的流量，是“赔本赚吆喝”，<strong>宁可少买，不可超卖！ 少买还可以再做一次“返场”活的，超卖肯定是不行的。</strong><br>要保证不超卖，查询和扣减需要是原子操作，正好Redis 本身就是单线程的，天生就可以支持操作的顺序性，如果我们能在一次Redis 的执行中，同时包含查询和扣减两个命令就行。而且Redis 可以执行Lua 脚本的，并且可以保证脚本中的所有逻辑会在一次执行中按顺序完成。</p><p>我们通过Redis 的高并发写能力，提升了系统性能，带来的牺牲就是缓存数据和数据库数据的一致性问题。为了追求高性能，牺牲一致性在大厂的设计中比较常见，对于异步造成的数据丢失等一致性问题，一般来说还会有定时任务一直在比对，以便最快发现问题，进行修复。</p><h4 id="读服务降级">读服务降级</h4><p>在做高可用系统设计时，要牢记就是微服务自身所依赖的外部中间件服务或者其他RPC 服务，随时都可能发生故障，因此**我们需要建设多级缓存，以便故障时能及时降级止损。**除了Redis 缓存之外，还可以增加MongoDB 或者ES 缓存。当然了，你可以建立多个缓存副本，比如主Redis 缓存外，再建立从Redis 缓存，这些都可以的，不过相应会增加资源成本和代码编写的复杂度。假设当秒杀的Redis 缓存出现故障时，我们就可以通过降级开关，快速将读请求降级到从Redis 缓存、MongoDB 或者ES 上。或者当Redis 和备份缓存同时出现故障时(现实中很少出现同时故障的场景)，我们还是可以通过降级开关将流量切换到数据库上，让数据库暂时承压来完成读请求服务。</p><h4 id="简化系统功能">简化系统功能</h4><p>简化系统功能就是指干掉一些不必要的流程，舍弃非核心功能，秒杀系统要求尽量简单，交互越少，数据越小，链路越短，离用户越近，响应就越快，因此非核心的功能在秒杀场景下都是可以降级的。</p><p>去除了普通商品详情页的很多信息，以加快商详页的显示，节约系统资源。不过，实际运用中，这种非核心功能的有损降级，要视具体的SKU 而定，一般为了降低影响范围，我们只对流量非常高的SKU 进行降级。比如，如果是手机秒杀，一般是不需要降级的，但是像口罩这样的爆品，就需要针对SKU 维度进行非核心功能的降级了。降级开关的怎么设计呢，其实比较简单，核心思路就是通过配置中心，对降级开关进行变更，然后推送到各个微服务实例上。</p><h3 id="热点数据">热点数据</h3><p>一般高并发的常规解决思路是：如果是数据库，可以通过分库分表来应对，如果是Redis，可以增加Redis 集群的分片来解决，而应用层一般是无状态的设计。所以从数据库、Redis '缓存到应用服务，都是可以通过增加机器来水平扩展服务能力，解决高并发的问题。</p><p>这样就能应对秒杀的挑战了吗？其实还不够，<strong>秒杀的核心问题是要解决单个商品的高并发读和高并发写问题</strong>，也就是要处理好热点数据问题。所谓热点数据，是从单个数据被访问的频次角度去看的。单位时间（1s）内，一个数据非常频繁的被访问，就可以称之为热点数据，反之可以归为一般数据或冷数据。那么单位时间内究竟多高的频次才能称为热点数据呢?实际上并没有一个明确的定义，可以根据你自己的系统吞吐能力而定。**热点商品在进行秒杀时，只有这个SKU 是热点，所以再怎么进行分库分表，或者增加Redis 集群的分片数，热点商品SKU 落在的那个分片的能力实际并没有提升，总会触达上限，把 Redis 打挂，最后可能引发缓存击穿、系统雪崩。**那我们应该怎么解决这个棘手的热点问题呢？</p><h4 id="读热点">读热点</h4><ol><li>增加热点数据的副本数;<ul><li><strong>就是增加Redis 从的副本数</strong>，然后业务层（Tomcat 集群）轮询查询不同的副本，提高同一数据的QPS。一般情况下，单个Redis 从，可提供8~10 万的查询，所以如果我们增加12 个副本，就可以提供百万QPS 的热点查询。这个方法能解决热点问题，但成本比较高，如果你的集群分片数比较多，那分片数*副本数就是一笔不小的开销。</li></ul></li><li>让热点数据离用户越近越好。<ul><li>我们把热点数据再上移，<strong>在服务内部做热点数据的本地缓存</strong>，也就是让业务层的每个实例里都有份数据副本，读请求数据的时候，无需去Redis 获取，直接从本地缓存里取。这时候，数据的副本数和服务一样多，另外请求链路减少了一层，而且也减少了对Redis 单片QPS 上限的依赖，具有更高的可靠性和更高的性能。这种方式热点数据的副本数随实例的增加而增加，非常容易扩展，扛高流量。但是本地缓存的数据延迟，业务要能够接受。</li></ul></li><li>直接短路返回<ul><li>某个商品秒杀的时候，这个SKU 是不支持使用优惠券的，那么优惠券系统在处理的时候，可以根据商品SKU 编码，直接返回空的券列表，这样基本上不怎么耗资源，效率非常高。当然了，<strong>这种方式和具体商品的活动方式有关，不具有通用性，但是在几百万的流量面前，简单有效</strong>。</li></ul></li></ol><h4 id="写热点">写热点</h4><p>点击“立即预约”的时候，会往“预约人数”这个Redis key 上进行累加操作，当几百万人同时预约的时候，这个key 就是热点写操作了。这个预约总人数有个特点，只是在前端给用户展示用，除此之外，没有其他用途，因此在并发的场景下，这个人数可以不用那么及时和精确，我们的思路就是<strong>先在JVM 内存里累加，延迟提交到 Redis，这样就可以把 Redis 的OPS 降低几十倍。</strong></p><p>写热点还有一个场景就是库存的扣减，有一种思路，可以通过<strong>把一个热 key拆解成多个key 的方式，避免热点问题</strong>。这种设计针对MySQL 和Redis 缓存都是适用的，但是涉及到对库存进行再细分，以及子库存挪动，非常复杂，而且边界问题比较多，容易出现库存不准的问题，需要谨慎小心的使用这种方法。</p><p>另一个思路就是**对单SKU 的库存直接在Redis 单分片上进行扣减，实际上，扣减库存在秒杀链路的末端，通过我们之前的削峰和限流的各种手段，真正到库存的流量是有限的，单片的Redis OPS 能承受得了。<strong>然后，我们可以</strong>针对单SKU的库存扣减进行单独限流，保证库存单片Redis 的压力。**这样双管齐下，单SKU的库存Redis 扣减压力就是可控的了。</p><h1>防刷</h1><p>秒杀的抢购原则无外乎两种，要么是绝对公平的，即先到的请求先处理，暂时处理不了的，会把你放入到一个等待队列，然后慢慢处理。要么是非公平的，暂时处理不完的请求会立即拒绝，让你回到开始的地方，和大家一起再比谁先到，如此往复，直至商品售完。</p><p>因此黑产的方法也很简单，就是想法设法比别人快，发出的请求比别人多，就像在一个赛道上，给自己制造很多的分身，不仅保证自己比别人快，同时还要把别人挤出赛道，确保自己能够到达终点。黑产对秒杀业务的威胁是巨大的，它不仅破坏了公平的抢购环境，而且给秒杀系统带来了庞大的性能开销，所以我们不能放任黑产流量对系统的肆意冲击，我们必须对抗它。既然黑产流量的特点是比正常流量快且频率高，那么我们也就可以从这两个方面来着手思考对策。</p><p>只针对第一个快的特点，其实在活动开始后，进来的流量我们都无法将其定义为非法流量，这个只能借助像风控这种多维度校验，才能将其识别出来，除非它跳步骤。而第二个高频率的特点，同时也是对秒杀系统造成危害最大的一种，我们还是有很多种手段来应对的。专门针对高频率以及跳步奏的非法手段常见的防刷方案有哪些呢？</p><ul><li>Nginx 有条件限流，是非常简单且直接的一种方式，这种方式可以有效解决黑产流量对单个接口的高频请求，但要想防止刷子不经过前置流程直接提单，还需要引入一个流程编排的Token 机制。</li><li>Token 机制，Token 一般都是用来做鉴权的。放到秒杀的业务场景就是，**对于有先后顺序的接口调用，我们要求进入下个接口之前，要在上个接口获得令牌，**不然就认定为非法请求。同时这种方式也可以防止多端操作对数据的篡改，如果我们在Nginx 层做Token 的生成与校验，可以做到对业务流程主数据的无侵入。比如可以通过header_filter_by_lua_block，在返回的header 里增加流程Token。Token 可以做MD5，加入商品编号、活动开始时间、自定义加密key 等。</li><li>黑名单机制，黑名单机制分为本地黑名单和集群黑名单两种。该机制顾名思义，就是通过黑名单的方式来拦截非法请求的，但我们的核心问题是黑名单从哪里来呢?<ul><li>从外部导入，可以是风控，也可以是别的渠道</li><li>自力更生，自己生成自己用<ul><li>比如前面介绍了Nginx 有条件限流会过滤掉超过阈值的流量，但不能完全拦截，所以索性就不限流，直接全部放进来。然后我们自己实现一套“逮捕机制”，即利用Lua 的共享缓存功能，去<strong>统计1 秒内这个用户或者IP 的请求频率，如果达到了我们设定的阈值，我们就认定其为黑产</strong>，然后将其放入到本地缓存黑名单。黑名单可以被所有接口共享，这样用户一旦被认定为黑产，其针对所有接口的请求，都将直接被全部拦截，实现刷子流量的0 通过。</li><li>本地黑名单机制的优点就是简单、高效。但也正因为基于单机，如果黑产将请求频率控制在1*Nginx 机器数以内，按请求理想散落的情况下，那么就不会被抓到，所以真要想通过频率来严格限制刷子请求，是可以<strong>借助Redis 来实现集群黑名单的</strong>。实现思路和单机的基本一致，就是使用的内存由本地变为了Redis，当然这也必然会影响接口的响应性能。</li></ul></li></ul></li></ul><h1>风控</h1><p>风控在秒杀业务流程中非常重要，但风控的建立却是非常困难的。成熟的风控体系需要建立在大量的数据之上，并且要通过复杂的实际业务场景考验，不断地做智能修正，才能逐步提高风险识别的准确率。风控的建设过程，其实就是一个不断完善用户画像的过程，而用户画像是建立风控的基础。一个用户画像的基础要素包括手机号、设备号、身份、IP、地址等，一些延展的信息还包括信贷记录、购物记录、履信记录、工作信息、社保信息等等。这些数据的收集，仅仅依靠单平台是无法做到的，这也是为什么风控的建立需要多平台、广业务、深覆盖，因为只有这样，才能够尽可能多地拿到用户数据。有了这些数据，所谓的风控，其实就是针对某个用户，在不同的业务场景下，检查用户画像中的某些数据，是否触碰了红线，或者是某几项综合数据，是否触碰了红线。而有了完善的用户画像，黑产用户风控中的判定自然就越准。</p><h1>容灾</h1><p>机房容灾其实不仅仅是秒杀系统需要思考的，重要的软件系统，不管是互联网应用，还是传统应用，比如银行系统等，都需要考虑机房容灾的问题。不同的场景，容灾的设计也不尽相同</p><p>容灾，一般是指搭建多套(两套或以上)相同的系统，当其中一个系统出现故障时，其他系统能快速进行接管，从而持续提供7*24 不间断业务。</p><p>在讨论容灾的时候，经常会听到“同城双活”“异地多活”等术语，它们都是不同的容灾方案，不同的方案，其技术要求、建设成本、运维成本都不一样。在多活架构下，对两套系统之间通信线路质量、时延要求很高，业内主流IT 厂家比较认可的是<strong>单向时延2ms 以内</strong>，超过这个时延，对“多活”的跨机房请求和数据同步的性能影响就会比较大。</p><p>因此，涉及跨城市的多活，当城市距离较大时，比如上海和北京，那么这种物理上的时延很难克服。为了保证数据库的一致性，就需要付出很高的时间成本，往返几个来回时延叠加，RT 就受不了了。所以异地多活单元化的设计其实非常复杂，成本高昂，即便是大厂也不一定能搭建好异地多活。“同城双活”相对就简单一些，同城双活是在同城或相近区域内建立两个机房。同城双机房距离比较近，通信线路质量较好，比较容易实现数据的同步复制，保证高度的数据完整性和数据零丢失。同城两个机房各承担一部分流量，一般入口流量完全随机，内部RPC 调用尽量通过就近路由闭环在同机房，相当于两个机房镜像部署了两个独立集群，同城双活因为物理距离短，机房间的时延是有保证的。数据仍然是单点写到主机房数据库，然后实时同步到另外一个机房，读流量则完全可以做到机房内闭环。双机房间的物理专线也必须是高可用的设计，至少需要两根以上进行互备，这样在专线故障时才有机会绕行避免不可用，这些在大厂里一般是运维团队在保障，我们稍微了解实现原理就可以。</p><h1>总结梳理</h1><p><strong>秒杀隔离: 业务隔离(提报系统)、系统隔离、数据隔离(一主多从)</strong></p><h2 id="页面静态化（Nginx）">页面静态化（Nginx）</h2><ul><li><p><strong>商详页静态化(freemarker)</strong></p></li><li><p>商详页库存获取</p><ul><li><p><strong>直接让Nginx(OpenResty - lua)访问Redis</strong></p></li><li><p><strong>Redis从库和Nginx在部署在同一台服务器</strong></p><ul><li><p>Unix Domain Socket</p></li><li><p>本地Redis宕机时, 回源到微服务中查询主Redis或者数据库</p></li></ul></li></ul></li></ul><h2 id="流量管控">流量管控</h2><ul><li><p>前期（<strong>预约系统</strong>）</p><ul><li><p><strong>固定时段、人数上限（即时熔断）</strong></p></li><li><p><strong>预约关系表：分库分表&amp;历史归档&amp;MQ异步写入</strong></p></li><li><p><strong>预约商品表：Redis一主多从&amp;本地缓存</strong></p></li><li><p><strong>页面预约人数：本地缓存累加，批量写入Redis</strong></p></li></ul></li><li><p>事中（服务平稳处理&amp;节省机器成本）</p><ul><li><p><strong>验证码和问答题（可以独立为一个微服务）</strong></p><ul><li><p><strong>从session 共享角度来说，验证码应该放入Redis</strong></p></li><li><p>Nginx Lua读时:**读从Redis未果则读主Redis；**或休眠后再读</p></li></ul></li><li><p><strong>消息队列</strong></p><ul><li>技巧：<strong>库存为0后在缓存里设置占位符，让后续请求快速失败</strong></li></ul></li></ul></li><li><p><strong>限流（逐级限流，分层过滤 - 令牌桶和漏桶）</strong></p><ul><li><p>Nginx 限流（<strong>HttpLimitzone 和 HttpLimitReqest</strong>）</p><ul><li><strong>1 个IP 1 秒内只能访问 1 次</strong></li></ul></li><li><p>应用/服务层限流</p><ul><li><p><strong>线程池限流（最大连接数）</strong></p></li><li><p><strong>API 限流（QPS - RateLimiter，Sentinel）</strong></p></li></ul></li><li><p>自定义限流</p><ul><li><strong>本地预先存放一批订单ID，通过定时任务刷新</strong></li></ul></li><li><p>分层过滤（秒杀5分钟，前2分钟抢完了，则<strong>后3分钟为无效请求</strong>）</p><ul><li><p><strong>Nginx本地缓存</strong>库存信息（商详页直接返回秒杀结束）</p></li><li><p>服务层：<strong>秒杀确认单和秒杀订单都会进行库存检查</strong></p><ul><li><strong>在实际下单和扣减库存前中断用户的请求链路</strong></li></ul></li></ul></li></ul></li><li><p><strong>限购（用户提单时，通过限购请求，再去做真实库存扣减）</strong></p><ul><li><p><strong>商品维度限制：不同地区的库存不同</strong></p></li><li><p><strong>个人维度限制：手机号、收货地、设备IP</strong></p></li></ul></li></ul><h2 id="库存扣减（先查询库存，再库存扣减）">库存扣减（先查询库存，再库存扣减）</h2><ul><li><p><strong>超卖：查询和扣减不是原子操作；并发引起的请求无序</strong></p></li><li><p>数据库方案（**简单安全，性能较差，**适合请求量较小的场景）</p><ul><li><p>行锁</p><ul><li><p>查询库存的时候使用<code>for update</code></p></li><li><p>where 条件，保证库存不会被减到 0 以下</p></li></ul></li><li><p>乐观锁</p><ul><li><p>查询库存时除了库存值还有版本号</p></li><li><p>每次扣减库存时带上这个版本号进行扣减</p></li><li><p>扣减失败，则需要重新查询，重新扣减（加重数据库的负担）</p></li></ul></li><li><p>将库存字段设为无符号整数（值小于零时直接报错）</p></li></ul></li><li><p>分布式锁方案（可以实现，但不建议）</p><ul><li>锁的有效期问题：时间太长太短都对业务有不利影响</li></ul></li><li><p><strong>高并发扣减方案（<strong>单个商品的高并发读和高并发写问题</strong>）</strong></p><ul><li><p><strong>写服务降级（<strong>牺牲数据一致性获取更高的性能</strong>）</strong></p><ul><li><p><strong>同步写缓存、MQ异步写数据库（定时任务比对）</strong></p></li><li><p><strong>宁可少买，不可超卖，少卖可以做返场（Lua脚本）</strong></p></li></ul></li><li><p><strong>读服务降级（<strong>故障场景下紧急降级快速止损</strong>）</strong></p><ul><li><p><strong>建设多级缓存（Redis, MongoDB, ES, 多副本）</strong></p></li><li><p>缓存全部故障时，切换到 DB 暂抗</p></li></ul></li><li><p><strong>简化系统功能（<strong>舍弃非核心功能</strong>）</strong></p><ul><li><p>交互少，数据小，链路短，离用户近</p></li><li><p><strong>只对流量非常高的SKU进行降级</strong></p></li></ul></li></ul></li></ul><h2 id="热点数据（单商品SKU落在的那个分片上性能总会达到上限）">热点数据（单商品SKU落在的那个分片上性能总会达到上限）</h2><ul><li><p><strong>读热点</strong></p><ul><li><p><strong>增加Redis从副本数</strong></p></li><li><p><strong>在服务内部做热点数据的本地缓存（<strong>但本地缓存有数据延迟</strong>）</strong></p></li><li><p><strong>不支持该活动的SKU直接短路返回</strong>（不通用，和具体商品有关）</p></li></ul></li><li><p><strong>写热点</strong></p><ul><li><p><strong>本地累加，延迟批量提交到Redis</strong></p></li><li><p><strong>一个热 key拆解成多个key（<strong>复杂</strong>）</strong></p></li><li><p><strong>对单SKU的库存直接在Redis单分片上进行扣减，进行单独限流</strong></p><ul><li><strong>扣减库存在秒杀链路的末端，流量有限</strong></li></ul></li></ul></li></ul><h2 id="防刷">防刷</h2><ul><li><p>Nginx限流</p></li><li><p>Token机制：<strong>对于有先后顺序的接口调用，我们要求进入下个接口之前，要在上个接口获得令牌</strong></p></li><li><p>黑名单（本地黑名单和集群黑名单）</p><ul><li><p>从外部导入，可以是风控，也可以是别的渠道</p></li><li><p>自己生成</p><ul><li><p>根据Nginx的流量进行分析，利用Lua共享缓存，**统计1秒内这个用户或者IP的请求频率，**放入本地缓存黑名单，但是如果黑产将请求频率控制在1*Nginx机器数以内，就不会被抓到</p></li><li><p><strong>借助Redis实现集群黑名单（<strong>影响接口响应性能</strong>）</strong></p></li></ul></li></ul></li></ul><h2 id="风控（不断完善用户画像）">风控（不断完善用户画像）</h2><ul><li>需要大量数据和复杂的实际业务场景</li></ul><h2 id="容灾（同城双活，异地多活）">容灾（同城双活，异地多活）</h2><ul><li><p><strong>单向时延2ms以内（物理专线至少两根以上）</strong></p><ul><li>异地多活成本太高，设计复杂</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 秒杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11.数据高可用</title>
      <link href="/2023/07/10/architect/06.dian-shang-xi-tong/11-shu-ju-gao-ke-yong/"/>
      <url>/2023/07/10/architect/06.dian-shang-xi-tong/11-shu-ju-gao-ke-yong/</url>
      
        <content type="html"><![CDATA[<p>缓存不命中：把<strong>全量数据</strong>都放在Redis 集群中，处理读请求的时候，只需要读取Redis，而不用访问数据库。很多大型互联网公司都在使用这种方法<br>更新缓存：</p><ul><li>启动一个更新缓存的服务接收数据变更的消息队列中的消息，然后注意解决消息的<strong>可靠性</strong>问题即可，这种方式实现起来很简单，也没有什么侵入性。</li><li>使用 Binlog 实时更新Redis 缓存（Canal）<ul><li>由于在整个缓存更新链路上，减少了一个收发消息队列的环节，从MySQL 更新到Redis 更新的时延变得更短，出现故障的可能性也更低，这也是为什么很多大型互联网企业更青睐于采用这种方案的原因。</li></ul></li></ul><h1>Canal 详解</h1><p><font color="green">它通过模拟MySOL主从复制的交互协议，<strong>把自己伪装成一个MySOL的从节点</strong>，向 MySOL 主节点发送dump 请求。</font>MySOL 收到请求后，就会向 Canal 开始推送Binlog，Canal 解析Binlog 字节流之后，将其转换为便于读取的结构化数据，供下游程序订阅使用。<br>Canal有个服务端，在模拟MySOL从节点获得数据库服务器的数据后，我们可以使用一个包含Canal Client的服务程序获得Canal服务端解析出的数据，也可以通过配置让Canal服务端直接将数据发送给MQ，当然我们的Canal Client 程序经过数据处理后也可以发送给MQ。不管是经过Canal Client程序还是直接发给MQ，接下来还可由第三方的服务或者存储系统进行后续处理。</p><h2 id="配置">配置</h2><ol><li><strong>先开启 Binlog 写入功能，配置binlog-format为ROW模式</strong></li><li><strong>给Canal 设置一个用来复制数据的MySQL账号</strong></li><li><font color="green"><strong>修改canal.properties 文件，比较关键的是canal.destinations</strong></font></li><li><font color="green"><strong>修改instance.properties</strong></font><ol><li><strong>MySQL 主服务的连接配置</strong></li><li><strong>要对哪些相关的业务表进行监视</strong></li></ol></li></ol><h2 id="跨系统实时数据同步">跨系统实时数据同步</h2><p>如果是按照关键字搜索，放在ES 中会比放在MySQL 中更合适。所以在大规模系统中，对于海量数据的处理原则都是根据业务对数据查询的需求反过来确定选择什么数据库、如何组织数据结构、如何分片数据等之类的问题，这样才能获得最优的查询性能。在大型互联网企业中、其核心业务数据，以不同的数据结构和存储方式，保存几十甚至上百份，都是非常正常的。</p><p>当然为了能够支撑下游的众多数据库，从 Canal 出来的Binlog 数据肯定不能直接写入下游的众多数据库中。原因也很明显：一是写不过来；二是下游的每个数据库，在写入之前可能还要处理一些数据转换和过滤的工作。所以一般我们会增加一个<font color="green"><strong>消息队列来解耦上下游</strong></font>。</p><h1>更换数据库</h1><p>既不能长时间停止服务，也不能丢失数据</p><h2 id="不停机更换数据库">不停机更换数据库</h2><p>我们在设计迁移方案的时候，<font color="green"><strong>一定要保证每一步都是可逆的</strong></font>。也就是必须保证，每执行完一个步骤,一旦出现任何问题，都能快速回滚到上一个步骤。</p><ol><li>首先要做的一点是，<font color="green"><strong>把旧库的数据全部复制到新库中</strong></font>。因为旧库还在服务线上业务，所以<strong>不断会有数据写入旧库</strong>，我们不仅要向新库复制数据，<font color="green"><strong>还要保证新旧两个库的数据是实时同步的</strong></font>。所以，需要用一个同步程序来实现新旧两个数据库的实时同步。可以使用Binlog 实现两个异构数据库之间数据的实时同步。<font color="green"><strong>这一步不需要回滚，因为这里只增加了一个新库和一个同步程序</strong></font>，对系统的旧库和程序没有任何改变。<font color="green"><strong>即使新上线的同步程序影响到了旧库，停掉同步程序也就可以了。</strong></font></li><li>改造DAO层<ol><li><font color="green"><strong>支持双写新旧两个库</strong></font>，并且预留<strong>热切换开关</strong>，能通过开关控制三种写状态:只写旧库、只写新库和同步双写</li><li><font color="green"><strong>支持读取新旧两个库</strong></font>，同样预留<strong>热切换开关</strong>，控制读取旧库还是新库</li></ol></li><li><font color="green">然后上线新版服务，这个时候服务仍然是<strong>只读写旧库</strong>，不读写新库。<strong>让新版服务稳定运行至少一到两周的时间</strong></font>，其间我们不仅要验证新版服务的稳定性，还要<font color="green"><strong>验证新旧两个库中的数据是否保持一致</strong></font>。这个过程中，如果新版服务<font color="green"><strong>出现任何问题，都要立即下线新版服务，回滚到旧版本的服务</strong></font>。<ul><li><font color="green"><strong>稳定一段时间之后，就可以开启订单服务的双写开关了</strong>。<strong>开启双写开关的同时，需要停掉同步程序</strong></font>。这里有一个需要特别注意的问题是，这里双写的业务逻辑，一定是<font color="green"><strong>先写旧库，再写新库，并且以旧库的结果为准</strong></font>。</li><li><font color="green"><strong>如果旧库写成功，新库写失败，则返回成功</strong>，但这个时候要记录日志，后续我们会根据这个日志来验证新库是否还有问题。<strong>如果旧库写失败，则直接返回失败</strong>，同时也不再写新库了。<strong>不能让新库影响到现有业务的可用性和数据准确性</strong>。如果<strong>出现任何问题都要关闭双写</strong>,回滚到只读写旧库的状态。</font></li><li>切换到双写之后,新库与旧库的数据可能会出现不一致的问题。<ul><li>停止同步程序和开启双写，这两个过程很难做到无缝衔接</li><li>双写的第略也不能保证新旧库的强一致性。对于这个问题,我们需要上线一个<font color="green"><strong>比对和补偿的程序</strong></font>，用于比对旧库最近的数据变更，然后检查新库中的数据是否一致，如果不一致，则需要进行补偿</li></ul></li><li>开启双写之后，还需要<strong>稳定运行至少几周的时间</strong>，并且在这期间我们需要不断地检查，以确保不能有旧库写成功、新库写失败的问题。如果在几周之后比对程序发现新旧两个库的数据没有不一致的情况，那就可以认为新旧两个库的数据一直都是保持同步的。</li></ul></li><li>接下来就可以用类似<font color="green"><strong>灰度发布的方式把读请求逐步切换到新库上</strong>。同样，运行期间如果<strong>出现任何问题，都要再切回到旧库</strong></font>。</li><li><font color="green">将<strong>全部读请求都切换到新库上之后，其实读写请求已经全部切换到新库上了</strong></font>，虽然实际的切换已经完成,但后续还有需要收尾的步骤。<ul><li><font color="green">**再稳定一段时间之后，就可以停掉比对程序，把订单服务的写状态改为只写新库。至此，旧库就可以下线了。**注意，在整个迁移过程中,<strong>只有这个步骤是不可逆的</strong>。</font>由于这一步的主要操作就是摘掉已经不再使用的旧库，因此对于正在使用的新库并不会有什么影响，实际出问题的可能性已经非常小了。</li><li>双写切换为新库单写这一步不可逆的主要原因是，一旦切换为新库单写，旧库的数据与新库的就不一致了，这种情况是无法再切换回旧库的。所以问题的关键是，切换为新库单写后，需要保证旧库的数据能与新库保持同步。<font color="green">这时双写需要增加一种过渡状态：**从双写以旧库为准过渡到双写以新库为准。然后把比对和补偿程序反过来，用新库的数据补偿旧库的数据。**这样就可以做到一旦出现问题，就直接切回到旧库上。</font>但是这样做一般成本比较高。</li></ul></li><li>至此们完成了在线更换数据库的全部流程。<font color="green">双写版本的服务也完成了它的历史使命，<strong>可以在下一次升级订单服务版本的时候下线双写功能</strong>。</font></li></ol><p><font color="green">数据表的变更，如果只是新增表，这个很简单，一般直接回退到旧版本程序即可；但如果牵涉到<strong>表字段的变化</strong>就麻烦些，但是也可以采用类似的思路，<strong>双写新旧表并设计热切换开关</strong>。</font></p><h2 id="实现比对和补偿程序">实现比对和补偿程序</h2><p>这个比对和补偿程序的实现难点在于，我们要比对的是两个随时都在变化的数据厍中的数据。</p><p>像订单这类时效性比较强的数据，是比较容易进行比对和补偿的。因为订单一旦完成之后，几乎就不会再改变了，比对和补偿程序就可以根据订单完成时间，每次只比对这个时间窗口内完成的订单。补偿的逻辑也很简单，<font color="green"><strong>发现不一致的情况后，直接用旧库的订单数据覆盖新库的订单数据就可以了</strong></font>。<br>这样，切换双写期间，对于少量不一致的订单数据，等到订单完成之后，补偿程序会将其修正。后续在双写的时候只要新库不是频繁写入失败，就可以保证两个库的数据完全一致。<br>比较麻烦的是更一般的情况，比如像商品信息之类的数据，随时都有可能会发生变化。如果数据上带有更新时间,那么比对程序就可以利用这个更新时间，<font color="green"><strong>每次从旧库中读取一个更新时间窗口内的数据，到新库中查找具有相同主键的数据进行比对</strong></font>，如果发现数据不一致，则还要比对一下更新时间。</p><ul><li><font color="green"><strong>如果新库数据的更新时间晚于旧库数据，那么很可能是比对期间数据发生了变化，这种情况暂时不要补偿，放到下个时间窗口继续进行比对即可。</strong></font></li><li><font color="green"><strong>时间窗口的结束时间不要选取当前时间，而是要比当前时间早一点，比如1分钟之前，这样就可以避免比对正在写入的数据了。</strong></font></li></ul><p><strong>如果数据没带时间戳信息，那就只能从旧库中读取Binlog</strong>，获取数据变化信息后到新库中查找对应的数据进行比对和补偿。</p><h1>安全地实现数据备份和恢复</h1><p>一般来说，由存储系统导致的比较严重的损失主要有两种情况。</p><ol><li><strong>数据丢失造成的直接财产损失</strong>。比如订单数据丢失造成了大量的坏账。为了避免这种损失，系统需要保证数据的<strong>高可靠性</strong>。</li><li><strong>存储系统的损坏</strong>，造成整个业务系统停止服务而带来的损失。比如，电商系统停服期间造成的收入损失。为了避免这种损失，系统需要保证存储服务的<strong>高可用性</strong>。</li></ol><p>保证数据安全，最简单且有效的方法就是<strong>定期备份数据</strong>，这样无论因为出现何种问题而导致的数据损失，都可以通过备份来恢复数据。</p><p>最简单的备份方式就是<strong>全量备份</strong>。备份的时候把所有的数据复制一份，存放到文件中，恢复的时候再把文件中的数据复制回去，这样就可以保证恢复之后,数据库中的数据与备份时的数据是完全一样的。在 MySQL 中，我们可以使用mysqldump 命令执行全量备份。</p><p><strong>不过全量备份的代价非常高</strong>：首先备份文件包含了数据库中的所有数据，占用的磁盘空间非常大；其次,每次备份操作都要拷贝大量的数据，备份过程中会占用数据库服务器大量的CPU和磁盘IO 资源、同时为了保证数据一致性，备份过程中很有可能会锁表。这此都会导致在备份期间数据库本身的性能严重下降。所以我们不能频繁地对数据库执行全量备份操作。</p><p>一般来说，在生产系统中每天执行一次全量备份就已经是非常频繁的了。这就意味着，如果数据库中的数据丢失了就只能恢复到最近一次全量备份的那个时间点，这个时间点之后的数据是无法找回的。也就是说，因为全量备份的代价比较高不能频繁地执行备份操作,所以<strong>全量备份不能做到完全无损的恢复</strong>。</p><p>相比于全量备份，<strong>增量备份每次只用备份相对于上一次备份发生了变化的那部分数据，所以增量备份的速度更快。</strong></p><p>MySQL 自带的 Binlog 就是一种实时的增量备份工具。Binlog 所记录的就是MySQL 数据变更的操作日志。开启 Binlog 之后，MySQL 中数据的每次更新操作，都会记录到Binlog 中。Binlog 是可以回放的，回放Binlog，就相当于是把之前对数据库中所有数据的更新操作，都按顺序重新执行一遍，回放完成之后数据自然就恢复了。这就是Binlog 增量备份的基本原理。很多数据库都有类似于MySQL Binlog 的日志工具，原理也与Binlog 相同，备份和恢复的方法也与之类似。<font color="green"><strong>通过定期的全量备份配合 Binlog，我们可以把数据恢复到任意一个时间点</strong></font></p><p>在执行备份和恢复的时候，需要特别注意如下两个要点：</p><ol><li>“<font color="green"><strong>不要把所有的鸡蛋放在同一个篮子中</strong></font>”，无论是全量备份还是Binlog，都不要与数据库存放在同一个服务器上。最好能存放到不同的机房，甚至不同城市离得越远越好。这样即使出现机房着火、光缆被挖断甚至地震也不怕数据丢失。</li><li>在回放 Binlog 的时候，<font color="green"><strong>指定的起始时间可以比全量备份的时间稍微提前一点儿</strong></font>，这样可以确保全量备份之后的所有操作都在恢复的Binlog 范围内，从而保证数据恢复的完整性。<ul><li><font color="green"><strong>为了确保回放的幂等性，需要将Binlog的格式设置为ROW格式</strong></font></li></ul></li></ol><h1>总结梳理</h1><h2 id="Canal：把自己伪装成一个MySOL的从节点">Canal：<strong>把自己伪装成一个MySOL的从节点</strong></h2><ol><li><p><strong>先开启 Binlog 写入功能，配置binlog-format为ROW模式</strong></p></li><li><p><strong>给Canal 设置一个用来复制数据的MySQL账号</strong></p></li><li><p><strong>修改canal.properties 文件，比较关键的是canal.destinations</strong></p></li><li><p><strong>修改instance.properties</strong></p><ol><li><p><strong>MySQL 主服务的连接配置</strong></p></li><li><p><strong>要对哪些相关的业务表进行监视</strong></p></li></ol></li></ol><h2 id="跨系统实时数据同步：息队列来解耦上下游">跨系统实时数据同步：<strong>息队列来解耦上下游</strong></h2><h2 id="不停机更换数据库（保证每一步都是可逆的）">不停机更换数据库（<strong>保证每一步都是可逆的</strong>）</h2><ol><li><p><strong>把旧库的数据全部复制到新库中，保证新旧两个库的数据是实时同步的</strong></p><ul><li><strong>这一步不需要回滚，停掉同步程序就可以了</strong></li></ul></li><li><p>改造DAO：<strong>支持双写和读取新旧两个库，并预留热切换开关</strong></p></li><li><p><strong>只读写旧库，验证新旧两个库中的数据是否保持一致</strong></p></li><li><p><strong>开启双写开关，停掉同步程序</strong></p><ul><li><p><strong>先写旧库，再写新库，并且以旧库的结果为准</strong></p></li><li><p><strong>如果旧库写成功，新库写失败，则返回成功</strong></p></li><li><p><strong>如果旧库写失败，则直接返回失败</strong>，同时也不再写新库了</p></li><li><p><strong>不能让新库影响到现有业务的可用性和数据准确性</strong></p></li><li><p>数据不一致：<strong>比对和补偿的程序</strong></p></li></ul></li><li><p><strong>灰度发布的方式把读请求逐步切换到新库上</strong></p></li><li><p><strong>全部读请求都切换到新库上之后</strong></p><ul><li><p><strong>停掉比对程序，把服务的写状态改为只写新库。至此，旧库就可以下线了（只有这个步骤是不可逆的）</strong></p></li><li><p>过渡状态：<strong>从双写以旧库为准过渡到双写以新库为准。然后把比对和补偿程序反过来，用新库的数据补偿旧库的数据（成本太高）</strong></p></li></ul></li><li><p><strong>在下一次升级服务版本时下线双写功能</strong></p></li></ol><p>关于数据表的变更：</p><ul><li><p>如果只是新增表，直接回退到旧版本程序</p></li><li><p>如果牵涉到<strong>表字段的变化</strong>，<strong>双写新旧表并设计热切换开关</strong>。</p></li></ul><h2 id="比对和补偿程序">比对和补偿程序</h2><ol><li><p><strong>发现不一致的情况后，直接用旧库的订单数据覆盖新库的订单数据就可以了</strong></p></li><li><p><strong>每次从旧库中读取一个更新时间窗口内的数据，到新库中查找具有相同主键的数据进行比对</strong></p><ol><li><p><strong>如果新库数据的更新时间晚于旧库数据，那么很可能是比对期间数据发生了变化，这种情况暂时不要补偿，放到下个时间窗口继续进行比对即可。</strong></p></li><li><p><strong>时间窗口的结束时间不要选取当前时间，而是要比当前时间早一点，比如1分钟之前，这样就可以避免比对正在写入的数据了。</strong></p></li></ol></li></ol><p><strong>如果数据没带时间戳信息，那就只能从旧库中读取Binlog</strong></p><h2 id="数据备份和恢复：通过定期的全量备份配合-Binlog，我们可以把数据恢复到任意一个时间点">数据备份和恢复：<strong>通过定期的全量备份配合 Binlog，我们可以把数据恢复到任意一个时间点</strong></h2><ol><li><p><strong>不要把所有的鸡蛋放在同一个篮子中</strong></p></li><li><p><strong>指定的起始时间可以比全量备份的时间稍微提前一点儿</strong></p><ul><li><strong>为了确保回放的幂等性，需要将Binlog的格式设置为ROW格式</strong></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 缓存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10.高并发缓存</title>
      <link href="/2023/07/10/architect/06.dian-shang-xi-tong/10-gao-bing-fa-huan-cun/"/>
      <url>/2023/07/10/architect/06.dian-shang-xi-tong/10-gao-bing-fa-huan-cun/</url>
      
        <content type="html"><![CDATA[<p>缓存大体可以分为三类: 客户端缓存；服务端缓存；网络中的缓存。<br>根据规模和部署方式缓存也可以分为:单体缓存；缓存集群；分布式缓存。</p><p><strong>缓存一定是离用户越近越好</strong></p><p>缓存的分类：</p><ul><li>客户端缓存</li><li>页面缓存</li><li>浏览器缓存</li><li>APP缓存</li><li>网络缓存</li><li>Web代理缓存（Nginx）</li><li>边缘缓存（CDN）</li><li>服务端缓存</li><li>数据库缓存（innodb_buffer_pool_size）</li><li>应用级缓存（Caffeine，Ehcache）<ul><li>缓存预热</li></ul></li><li>平台级缓存（Redis）</li></ul><h1>缓存的数据一致性</h1><p>缓存更新方案：</p><ol><li>先更新缓存，再更新数据库（一般不考虑）<ul><li>更新缓存成功，更新数据库出现异常了，导致缓存数据与数据库数据完全不一致，而且很难察觉，因为缓存中的数据一直都存在。</li></ul></li><li>先更新数据库，再更新缓存（一般不考虑）<ul><li>原因跟第一个一样，数据库更新成功了，缓存更新失败，同样会出现数据不一致问题。</li></ul></li><li>先删除缓存，后更新数据库（不建议）<ul><li>A进程删除缓存后，还没来得及更新数据库，就被B进程查询数据库（缓存为空）后再次更新了缓存（相当于没删）<ul><li>解决方案：延时双删（删缓存 - 写数据库 - 休眠1s再删缓存）</li></ul></li><li>A进程删除缓存、写数据库后，主从同步时，被B从从库查数据（缓存为空，从库复制还未完成），再次更新了缓存（相当于没删）<ul><li>解决方案：1. 延时双删；2. 更新redis的查询操作，指向主库查询</li></ul></li><li>异步双删，增加吞吐量</li><li>不推荐的原因：1. 缓存穿透到DB；2. 休眠时间不好设置</li></ul></li><li><font color="green"><strong>先更新数据库，后删除缓存</strong></font><ul><li>依然有并发问题：进程A查询数据库（缓存为空）后写入缓存前，被进程B更新了数据库，导致缓存与DB不一致<ul><li>概率极低，因为需要让进程B写数据库的操作耗时比进程读数据库还短，而读库操作一般比写库要快</li><li>解决方案：1. 设置缓存失效时间；2. 异步延时删除；3. <font color="green"><strong>使用Canal监听binlog日志，更新缓存</strong></font></li></ul></li></ul></li></ol><p>删除缓存失败的解决方案：</p><ol><li>使用MQ再次删除</li><li>使用canal采集binlog日志，发送到MQ中，然后通过ACK机制确认处理删除缓存</li></ol><h2 id="缓存更新的设计模式">缓存更新的设计模式</h2><ul><li>Cache Aside （最常用，因为强一致的实现性能往往较差）：缓存失效时由调用方加载（上面的第四种方案）</li><li>Read/Write Through：把更新数据库操作由缓存自己代理了</li><li>Read Through：缓存失效时由用缓存服务自己来加载</li><li>Write Through：当有数据更新的时候，如果没有命中缓存，直接更新数据库，然后返回。如果命中了缓存，则更新缓存，然后再由Cache自己更新数据库。</li><li>Write Behind Caching：，在更新数据的时候，只更新缓存，不更新数据库，而我们的缓存会异步地批量更新数据库<ul><li>数据不是强一致性的，而且可能会丢失</li><li>实现复杂</li></ul></li></ul><h2 id="缓存数据一致性">缓存数据一致性</h2><ol><li>本地缓存<ul><li>设置失效时间（毛刺现象）</li><li><font color="green"><strong>设置双缓存</strong></font><ul><li>只有两份本地缓存都没有，才会到远程获得。</li><li>正式缓存是最后一次写入后经过固定时间过期</li><li>备份缓存是设置最后一次访问后经过固定时间过期</li><li>异步刷新：正式缓存只有无效才会被重新写入，备份缓存无论是否无效都会重新写入</li></ul></li><li>强制本地缓存失效和手动刷新本地缓存（CacheManagerController）</li></ul></li><li>Redis使用canal更新缓存</li></ol><h1>Redis集群</h1><h2 id="Redis-Cluster">Redis Cluster</h2><p>每个集群的槽数都是固定的16 384(即16×1024)个，客户端可以连接集群的任意一个节点来访问集群的数据，如果数据不在当前这个节点上，那就向客户端返回一个重定向的命令。支持主从复制（内部通过选举来确定有主节点的存活），支持读写分离（需要客户端的支持）。</p><h2 id="大厂不用Redis-Cluster构建集群">大厂不用Redis Cluster构建集群</h2><p>Redis Cluster 采用了一种去中心化的流言（Gossip）协议来传播集群配置的变化。传播速度比较慢，而且是集群规模越大，传播的速度就越慢。</p><p>比如说10个节点的状态信息约1kb。同时redis集群内节点，每秒都在发ping消息。在这种情况下，一个总节点数为200的Redis集群，默认情况下，这时ping/pong消息占用带宽达到25M，这还只是槽的范围是0 ～16383 的情况。其次redis 的集群主节点越多，心跳包的消息体内携带的数据越多。如果节点过1000 个，也会导致<strong>网络拥堵</strong>。因此redis 作者，不建议redis cluster 节点数量超过<strong>1000个</strong>。</p><h3 id="构建超大规模集群">构建超大规模集群</h3><h4 id="代理">代理</h4><p>比较常用的方法是采用一种基于代理的方式，即在客户端和Redis 节点之间</p><ol><li>负责在客户端和Redis 节点之间转发请求和响应。客户端只与代理服务打交道，代理收到客户端的请求之后，会转发到对应的Redis 节点上，节点返回的响应再经由代理转发返回给客户端。</li><li>负责监控集群中所有Redis 节点的状态，如果发现存在问题节点，就及时进行主从切换。</li><li>维护集群的元数据，这个元数据主要是集群所有节点的主从信息,以及槽和节点的关系映射表。像开源的Redis 集群方案twemproxy 和 Codis，采用的都是代理服务这种架构。</li></ol><p>优点：对客户端透明,从客户端的视角来看,整个集群就像是一个超大容量的单节点Redis 一样。除此之外,由于分片算法是受代理服务控制的，因此扩容比较方便，新节点加入集群后，直接修改代理服务中的元数据就可以完成扩容。</p><p>缺点：由于增加了一层代理转发，因此每次数据访问的链路变得更长了，这必然会导致一定的性能损失。而且代理服务本身也是集群的单点。当然，我们可以把代理服务也做成一个集群来解决单点问题，那样集群就更复杂了。</p><h4 id="客户端">客户端</h4><p><font color="green"><strong>把代理服务的寻址功能前移到客户端中。</strong></font>客户端在发起请求之前,首先会查询元数据，客户端可以自行缓存元数据，这样访问性能基本上就与单机版的Redis 一样了。如果某个分片的主节点宕机了，就会选举新的主节点，并更新元数据中的信息。对集样的扩容操作也比较简单，除了必须完成数据的迁移工作之外，再更新一下元数据就可以了。</p><p>当然元数据服务仍然是一个单点，但是它的数据量不大，访问量也不大，相对来说比较容易实现。利用已有的ZooKeeper、etcd 甚至MySQL 都可以被用来实现上述元数据服务。定制客户端的Redis 集群方案应该是最适合超大规模Redis 集群的方案，在性能、弹性、高可用等几个方面的表现都非常好，缺点是整个架构比较复杂，客户端不能通用，需要开发定制化的Redis 客户端，所以往往只有规模足够大的企业才能负担得起高昂的定制开发成本。</p><h1>总结梳理</h1><p><strong>缓存一定是离用户越近越好</strong></p><h2 id="Redis数据一致性">Redis数据一致性</h2><ul><li><p>先更新缓存，再更新数据库（更新DB异常）</p></li><li><p>先更新数据库，再更新缓存（更新缓存失败）</p></li><li><p>先删除缓存，后更新数据库（更新DB之前被其他进程更新了缓存）</p><ul><li><p>主从复制问题：更新缓存的查询指定为主库</p></li><li><p>异步延时双删</p></li></ul></li><li><p><strong>先更新数据库，后删除缓存（写入缓存之前被其他进程更新了DB）</strong></p><ul><li><p>低概率：要求写库操作快于读库</p></li><li><p>异步延时双删</p></li></ul></li><li><p><strong>使用Canal监听binlog日志，更新缓存</strong></p></li></ul><p><strong>本地缓存</strong></p><ul><li><p><strong>设置双缓存</strong></p></li><li><p>正式缓存是最后一次写入后经过固定时间过期</p></li><li><p>备份缓存是设置最后一次访问后经过固定时间过期</p></li><li><p>异步刷新：正式缓存只有无效才会被重新写入，备份缓存无论是否无效都会重新写入</p></li><li><p>缓存预热</p></li></ul><h2 id="大厂不用Redis-Cluster构建集群-2">大厂不用Redis Cluster构建集群</h2><ul><li><p>代理</p></li><li><p><strong>把代理服务的寻址功能前移到客户端中</strong></p><ul><li>ZooKeeper保存元数据</li></ul></li></ul><h2 id="设计模式">设计模式</h2><p>Cache Aside、Read/Write Through、Read Through、Write Through、Write Behind Caching</p>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 缓存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09.分布式事务</title>
      <link href="/2023/07/10/architect/06.dian-shang-xi-tong/09-fen-bu-shi-shi-wu/"/>
      <url>/2023/07/10/architect/06.dian-shang-xi-tong/09-fen-bu-shi-shi-wu/</url>
      
        <content type="html"><![CDATA[<h1>Seata架构</h1><ul><li>TC&nbsp;(Transaction&nbsp;Coordinator)&nbsp;-&nbsp;事务协调者：维护全局和分支事务的状态，驱动全局事务提交或回滚。</li><li>TM&nbsp;(Transaction&nbsp;Manager)&nbsp;-&nbsp;事务管理器：定义全局事务的范围：开始全局事务、提交或回滚全局事务。</li><li>RM&nbsp;(Resource&nbsp;Manager)&nbsp;-&nbsp;资源管理器：管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。</li></ul><p>其中，TC&nbsp;为单独部署的&nbsp;Server&nbsp;服务端，TM&nbsp;和&nbsp;RM&nbsp;为嵌入到应用中的&nbsp;Client&nbsp;客户端。</p><p>一个分布式事务的生命周期：<br>1.&nbsp;TM&nbsp;请求&nbsp;TC&nbsp;开启一个全局事务。TC&nbsp;会生成一个&nbsp;XID&nbsp;作为该全局事务的编号。XID会在微服务的调用链路中传播，保证将多个微服务的子事务关联在一起。<br>2.&nbsp;RM&nbsp;请求&nbsp;TC&nbsp;将本地事务注册为全局事务的分支事务，通过全局事务的&nbsp;XID&nbsp;进行关联。<br>3.&nbsp;TM&nbsp;请求&nbsp;TC&nbsp;告诉&nbsp;XID&nbsp;对应的全局事务是进行提交还是回滚。<br>4.&nbsp;TC&nbsp;驱动&nbsp;RM&nbsp;们将&nbsp;XID&nbsp;对应的自己的本地事务进行提交还是回滚。</p><h2 id="分库分表全局事务（ShardingSphere）">分库分表全局事务（ShardingSphere）</h2><p>不能简单的在全局事务发起方使用 <code>@GlobalTransactional</code>，因为seata找不到逻辑表对应的物理表，需要融入&nbsp;Apache&nbsp;ShardingSphere&nbsp;分布式事务</p><p>整合&nbsp;Seata&nbsp;AT&nbsp;事务时，需要将&nbsp;TM，RM&nbsp;和&nbsp;TC&nbsp;的模型融入&nbsp;Apache&nbsp;ShardingSphere&nbsp;的分布式事务生态中。&nbsp;在数据库资源上，Seata&nbsp;通过对接&nbsp;DataSource&nbsp;接口，让&nbsp;JDBC&nbsp;操作可以同&nbsp;TC&nbsp;进行远程通信。&nbsp;同样，Apache&nbsp;ShardingSphere&nbsp;也是面向&nbsp;DataSource&nbsp;接口，对用户配置的数据源进行聚合。&nbsp;因此，将&nbsp;DataSource&nbsp;封装为&nbsp;基于Seata&nbsp;的&nbsp;DataSource&nbsp;后，就可以将&nbsp;Seata&nbsp;AT&nbsp;事务融入到&nbsp;Apache&nbsp;ShardingSphere的分片生态中。</p><ol><li>引入依赖</li><li>配置seata.conf <pre class="line-numbers language-config" data-language="config"><code class="language-config">client&nbsp;{    application.id&nbsp;=&nbsp;tulingmall‐order‐curr    transaction.service.group&nbsp;=&nbsp;tuling‐order‐group}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>开启全局事务配置:<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// GlobalTransactional和ShardingTransactionType不能同时出现</span> <span class="token annotation punctuation">@ShardingTransactionType</span><span class="token punctuation">(</span><span class="token class-name">TransactionType</span><span class="token punctuation">.</span><span class="token constant">BASE</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@Transactional</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>关闭Seata数据源自动代理<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">seata</span><span class="token punctuation">:</span>    <span class="token key atrule">enable‐auto‐data‐source‐proxy</span><span class="token punctuation">:</span> false <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h1>柔性事务：可靠消息最终一致性</h1><h2 id="本地消息表方案">本地消息表方案</h2><ol><li>定时任务扫描日志<ul><li>启动独立的线程，定时对消息日志表中的消息进行扫描并发送至消息中间件，在消息中间件反馈发送成功后删除该消息日志，否则等待定时任务下一周期重试。</li></ul></li><li>消费消息（幂等控制）<ul><li>可以使用MQ的ack（即消息确认）机制，消费者监听MQ，如果消费者接收到消息并且业务处理完成后向MQ发送ack（即消息确认），此时说明消费者正常消费消息完成，MQ将不再向消费者推送消息，否则消费者会不断重试向消费者来发送消息。</li><li>由于消息会重复投递，需要实现幂等性。</li></ul></li></ol><h2 id="Rocketmq事务消息">Rocketmq事务消息</h2><p>RocketMQ事务消息设计则主要是为了<strong>解决Producer端的消息发送与本地事务执行的原子性问题</strong>，RocketMQ的设计中broker与producer端的双向通信能力，使得broker天生可以作为一个事务协调者存在；而RocketMQ本身提供的存储机制为事务消息提供了持久化能力；RocketMQ的高可用机制以及可靠消息设计则为事务消息在系统发生异常时依然能够保证达成事务的最终一致性。在RocketMQ&nbsp;4.3后实现了完整的事务消息，实际上其实是对本地消息表的一个封装，将本地消息表移动到了MQ内部，解决Producer端的消息发送与本地事务执行的原子性问题。</p><ol><li>Producer发送事务消息<ul><li>Producer（MQ发送方）发送事务消息至MQ&nbsp;Server，MQ&nbsp;Server将消息状态标记为Prepared（预览状态），注意此时这条消息消费者（MQ订阅方）是无法消费到的。</li></ul></li><li>MQ&nbsp;Server回应消息发送成功<ul><li>MQ&nbsp;Server接收到Producer发送的消息则回应发送成功表示MQ已接收到消息。</li></ul></li><li>Producer执行本地事务</li><li>消息投递<ul><li>若Producer本地事务执行成功则自动向MQ&nbsp;Server发送commit消息</li><li>MQ&nbsp;Server接收到commit消息后将“该消息”状态标记为可消费，此时MQ订阅方即正常消费消息；</li><li>若Producer&nbsp;本地事务执行失败则自动向MQ&nbsp;Server发送rollback消息，MQ&nbsp;Server接收到rollback消息后将删除“该消息”。</li><li>MQ订阅方消费消息，消费成功则向MQ回应ack，否则将重复接收消息。这里ack默认自动回应，即程序执行正常则自动回应ack。</li></ul></li><li>事务回查<ul><li>如果执行Producer端本地事务过程中，执行端挂掉，或者超时，MQ&nbsp;Server将会不停的询问同组的其他Producer来获取事务执行状态，这个过程叫事务回查。MQ&nbsp;Server会根据事务回查结果来决定是否投递消息。</li></ul></li></ol><p>对用户则来说，用户需要分别实现本地事务执行以及本地事务回查方法（<code>RocketMQLocalTransactionListener</code>），因此只需关注本地事务的执行状态即可。</p><h1>总结梳理</h1><h2 id="Seata架构：TC、TM、RM">Seata架构：TC、TM、RM</h2><p>1.&nbsp;TM&nbsp;请求&nbsp;TC&nbsp;开启一个全局事务。TC&nbsp;会生成一个&nbsp;XID&nbsp;作为该全局事务的编号。XID会在微服务的调用链路中传播，保证将多个微服务的子事务关联在一起。<br>2.&nbsp;RM&nbsp;请求&nbsp;TC&nbsp;将本地事务注册为全局事务的分支事务，通过全局事务的&nbsp;XID&nbsp;进行关联。<br>3.&nbsp;TM&nbsp;请求&nbsp;TC&nbsp;告诉&nbsp;XID&nbsp;对应的全局事务是进行提交还是回滚。<br>4.&nbsp;TC&nbsp;驱动&nbsp;RM&nbsp;们将&nbsp;XID&nbsp;对应的自己的本地事务进行提交还是回滚。</p><h2 id="分库分表全局事务（ShardingSphere）-2">分库分表全局事务（ShardingSphere）</h2><ol><li><p><strong>配置seata.conf</strong></p><ul><li><pre><code>  client&nbsp;{   &nbsp; &nbsp;application.id&nbsp;=&nbsp;tulingmall‐order‐curr   &nbsp; &nbsp;transaction.service.group&nbsp;=&nbsp;tuling‐order‐group  }</code></pre></li></ul></li><li><p><strong>开启全局事务配置</strong></p><ul><li><p>@ShardingTransactionType(TransactionType.BASE)</p></li><li><p>@Transactional</p></li></ul></li><li><p><strong>关闭Seata数据源自动代理</strong></p><ul><li>seata.enable‐auto‐data‐source‐proxy=false</li></ul></li></ol><h2 id="柔性事务：可靠消息最终一致性">柔性事务：可靠消息最终一致性</h2><h2 id="本地消息表方案-2">本地消息表方案</h2><ol><li><p><strong>定时任务扫描日志</strong></p><ul><li>启动独立的线程，定时对消息日志表中的消息进行扫描并发送至消息中间件，在消息中间件反馈发送成功后删除该消息日志，否则等待定时任务下一周期重试。</li></ul></li><li><p><strong>消费消息（幂等控制）</strong></p><ul><li>使用MQ的ack（即消息确认）机制，消费者监听MQ，如果消费者接收到消息并且业务处理完成后向MQ发送ack（即消息确认），此时说明消费者正常消费消息完成，MQ将不再向消费者推送消息，否则消费者会不断重试向消费者来发送消息。</li></ul></li></ol><h2 id="Rocketmq事务消息-2">Rocketmq事务消息</h2><p>解决Producer端的<strong>消息发送与本地事务执行的原子性</strong>问题</p><ol><li><p>Producer发送事务消息</p><ul><li>Producer（MQ发送方）发送事务消息至MQ&nbsp;Server，MQ&nbsp;Server将消息状态标记为Prepared（预览状态），注意此时这条消息消费者（MQ订阅方）是无法消费到的。</li></ul></li><li><p>MQ&nbsp;Server回应消息发送成功</p><ul><li>MQ&nbsp;Server接收到Producer发送的消息则回应发送成功表示MQ已接收到消息。</li></ul></li><li><p>Producer执行本地事务</p></li><li><p>消息投递</p><ul><li><p>若Producer本地事务执行成功则自动向MQ&nbsp;Server发送commit消息</p></li><li><p>MQ&nbsp;Server接收到commit消息后将“该消息”状态标记为可消费，此时MQ订阅方即正常消费消息；</p></li><li><p>若Producer&nbsp;本地事务执行失败则自动向MQ&nbsp;Server发送rollback消息，MQ&nbsp;Server接收到rollback消息后将删除“该消息”。</p></li><li><p>MQ订阅方消费消息，消费成功则向MQ回应ack，否则将重复接收消息。这里ack默认自动回应，即程序执行正常则自动回应ack。</p></li></ul></li><li><p>事务回查</p><ul><li>如果执行Producer端本地事务过程中，执行端挂掉，或者超时，MQ&nbsp;Server将会不停的询问同组的其他Producer来获取事务执行状态，这个过程叫事务回查。MQ&nbsp;Server会根据事务回查结果来决定是否投递消息。</li></ul></li><li><p><strong>需要分别实现本地事务执行以及本地事务回查方法</strong></p><ul><li><code>RocketMQLocalTransactionListener</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08.支付超时</title>
      <link href="/2023/07/10/architect/06.dian-shang-xi-tong/08-zhi-fu-chao-shi/"/>
      <url>/2023/07/10/architect/06.dian-shang-xi-tong/08-zhi-fu-chao-shi/</url>
      
        <content type="html"><![CDATA[<h1>延迟任务（不推荐）</h1><ol><li>下单时增加一个定时任务，在五分钟后对订单进行超时判断。</li><li>超时判断时，可以先去支付宝上查询订单支付状态。</li></ol><p>如果已支付，则判断订单是否正常结束，这是因为在用户完成扫码支付后，支付宝正常会往图灵电商发送支付成功的通知。但是这个通知是没有事务保证的，所以是非常有可能失败的，这时就需要在订单超时判断时对状态进行对齐。<br>如果未支付，则需要释放库存，取消本地订单，然后通知支付宝取消支付订单。</p><p><strong>五分钟时间太长了，而支付宝的通知又没有事务保证</strong>，通常企业中的做法并不会等到订单超时时才去查询订单状态，而是<strong>在后台会多次频繁查询支付宝支付状态</strong>，这样可以更及时的获得支付结果。例如五分钟超时时间，至少需要半分钟或者一分钟去查一次支付宝订单状态，如果支付成功了，就及时结束后续等待处理过程。如果没有完成支付，就再开启下一个定时任务，等待下次检查。</p><h1>RocketMQ事务消息（推荐）</h1><p>RocketMQ事务消息机制的核心是对消息状态进行不断的确认。循环确认的过程就正好可以用来改造，解决上面说的频繁任务调度的问题。这样就可以专注于开发业务逻辑，而不用关注频繁复杂的任务调度逻辑。</p><ol><li>支付宝预下单时发送事务消息：通知下游服务进行订单取消</li><li>发送消息后，会先执行本地事务。<ul><li>将订单ID放到Redis中，这样可以在后续进行支付状态检查时，快速找到对应的业务信息。</li><li>只要下单成功，就会返回<code>UNKOWN</code>状态，这样RocketMQ会在之后进行状态回查（检查支付宝支付状态）。</li></ul></li><li>然后在事务状态回查时<ul><li>会自行记录回查次数，超过最大次数就直接取消订单（<code>transactionCheckInterval</code>，默认回查15次，间隔60s，超过<code>ROLLBACK</code>）<ul><li>如果没有超过最大次数，就可以去支付宝中查询订单支付状态。<ul><li>如果已经支付完成，则返回<code>ROLLBACK</code>状态，消息取消，后续就不会再进行本地订单取消了。</li><li>如果未支付，则记录回查次数后，返回<code>UNKNOWN</code>状态，等待下次回查。</li></ul></li></ul></li></ul></li><li>如果订单已经超时（事务消息成功发送出去了）<ul><li>下游的消费者就会完成取消本地订单，释放库存等操作。</li></ul></li><li>如果本地订单已经取消，而支付宝支付状态已经成功，则退款</li></ol><h2 id="通过聚合支付进行分布式事务控制">通过聚合支付进行分布式事务控制</h2><p>如果在对接过程中，直接使用支付宝的二维码通知用户进行当面支付。而用户使用支付宝扫码支付的过程，电商都是完全不知道的，也就没有办法对用户的支付动作进行控制。比如如果电商本地的订单已经超时，就要阻止用户进行扫码支付。可以在支付宝的回调接口判断订单状态，如果订单式已关闭，则发起订单回退。这样显然效率是不高的。</p><p>在很多电商项目中，会采用聚合支付的方式，统一对接多个第三方支付方。用户的支付动作就不是直接与支付宝这样的第三方支付公司交互完成，而是要经过电商后台转发请求完成。这时，就可以通过添加一些分布式锁机制，保证整个支付业务是串行执行的，以<strong>防止在电商进行订单超时回退后，用户再次扫码支付</strong>。</p><h2 id="正向通知与反向通知">正向通知与反向通知</h2><p>当前是通过事务消息通知下游服务订单取消，这其实就是一种反向通知的方式。但是其实最直观的方式还是使用正向通知，即通过事务消息通知下游服务进行订单支付确认，这样这个下单的消息就容易扩展更多的下游消费者。订单下单确认是用户完成支付后，支付宝发起的通知来确认的。这时，如果<strong>订单确认的下游服务实现了幂等控制</strong>，就完全可以将事务消息机制改为正向通知。即在事务消息回查过程中，确认用户已经完成了支付，就发送消息通知下游服务订单支付成功。这样也可以防止支付宝通知丢失造成的订单状态缺失。</p><p>而用户订单超时判断，则可以在事务消息的状态回查过程中，通过记录回查次数判断。如果已经超时，则返回Rollback。同时启动另外一个消息生产者，往下游服务发送一个订单取消的消息，这样也是可以的。</p><h2 id="兜底补偿机制">兜底补偿机制</h2><p>对于订单超时后的回退处理，不光通过RocketMQ的事务消息进行了通知，另外也部署<strong>定时任务</strong>，批量回退超时的订单。<br>这其实就是一种事务消息的兜底补偿机制，以处理那些事务消息机制有可能漏处理的超时订单。在设计金融相关业务时，这种兜底策略会显得尤为重要。</p><h1>总结梳理</h1><h2 id="延迟任务（不推荐）">延迟任务（不推荐）</h2><h2 id="RocketMQ事务消息（反向通知）">RocketMQ事务消息（反向通知）</h2><ol><li><p>支付宝预下单时发送事务消息：通知下游服务进行订单取消</p></li><li><p>发送消息后，会先执行本地事务。</p><ul><li><p>将订单ID放到Redis中，这样可以在后续进行支付状态检查时，快速找到对应的业务信息。</p></li><li><p>只要下单成功，就会返回<code>UNKOWN</code>状态，这样RocketMQ会在之后进行状态回查（检查支付宝支付状态）。</p></li></ul></li><li><p>然后在事务状态回查时</p><ul><li><p>会自行记录回查次数，超过最大次数就直接取消订单（<code>transactionCheckInterval</code>，默认回查15次，间隔60s，超过<code>ROLLBACK</code>）</p><ul><li><p>如果没有超过最大次数，就可以去支付宝中查询订单支付状态。</p><ul><li><p>如果已经支付完成，则返回<code>ROLLBACK</code>状态，消息取消，后续就不会再进行本地订单取消了。</p></li><li><p>如果未支付，则记录回查次数后，返回<code>UNKNOWN</code>状态，等待下次回查。</p></li></ul></li></ul></li></ul></li><li><p>如果订单已经超时（事务消息成功发送出去了）</p><ul><li>下游的消费者就会完成取消本地订单，释放库存等操作。</li></ul></li><li><p>如果本地订单已经取消，而支付宝支付状态已经成功，则退款</p></li></ol><h2 id="聚合支付平台（分布式锁）-防止在电商进行订单超时回退后，用户再次扫码支付">聚合支付平台（分布式锁）: <strong>防止在电商进行订单超时回退后，用户再次扫码支付</strong></h2><h2 id="正向通知-需要订单确认的下游服务实现幂等控制">正向通知: 需要<strong>订单确认的下游服务实现幂等控制</strong></h2><h2 id="兜底补偿机制：定时任务批量回退超时的订单">兜底补偿机制：<strong>定时任务</strong>批量回退超时的订单</h2>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付超时 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07.订单系统设计</title>
      <link href="/2023/07/09/architect/06.dian-shang-xi-tong/07-ding-dan-xi-tong-she-ji/"/>
      <url>/2023/07/09/architect/06.dian-shang-xi-tong/07-ding-dan-xi-tong-she-ji/</url>
      
        <content type="html"><![CDATA[<h1>重复下单问题（幂等）</h1><ol><li>用户在点击“提交订单”的按钮时，不小心点了两下</li><li>网络错误也有可能会导致重传，很多RPC框架和网关都拥有自动重试机制</li></ol><h2 id="font-color-green-主键唯一约束-font"><font color="green">主键唯一约束</font></h2><p>为订单系统增加一个“生成订单号”的服务,这个服务没有参数,返回值就是一个新的、全局唯一的订单号。在用户进入创建订单的页面时，<font color="green"><strong>前端页面会先调用这个生成订单号的服务得到一个订单号，在用户提交订单的时候，在创建订单的请求中带着这个订单号。</strong></font>这个订单号就是订单表的主键，这样，无论是用户原因,还是网络原因等各种情况导致的重试,这些重复请求中的订单号都是相同的。订单服务在订单表中插入数据的时候，<strong>这些重复的INSERT语句中的主键，都是同一个订单号</strong>。数据库的主键唯一约束特性就可以保证，只有一次INSERT 语句的执行是成功的,这样就实现了创建订单服务的幂等性。</p><p>还有一点需要注意的是，在具体实现时，如果是因为重复订单导致插入订单表的语句失败，那么订单服务就不要再把这个错误返回给前端页面了。否则，就有可能会出现用户点击创建订单按钮后，页面提示创建订单失败，而实际上订单已经创建成功了。正确的做法是,遇到这种情况,订单服务直接返回“订单创建成功”的响应即可。要做到这一点，可以捕获 <code>java.sql.SQLIntegrityConstraintViolationException</code> 或者 <code>org.springframework.dao.DuplicateKeyException</code> 来实现。</p><h1>订单ABA问题（幂等）</h1><p>比如连续两次更新订单信息，第一次的更新由于网络问题发生重试，又覆盖了第二次的更新，导致ABA问题</p><h2 id="font-color-green-版本戳-font"><font color="green">版本戳</font></h2><p>数据库表添加<strong>version字段</strong>，每次查询订单的时候，版本号需要随着订单数据返回给页面。<font color="green"><strong>页面在更新数据的请求时,需要把该版本号作为更新请求的参数再带回给订单更新服务</strong></font>。订单服务在更新数据的时候需要<strong>比较订单当前数据的版本号与消息中的版本号是否一致</strong>，如果不一致就拒绝更新数据。如果版本号一致，则还需要在更新数据的同时，把版本号<strong>加1</strong>。当然需要特别注意的是，“比较版本号、更新数据和把版本号加1”这个过程必须在同一个事务里面执行，只有这一系列操作具备<strong>原子性</strong>，才能真正保证并发操作的安全性。<code>UPDATE orders set tracking_number = 666,version = version + 1 WHERE version = ?;</code></p><h1>读写分离</h1><p>使用Redis 作为MySQL 的前置缓存，可以帮助MySQL 挡住绝大部分的查询请求。但是与用户相关的系统,即使同一个功能界面，用户看到的数据也是不一样的。使用缓存的效果就没有那么好了.随着系统的用户数量越来越多,穿透到MySQL 数据库中的读写请求也会越来越多</p><p>读写分离是提升 MySQL 并发能力的<strong>首选方案</strong>，当单个MySQL 无法满足要求的时候，只能用多个MySQL 实例来承担大量的读写请求。MySQL 与大部分常用的关系型数据库一样,都是典型的单机数据库,不支持分布式部署。用一个单机数据库的多个实例组成一个集群,提供分布式数据库服务,是一件非常困难的事情。一个简单且非常有效的是用多个具有相同数据的MySOL 实例来分担大量查询请求，也就是“读写分离”。很多系统，特别是互联网系统，数据的读写比例严重不均衡，<strong>读写比例一般在9:1</strong>到几十比1，即平均每发生几十次查询请求，才会有一次更新请求，那就是说数据库需要应对的绝大部分请求都是只读查询请求。</p><p><font color="gray">分布式存储系统支持分布式写是非常困难的，因为很难解决好数据一致性的问题。但分布式读相对来说就简单得多，能够把数据尽可能实时同步到只读实例上，它们就可以分担大量的查询请求了。读写分离的另一个好处是，实施起来相对比较简单。把使用单机MySQL 的系统升级为读写分离的多实例架构非常容易，一般不需要修改系统的业务逻辑，只需要简单修改DAO (Data Access Object,一般指应用程序中负责访问数据库的抽象层)层的代码,把对数据库的读写请求分开，请求不同的MySQL 实例就可以了。通过读写分离这样一个简单的存储架构升级，数据库支持的并发数量就可以增加几倍到十几倍。所以，当系统的用户数越来越多时，读写分离应该是首要考虑的扩容方案。</font></p><h2 id="数据不一致问题">数据不一致问题</h2><p>读写分离的一个副作用是，可能会存在数据不一致的问题。原因是数据库中的数据在主库完成更新后，是异步同步到每个从库上的，这个过程会有一个微小的时间差。正常情况下，主从延迟非常小，以几毫秒计。但即使是这样小的延迟，也会导致在某个时刻主库和从库上数据不一致的问题。应用程序需要能够接受并克服这种主从不一致的情况，否则就会引发一些由于主从延迟而导致的数据错误。</p><p>回顾我们的订单系统业务，用户对购物车发起商品结算创建订单，进入订单页，打开支付页面进行支付，支付完成后，按道理应该再返回到支付之前的订单页。但如果这时马上自动返回到订单页，就很有可能会出现订单状态还是显示“未支付”的问题。因为支付完成后，订单库的主库中订单状态已经更新了，但订单页查询的从库中这条订单记录的状态可能还未更新，如何解决这种问题呢？其实这个问题并没有特别好的技术手段来解决，所以可以看到，稍微上点规模的电商网站并不会支付完成后自动跳到到订单页，而是<font color="green"><strong>增加了一个支付完成页面</strong></font>，这个页面其实没有任何新的有效信息，就是告诉你支付成功的信息。如果想再查看一下刚刚支付完成的订单，需要手动选择，这样就能很好地规避主从同步延迟的问题。</p><p><strong>如果是那些数据更新后需要立刻查询的业务，这两个步骤可以放到一个数据库事务中，同一个事务中的查询操作也会被路由到主库</strong>，这样就可以规避主从不一致的问题了，还有一种解决方式则是<strong>对查询部分单独指定进行主库查询</strong>。总的来说，对于这种因为主从延迟而带来的数据不一致问题，并没有一种简单方便且通用的技术方案可以解决，对此，我们需要重新设计业务逻辑，<font color="green"><strong>尽量规避更新数据后立即去从库查询刚刚更新的数据</strong></font>。</p><h1>分库分表</h1><p>绝大部分电商企业的在线交易类业务，比如订单、支付相关的系统，还是无法离开MySQL的。原因是只有MySOL之类的关系型数据库，才能提供金融级的事务保证。目前的分布式事务的各种解法方案多少都有些不够完善。</p><h2 id="如何规划分库分表">如何规划分库分表</h2><p>以订单表为例，首先,我们需要思考的问题是，选择分库还是分表，或者两者都有，分库就是把数据拆分到不同的MySQL 数据库实例中，分表就是把数据拆分到一个数据库的多张表里面。在考虑到底是选择分厍还是分表之前,我们需要首先明确一个原则，那就是<strong>能小拆就小拆</strong>. 原因很简单，数据拆得越分散,并发和维护就越麻烦，系统出问题的概率也就越大。</p><p>遵循上面这个原则，还需要进一步了解，哪种情况适合分表，哪种情况适合分库。选择分厍或是分表的目的是解决如下两个问题。</p><ol><li>是为了解决因数据量太大而导致查询慢的问题。这里所说的“查询”，其实主要是事务中的查询和更新操作，因为只读的查询可以通过缓存和主从分离来解决。分表主要用于解决因数据量大而导致的查询慢的问题。</li><li>是为了应对高并发的问题。如果一个数据库实例撑不住，就把并发请求分散到多个实例中，所以分库可用于解决高并发的问题。</li></ol><p>简单地说，<strong>如果数据量太大，就分表；如果并发请求量高，就分库</strong>。一般情况下,我们的解决方案大都需要同时做分库分表,我们可以根据预估的并发量和数据量，分别计算应该拆分成多少个库以及多少张表。</p><h2 id="分库分表案例">分库分表案例</h2><h3 id="数据量">数据量</h3><p>在设计系统，我们预估订单的数量每个月订单2000W，一年的订单数可达2.4 亿。而每条订单的大小大致为1KB，按照我们在MySQL 中学习到的知识，为了让B+树的高度控制在一定范围，保证查询的性能，<strong>每个表中的数据不宜超过2000W</strong>。在这种情况下，为了存下2.4 亿的订单，我们似乎应该将订单表分为16（12 往上取最近的2 的幂）张表。</p><p>但是这样设计，有个问题，我们只考虑了订单表，没有考虑<strong>订单详情表</strong>。我们预估一张订单下的商品平均为10 个，那既是一年的订单详情数可以达到24亿，同样以每表2000W 记录计算，应该订单详情表为128（120 往上取最近的2的幂）张，而订单表和订单详情表虽然记录数上是一对一的关系，但是表之间还是一对一，也就是说订单表也要为128 张。经过再三分析，我们最终将订单表和订单详情表的张数定为32 张。这会导致订单详情表单表的数据量达到8000W（但是我们会对历史数据进行数据迁移，比如迁移到Mongodb或es）</p><h3 id="选择分片键">选择分片键</h3><p>选择分片链有一个最重要的参考因素是我们的业务是如何访问数据的？</p><p>比如我们把订单ID 作为分片键来诉分订单表。那么拆分之后,如果按照订单ID 来查询订单,就需要先根据订单ID 和分片算法,计算所要查的这个订单具体在哪个分片上，也就是哪个库的哪张表中，然后再去那个分片执行查询操作即可。但是当用户打开“我的订单”这个页面的时候，它的查询条件是用户ID，由于这里没有订单ID，因此我们无法知道所要查询的订单具体在哪个分片上，也就没法查了。如果要强行查询的话，那就只能把所有的分片都查询一遍，再合并查询结果，这个过程比较麻烦，而且性能很差，对分页也很不友好。</p><p>这个问题的解决办法是，在生成订单ID的时候，<font color="green"><strong>把用户ID的后几位作为订单ID的一部分。这样按订单ID查询的时候，就可以根据订单ID中的用户ID找到分片。</strong></font><strong>所以在我们的系统中订单ID从唯一ID服务获取ID后，还会将用户ID的后两位拼接，形成最终的订单ID。</strong></p><p>然而，系统对订单的查询万式，肯定不只是按订单ID 或按用户ID 查询两种方式。比如如果有商家希望查询自家家店的订单，有与订单相关的各种报表。对订单做了分库分表，就没法解决了。这个问题又该怎么解决呢？</p><p>一般的做法是，<font color="green"><strong>把订单里数据同步到其他存储系统中</strong></font>，然后在其他存储系统里解决该问题。比如可以再<strong>构建一个以店铺ID作为分片键的只读订单库，专供商家使用</strong>。或者数据同步到Hadoop分布式文件系统（HDFS）中，然后通过一些大数据技术生成与订单相关的报表。</p><p>在分片算法上，我们知道常用的有按范围，比如时间范围分片，哈希分片，查表法分片。一旦做了分库分表，就会极大地限制数据库的查询能力，原本很简单的查询，分库分表之后，可能就没法实现了。分库分表一定是在数据量和并发请求量大到所有招数都无效的情况下，我们才会采用的<strong>最后一招</strong>。</p><h3 id="具体实现">具体实现</h3><ol><li>纯手工方式：修改应用程序的DAO 层代码，定义多个数据源，在代码中需要访问数据库的每个地方指定每个数据库请求的数据源。</li><li>组件方式：使用像<font color="green"><strong>Sharding-JDBC</strong></font>这些组件集成在应用程序内，用于代理应用程序的所有数据库请求，并把请求自动路由到对应的数据库实例上。</li><li>代理方式: 在应用程序和数据库实例之间部署一组数据库代理实例,比如Atlas 或Sharding-Proxy。对于应用程序来说,数据库代理把自己伪装成一个单节点的MySQL 实例,应用程序的所有数据库请求都将发送给代理，代理分离请求，然后将分离后的请求转发给对应的数据库实例。</li></ol><p>在这三种方式中一般推荐第二种，使用分离组件的方式。采用这种方式,<strong>代码侵入非常少</strong>,同时还能兼顾性能和稳定性。<br>如果应用程序是一个逻辑非常简单的微服务,简单到只有几个SQL,或者应用程序使用的编程语言没有合适的读写分离组件,那么也可以考虑通过纯手工的方式。<br>不推荐使用代理方式（第三种方式），原因是代理方式加长了系统运行时数据库请求的调用链路,会造成一定的性能损失，而且代理服务本身也可能会出现故障和性能瓶颈等问题。代理方式有一个好处，对应用程序完全透明。</p><h1>归档历史数据</h1><p>所谓归档，也是一种拆分数据的策略。简单地说，就是把大量的历史订单移到另外一张历史订单表或数据存储中。为什这么做呢？订单数据有个特点：具备时间属性的，并且随着系统的运行，数据累计增长越来越多。但其实订单数据在使用上有个特点，最近的数据使用最频繁，超过一定时间的数据很少使用，这被称之为<font color="green"><strong>热尾效应</strong></font>。</p><p>因为新数据只占数据息量中很少的一部分，所以把新老数据分开之后，新数据的数据量就少很多，查询速度也会因此快很多。虽然与之前的总量相比，老数据没有减少太多，但是因为老数据很少会被访问到，所以即使慢一点儿也不会有太大的问题，而且还可以使用其他的存储系统提升查询速度。</p><p>这样拆分数据的另外一个好处是，拆分订单时，<strong>系统需要改动的代码非常少</strong>。对订单表的大部分操作都是在订单完成之前执行的，这些业务逻辑都是完全不用修改的。即使是像退货退款这类订单完成之后的操作，也是有时限的，这些业务逻辑也不需要修改,还是按照之前那样操作订单即可。</p><p><strong>基本上只有查询统计类的功能会查到历史订单</strong>，这些都需要稍微做些调整。按照查询条件中的时间范围，选择去订单表还是历史订单中查询就可以了。很多大型互联网电商在逐步发展壮大的过程中，长达数年的时间采用的都是这种订单拆分的方案，正如我们前面看到的京东就是如此。</p><h2 id="分布式事务">分布式事务</h2><p>考察迁移的过程，我们是逐表批次删除，对于每张订单表，先从MySQL 从获得指定批量的数据，写入MongoDB，再从MySQL 中删除已写入MongoDB 的部分，这里存在着一个多源的数据操作，为了保证数据的一致性，看起来似乎需要分布式事务。<font color="green"><strong>但是其实这里并不需要分布式事务，解决的关键在于写入订单数据到MongoDB 时，我们要记住同时写入当前迁入数据的最大订单ID，让这两个操作执行在同一个事务之中。这样，在MySQL 执行数据迁移时，总是去MongoDB 中获得上次处理的最大OrderId，作为本次迁移的查询起始ID。当然数据写入MongoDB 后，还要记得删除MySQL 中对应的数据。</strong></font></p><p>在这个过程中，我们需要注意的问题是，<strong>尽量不要影响线上的业务</strong>。迁移如此大量的数据，或多或少都会影响数据库的性能，因此应该尽量选择在<strong>闲时迁移</strong>而且每次数据库操作的记录数不宜太多。按照一般的经验，对MySQL 的操作的记录条数<strong>每次控制在10000以下是比较合适</strong>，在我们的系统中缺省是2000 条。更重要的是，迁<strong>移之前一定要做好备份</strong>，这样的话，即使不小心误操作了，也能用备份来恢复。</p><h2 id="如何批量删除大量数据">如何批量删除大量数据</h2><p>虽然我们是按时间迁出订单表中的数据，<font color="green"><strong>但是删除最好还是按ID来删除，并且同样要控制住每次删除的记录条数</strong></font>，太大的数量容易遇到错误。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> ${orderTableName} o <span class="token keyword">WHERE</span> o<span class="token punctuation">.</span>id <span class="token operator">&gt;=</span> <span class="token comment">#{minOrder!d} and o.id &lt;= #{maxOrderId} </span><span class="token keyword">order</span> <span class="token keyword">by</span> id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样每次删除的时候，由于条件变成了主键比较，而在MySQL 的InnoDB 存储引擎中，表数据结构就是按照主键组织的一棵B+树，同时B+树本身就是有序的，因此优化后不仅查找变得非常快,而且也不需要再进行额外的排序操作了。</p><p>为什么要加一个排序的操作呢？因为<font color="green"><strong>按ID排序后，每批删除的记录基本上都是ID连续的一批记录</strong></font>，由于B+树的有序性，这些ID 相近的记录，在磁盘的物理文件上，大致也是存放在一起的，这样删除效率会比较高，也便于MySQL 回收页。</p><p>关于大批量删除数据，还有一个点需要注意一下，<font color="green"><strong>执行删除语句后，最好能停顿一小会，因为删除后肯定会牵涉到大量的B+树页面分裂和合并</strong></font>，这个时候MySQL的本身的负载就不小了，停顿一小会，可以让MySQL的负载更加均衡。</p><h1>总结梳理</h1><h2 id="重复下单问题-主键唯一约束">重复下单问题: 主键唯一约束</h2><ul><li><strong>前端页面会先调用这个生成订单号的服务得到一个订单号，在用户提交订单的时候，在创建订单的请求中带着这个订单号。</strong></li></ul><h2 id="订单ABA问题-版本戳-verison-字段">订单ABA问题: 版本戳 (verison 字段)</h2><ul><li><strong>页面在更新数据的请求时,需要把该版本号作为更新请求的参数再带回给订单更新服务</strong></li></ul><h2 id="读写分离（提升DB并发能力的首选方案）-读写比例一般在9-1">读写分离（提升DB并发能力的<strong>首选方案</strong>）: <strong>读写比例一般在9:1</strong></h2><ul><li><p>数据不一致问题: <strong>增加一个支付完成页面</strong></p><ul><li><p>如果数据更新后需要立刻查询，这俩步骤可以放到一个事务中，或单独指定主库查询</p></li><li><p><strong>尽量规避更新数据后立即去从库查询刚刚更新的数据</strong></p></li></ul></li></ul><h2 id="分库分表（能小拆就小拆，最后一招）">分库分表（<strong>能小拆就小拆，最后一招</strong>）</h2><ul><li><p><strong>如果数据量太大，就分表；如果并发请求量高，就分库</strong></p></li><li><p>MySQL<strong>每个表中的数据不宜超过2000W</strong></p></li><li><p><strong>选择分片键</strong></p><ul><li><p><strong>把用户ID的后几位作为订单ID的一部分。这样按订单ID查询的时候，就可以根据订单ID中的用户ID找到分片（便于用户查询）</strong></p></li><li><p><strong>把订单里数据同步到其他存储系统中（比如以店铺ID分片供商家查询使用）</strong></p></li></ul></li><li><p>实现方式</p><ul><li><p>手工（简单业务推荐）</p></li><li><p><strong>Sharding-JDBC（推荐，代码侵入少）</strong></p></li><li><p>代理：Atlas Sharding-Proxy Mycat（不推荐，多了一层代理且代理层也可能出现故障）</p></li></ul></li></ul><h2 id="归档历史数据：热尾效应">归档历史数据：<strong>热尾效应</strong></h2><ul><li><p><strong>系统需要改动的代码非常少</strong></p></li><li><p><strong>基本上只有查询统计类的功能会查到历史订单</strong></p></li><li><p><strong>不需要分布式事务</strong></p><ul><li><p><strong>写入订单数据到MongoDB时，同时写入当前迁入数据的最大订单ID，让这两个操作执行在同一个事务之中</strong></p></li><li><p><strong>在MySQL执行数据迁移时，先去MongoDB中获得上次处理的最大OrderId，作为本次迁移的查询起始ID</strong></p></li><li><p><strong>写入后，删除MySQL中对应的数据（批量删除大量数据）</strong></p><ul><li><p><strong>按ID来删除，并且同样要控制住每次删除的记录条数</strong></p></li><li><p><strong>删除语句按ID排序，每批删除的记录基本上都是ID连续的</strong></p></li><li><p><strong>执行删除语句后，最好能停顿一小会，因为删除后会牵涉到大量的B+树页面分裂和合并</strong></p></li></ul></li></ul></li><li><p><strong>尽量不要影响线上的业务：闲时迁移</strong></p></li><li><p><strong>每次控制在10000以下是比较合适</strong></p></li><li><p><strong>移之前一定要做好备份</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 订单系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06.微服务网关整合OAuth2.0授权中心</title>
      <link href="/2023/07/09/architect/06.dian-shang-xi-tong/06-wei-fu-wu-wang-guan-zheng-he-oauth2-0-shou-quan-zhong-xin/"/>
      <url>/2023/07/09/architect/06.dian-shang-xi-tong/06-wei-fu-wu-wang-guan-zheng-he-oauth2-0-shou-quan-zhong-xin/</url>
      
        <content type="html"><![CDATA[<ol><li>配置授权服务器（AuthorizationServerConfigurerAdapte - 授权码/密码）<ol><li>DB模式</li><li>内存模式</li></ol></li><li>SpringSecurity（WebSecurityConfigurerAdapter）</li><li>JWT：头部（header）、载荷（payload）与签名（signature 加盐）<ol><li>一次性验证、无状态认证</li><li>注销续约复杂，不适合会话管理</li></ol></li><li>JWT非对称加密（公钥私钥）</li><li>扩展JWT中的存储内容（TokenEnhancer）</li><li>接入网关服务（GlobalFilter）<ol><li>过滤不需要认证的url</li><li>校验token（需要从授权服务获取公钥）<ul><li>不能直接通过@LoadBalancer配置RestTemplate去获取公钥，因为Spring容器启动过程中@LoadBalancer还未生效</li></ul></li><li>校验通过后，从token中获取的用户登录信息存储到请求头中</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 授权中心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05.分布式唯一ID</title>
      <link href="/2023/07/09/architect/06.dian-shang-xi-tong/05-fen-bu-shi-wei-yi-id/"/>
      <url>/2023/07/09/architect/06.dian-shang-xi-tong/05-fen-bu-shi-wei-yi-id/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>全局唯一性</strong>：不能出现重复的ID号，既然是唯一标识，这是最基本的要求。</li><li><strong>趋势递增、单调递增</strong>：保证下一个ID一定大于上一个ID。</li><li><strong>信息安全</strong>：如果ID是连续的，恶意用户的扒取工作就非常容易做了，直接按照顺序下载指定URL 即可；如果是订单号就更危险了，竞对可以直接知道我们一天的单量。所以在一些应用场景下，会需要ID 无规则、不规则。</li></ul><h1>常见方法</h1><h2 id="UUID">UUID</h2><p>UUID(Universally Unique Identifier)的标准型式包含 32 个 16 进制数字，以连字号分为五段，<strong>形式为 8-4-4-4-12 的 32 个字符</strong>，示例：<br>550e8400-e29b-41d4-a716-446655440000，到目前为止业界一共有5种方式生成UUID，详情见IETF 发布的UUID 规范 A Universally Unique IDentifier (UUID) URN Namespace。</p><ul><li>优点：性能非常高，本地生成，没有网络消耗。</li><li>缺点：<ul><li>不易于存储：UUID 太长，16 字节128 位，通常以36 长度的字符串表示，很多场景不适用。</li><li>信息不安全：基于 MAC 地址生成 UUID 的算法可能会造成 <font color="red"><strong>MAC 地址泄露</strong></font>，这个漏洞曾被用于寻找梅丽莎病毒的制作者位置。</li></ul></li><li>ID 作为主键时在特定的环境会存在一些问题，比如做 DB 主键的场景下，UUID 就非常不适用<ul><li>MySQL 官方有明确的建议主键要尽量越短越好，36 个字符长度的 UUID 不符合要求。</li><li>对 MySQL 索引不利：如果作为数据库主键，在InnoDB 引擎下，UUID 的无序性可能会引起数据位置频繁变动，严重影响性能。在MySQL InnoDB 引擎中使用的是聚集索引，由于多数 RDBMS 使用 B-tree 的数据结构来存储索引数据，在主键的选择上面我们应该<font color="red"><strong>尽量使用有序的主键保证写入性能</strong></font>。</li></ul></li></ul><h2 id="雪花算法">雪花算法</h2><p>这种方案大致来说是一种以划分命名空间（UUID 也算，由于比较常见，所以单独分析）来生成ID 的一种算法，Snowflake 是Twitter 开源的分布式 ID 生成算法。Snowflake 把64-bit分别划分成多段</p><ul><li>第 0 位： 符号位（标识正负），始终为 0，没有用，不用管。</li><li>第 1~41 位 ：一共41位，用来表示<strong>时间戳</strong>，单位是毫秒，可以支撑 2 ^41 毫秒（约69 年）</li><li>第 42~52 位 ：一共10位，一般来说，<strong>前5位表示机房 ID，后5位表示机器ID</strong>（实际项目中可以根据实际情况调整），这样就可以区分不同集群/机房的节点，这样就可以表示32 个IDC，每个IDC 下可以有32 台机器。</li><li>第 53~64 位 ：一共12位，用来表示<strong>序列号</strong>。 序列号为自增值，代表单台机器每毫秒能够产生的最大 ID 数(2^12 = 4096),也就是说单台机器<strong>每毫秒最多可以生成4096个唯一ID</strong>。</li></ul><p>理论上snowflake 方案的QPS约为409.6w/s，这种分配方式可以保证在任何一个IDC的任何一台机器在任意毫秒内生成的ID都是不同的。</p><ul><li>优点：<ul><li>毫秒数在高位，自增序列在低位，整个ID都是趋势递增的。</li><li>不依赖数据库等第三方系统，以服务的方式部署，稳定性更高，生成ID的性能也是非常高的。</li><li>可以根据自身业务特性分配bit位，非常灵活。</li></ul></li><li>缺点：强依赖机器时钟，如果机器上<font color="red"><strong>时钟回拨</strong></font>，会导致发号重复或者服务会处于不可用状态。</li></ul><h2 id="Mongdb-ObjectID">Mongdb ObjectID</h2><p>它也可以算作是和snowflake类似方法，通过 “<strong>时间+机器码+pid+inc</strong>” 共12 个字节，通过4+3+2+3的方式最终标识成一个24长度的十六进制字符。</p><h2 id="Seata-UUID">Seata UUID</h2><p>Seata 内置了一个分布式 UUID 生成器，用于辅助生成全局事务 ID 和分支事务 ID，我们同样可以拿来使用，完整类名为：<code>io.seata.common.util.IdWorker</code></p><h2 id="数据库生成-MySQL">数据库生成 (MySQL)</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>sequence_id<span class="token punctuation">`</span></span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>stub<span class="token punctuation">`</span></span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>stub<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>stub<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>stub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>段无意义，只是为了占位，便于我们插入或者修改数据。并且，给 stub 字段创建了唯一索引，保证其唯一性。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> sequence_id <span class="token punctuation">(</span>stub<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'stub'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> LAST_INSERT_ID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>插入数据这里，我们没有使用 insert into 而是使用 replace into 来插入数据。replace 是insert 的增强版，replace into 首先尝试插入数据到表中，</p><ol><li>如果发现表中已经有此行数据（根据主键或者唯一索引判断）则先删除此行数据，然后插入新的数据。</li><li>否则，直接插入新数据。</li></ol><ul><li>优点：非常简单，利用现有数据库系统的功能实现，成本小，有DBA 专业维护。ID号单调自增，存储消耗空间小。</li><li>缺点：<ul><li>支持的并发量不大</li><li>存在数据库单点问题（可以使用数据库集群解决，不过增加了复杂度）</li><li>ID 没有具体业务含义、安全问题（比如<font color="red"><strong>根据订单 ID 的递增规律就能推算出每天的订单量</strong></font>，商业机密啊！ ）</li><li>每次获取 ID 都要访问一次数据库（<font color="red"><strong>增加了对数据库的压力</strong></font>，获取速度也慢）</li></ul></li></ul><p>对于MySQL 性能问题，可用如下方案解决：在分布式系统中我们可以<strong>多部署几台机器，每台机器设置不同的初始值，且步长和机器数相等</strong>。比如有两台机器。设置步长step 为2，TicketServer1 的初始值为1（1，3，5，7，9，11…）、TicketServer2 的初始值为2（2，4，6，8，10…）。这是Flickr（雅虎旗下图片分享网站）团队在2010 年撰文介绍的一种主键生成策略（Ticket Servers: Distributed Unique Primary Keys on the Cheap ）。为了实现上述方案分别设置两台机器对应的参数，TicketServer1 从1 开始发号，TicketServer2 从2 开始发号，两台机器每次发号之后都递增2。假设我们要部署N 台机器，步长需设置为N，每台的初始值依次为0,1,2…N-1。</p><p>这种架构貌似能够满足性能的需求，但有以下几个缺点：</p><ul><li>系统<font color="red"><strong>水平扩展比较困难</strong></font>，比如定义好了步长和机器台数之后，如果要添加机器该怎么做？假设现在只有一台机器发号是1,2,3,4,5（步长是1），这个时候需要扩容机器一台。可以这样做：把第二台机器的初始值设置得比第一台超过很多，比如140（假设在扩容时间之内第一台不可能发到140），同时设置步长为2，那么这台机器下发的号码都是140 以后的偶数。然后摘掉第一台，把ID 值保留为奇数，比如7，然后修改第一台的步长为2。让它符合我们定义的号段标准，对于这个例子来说就是让第一台以后只能产生奇数。扩容方案看起来复杂吗？貌似还好，现在想象一下如果我们线上有100 台机器，这个时候要扩容该怎么做？简直是噩梦。所以系统水平扩展方案复杂难以实现。</li><li>ID <font color="red"><strong>没有了单调递增的特性</strong></font>，只能趋势递增，这个缺点对于一般业务需求不是很重要，可以容忍。</li><li><strong>数据库压力</strong>还是很大，每次获取ID 都得读写一次数据库，只能靠堆机器来提高性能。</li></ul><h2 id="Redis">Redis</h2><p>通过 Redis 的 incr 命令即可实现对 id 原子顺序递增。为了提高可用性和并发，我们可以使用 Redis Cluster。</p><p>除了高可用和并发之外，我们知道 Redis 基于内存，我们需要<strong>持久化数据</strong>，避免重启机器或者机器故障后数据丢失。很明显，Redis 方案性能很好并且生成的 ID 是有序递增的。不过，我们也知道，即使 Redis 开启了持久化，不管是快照（snapshotting，RDB）、只追加文件（append-only file, AOF）还是 RDB 和AOF 的混合持久化依然<font color="red"><strong>存在着丢失数据的可能，那就意味着产生的 ID 存在着重复的概率</strong></font>。</p><h1>分布式ID微服务</h1><h2 id="Leaf-segment">Leaf-segment</h2><p>Leaf-segment 方案，在使用数据库的方案上，做了如下改变：</p><ul><li>原 MySQL 方案每次获取 ID 都得读写一次数据库，造成数据库压力大。改为<strong>批量获取</strong>，每次获取一个segment(step 决定大小)号段的值。用完之后再去数据库获取新的号段，可以大大的减轻数据库的压力。</li><li><strong>各个业务不同的发号需求用 biz_tag 字段来区分</strong>，每个 biz-tag 的 ID 获取相互隔离，互不影响。如果以后有性能需求需要对数据库扩容，不需要上述描述的复杂的扩容操作，只需要对 biz_tag 分库分表就行。</li><li>biz_tag 用来区分业务，max_id 表示该 biz_tag 目前所被分配的 ID 号段的最大值，step 表示每次分配的号段长度。原来获取ID 每次都需要写数据库，现在只需要把step 设置得足够大，比如1000。那么只有当1000 个号被消耗完了之后才会去重新读写一次数据库。<strong>读写数据库的频率从1减小到了1/step</strong>。</li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">Begin</span><span class="token keyword">UPDATE</span> <span class="token keyword">table</span> <span class="token keyword">SET</span> max_id<span class="token operator">=</span>max_id<span class="token operator">+</span>step <span class="token keyword">WHERE</span> biz_tag<span class="token operator">=</span>xxx<span class="token keyword">SELECT</span> tag<span class="token punctuation">,</span> max_id<span class="token punctuation">,</span> step <span class="token keyword">FROM</span> <span class="token keyword">table</span> <span class="token keyword">WHERE</span> biz_tag<span class="token operator">=</span>xxx<span class="token keyword">Commit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>优点：<ul><li>Leaf 服务可以很方便的<strong>线性扩展</strong>，性能完全能够支撑大多数业务场景。ID 号码是趋势递增的8byte 的64 位数字，满足上述数据库存储的主键要求。</li><li>容灾性高：Leaf 服务内部有<strong>号段缓存</strong>，即使DB 宕机，短时间内Leaf 仍能正常对外提供服务。</li><li>可以自定义 max_id 的大小，非常方便业务从原有的ID方式上迁移过来。</li></ul></li><li>缺点：<ul><li>ID 号码不够随机，能够<font color="red"><strong>泄露发号数量</strong></font>的信息，不太安全。</li><li>TP999 数据波动大，当号段使用完之后还是会在获取新号段时在更新数据库的I/O依然会存在着等待，tg999 数据会出现<font color="red"><strong>偶尔的尖刺</strong></font>。</li><li><strong>DB 宕机</strong>会造成整个系统不可用。</li></ul></li></ul><h3 id="双buffer优化">双buffer优化</h3><p><font color="gray">Leaf 取号段的时机是在号段消耗完的时候进行的，也就意味着号段临界点的ID 下发时间取决于下一次从DB取回号段的时间，并且在这期间进来的请求也会因为DB号段没有取回来，导致线程阻塞。如果请求DB 的网络和DB 的性能稳定，这种情况对系统的影响是不大的，但是假如取DB 的时候网络发生抖动，或者DB 发生慢查询就会导致整个系统的响应时间变慢。为此，希望DB 取号段的过程能够做到无阻塞，不需要在DB 取号段的时候阻塞请求线程，即当号段消费到某个点时就异步的把下一个号段加载到内存中。而不需要等到号段用尽的时候才去更新号段。这样做就可以很大程度上的降低系统的TP999 指标。</font><br>采用双buffer 的方式，Leaf 服务内部有两个号段缓存区segment。<strong>当前号段已下发10%时</strong>，如果下一个号段未更新，则<strong>另启一个更新线程去更新下一个号段</strong>。<strong>当前号段全部下发完后</strong>，如果下个号段准备好了则<strong>切换到下个号段为当前segment接着下发</strong>，循环往复。<br>通常<strong>推荐segment长度设置为服务高峰期发号QPS 的600 倍（10 分钟），这样即使DB 宕机，Leaf 仍能持续发号10-20 分钟不受影响</strong>。每次请求来临时都会判断下个号段的状态，从而更新此号段，所以偶尔的网络抖动不会影响下个号段的更新。</p><h3 id="Leaf-高可用容灾">Leaf 高可用容灾</h3><p>对于第三点“DB 可用性”问题，可以采用<strong>一主两从</strong>的方式，同时分机房部署，Master 和Slave 之间采用半同步方式同步数据。美团内部使用了奇虎360 的Atlas 数据库中间件（已开源，改名为DBProxy）做主从切换。当然这种方案在一些情况会退化成异步模式，甚至在非常极端情况下仍然会造成数据不一致的情况，但是出现的概率非常小。如果要保证100%的数据强一致，可以选择使用“类Paxos算法”实现的强一致MySQL 方案，如MySQL 5.7 中的MySQL Group Replication。但是运维成本和精力都会相应的增加，根据实际情况选型即可。</p><h2 id="Leaf-snowflake">Leaf-snowflake</h2><p>Leaf-segment 方案可以生成趋势递增的ID，同时ID 号是可计算的，不适用于订单ID 生成场景，比如竞对在两天中午12 点分别下单，通过订单id 号相减就能大致计算出公司一天的订单量，这个是不能忍受的。面对这一问题，美团提供了Leaf-snowflake 方案。</p><p>Leaf-snowflake 方案完全沿用snowflake 方案的bit 位设计，即是“1+41+10+12”的方式组装ID 号。对于workerID 的分配，当服务集群数量较小的情况下，完全可以手动配置。Leaf 服务规模较大，动手配置成本太高。所以<strong>使用Zookeeper 持久顺序节点的特性自动对snowflake节点配置wokerID</strong>。</p><p>Leaf-snowflake 是按照下面几个步骤启动的：</p><ul><li>启动Leaf-snowflake 服务，连接Zookeeper，在leaf_forever 父节点下检查自己是否已经注册过（是否有该顺序子节点）。</li><li>如果有注册过直接取回自己的workerID（zk 顺序节点生成的int 类型ID 号），启动服务。</li><li>如果没有注册过，就在该父节点下面创建一个持久顺序节点，创建成功后取回顺序号当做自己的workerID 号，启动服务。</li></ul><h3 id="弱依赖ZooKeeper">弱依赖ZooKeeper</h3><p>除了每次会去ZK 拿数据以外，也会在<strong>本机文件系统上缓存一个workerID文件</strong>。当ZooKeeper 出现问题，恰好机器出现问题需要重启时，能保证服务能够正常启动。这样做到了对三方组件的弱依赖。</p><h3 id="解决时钟问题">解决时钟问题</h3><p>首先在启动时，服务会进行检查：</p><ol><li>新节点通过检查综合对比其余Leaf 节点的系统时间来判断自身系统时间是否准确，具体做法是取所有运行中的Leaf-snowflake 节点的服务IP：Port，然后通过RPC 请求得到所有节点的系统时间，计算<strong>sum(time)/nodeSize</strong>，然后看本机时间与这个平均值是否在阈值之内来确定当前系统时间是否准确，准确正常启动服务，不准确认为本机系统时间发生大步长偏移，启动失败并报警。</li><li>在ZooKeeper 中登记过的老节点，同样会<strong>比较自身系统时间和ZooKeeper上本节点曾经的记录时间以及所有运行中的Leaf-snowflake节点的时间，不准确同样启动失败并报警</strong>。</li><li>在运行过程中，<strong>每隔一段时间节点都会上报自身系统时间写入ZooKeeper</strong>。</li></ol><p>在服务运行过程中，机器的NTP 同步也会造成秒级别的回退，由于强依赖时钟，对时间的要求比较敏感，美团建议有三种解决方案，</p><ol><li>可以<strong>直接关闭NTP同步</strong>；</li><li>在时钟回拨的时候<strong>直接不提供服务直接返回ERROR_CODE，等时钟追上</strong></li><li><strong>做一层重试，然后上报报警系统</strong>，更或者是发现有时钟回拨之后<strong>自动摘除本身节点并报警</strong></li></ol><p>从美团的实际运行情况来看，在2017 年闰秒出现那一次出现过部分机器回拨，由于Leaf-snowflake 的策略保证，成功避免了对业务造成的影响。<br>Leaf 在美团点评公司内部服务包含金融、支付交易、餐饮、外卖、酒店旅游猫眼电影等众多业务线。目前Leaf 的性能在4C8G 的机器上QPS 能压测到近<strong>5万/s</strong>，TP999 1ms，已经能够满足大部分的业务的需求。每天提供亿数量级的调用量。</p><h1>总结梳理</h1><p>要求：全局唯一性、单调（趋势）递增、信息安全（不能泄露订单量）</p><h2 id="UUID：MAC-地址泄露、无序（数据库主键无序导致B树频繁变动）">UUID：MAC 地址泄露、无序（数据库主键无序导致B树频繁变动）</h2><h2 id="雪花算法：时钟回拨">雪花算法：<strong>时钟回拨</strong></h2><h2 id="Mongdb-ObjectID-2">Mongdb ObjectID</h2><h2 id="Seata-UUID：io-seata-common-util-IdWorker">Seata UUID：<code>io.seata.common.util.IdWorker</code></h2><h2 id="MySQL：泄露发号数量、增加数据库压力">MySQL：<strong>泄露发号数量、增加数据库压力</strong></h2><ul><li><p><strong>多部署几台机器，每台机器设置不同的初始值，且步长和机器数相等</strong></p><ul><li><p><strong>水平扩展比较困难</strong></p></li><li><p><strong>没有了单调递增的特性（不同机器只能保证趋势递增）</strong></p></li><li><p>每次只获取一个ID，数据库压力依然很大</p></li></ul></li></ul><h2 id="Redis：持久化数据时存在着丢失数据的可能">Redis：<strong>持久化数据时存在着丢失数据的可能</strong></h2><h2 id="Leaf-segment-2">Leaf-segment</h2><ul><li><p><strong>泄露发号数量</strong></p></li><li><p>TP999<strong>偶尔的尖刺</strong></p><ul><li><p><strong>双buffer优化：</strong></p><ul><li><p><strong>下发10%时更新下一个号段，下发完后切换到下个号段</strong></p></li><li><p><strong>segment长度设置为服务高峰期发号QPS的600倍（10 分钟），DB宕机时Leaf 仍能持续发号10-20 分钟</strong></p></li></ul></li><li><p>**Leaf 高可用容灾（一主两从）：**DBProxy(360), Paxos(强一致)</p></li></ul></li></ul><h2 id="Leaf-snowflake-2">Leaf-snowflake</h2><ul><li><p><strong>使用Zookeeper配置workerid，本地缓存workerid文件</strong></p></li><li><p><strong>解决时钟问题</strong></p><ul><li><p>新节点启动时计算<strong>sum(time)/nodeSize是否超过阈值</strong></p></li><li><p>老节点每隔一段时间上报自身系统时间</p></li><li><p>老节点比较zookeeper上本节点曾经的记录时间</p></li><li><p>老节点比较所有运行中的节点时间</p></li></ul></li><li><p>出现时钟回拨</p><ul><li><p><strong>直接关闭NTP同步</strong></p></li><li><p><strong>直接不提供服务返回ERROR_CODE，等时钟追上</strong></p></li><li><p><strong>做一层重试，然后上报报警系统</strong></p></li><li><p><strong>自动摘除本身节点并报警</strong></p></li></ul></li></ul><p>Leaf 的性能在4C8G 的机器上QPS 能压测到近<strong>5万/s</strong>，TP999 1ms</p>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式唯一ID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04.微服务全链路灰度发布</title>
      <link href="/2023/07/08/architect/06.dian-shang-xi-tong/04-wei-fu-wu-quan-lian-lu-hui-du-fa-bu/"/>
      <url>/2023/07/08/architect/06.dian-shang-xi-tong/04-wei-fu-wu-quan-lian-lu-hui-du-fa-bu/</url>
      
        <content type="html"><![CDATA[<p>灰度发布&nbsp;Gray&nbsp;Release（又名金丝雀发布&nbsp;Canary&nbsp;Release）。不停机旧版本，部署新版本，高比例流量（例如：95%）走旧版本，低比例流量（例如：5%）切换到新版本，通过监控观察无问题，逐步扩大范围，最终把所有流量都迁移到新版本上。属无损发布。</p><p>优点：灵活简单，不需要用户标记驱动。安全性高，新版本如果出现问题，只会发生在低比例的流量上<br>缺点：成本较高，需要部署稳定/灰度两套环境</p><p>微服务体系架构中，服务之间的依赖关系错综复杂，有时某个功能发版依赖多个服务同时升级上线。我们希望可以对这些服务的新版本同时进行小流量灰度验证，这就是微服务架构中特有的全链路灰度场景，通过构建从网关到整个后端服务的环境隔离来对多个不同版本的服务进行灰度验证。在发布过程中，我们只需部署服务的灰度版本，流量在调用链路上流转时，由流经的网关、各个中间件以及各个微服务来识别灰度流量，并动态转发至对应服务的灰度版本。<br>**无论是微服务网关还是微服务本身都需要识别流量，根据治理规则做出动态决策。当服务版本发生变化时，这个调用链路的转发也会实时改变。**相比于利用机器搭建的灰度环境，这种方案不仅可以节省大量的机器成本和运维人力，而且可以帮助开发者实时快速的对线上流量进行精细化的全链路控制。</p><h1>全链路灰度设计思路</h1><ol><li>链路上各个组件和服务能够根据请求流量特征进行<strong>动态路由</strong>。</li><li>需要对服务下的所有节点进行分组，能够区分版本。</li><li>需要对流量进行<strong>灰度标识、版本标识</strong>。</li><li>需要识别出不同版本的灰度流量。</li></ol><p>首先，需要支持动态路由功能，对于Spring&nbsp;Cloud、Dubbo开发框架，可以对出口流量实现自定义Filter，在该Filter中完成流量识别以及标签路由。同时需要借助分布式链路追踪技术完成流量标识链路传递以及流量自动染色。此外，需要引入一个中心化的流量治理平台，方便各个业务线的开发者定义自己的全链路灰度规则。实现全链路灰度的能力，无论是成本还是技术复杂度都是比较高的，以及后期的维护、扩展都是非常大的成本。</p><h2 id="标签路由">标签路由</h2><p>标签路由通过对服务下所有节点<strong>按照标签名和标签值不同进行分组</strong>，使得订阅该服务节点信息的服务消费端可以**按需访问该服务的某个分组，**即所有节点的一个子集。服务消费端可以使用服务提供者节点上的任何标签信息，根据所选标签的实际含义，消费端可以将标签路由应用到更多的业务场景中。</p><h2 id="节点打标">节点打标</h2><p><strong>给服务节点添加不同的标签</strong>：</p><ul><li><strong>K8S</strong>：在使用Kubernetes&nbsp;Service作为服务发现的业务系统中，服务提供者通过向ApiServer提交Service资源完成服务暴露，服务消费端监听与该Service资源下关联的Endpoint资源，从Endpoint资源中获取关联的业务Pod&nbsp;资源，读取上面的Labels数据并作为该节点的元数据信息。所以，我们<strong>只要在业务应用描述资源Deployment中的Pod模板中为节点添加标签即可</strong>。</li><li><strong>Nacos</strong>：一般是需要业务根据其使用的微服务框架来决定打标方式。如果Java应用使用的Spring&nbsp;Cloud微服务开发框架，我们可以为业务容器添加对应的环境变量来完成标签的添加操作。比如我们希望为节点添加版本灰度标，那么为业务容器添加<code>spring.cloud.nacos.discovery.metadata.version=gray</code>，这样框架向Nacos注册该节点时会为其添加一个标签<code>verison=gray</code>。</li></ul><h2 id="流量染色">流量染色</h2><p>为请求流量添加不同灰度标识来方便区分。我们可以在请求的源头上对流量进行染色，前端在发起请求时根据用户信息或者平台信息的不同对流量进行打标。如果前端无法做到，我们也可以在微服务网关上对匹配特定路由规则的请求动态添加流量标识。此外，流量在链路中流经灰度节点时，如果请求信息中不含有灰度标识，需要自动为其染色，接下来流量就可以在后续的流转过程中优先访问服务的灰度版本。<strong>保证请求链路上的各个组件能够识别出不同的灰度流量</strong>。</p><h2 id="分布式链路追踪">分布式链路追踪</h2><p>借助于分布式链路追踪思想，我们也可以传递一些自定义信息，比如灰度标识。<strong>保证灰度标识能够在链路中一直传递下去</strong>。</p><h1>框架</h1><ul><li><a href="https://github.com/Nepxion/Discovery">Discovery</a>：Spring</li><li><a href="https://help.aliyun.com/document_detail/359851.html">MSE</a>：阿里云平台</li></ul><h1>总结梳理</h1><h2 id="全链路灰度发布"><strong>全链路灰度发布</strong></h2><p><strong>标签路由、节点打标（K8S, &nbsp;Nacos）、流量染色、分布式链路追踪</strong></p><p>框架：</p><ul><li><p><strong>Discovery</strong>（免费）：网关配置权重，微服务配置版本号</p></li><li><p>MSE（阿里云平台）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务灰度发布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03.微服务架构拆分</title>
      <link href="/2023/07/08/architect/06.dian-shang-xi-tong/03-wei-fu-wu-jia-gou-chai-fen/"/>
      <url>/2023/07/08/architect/06.dian-shang-xi-tong/03-wei-fu-wu-jia-gou-chai-fen/</url>
      
        <content type="html"><![CDATA[<h1>微服务拆分时机</h1><p>微服务不仅仅是技术的升级，更是开发方式、组织架构、开发观念的转变。</p><ul><li><strong>业务规模</strong>：业务模式得到市场的验证，需要进一步加快脚步快速占领市场，这时业务的规模变得越来越大，按产品生命周期来划分（导入期、成长期、成熟期、衰退期）这时一般在成长期阶段。<strong>如果是导入期，尽量采用单体架构</strong>。</li><li><strong>团队规模</strong>：一般是团队达到百人的时候，主要还是要结合业务复杂度</li><li><strong>技术储备</strong>：领域驱动设计、注册中心、配置中心、日志系统、持续交付、监控系统、分布式定时任务、CAP&nbsp;理论、分布式调用链、API&nbsp;网关等等。</li><li><strong>人才储备</strong>：精通微服务落地经验的架构师及相应开发人员。</li><li><strong>研发效率</strong>：研发效率大幅下降。</li></ul><h1>微服务拆分原则</h1><ul><li>单一服务内部功能<strong>高内聚低耦合</strong>：每个服务只完成自己职责内的任务，对于不是自己职责的功能交给其它服务来完成</li><li><strong>闭包原则</strong>（CCP）：微服务的闭包原则就是当我们需要改变一个微服务的时候，所有依赖都在这个微服务的组件内，不需要修改其他微服务</li><li><strong>服务自治、接口隔离</strong>原则：尽量消除对其他服务的强依赖，这样可以降低沟通成本，提升服务稳定性。服务通过标准的接口隔离，隐藏内部实现细节。这使得服务可以独立开发、测试、部署、运行，以服务为单位持续交付。</li><li><strong>持续演进</strong>原则：在服务拆分的初期，你其实很难确定服务究竟要拆成什么样。应逐步划分，持续演进，<strong>避免服务数量的爆炸性增长</strong>。</li><li>拆分的过程尽量<strong>避免影响产品的日常功能迭代</strong>：也就是说要一边做产品功能迭代，一边完成服务化拆分。比如<strong>优先剥离比较独立的边界服务</strong>（如短信服务等），从非核心的服务出发减少拆分对现有业务的影响，也给团队一个练习、试错的机会。同时<strong>当两个服务存在依赖关系时优先拆分被依赖的服务</strong>。</li><li><strong>服务接口的定义要具备可扩展性</strong>：比如微服务的接口因为升级把之前的三个参数改成了四个，上线后导致调用方大量报错，推荐做法服务接口的参数类型最好是封装类，这样如果增加参数就不必变更接口的签名</li><li><strong>避免环形依赖与双向依赖</strong>：尽量不要有服务之间的环形依赖或双向依赖，原因是存在这种情况说明我们的<strong>功能边界</strong>没有化分清楚或者有通用的功能没有下沉下来。</li><li><strong>阶段性合并</strong>：随着你对业务领域理解的逐渐深入或者业务本身逻辑发生了比较大的变化，亦或者之前的拆分没有考虑的很清楚，导致拆分后的服务边界变得越来越混乱，这时就要<strong>重新梳理领域边界，不断纠正拆分的合理性</strong>。</li><li><strong>自动化驱动</strong>：部署和运维的成本会随着服务的增多呈指数级增长，每个服务都需要部署、监控、日志分析等运维工作，成本会显著提升。因此，在服务划分之前，应该首先构建自动化的工具及环境。开发人员应该以自动化为驱动力，简化服务在创建、开发、测试、部署、运维上的重复性工作，通过工具实现更可靠的操作，避免微服务数量增多带来的开发、管理复杂度问题。</li></ul><h1>微服务拆分策略</h1><h2 id="功能维度拆分策略">功能维度拆分策略</h2><p>大的原则是基于业务复杂度拆分服务：<strong>业务复杂度足够高，应该基于领域驱动拆分服务。业务复杂度较低，选择基于数据驱动拆分服务</strong></p><ul><li><strong>基于数据驱动</strong>拆分服务：自下而上的架构设计方法，通过分析需求，确定整体数据结构，<strong>根据表之间的关系拆分服务</strong>。<ul><li>拆分步骤：需求分析，抽象数据结构，划分服务，确定调用关系和业务流程验证。</li></ul></li><li><strong>基于领域驱动</strong>拆分服务：自上而下的架构设计方法，通过和领域专家建立统一的语言，不断交流，<strong>确定关键业务场景，逐步确定边界上下文</strong>。领域驱动更强调业务实现效果，认为自下而上的设计可能会导致技术人员不能更好地理解业务方向，进而偏离业务目标。<ul><li>拆分步骤：通过模型和领域专家建立统一语言，业务分析，寻找聚合，确定服务调用关系，业务流程验证和持续优化。</li></ul></li><li><strong>从已有单体架构中逐步拆分服务</strong><ul><li>拆分步骤：前后端分离，提取公共基础服务（如授权服务，分布式ID服务），不断从老系统抽取服务，垂直划分优先，适当水平切分</li></ul></li></ul><p>以上几种拆分方式不是多选一，而是可以<strong>根据实际情况自由排列组合</strong>。<br><strong>拆分不仅仅是架构上的调整，也意味着要在组织结构上做出相应的适应性优化，以确保拆分后的服务由相对独立的团队负责维护。</strong></p><h2 id="非功能维度拆分策略">非功能维度拆分策略</h2><p>主要考虑六点：<strong>扩展性、复用性、高性能、高可用、安全性、异构性</strong></p><ul><li><strong>扩展性</strong>：<strong>区分系统中变与不变的部分</strong>，不变的部分一般是成熟的、通用的服务功能，变的部分一般是改动比较多、满足业务迭代扩展性需要的功能，我们可以将不变的部分拆分出来，作为共用的服务，将变的部分独立出来满足个性化扩展需要同时根据二八原则，系统中经常变动的部分大约只占&nbsp;20%，而剩下的&nbsp;80%&nbsp;基本不变或极少变化，这样的拆分也解决了发布频率过多而影响成熟服务稳定性的问题。</li><li><strong>复用性</strong>：不同的业务里或服务里经常会出现<strong>重复的功能</strong>，比如每个服务都有鉴权、限流、安全及日志监控等功能，可以将这些通过的功能拆分出来形成独立的服务。</li><li><strong>高性能</strong>：将性能要求高或者性能压力大的模块拆分出来，<strong>避免性能压力大的服务影响其它服务</strong>。<ul><li>我们也可以基于<strong>读写分离</strong>来拆分，比如电商的商品信息，在&nbsp;App&nbsp;端主要是商品详情有大量的读取操作，但是写入端商家中心访问量确很少。因此可以对流量较大或较为核心的服务做读写分离，拆分为两个服务发布，一个负责读，另外一个负责写。</li><li><strong>数据一致性</strong>是另一个基于性能维度拆分需要考虑的点，<strong>对于强一致的数据，属于强耦合，尽量放在同一个服务中</strong>（但是有时会因为各种原因需要进行拆分，那就需要有相应的机制进行保证），弱一致性通常可以拆分为不同的服务。</li></ul></li><li><strong>高可用</strong>：将可靠性要求高的核心服务和可靠性要求低的非核心服务拆分开来，然后<strong>重点保证核心服务的高可用</strong>。具体拆分的时候，核心服务可以是一个也可以是多个，只要最终的服务数量满足“三个火枪手”的原则就可以。</li><li><strong>安全性</strong>：不同的服务可能对信息安全有不同的要求，因此把需要<strong>高度安全的服务拆分出来</strong>，进行区别部署，比如设置特定的&nbsp;DMZ&nbsp;区域对服务进行分区部署，可以更有<strong>针对性地满足信息安全的要求</strong>，也可以降低对防火墙等安全设备吞吐量、并发性等方面的要求，降低成本，提高效率。</li><li><strong>异构性</strong>：对于对开发语言种类有要求的业务场景，可以用<strong>不同的语言</strong>将其功能独立出来实现一个独立服务。</li></ul><h1>拆分注意的风险</h1><ul><li>不打无准备之仗：开发团队是否具备足够的经验，<strong>能否驾驭微服务的技术栈</strong>，可能是第一个需要考虑的点。</li><li><strong>不断纠正</strong>：我们需要承认我们的认知是有限的，只能基于目前的业务状态和有限的对未来的预测来制定出一个相对合适的拆分方案，而不是所谓的最优方案，任何方案都只能保证在当下提供了相对合适的粒度和划分原则，要时刻做好在未来的末一个时刻会变得不和时宜、需要再次调整的准备。</li><li>要做行动派，而不是理论派：在具体怎么拆分上，也不要太纠结于是否合适，<strong>如果拆了之后发现真的不合适，在重新调整就好了</strong>。如果要灵活调整，可以针对服务化架构搭建起一套完整的能力体系，比如服务治理平台、数据迁移工具、数据双写等等</li><li>服务只拆不合：<ul><li><strong>拆相当于我们开发代码，合相当于重构代码</strong>。随着我们对应用程序领域的了解越来越深，它们需要随着时间的推移而变化。</li><li>人员和服务数量的不匹配，导致的<strong>维护成本</strong>增加，也是导致服务合并的一个重要原因。</li><li>如果<strong>微服务数量过多和资源不匹配</strong>，则可以考虑合并多个微服务到服务包，部署到一台服务器，这样可以节省服务运行时的基础资源消耗也降低了维护成本。需要注意的是，<strong>虽然服务包是运行在一个进程中，但是服务包内的服务依然要满足微服务定义</strong>，以便在未来某一天要重新拆开的时候可以很快就分离</li></ul></li></ul><h1>总结梳理</h1><h2 id="微服务拆分时机">微服务拆分时机</h2><p><strong>业务规模、团队规模、技术储备、人才储备、研发效率</strong></p><h2 id="微服务拆分原则">微服务拆分原则</h2><ul><li><p>单一服务内部功能<strong>高内聚低耦合</strong></p></li><li><p><strong>闭包原则</strong>（CCP）</p></li><li><p><strong>服务自治、接口隔离</strong>原则</p></li><li><p><strong>持续演进</strong>原则</p></li><li><p><strong>避免影响产品的日常功能迭代</strong></p></li><li><p><strong>服务接口的定义要具备可扩展性</strong></p></li><li><p><strong>避免环形依赖与双向依赖</strong></p></li><li><p><strong>阶段性合并</strong></p></li><li><p><strong>自动化驱动</strong></p></li></ul><h2 id="功能维度拆分策略：领域驱动、数据驱动、单体拆分">功能维度拆分策略：领域驱动、数据驱动、单体拆分</h2><ul><li><p><strong>业务复杂度足够高：基于领域驱动拆分服务</strong></p></li><li><p><strong>业务复杂度较低：基于数据驱动拆分服务</strong></p></li></ul><h2 id="非功能维度拆分策略：扩展性、复用性、高性能、高可用、安全性、异构性">非功能维度拆分策略：<strong>扩展性、复用性、高性能、高可用、安全性、异构性</strong></h2><h2 id="拆分注意的风险">拆分注意的风险</h2><ul><li><p><strong>能否驾驭微服务的技术栈</strong></p></li><li><p><strong>不断纠正</strong></p></li><li><p><strong>不要纠结怎么拆，先拆了再说，发现不合适再重新调整</strong></p></li><li><p><strong>如果拆了之后发现真的不合适，在重新调整就好了</strong>：合并后的包内服务也要满足微服务定义（DDD），以便日后拆分</p></li></ul><p><strong>微服务架构注意事项</strong></p><ul><li><p>使用 RequestInterceptor 接口设置请求头传递 memberId</p></li><li><p>Skywalking + ELK</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务拆分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02.多数据源架构</title>
      <link href="/2023/07/08/architect/06.dian-shang-xi-tong/02-duo-shu-ju-yuan-jia-gou/"/>
      <url>/2023/07/08/architect/06.dian-shang-xi-tong/02-duo-shu-ju-yuan-jia-gou/</url>
      
        <content type="html"><![CDATA[<h1>01. AbstractRoutingDataSource（Spring）</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Primary</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DynamicDataSource</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractRoutingDataSource</span> <span class="token punctuation">{</span>    <span class="token comment">// 更改数据源时切换 ThreadLocal 即可</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> name <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token class-name">DataSource</span> dataSource1<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token class-name">DataSource</span> dataSource2<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">determineCurrentLookupKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 为targetDataSources初始化所有数据源</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> targetDataSources<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetDataSources<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"W"</span><span class="token punctuation">,</span>dataSource1<span class="token punctuation">)</span><span class="token punctuation">;</span>        targetDataSources<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"R"</span><span class="token punctuation">,</span>dataSource2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setTargetDataSources</span><span class="token punctuation">(</span>targetDataSources<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 为defaultTargetDataSource 设置默认的数据源</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setDefaultTargetDataSource</span><span class="token punctuation">(</span>dataSource1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1>02. SqlSessionFactory（MyBatis）</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token comment">// 使用不同数据源的接口放到不同的 mapper 包下即可</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"com.tuling.datasource.dynamic.mybatis.mapper.r"</span><span class="token punctuation">,</span> sqlSessionFactoryRef<span class="token operator">=</span><span class="token string">"rSqlSessionFactory"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RMyBatisConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.datasource.datasource2"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">dataSource2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token keyword">public</span> <span class="token class-name">SqlSessionFactory</span> <span class="token function">rSqlSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> <span class="token class-name">SqlSessionFactoryBean</span> sessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sessionFactory<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token function">dataSource2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 指定主库对应的mapper.xml文件</span>        sessionFactory<span class="token punctuation">.</span><span class="token function">setMapperLocations</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token string">"classpath:mapper/r/*.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> sessionFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">DataSourceTransactionManager</span> <span class="token function">rTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">DataSourceTransactionManager</span> dataSourceTransactionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dataSourceTransactionManager<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token function">dataSource2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dataSourceTransactionManager<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">TransactionTemplate</span> <span class="token function">rTransactionTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TransactionTemplate</span><span class="token punctuation">(</span><span class="token function">rTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1>03. dynamic-datasource</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dynamic-datasource-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    dynamic<span class="token punctuation">:</span>      <span class="token comment"># 设置默认的数据源或者数据源组,默认值即为master</span>      primary<span class="token punctuation">:</span> master      <span class="token comment"># 严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源</span>      strict<span class="token punctuation">:</span> <span class="token boolean important">false</span>      datasource<span class="token punctuation">:</span>        master<span class="token punctuation">:</span>          url<span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/datasource1<span class="token punctuation">?</span>serverTimezone=UTC<span class="token important">&amp;useUnicode=true&amp;characterEncoding=UTF8&amp;useSSL=false</span>          username<span class="token punctuation">:</span> root          password<span class="token punctuation">:</span> <span class="token number">123456</span>          initial<span class="token punctuation">-</span><span class="token key atrule">size</span><span class="token punctuation">:</span> <span class="token number">1</span>          min<span class="token punctuation">-</span><span class="token key atrule">idle</span><span class="token punctuation">:</span> <span class="token number">1</span>          max<span class="token punctuation">-</span><span class="token key atrule">active</span><span class="token punctuation">:</span> <span class="token number">20</span>          test<span class="token punctuation">-</span><span class="token key atrule">on-borrow</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          driver<span class="token punctuation">-</span><span class="token key atrule">class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver        slave_1<span class="token punctuation">:</span>          url<span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/datasource2<span class="token punctuation">?</span>serverTimezone=UTC<span class="token important">&amp;useUnicode=true&amp;characterEncoding=UTF8&amp;useSSL=false</span>          username<span class="token punctuation">:</span> root          password<span class="token punctuation">:</span> <span class="token number">123456</span>          initial<span class="token punctuation">-</span><span class="token key atrule">size</span><span class="token punctuation">:</span> <span class="token number">1</span>          min<span class="token punctuation">-</span><span class="token key atrule">idle</span><span class="token punctuation">:</span> <span class="token number">1</span>          max<span class="token punctuation">-</span><span class="token key atrule">active</span><span class="token punctuation">:</span> <span class="token number">20</span>          test<span class="token punctuation">-</span><span class="token key atrule">on-borrow</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          driver<span class="token punctuation">-</span><span class="token key atrule">class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"master"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@DSTransactional</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1>总结梳理</h1><ol><li><p><code>AbstractRoutingDataSource(ThreadLocal)</code></p></li><li><p><code>SqlSessionFactory(@MapperScan SqlSessionFactory)</code></p></li><li><p><code>dynamic-datasource(yml @DS("master"))</code></p></li></ol><p>mybatis-plus-generator</p>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.单体VS微服务</title>
      <link href="/2023/07/08/architect/06.dian-shang-xi-tong/01-dan-ti-vs-wei-fu-wu/"/>
      <url>/2023/07/08/architect/06.dian-shang-xi-tong/01-dan-ti-vs-wei-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1>单体服务的优点</h1><ul><li><strong>应用的开发很简单</strong>，IDE 和其他开发工具只需要构建这一个单独的应用程序</li><li><strong>易于对应用程序进行大规模的更改</strong>:可以更改代码和数据库模式，然后构建和部署测试相对简单。</li><li><strong>开发测试简单</strong>:开发者只需要写几个端到端的测试,启动应用程序，调用 RESTAPI，然后使用 Selenium 这样的工具测试用户界面。</li><li><strong>部署简单</strong>明了:开发者唯一需要做的,就是把 WAR 文件复制到安装了 Tomcat 的服务器上。</li><li><strong>横向扩展简单</strong>:运行多个实例，由一个负载均衡器进行调度。</li></ul><h1>单体服务的缺点</h1><p>单体架构存在着巨大的局限性。<strong>随着业务的复杂和用户的增多</strong>，小巧的、简单的、由一个小团队开发维护的应用程序就会演变成一个由大团队开发的巨无霸单体应用程序。此时应用就变成了单体地狱。开发变得缓慢和痛苦。</p><h2 id="font-color-red-过度的复杂性-font"><font color="red">过度的复杂性</font></h2><p>大型单体应用程序的首要问题就是它的过度复杂性，系统本身过于庞大和复杂导致任何一个开发者都很难理解它的全部。因此，修复软件中的问题和正确地实现新功能就变得困难且耗时。各种交付截止时间都可能被错过。这种极度的复杂性正在形成一个恶性循环:由于代码库太难于理解，因此开发人员在更改时更容易出错，每一次更改都会让代码库变得更复杂、更难懂。就演变成为了我们常说的“<strong>代码屎山</strong>”。</p><h2 id="font-color-red-开发速度缓慢-font"><font color="red">开发速度缓慢</font></h2><p>巨大的项目<strong>从编辑到构建、运行再到测试这个周期花费的时间越来越长</strong>,这严重地影响了团队的工作效率。</p><h2 id="font-color-red-部署周期长-易出问题-font"><font color="red">部署周期长,易出问题</font></h2><p>巨大的项目从代码完成到运行在生产环境是一个漫长且费力的过程。一个问题是，<font color="red"><strong>众多开发人员都向同一个代码库提交代码更改，这常常使得这个代码库的构建结果处于无法交付的状态。采用功能分支来解决这个问题时，带来的是漫长且痛苦的合并过程。</strong></font>紧接着，一旦团队完成一个冲刺任务，随后迎接他们的将是一个漫长的测试和代码稳定周期。把更改推向生产环境的另一个挑战是运行测试需要很长时间。因为代码库如此复杂,以至于一个更改可能引起的影响是未知的，为了避免<font color="red"><strong>牵一发而动全身</strong></font>的后果，即使是一个微小的更改，开发人员也必须在持续集成服务器上运行所有的测试套件。系统的某些部分甚至还需要手工测试。如果测试失败，诊断和修复也需要更多的时间。因此，<font color="red"><strong>完成这样的测试往往需要数天甚至更长时间</strong></font>。</p><h2 id="font-color-red-难以扩展和可靠性不佳-font"><font color="red">难以扩展和可靠性不佳</font></h2><p>在很多的时候，<font color="red"><strong>应用的不同功能和模块对资源的需求是相互冲突的</strong></font>。例如，有些模块需要将数据保存在一个大型的内存数据库中，理想情况下运行这个应用的服务器应该有较大容量的内存；另外，有些模块存在大量的计算又需要比较快的CPU，这需要项目部署在具有多个高性能 CPU 和大内存的服务器之上。因为这些模块都是在一个应用程序内，因此在选用服务器时必须满足所有模块的需要。<font color="red"><strong>应用程序缺乏故障隔离</strong></font>，因为所有模块都在同一个进程中运行。每隔一段时间，在一个模块中的代码错误，例如内存泄漏，将会导致应用程序的所有实例都崩溃。</p><h1>单体应用的适用场景</h1><p><font color="green"><strong>小、少、短、快、雏</strong></font><br>公司规模较小，开发团队人数较少、产品上线周期短、产品在快速迭代期，核心功能尚未稳定时；或者用户规模和用户群体较少时。</p><h1>微服务架构的特点</h1><p>今天,针对大型复杂应用的开发,越来越多的共识趋向于考虑使用微服务架构。但微服务到底是什么？针对微服务架构有多种定义。有些仅仅是在字面意义上做了定义:服务应该是微小的不超过 100 行代码,等等。另外有些定义要求服务的开发周期必须被限制在两周之内。<br>曾在 Netflix 工作的著名架构师Adrian Cockcroft 把<strong>微服务架构定义为面向服务的架构，它们由松耦合和具有边界上下文的元素组成</strong>。由这个定义可以看到，微服务其实<strong>和 DDD 是天生一对</strong>。</p><h2 id="微服务是模块化的">微服务是模块化的</h2><p>模块化是开发大型、复杂应用程序的基础。现代互联网应用程序为了让不同的人开发和理解，大型应用需要拆分为模块。在单体应用中，模块通常由一组编程语言所提供的结构（例如Java 的包）,或者Java JAR 文件这样的构建制品来定义。但是，即使这样，随着时间的推移和反复的开发迭代,单体应用依然会变成我们前面所说的单体地狱。<br>微服务架构使用服务作为模块化的单元。服务的 API 为它自身构筑了一个不可逾越的边界,你无法越过 API 去访问服务内部的类，这与采用 Java 包的单体应用完全不同。因此模块化的服务更容易随着时间推移而不断演化。微服务架构也带来其他的好处,例如服务可以独立进行部署和扩展。</p><h2 id="每个服务都拥有自己的数据库">每个服务都拥有自己的数据库</h2><p>微服务架构的一个关键特性是每一个服务之间都是<strong>松耦合</strong>的，它们仅通过 API 进行通信。实现这种松耦合的方式之一，是每个服务都拥有自己的私有数据库。对于我们的项目来说，订单服务拥有一个包括 oms_order 等表的数据库，用户服务拥有一个包含 ums_member 等表的数据库。在开发阶段就可以修改自己服务的数据库模式，而不必同其他服务的开发者协调。在运行时，服务实现了相互之间的独立。服务不会因为其他的服务锁住了数据库而进入堵塞的状态。</p><h1>微服务架构的好处</h1><ul><li>使大型的复杂应用程序可以<strong>持续交付和持续部署</strong>。</li><li>每个服务都相对较小并<strong>容易维护</strong>。</li><li>服务可以<strong>独立部署</strong>。</li><li>服务可以<strong>独立扩展</strong>。</li><li>微服务架构可以实现团队的自主和松散耦合。</li><li>更容易实验和采纳新的技术。</li><li>更好的<strong>容错性</strong>，比如更好的故障隔离。</li></ul><h1>微服务架构的弊端</h1><h2 id="font-color-red-服务的拆分和定义是一项挑战-font"><font color="red">服务的拆分和定义是一项挑战</font></h2><p>采用微服务架构首当其冲的问题，就是根本没有一个具体的、良好定义的算法可以完成服务的拆分工作。与软件开发一样，服务的拆分和定义更像是一门艺术。更糟糕的是，如果对系统的服务拆分出现了偏差，你很有可能会构建出一个<font color="red"><strong>分布式的单体应用</strong></font>: <strong>一个包含了一大堆互相之间紧耦合的服务，却又必须部署在一起的所谓分布式系统。<strong>这将会把单体架构和微服务架构</strong>两者的弊端集于一身</strong>。</p><h2 id="font-color-red-分布式系统带来的各种复杂性-font-使开发、测试和部署变得更困难"><font color="red">分布式系统带来的各种复杂性</font>,使开发、测试和部署变得更困难</h2><p>使用微服务架构的另一个问题是开发人员必须处理创建分布式系统的额外复杂性。服务必须使用进程间通信机制。这比简单的方法调用更复杂。此外，<font color="red"><strong>必须设计服务来处理局部故障,并处理远程服务不可用或出现高延迟的各种情况。</strong></font>实现跨多个服务的用例需要使用不熟悉的技术。每个服务都有自己的数据库,这使得实现<font color="red"><strong>跨服务的事务和查询</strong></font>成为一项挑战。基于微服务的应用程序必须使用所谓的 Saga 来维护服务之间的<font color="red"><strong>数据一致性</strong></font>。基于微服务的应用程序**无法使用简单查询从多个服务中检索数据。**相反，它必须使用 API 组合或 CQRS 视图实现查询。</p><p>IDE 等开发工具都是为单体应用设计的，它们并不具备开发分布式应用所需要的特定功能支持。编写<strong>包含多项服务在内的自动化测试</strong>也是很令人头疼的工作。这些都是跟微服务架构直接相关的问题。因此,团队中的开发人员必须具备先进的软件开发和交付技能才能成功使用微服务。</p><p>微服务架构还引入了显著的<strong>运维复杂性</strong>。必须在生产环境中管理更多活动组件:不同类型服务的多个实例。要成功部署微服务，需要高度自动化的基础设施,比如自动化部署等等。</p><h2 id="font-color-red-当部署跨越多个服务的功能时需要谨慎地协调-font"><font color="red">当部署跨越多个服务的功能时需要谨慎地协调</font></h2><p>使用微服务架构的另外一项挑战在于当部署跨越多个服务的功能时需要谨慎地协调更多开发团队。必须制定一个发布计划，<font color="red"><strong>把服务按照依赖关系进行排序</strong></font>，这就是我们常说的服务编排。这跟单体架构下批量部署多个组件的方式截然不同。</p><h1>总结梳理</h1><p>单体服务的优点</p><ul><li><p>开发简单</p></li><li><p>大规模更改简单</p></li><li><p>测试简单</p></li><li><p>部署简单</p></li><li><p>横向扩展简单</p></li></ul><p>单体服务的缺点</p><ul><li><p>过度的复杂性（代码屎山）</p></li><li><p>开发速度缓慢（构建 - 运行 - 测试）</p></li><li><p>部署周期长,易出问题（代码合并，牵一发而动全身，测试太慢）</p></li><li><p>难以扩展和可靠性不佳（不同模块的资源需求不同，缺乏故障隔离）</p></li></ul><p>单体应用的适用场景（小、少、短、快、雏）</p><p>微服务架构的特点</p><ul><li><p>微服务是模块化的</p></li><li><p>每个服务都拥有自己的数据库</p></li></ul><p>微服务架构的好处</p><ul><li><p>持续交付和持续部署</p></li><li><p>容易维护</p></li><li><p>独立部署和独立扩展</p></li><li><p>容错性（故障隔离）</p></li></ul><p>微服务架构的弊端</p><ul><li><p>服务的拆分和定义（分布式单体应用，集两者弊端于一身）</p></li><li><p>分布式系统复杂性（可用可靠，事务，数据一致性，多服务查询，跨服务测试，运维复杂性）</p></li><li><p>服务的依赖关系（当部署跨越多个服务的功能时需要谨慎地协调，协调团队，发布计划）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电商系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>26.03.缩梯</title>
      <link href="/2023/07/08/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-03-suo-ti/"/>
      <url>/2023/07/08/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-03-suo-ti/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc26%2FSlide3.JPG" alt="图 26.3 缩梯"></p><blockquote><p><font color="red"><strong>市场每一次突破幅度都小于上一次,说明动能在减弱,可能很快出现较深的回撤甚至反转。</strong></font>如图26.3所示,<strong>市场走出楼梯形态上升趋势,形成3个或以上趋势性上移的高点和低点,大致处于一个通道之中。</strong><font color="green"><strong>K线4、6、8形成缩梯,代表上升动能减弱,预示行情可能反转。</strong></font><font color="black"><strong>上升通道相当于一个大的熊旗,在K线9向下突破。</strong></font><br><font color="green"><strong>在K线9突破之后,市场出现突破回踩</strong></font>,<font color="black"><strong>并在K线10形成高点下降,进入一段楼梯形态的下降趋势。</strong></font><font color="green">K线10与截至K线9下跌走势中第一次反弹的高点大致构成一个双顶熊旗。K线11对下降通道下轨构成过靶,引发一轮两段式的小规模反转并向上超越通道上轨。</font><br><font color="green"><strong>当市场开始形成楼梯形下跌趋势,通常你可以在每一根强趋势K线向下突破时逆势刮头皮。在每一根空头趋势K线收盘跌破前一个摆动低点时刮头皮做多。</strong></font><font color="green">同样在楼梯形上涨行情中,你可以在每一根趋势K线超越上一个摆动高点时刮头皮做空。</font>不过一般来讲,<font color="green">**更安全的做法是在市场反转时挂止损单入场。**比如说,如果市场从通道底部向上反转,可以在前一根K线高点上方挂单入场。</font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第26章 楼梯形态：宽幅趋势通道<br>第3个案例（图 26.3）<br>第378-379页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-楼梯形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>26.02.楼梯形态加速进入强劲趋势</title>
      <link href="/2023/07/08/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-02-lou-ti-xing-tai-jia-su-jin-ru-qiang-jing-qu-shi/"/>
      <url>/2023/07/08/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-02-lou-ti-xing-tai-jia-su-jin-ru-qiang-jing-qu-shi/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc26%2FSlide2.JPG" alt="图 26.2 楼梯形态加速进入强劲趋势"></p><blockquote><p>如图26.2所示,<font color="red"><strong>楼梯形态有时候会加速,进入更强劲的趋势。</strong></font>在欧元兑美元的日线图上,<strong>截至K线7,市场处于一个上升通道,形成3个高点抬升和低点抬升,因此属于楼梯形态上升趋势。</strong><br><font color="black"><strong>K线8是一根多头趋势K线,突破通道上轨。随后出现一根空头反转K线,但没有被触发。</strong></font><font color="red"><strong>突破走势应该可以持续到将通道等距上移的平行线位置(安德鲁叉运动)</strong></font>,结果的确如此。<font color="orange"><strong>在楔形顶部失败的情况下,这种加速上涨是很常见的。</strong></font><strong>截至K线6有3波向上推动</strong>,<font color="black"><strong>不过如果你从截至K线4的那波强劲拉升算起,也可以将K线8前面那波小幅向上推动看成第三波。</strong></font><font color="red"><strong>楔形失败之后往往会出现大约与楔形高度等距的行情</strong></font>(从K线6高点到K线3或K线1低点)。</p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第26章 楼梯形态：宽幅趋势通道<br>第2个案例（图 26.2）<br>第377-378页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-楼梯形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>26.01.下降楼梯</title>
      <link href="/2023/07/08/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-01-xia-jiang-lou-ti/"/>
      <url>/2023/07/08/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-01-xia-jiang-lou-ti/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc26%2FSlide1.JPG" alt="图 26.1 下降楼梯"></p><blockquote><p><font color="red"><strong>下降楼梯形态是一个向下倾斜的通道,每次突破至新低之后都会回撤至突破点之上。</strong></font>比如说,在图26.1中,<font color="black"><strong>从K线8到K线9的下跌形成向下突破,随后的回撤站上了K线7的低点;截至K线11的下跌突破了K线9,随后的回撤站上K线9突破点,与上一个区间形成重叠。</strong></font><br><font color="green"><strong>部分交易者会在趋势通道线附近做多,在趋势线附近做空。其他交易者则关注回撤之前突破走势的幅度。</strong></font>比如说,<font color="black"><strong>K线5低点大约低于K线3低点4个点。激进多头将会在K线5低点下方3~4个点挂限价单买入。他们的买单将会在K线7获得成交。一旦市场跌破K线7,他们又在K线7低点下方3~4个点挂买单,将会在截至K线9的下跌中获得成交(K线9低点低于K线7低点4个点)由于前面的反弹也是大约4个点,他们将会在入场点上方大约3个点的位置锁定利润。对于截至K线11和16的下跌,他们也如法炮制。在截至K线13的下跌过程中他们也进行了同样的挂单,但由于跌幅太小,并未获得成交。空头的做法刚好相反。</strong></font><strong>他们看到前面的反弹为4~6个点,因此他们在最近摆动低点上方3~5个点的位置分批建立空单。</strong><font color="green"><strong>这种操作手法只适合经验丰富的交易者。初学者应该只采取挂止损单的方法入场,因为这样他们入场时市场已经朝他们的方向运行</strong></font>(将在第二本书讨论)。<br><font color="black"><strong>K线7是第三波向下推动,属于缩梯形态</strong></font>(K线7跌破K线5的幅度小于K线5跌破K线3的幅度)。图中的通道线是大致画的,目的让大家看到市场处于下跌通道之中。<strong>在通道内,双向交易迹象明显,交易者在发现恰当建仓形态时可低买高卖。</strong></p><p>本图的深入探讨</p><p>在图26.1中,<font color="black"><strong>当天市场开盘处于前一天开始的下降通道下轨附近。开盘的向下突破失败,市场出现双K线反转并引发连续4根K线的迅速拉升。市场测试下降趋势线之后形成双顶,然后急速下跌至K线13。</strong></font><font color="orange"><strong>急速上涨之后又急速下跌,说明多空双方在激烈争夺对通道方向的控制权。</strong></font><font color="black"><strong>多头启动了一个通道,但在趋势线处失败,反转进入下跌通道。</strong></font><font color="green"><strong>市场在K线16测试趋势通道线之后向上反转,但K线16低点未能触到通道线,意味着多头非常激进。K线16是一个双K线反转,同时也是一个末端旗形做多形态(K线15构成一个4根K线的末端旗形)。</strong></font><br><font color="red"><strong>三连推并不能保证趋势一定反转。</strong></font><font color="black"><strong>截至K线7的下跌过程中并未表现出多少买压,没有一根长多头趋势K线,也没有高潮性反转。从K线7开始的上涨也不是特别强劲。这并不是强势反转应有的特征,因此并未吸引足够的多头参与并带来反转。</strong></font>相反,<font color="green"><strong>市场形成了一个楔形熊旗(K线6以及随后从K线7开始的两波向上推动共同构成三连推)和高点下降(虽然反弹站上了K线6,表现出一定力度,但仍低于K线4),然后下跌趋势恢复。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第26章 楼梯形态：宽幅趋势通道<br>第1个案例（图 26.1）<br>第376-377页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-楼梯形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>26.00.02.楼梯形态交易日</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-00-02-lou-ti-xing-tai-jiao-yi-ri/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-00-02-lou-ti-xing-tai-jiao-yi-ri/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red"><strong>当市场走出3波或以上趋势性摆动,构成一个略微倾斜的交易区间或者通道,多头和空头都表现活跃,但一方略微掌握更大的控制权。每次回撤都会超越突破点,使得每一突破走势与随后的回撤之间存在重叠。</strong></font><strong>在宽幅通道内,双向交易正在发生,因此交易者可以寻找两个方向的入场机会。</strong><font color="red"><strong>如果突破幅度越来越小,就属于缩梯形态,意味着动能减弱。它通常会导致两段式反转走势和趋势线突破。</strong></font><font color="orange"><strong>许多三连推反转都属于失败并反转的楼梯形态或缩梯形态。</strong></font><font color="black"><strong>在较高时间级别上,楼梯形态往往只是回调或旗形。</strong></font><font color="red"><strong>楼梯形态经常发生在交易日最后1~2个小时,然后在第二天开盘突破这个旗形。</strong></font><font color="black"><strong>比如说,某天走出的宽幅上升通道可能只是一个大的熊旗,下跌趋势可能在第二天向下突破。</strong></font><br><font color="red"><strong>有时候,楼梯形态可能突然加速,以顺势方向突破趋势通道。如果随后立即反转,那么这一过靶与反转走势有可能造成至少两段式调整。如果没有反转,突破走势可能至少再持续两波行情,或发生大致相当于通道高度的等距运动(价格超越通道的距离应该大约相当于通道之内的距离)。</strong></font><br><font color="green"><strong>交易者将会密切关注突破走势超越最近摆动点的幅度,然后利用这一幅度来对后面的突破走势进行逆势交易,期待市场出现突破回踩。</strong></font>比如说,<font color="black"><strong>如果最近的摆动低点低于上一个摆动低点14个最小报价单位,交易者将会从最近摆动低点下方10单位左右开始分批买入(往往在趋势通道线附近)。如果最近一次突破之后的回撤幅度约为15单位,他们将会在低点上方大约10-15单位寻求锁定利润(往往在趋势线附近)。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第26章 楼梯形态：宽幅趋势通道<br>第375-376页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 楼梯形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>26.00.01.楼梯形态交易日的主要特征</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-00-01-lou-ti-xing-tai-jiao-yi-ri-de-zhu-yao-te-zheng/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/26.lou-ti-xing-tai-kuan-fu-qu-shi-tong-dao/26-00-01-lou-ti-xing-tai-jiao-yi-ri-de-zhu-yao-te-zheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>楼梯形态交易日的主要特征:</p><ul><li><font color="red"><strong>楼梯形态交易日是趋势性交易区间交易日的变体,至少包含3个交易区间。</strong></font></li><li><font color="red">交易日波动剧烈,但形成趋势性高点和低点。</font></li><li><font color="red">由于波动较大,交易者往往会朝两个方向交易,<strong>但他们应该试图让部分或全部顺势头寸参与摆动。</strong></font></li><li><font color="red"><strong>几乎在所有突破之后市场都会出现超越突破点的回撤(突破测试),造成相邻摆动之间存在一些重叠。</strong></font>举例而言,<font color="orange"><strong>在宽幅下降通道中,所有突破至新低的走势都跟随一波反弹,返回突破点之上但未能超越最近的摆动高点。不过,有时候会有一两波反弹略微超过上一个摆动高点。这将让部分交易者怀疑市场是否正在反转,但通常情况下趋势会很快恢复。</strong></font></li><li><font color="red"><strong>如果每一次突破都比上一次幅度小一点,就属于缩梯形态,说明动能减弱可能引发更大的调整。</strong></font></li></ul></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第26章 楼梯形态：宽幅趋势通道<br>第375页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 楼梯形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25.04.趋势在几天之后恢复</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-04-qu-shi-zai-ji-tian-zhi-hou-hui-fu/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-04-qu-shi-zai-ji-tian-zhi-hou-hui-fu/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc25%2FSlide4.JPG" alt="图 25.4 趋势在几天之后恢复"></p><blockquote><p><font color="red"><strong>趋势恢复形态可以持续几个交易日。</strong></font>在图25.4中,<strong>市场截至K线2走出一轮强劲下跌,然后进入交易区间,持续了两个半交易日。</strong><font color="orange"><strong>交易区间可以持续很长时间,通常情况下都会朝趋势方向突破。</strong></font><font color="black"><strong>几天后,下跌趋势恢复,市场进入第二轮下跌,从K线5持续到K线14。</strong></font><br><font color="black"><strong>从K线5到K线6的下跌也跟随一个交易区间,第二波下跌结束于第二天开盘后的K线9。</strong></font><br><font color="black"><strong>从K线7到K线9的下跌同样跟随一个交易区间,持续到K线13,下跌趋势恢复发生在截至K线14的下跌行情。</strong></font><strong>因此本例中有3个交易日都属于趋势恢复形态。</strong></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第25章 趋势恢复交易日<br>第4个案例（图 25.4）<br>第373-374页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势恢复交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25.03.趋势恢复</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-03-qu-shi-hui-fu/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-03-qu-shi-hui-fu/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc25%2FSlide3.JPG" alt="图 25.3 趋势恢复"></p><blockquote><p><font color="red"><strong>有时候,虽然最初的上涨只有几根强趋势K线,看起来似乎会造成交易区间交易日,趋势恢复行情仍可能非常强劲。</strong></font>在图25.中,<font color="black"><strong>市场对前一天低点假突破之后,从一个扩散三角形底部上涨,形成始于开盘的上升趋势。上涨持续两根K线,然后在前一天交易区间中部止步不前。</strong></font><font color="orange"><strong>任何三连推形态所造成的上涨通常至少有两波</strong></font>(本例最终也是如此)。<font color="black"><strong>K线2是一次突破回踩,引发新轮小幅上涨,但市场开始失去动能。接下来市场继续在均线上方弱势运行到K线3。</strong></font>在这个时点,我们很明显感到有什么地方不太对劲。我们知道,<font color="black"><strong>始于开盘的上升趋势是最强劲的趋势类型之一,但例中的趋势显然算不上强劲。这意味着交易者很快将对行情的属性重新作出评估</strong></font>,然后决定离场还是等待。<strong>他们可能转而判断当天可能成为交易区间交易日,甚至可能再创盘中新低。</strong><font color="green"><strong>K线2低点有可能跟随一个双底牛旗,但由于强势多头的缺席,空头有可能将市场强力打压至当天新低,K线2低点有可能失败。</strong></font><font color="green"><strong>K线4是跌破K线2低点之后的第二波小幅向下推动</strong></font>,**市场从这里展开了一轮持续到收盘的上升趋势,构成一个趋势恢复交易日(尽管较弱)。**此外,<font color="green"><strong>K线4刚好是对始于开盘趋势的信号K线高点的突破回测。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第25章 趋势恢复交易日<br>第3个案例（图 25.3）<br>第372-373页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势恢复交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25.02.窄幅交易区间之后反转</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-02-zhai-fu-jiao-yi-qu-jian-zhi-hou-fan-zhuan/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-02-zhai-fu-jiao-yi-qu-jian-zhi-hou-fan-zhuan/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc25%2FSlide2.JPG" alt="图 25.2 窄幅交易区间之后反转"></p><blockquote><p><font color="red"><strong>有时候强劲趋势之后形成的窄幅交易区间会造成趋势反转而非趋势恢复。</strong></font>在图25.2中,<font color="orange"><strong>市场当天从K线3出现一轮强劲抛盘,然后进入窄幅交易区间,持续数小时。这种走势往往会导致尾盘恢复下跌趋势,而且尾盘下跌行情规模与初始下跌相当。在最后一轮下跌开始之前,市场往往对区间上轨频繁做出假突破。</strong></font><font color="green"><strong>K线12是一笔摆动做空交易的完美建仓形态,因为它是一根空头反转K线,在交易日尾盘突破窄幅交易区间的上轨。然而它后面那根K线并未成为一轮大跌行情的入场K线,而是形成一根小内包阳线,因此属于突破回踩做多形态。K线12为突破走势,这根内包K线为走势暂停(属于回调的一种)。</strong></font></p><p>本图的深入探讨</p><p>在图25.2中,<font color="green"><strong>交易日大幅跳空低开,第一根K线为强势多头反转K线,构成一个突破失败做多形态,有可能开启始于开盘的上升趋势交易日。</strong></font><br><font color="green"><strong>K线13和K线14均为长多头趋势K线,构成两根K线的突破走势。通常情况下,所有突破都会跟随一段与突破幅度相当的等距行情。</strong></font><font color="orange"><strong>等距幅度的测量一般是从急速行情第一根K线的开盘或低点到最后一根K线的收盘或高点。</strong></font><strong>市场当天刚好收于从K线13开盘到K线14高点幅度的等距目标处。</strong><br><font color="red"><strong>大部分下跌趋势恢复交易日开盘后都不会出现大幅上涨,而本例中一开盘的大拉升说明多头当天有激进买入的意愿。</strong></font><font color="orange"><strong>因此,虽然午盘的震荡为尾盘出现新一轮大跌做了极好的铺垫,但你不可能百分之百确定,因为总是有40%的可能性出现完全相反的情况。</strong></font><font color="green"><strong>市场有可能上涨测试当天开盘的另一个线索是,当天低点几乎刚好处于从开盘到第一轮上涨行情高点幅度的等距下跌目标处。</strong></font><font color="orange"><strong>也就是说,当天开盘处于全天振幅的中位。如果市场返回这一位置,在日线上将收出一根十字星(这种情况十分常见)。</strong></font>另外,<font color="green"><strong>我们注意到市场反复测试K线7低点的支撑位,但不断获得买盘支撑,无法跌破哪怕1个最小报价单位。K线8后面那根内包K线、K线9后面那根内包K线以及K线10和K线11的低点抬升均构成双底回踩做多建仓形态。</strong></font><br><font color="orange"><strong>这根支撑线低于最初的K线5入场K线(卖出高潮之后预期的回撤)1个最小报价单位。</strong></font><font color="green"><strong>K线5是当天低点双K线反转形态的入场K线。</strong></font><font color="orange"><strong>市场扫掉了这根入场K线下方的止损,但始终无法进一步下跌1个单位。这说明强势多头在行动。</strong></font>在整个窄幅交易区间中,买入和卖出程序(程序化交易)都在活动,但最终买入程序战胜了卖出程序。<strong>所有这些空头都必然要回补,从而增强了市场买压。除此之外,许多卖出程序还会转为买人程序,进一步强化买盘力度。</strong><font color="black"><strong>截至K线14的急速拉升之后跟随一个上升通道,持续到收盘。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第25章 趋势恢复交易日<br>第2个案例（图 25.2）<br>第371-372页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势恢复交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25.01.跳空高开之后测试缺口</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-01-tiao-kong-gao-kai-zhi-hou-ce-shi-que-kou/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-01-tiao-kong-gao-kai-zhi-hou-ce-shi-que-kou/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc25%2FSlide1.JPG" alt="图 25.1 跳空高开之后测试缺口"></p><blockquote><p><font color="red"><strong>在大幅跳空交易日,市场往往会在趋势开始之前测试开盘缺口。</strong></font>如图25.1所示,<font color="black"><strong>市场大幅跳空高开,以双底形式测试开盘低点,然后大幅上涨至K线3。从这里开始,市场进入窄幅交易区间,持续时间超过3个小时,让交易者误以为好的交易时机巳经过去了。</strong></font><font color="green"><strong>K线6小幅探破下降趋势通道线和K线4信号K线高点之后向上反转。这一走势导致一些空头错误地入场做空,许多多头被震仓出局。截至收盘的这轮上涨行情的信号K线是当天第一根均线缺口K线。</strong></font><br>当天还有不少其他做多入场点,<font color="green"><strong>比如K线7、9、10对微型趋势线假突破之后的向上反转。</strong></font><br>在图25.1中,<font color="green"><strong>K线7是一个高2买点,也是跌破微型上升趋势线1个最小报价单位之后向上反转。</strong></font><br><font color="green"><strong>K线8是高2买点的变体</strong></font>(阴线一阳线一阴线:K线7后面那根K线是阴线,因此是第一次向下推动,下一根K线为阳线,属于向上推动,接着又是一根阴线,为第二次向下推动)。</p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第25章 趋势恢复交易日<br>第1个案例（图 25.1）<br>第370页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势恢复交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25.00.02.趋势恢复交易日</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-00-02-qu-shi-hui-fu-jiao-yi-ri/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-00-02-qu-shi-hui-fu-jiao-yi-ri/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red"><strong>有时候交易日头一个小时左右会出现一轮强劲趋势,然后市场震荡数小时之久。一旦出现这种行情,尤其当震荡走势处于极窄交易区间,交易日就可能成为趋势恢复交易日。</strong></font><strong>不要因为午盘乏味的震荡行情而放弃</strong>,<font color="red"><strong>因为最后一个小时左右市场可能走出强劲趋势。突破通常发生在早盘趋势的方向,有时候也会朝相反方向突破,从而使交易日成为反转交易日。</strong></font>举例而言,<strong>假如始于开盘的趋势为下跌趋势,通常尾盘会向下突破交易区间,使得交易日开在高点附近、收在低点附近。</strong><font color="black"><strong>在上午11点和中午之间(PST时间),市场经常出现仅1~2根K线的强势反转假突破,将交易者套在错误的方向(做多),接下来往往迅速朝另一个方向突破。市场从反转假突破到再次反转,通常时间非常短</strong></font>,<strong>但如果你早有思想准备,就有可能抓住收盘前的一波大跌行情。</strong><font color="orange"><strong>少数情况下,反转突破会获得成功,如果最后一个小时走出趋势的话,有可能回撤开盘下跌趋势的部分或全部。</strong></font><br><font color="red"><strong>午盘的横盘走势不一定非得是窄幅交易区间,而是通常出现朝两个方向的可交易的波段。</strong></font><font color="orange"><strong>有时候市场会出现3波力度很弱的逆势推动,构成一个楔形旗。另一些情况下,第三波推动未能超越第二波,从而构成头肩旗(大部分头肩反转形态都会失败并成为持续形态)。</strong></font><font color="black"><strong>由于这一形态通常有三波推动而非两波,交易者往往误以为这一逆势价格行为可能成为一轮新的反向趋势,从而过早退出开盘时所建立的头寸。</strong></font><strong>不要被市场所欺骗,当你看到不错的建仓形态,与早盘趋势的方向相同,要准备好入场。</strong><font color="black"><strong>两个方向都会有交易者分批建仓,到某个时点,许多交易者头寸规模会达到极限。一旦发生突破,亏损的一方将无法继续增仓,唯一的选择就是祈祷然后止损。</strong></font>举例来说,假如市场早盘出现一轮强劲下跌趋势,然后进入横盘,在接下来几个小时的交易区间内,多头和空头将会不断分批建仓,许多交易者头寸规模将达到最大极限。一旦市场向下突破,多头将无法继续买入。当大批多头没有剩余子弹,空头就失去了对手。随着市场下跌,越来越多的多头将会认输割肉,造成市场在收盘前加速下跌。<font color="orange"><strong>这种类型交易日难做的地方在于,午盘乏味的横盘走势往往会让交易者放弃当天的操作,而实际上他们应该将其视为机会。要提前做好入场准备。这种形态最完美的形式每个月仅出现2~3次。</strong></font><br><font color="red"><strong>有时候交易日中段的走势并非交易区间,而是持续数小时的弱势反方向趋势运动,让交易者怀疑当天可能成为反转交易日而非趋势恢复交易日。</strong></font><font color="orange"><strong>实际上这种情况往往构成较弱的趋势恢复交易日,虽然让人感觉更像交易区间交易日,但最后结果往往开盘和收盘分别位于当日振幅的两端。密切注意市场是否会在最后一个小时恢复开盘的趋势,做好入场准备。</strong></font>举例来说,<strong>市场开盘后出现一轮强劲抛盘,然后以非常低的动能走出三波向上推动,回撤初始下跌的部分甚至全部跌幅。</strong><font color="black"><strong>在这种情况下,我们要做好心理准备,因为市场有可能向下突破上升通道并恢复下跌趋势,直到收盘。</strong></font><font color="green"><strong>如果市场先突破上升通道的上轨然后向下反转,那么可能是非常不错的摆动做空交易入场点。另外,市场在跌破通道下轨之后也可能出现不错的低风险做空点。再或者,你可以等下跌趋势恢复之后,在突破回踩时或回踩均线时入场。</strong></font><strong>虽然5分钟图可能看起来像交易区间,但在较高时间级别上可能像ABC调整。如果市场收于最低点附近,在日线图上可能形成一根空头趋势K线。</strong><br><font color="red"><strong>趋势恢复形态经常横跨2个或以上的交易日。</strong></font><font color="orange"><strong>虽然5分钟图也许看起来波动很大,但在60分钟图上可能只是构成简单的ABC调整。</strong></font>举例来说,<strong>市场第一天一开始出现两个小时的强劲拉升,然后进入交易区间。</strong><font color="black"><strong>交易区间可能持续到第二天头两个小时,那么前一天的趋势随时都可能恢复。</strong></font><strong>如果你意识到这种可能性,就更可能愿意让较高比例头寸参与摆动,从而抓住一波大幅上涨行情。</strong></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第25章 趋势恢复交易日<br>第368-370页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 趋势恢复交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25.00.01.趋势恢复交易日的主要特征</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-00-01-qu-shi-hui-fu-jiao-yi-ri-de-zhu-yao-te-zheng/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/25.qu-shi-hui-fu-jiao-yi-ri/25-00-01-qu-shi-hui-fu-jiao-yi-ri-de-zhu-yao-te-zheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>趋势恢复交易日的主要特征</p><ul><li><font color="red"><strong>交易日头一个小时左右走出强劲趋势,然后进入交易区间。</strong></font></li><li><font color="red"><strong>交易区间持续数小时</strong>,往往让交易者以为平淡走势将持续到收盘。</font></li><li><font color="red"><strong>趋势在最后1~2个小时恢复。</strong></font></li><li><font color="red"><strong>第二波行情通常与第一波幅度相当。</strong></font></li><li><font color="red"><strong>那个漫长的交易区间往往是窄幅交易区间。</strong></font></li><li><font color="red"><strong>交易日晚些时候市场通常会突破交易区间,试图让趋势逆转,但这种走势多半是陷阱。接下来市场反转并朝相反方向突破并持续到收盘。在区间极窄的情况下假突破概率更高。</strong></font></li><li><font color="red"><strong>对于那些未能较早入场或在突破时入场的交易者,通常会有突破回踩的入场机会。</strong></font></li></ul></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第25章 趋势恢复交易日<br>第368页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 趋势恢复交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24.03.较小时间级别上的强势入场点</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-03-jiao-xiao-shi-jian-ji-bie-shang-de-qiang-shi-ru-chang-dian/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-03-jiao-xiao-shi-jian-ji-bie-shang-de-qiang-shi-ru-chang-dian/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc24%2FSlide3.JPG" alt="图 24.3 较小时间级别上的强势入场点"></p><blockquote><p>在稳定的上升趋势中,<strong>3分钟图上的买入机会要多于5分钟图</strong>(见图24.3)。<font color="green"><strong>左边3分钟图上的K线1和K线2是很短的逆势内包K线,构成高1买点</strong></font>,<strong>但在5分钟图上并没有明确信号。</strong><font color="green"><strong>K线3的买点在两张图上都可以看到(在5分钟图上,它是急速拉升行情中的高1买点,虽然其实体为阴线)。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第24章 反转交易日<br>第3个案例（图 24.3）<br>第367页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-反转交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24.02.大部分反转都是从趋势性交易区间交易日开始</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-02-da-bu-fen-fan-zhuan-du-shi-cong-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri-kai-shi/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-02-da-bu-fen-fan-zhuan-du-shi-cong-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri-kai-shi/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc24%2FSlide2.JPG" alt="图 24.2 大部分反转都是从趋势性交易区间交易日开始"></p><blockquote><p>如图24.2所示,<font color="red"><strong>大部分反转交易日都是从趋势性交易区间交易日开始的</strong></font>,<font color="black"><strong>当天同时还是急速与通道下跌趋势交易日和始于开盘的下跌趋势交易日。</strong></font>,<font color="orange"><strong>市场在三连推下跌(K线8、15和17)之后向上反转,形成多头反转交易日、趋势性上涨到收盘。这种情况在趋势性交易区间交易日是很常见的。</strong></font></p><p>本图的深入探讨</p><p><font color="red"><strong>一般情况下,开盘大幅跳空可以引发朝任意方向的趋势。</strong></font>在图24.2中,<font color="black"><strong>由于第一根K线是强空头趋势K线,因此进入下跌趋势的概率更高。</strong></font><font color="green"><strong>这是一个突破失败建仓形态,交易者可以在其低点下方做空,期待市场走出始于开盘的下跌趋势交易日。</strong></font><br><font color="green"><strong>K线4和K线5均为长空头趋势K线,因此属于急速下跌和卖出高潮。连续两次高潮通常会跟随至少数根K线的走势暂停或回撤</strong></font>,<strong>本例中即截至K线7高点的回撤。</strong><font color="green"><strong>K线7是第三次卖出高潮,而第三次连续的卖出高潮通常会造成更大幅度的回撤。</strong></font><font color="black"><strong>截至K线8的下跌属于急速与高潮类型的下跌趋势,接下来市场反弹至K线10,测试了截至K线8通道性下跌的起点K线7。</strong></font><font color="green"><strong>这构成一个双顶熊旗,市场最终以等距运动跌至当天最低点。</strong></font><font color="black"><strong>截至K线8的整轮下跌处于一个窄幅通道,因此相当于一波较大的急速行情。</strong></font><br><font color="orange"><strong>在出现一个大型楔形底部之后,市场往往会至少走出两段式上涨,测试楔形顶部(例中即K线10高点),而回撤走势中K线的数量通常至少是楔形中K线数量的1/3。</strong></font><font color="green"><strong>这个大楔形也是在从K线4到K线8急速下跌之后的下跌通道,从而也构成测试K线10高点的一个理由(通道的起点往往会遭到测试)。测试可能会突破那个高点,但更常见的情况是构成一个双顶熊旗</strong></font>,本例即是如此。<br><font color="green"><strong>当市场出现楔形反转,比较安全的买点通常是在出现低点拾升(比如K线19)之后或者在K线22失败的低2上方。</strong></font><font color="black"><strong>我们看到市场出现一根大阳线入场K线,意味着交易者认为上涨走势不再仅仅是熊旗反弹</strong></font>,<font color="green"><strong>而是可能出现等距上涨,返回上方交易区间。</strong></font>本例中当天的行情较为复杂,<font color="black"><strong>那个楔形反转也可以被看作一个趋势性交易区间交易日中的下方交易区间的底部。</strong></font>如果足够多交易者都持这一观点,<font color="green"><strong>那么在K线17后面那根内包K线上方(第一个入场点)买入就是合理的,可以预期市场向上测试上方交易区间的底部。</strong></font><br><font color="black"><strong>K线11、13和14构成一个楔形牛旗,但市场并未向上反转,而是向下突破。</strong></font><font color="green"><strong>在这种情况下,市场通常会出现相当于从楔形顶部到底部幅度的等距下跌。</strong></font>K线10是楔形顶部,<strong>截至K线15的下跌超过了等距下跌目标。</strong><font color="orange"><strong>如果超越等距目标,市场回撤之后往往还会有一波下跌</strong></font>,本例正是如此。<br><font color="black"><strong>虽然截至K线18的上涨有两段行情,但这轮上涨K线数量太少,不足以充分修正那个大楔形底部。而且,它处于一个窄幅通道之内,因此可能只是两波或以上上涨中的第一波。截至K线20的上涨为第二波,但问题依然存在。从K线17到K线20的上涨包含的K线数量太少,不足以修正一个如此巨大的楔形,而且仍处于相对较窄的通道。</strong></font><font color="green"><strong>这就造成一种不确定性,增加了市场需要更大规模的第二波上涨的可能性,以便让交易者确信楔形得到充分调整。</strong></font><br><font color="black"><strong>从K线21到K线25的上涨可能足以让交易者认为充分的两段式调整已经结束,但市场接下来继续向上突破,截至K线27出现3根K线的急速拉升。</strong></font>实际上,<font color="green"><strong>在从K线17到K线25的上升通道中,空头一直无法制造一波有力的向下突破,一直没有出现明确的两段式向下调整。</strong></font><font color="orange"><strong>在第一波上涨之后未能出现明确的回调,说明多头力量很强。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第24章 反转交易日<br>第2个案例（图 24.2）<br>第365-366页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-反转交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24.01.强趋势可能失败</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-01-qiang-qu-shi-ke-neng-shi-bai/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-01-qiang-qu-shi-ke-neng-shi-bai/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc24%2FSlide1.JPG" alt="图 24.1 强趋势可能失败"></p><blockquote><p><font color="red"><strong>强趋势可以从一天任何时间开始,即便当天最初为一轮相反方向的强趋势。</strong></font>如图24.1所示,<strong>市场当天第一个小时走出一轮剧烈的两段式上涨,随后以窄幅通道向下测试均线。接下来市场横盘2个多小时,最终在K线9向下突破进入一个更低的区间。最后一个可以获利的买点是上午8点50分(PST时间)的K线5。如果你继续刮头皮做多,最终将会意识到自己每笔交易都是亏钱的,而这恰恰说明市场正处于下跌趋势之中,只是你没有看到或者看到了但不愿相信。</strong><br><strong>市场出现回撤是因为多头锁定利润。为何交易者会在趋势如此强劲的情况下锁定利润呢?</strong><font color="black"><strong>因为无论趋势多么强劲,市场都可能会出现深度回撤(可以让交易者在低得多的位置再次入场),有时候趋势还可能反转。如果他们不至少先锁定部分利润可能会眼睁睁看着一大笔利润消失甚至转为亏损。</strong></font></p><p>本图的深入探讨</p><p>在图24.1中,<font color="black"><strong>市场开盘突破了前一天最后一个小时形成的交易区间。第一根K线出现长上影线,说明卖家力量较强,因此在其上方买入风险较大。市场连续上涨6根K线,然后在K线2急剧向下反转(可能是因为7点钟的经济数据)。</strong></font><font color="green"><strong>市场在经济数据公布前表现出强劲上升动能,并无见顶或买入高潮的迹象,因此在这轮上涨的最后一根K线下方做空是不明智的。这是一轮始于开盘上升趋势的首次回撤,属于买入形态。不过,K线2急速下跌的力度有些超乎寻常,不太符合上升趋势交易日的特征。</strong></font><br><font color="green"><strong>K线3低点(K线2底部)与K线1低点有可能构成一个双底。</strong></font><font color="orange"><strong>在跳空高开的情况下,市场经常会测试开盘第一根K线的低点,然后展开一轮上升趋势。</strong></font><font color="black"><strong>由于开盘区间高度超过近期日均波幅的30%,不算一个太好的突破模式建仓形态。向上突破之后走出强劲、持续趋势的可能性较低。即便市场最终形成上升趋势交易日,也可能是较弱的类型,比如趋势性交易区间交易日。</strong></font><font color="green"><strong>K线3后面的双内包形态(i)是不错的做多信号,但由于市场不太可能走出强劲上升趋势,多头应该在实现2~4个点浮盈之后至少先锁定一半利润。而且,K线3急速下跌也可能在回撤之后跟随个下跌通道。</strong></font>在这里,<font color="black"><strong>K线4的抬升高点为回撤过程。K线4前一根K线和往前第三根K线都属于买入高潮K线。</strong></font><font color="orange"><strong>连续的买入高潮往往会造成至少两段式调整,持续大约10根K线。</strong></font><font color="green"><strong>由于当天并非明确的上升趋势交易日,而且K线3曾发生强劲抛盘,这根反转K线是一个可接受的低2做空形态。</strong></font><br><font color="black"><strong>截至K线5的回撤跌破了上升趋势线,K线6高点下降为持续到收盘的下跌趋势埋下了伏笔。</strong></font><font color="green"><strong>K线6是一波两根K线急速下跌的第一根K线,提醒交易者接下来可能进入一个下跌通道。K线5前一根K线以及K线3大阴线都属于急速下跌。</strong></font><font color="black"><strong>在下跌通道运行过程中,还有其他一些急速下跌K线。另外,在K线8前一根K线之后,市场一直无法收盘站上均线。这些信号都说明空头力量较为强大。</strong></font><br><strong>在大部分强劲趋势通道中,摆动交易比刮头皮更容易获利</strong>,<font color="green"><strong>因为频繁的回撤往往会扫掉哪怕是顺势刮头皮头寸的止损(比如K线8和K线10的卖点),造成亏损。最好的方法是跟踪止损,随着市场下跌将止损移动到上一个摆动高点上方。</strong></font><br><font color="green"><strong>K线9急速下跌走势突破了上方交易区间,然后以一轮完美的等距下跌运行到收盘。</strong></font><font color="black"><strong>K线9构成一个突破缺口(上方区间底部与K线10突破回踩之间的缺口)。缺口的中线也刚好是从K线4到收盘前最低点下跌行情的中间位置。</strong></font><br><strong>在日线上,当天的行情可能是一根实体很短、带长上影线的十字星K线。</strong><font color="green"><strong>如果它出现在日线图上可能发生向下反转的区域,可以是一根很好的做空信号K线。</strong></font><br>请注意,<font color="green"><strong>市场在K线5和K线9之间不断形成高点下降和低点下降,暗示市场可能正处于一轮下跌趋势之中。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第24章 反转交易日<br>第1个案例（图 24.1）<br>第363-365页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-反转交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24.00.02.反转交易日</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-00-02-fan-zhuan-jiao-yi-ri/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-00-02-fan-zhuan-jiao-yi-ri/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="orange"><strong>某些最强劲的趋势行情是从盘中或者尾盘开始的。有时候它们始于交易区间突破或者高潮性趋势反转(通常是消息推动的,但这并不重要)。</strong></font><font color="red"><strong>无论哪种情况,市场都可以进入大趋势行情,中间只有很小的回撤。市场会出现重叠度很低、影线很短的多根长趋势K线。这属于突破走势,将造成市场"始终入场"的方向明确逆转。</strong></font><font color="green"><strong>在这种情况下,你必须快速入场,并将大部分头寸参与摆动,哪怕走势看起来属于高潮、已经过度涨跌(的确已经过度,但市场的过度行为还可能持续很长时间)。你应该用非常激进的手法来交易这种急速突破行情,确保自己至少持有一个较小头寸,因为行情可以持续非常久。</strong></font>如何交易强势突破将在第二本书关于突破的章节有详细论述,反转则在第三本书细讲。<br><font color="orange"><strong>在其他情况下,市场先走出趋势性行情,然后进入回调,但回调走势不断延伸,最终成为相反方向的一个趋势通道。</strong></font><font color="red"><strong>在通道开始之前,市场几乎总是会出现至少一波逆势急速运动。因此每当你看到回调走势出现强劲的逆势急速运动,须警惕趋势可能正在反转。</strong></font>举例而言,<font color="black"><strong>假如市场头1~2个小时出现一轮强劲下跌,你预计接下来会出现一轮回踩均线的两段式反弹,但反弹以一根非常强势的多头趋势K线开始,那么你就应该考虑到这根K线有可能属于急速上涨,接下来将会走出一个持续的上升通道,而不是一个小型熊旗。到交易日结束,这一回撤可能会延伸到超越之前的下跌趋势,在日线图上收出一根多头反转K线。</strong></font><font color="green"><strong>如果你较早意识到这种可能性,就应该只考虑做多,反之,如果一味地希望市场恢复头一个小时的下跌趋势,你的做空交易一定会亏钱。</strong></font><font color="red"><strong>许多此类交易日可以归为其他类型的趋势交易日,通常是趋势性交易区间交易日。实际上,大部分反转交易日都是从趋势性交易区间交易日开始的。</strong></font><strong>反过来,对于开盘后的上升趋势反转为持续的下降通道,原理也是一样的。</strong></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第24章 反转交易日<br>第362-363页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反转交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24.00.01.反转交易日的主要特征</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-00-01-fan-zhuan-jiao-yi-ri-de-zhu-yao-te-zheng/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/24.fan-zhuan-jiao-yi-ri/24-00-01-fan-zhuan-jiao-yi-ri-de-zhu-yao-te-zheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>反转交易日的主要特征:</p><ul><li><font color="red">交易日先出现某个方向的趋势,然后进入相反方向趋势直到收盘。</font></li><li><font color="red"><strong>大部分情况下都始于趋势性交易区间交易日。</strong></font></li><li><font color="red"><strong>如果反转发生在最后两个小时而且走势强劲,反转走势通常会延续到第二天甚至后面数天。</strong></font></li></ul></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第24章 反转交易日<br>第362页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反转交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.11.强劲下跌交易日中的双顶</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-11-qiang-jing-xia-die-jiao-yi-ri-zhong-de-shuang-ding/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-11-qiang-jing-xia-die-jiao-yi-ri-zhong-de-shuang-ding/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide11.JPG" alt="图 23.11 强劲下跌交易日中的双顶"></p><blockquote><p><font color="red"><strong>始于开盘的趋势在强劲趋势启动前可以出现双顶或双底。</strong></font>如图23.11所示,<font color="black"><strong>K线7试图引发一轮始于开盘的下跌趋势,但上午7点(PST时间)的一份经济数据使得市场向上测试高点。这种情况十分常见。</strong></font><font color="red"><strong>虽然市场截至K线9形成一个小型交易区间,你必须总是考虑到这种可能性:市场在释放下跌动能之前只是在等待经济数据。</strong></font><br><font color="green"><strong>当天开盘区间的高度不及近期日均波幅的1/3,使得市场处于突破模式。当市场在第一根K线之后急速下跌又急速拉升(向下反转再向上反转),部分交易者将会在突破时入场,预期交易日波幅将扩大数倍。</strong></font><font color="black"><strong>市场跌破K线7双K线反转之后,K线7反转K线就成了一个摆动高点。市场站上K线8之后,K线8就成了一个摆动低点和向上反转。</strong></font><font color="green"><strong>这些交易者会在K线7顶部上方1个最小报价单位挂买单,在K线8底部下方挂卖单。一旦K线9站上K线7高点使买单成交,他们将会把K线8下方的卖出挂单加大一倍。当市场跌破K线8,他们的多单将被止损,空单将获得成交,从而反手做空。</strong></font><strong>这是这种形态常规的操作手法,不过通常还可以更激进一些。</strong><font color="green"><strong>更好的方法是在K线7双K线反转下方做空,锁定部分刮头皮利润,然后收紧保护性止损。下一步,交易者可以在K线8(均线处的高2)反手做多。同样,锁定部分多头刮头皮利润,收紧止损。接着在K线9外包阴线下方反手做空,因为这根K线造成部分多头被套,而且它正在与K线7构成双顶熊旗。交易者同样可以锁定部分刮头皮利润、收紧止损,剩余头寸参与摆动,直到出现明确的买入信号。如果买入信号没有出现,他们可以一直持有空头到收盘。如果他们在K线15、18或21低点买入,在锁定利润后必须反手做空。做不到反手的话,他们应该要么继续持有空头,要么平多后借反弹重新开空。</strong></font><br><strong>虽然交易日由一个小型交易区间开始,部分交易者可能认为属于趋势性交易区间交易日或者下跌趋势恢复交易日</strong>,<font color="black"><strong>但由于回撤幅度都非常小,我们所面对的实际上是一轮非常强劲的下跌趋势。</strong></font><font color="green"><strong>在这种行情中,我们需要确保自己在交易日大部分或全部时间里都持有空头。如果将其视为趋势性交易区间交易日,你可能会去做多,往往错失做空机会。</strong></font><font color="black"><strong>从K线15开始的反弹幅度约为K线9启动下跌趋势之后前面回撤幅度的两倍。当天虽然不是典型的小幅回撤趋势交易日(这种交易日往往要到尾盘,比如PST时间上午11点之后才会出现回撤扩大),但依然属于强劲下跌趋势交易日。</strong></font></p><p>本图的深入探讨</p><p>在图23.11中,<font color="green"><strong>K线11、13和15构成一个楔形,但由于市场已经有大约20根K线没有触到均线,而且下跌通道很窄,因此楔形可能仅造成价格回踩均线,而空头将会在均线附近大举做空。</strong></font><strong>多头成功组织起一轮两段式上涨,持续到K线17(均线缺口K线)。</strong><font color="orange"><strong>下跌趋势中的第一根均线缺口K线往往会引发最后一轮下跌,然后才能出现幅度更大的反弹。</strong></font><br><font color="orange"><strong>由于截至那根均线缺口K线的上涨几乎肯定会突破一根重要的下降趋势线,因此接下来对下跌行情低点的测试(以低点抬升或低点下降的方式)通常会引发一轮持续的向上调整甚至反转。</strong></font><strong>市场试图在K线18以及截至K线21的小楔形向上反转。</strong><font color="black"><strong>截至K线22是一波强劲的两根K线急速拉升,造成多头被套、空头被震仓</strong></font>,<font color="orange"><strong>然而老练的交易者知道在趋势交易日中市场往往会在上午11点(PST时间)之后出现强劲的逆势运动,因此随时准备在其失败后做空</strong></font><font color="green"><strong>(比如K线24的小型双顶)。这一做空形态的信号K线是一根内包阴线,K线22和24还与K线17构成一个更大的双顶熊旗。截至K线25的急速下挫之后是两根强多头趋势K线,构成K线26突破回踩卖点,可以抓住收盘前最后一波下跌行情。</strong></font><font color="black"><strong>K线25是一个三角形扩散底部(3个低点是K线18、21和25)的信号K线,但这个底部最终失败,K线26反而成为突破回踩做空形态的入场K线。</strong></font><font color="orange"><strong>失败的楔形往往会引发等距下跌</strong></font>,收盘前的下跌大致接近这一目标。<br><font color="black"><strong>这使得交易日成为趋势恢复交易日截至K线13的走势为初始下跌,然后进入持续几个小时的交易区间(截至K线24),收盘前走出第二轮下跌。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第11个案例（图 23.11）<br>第359-361页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.10.强趋势中的建仓形态往往很弱</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-10-qiang-qu-shi-zhong-de-jian-cang-xing-tai-wang-wang-hen-ruo/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-10-qiang-qu-shi-zhong-de-jian-cang-xing-tai-wang-wang-hen-ruo/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide10.JPG" alt="图 23.10 强趋势中的建仓形态往往很弱"></p><blockquote><p>图23.10是一个<strong>始于开盘的上升趋势交易日,如此明确的趋势为何交易起来非常困难?</strong><font color="red"><strong>因为大部分顺势入场点看起来都很弱,同时市场出现大量小幅回撤,诱使交易者过早出场。所有这些回撤都没有扫到2个点的金额止损位(强趋势中的最佳止损策略)。</strong></font><font color="orange"><strong>市场出现如此多横向震荡的小K线,导致根据价格行为所设置的止损被频繁触发,这就使得坚持最初的2个点止损更具合理性。在如此强劲的上升趋势中,你需要想尽一切办法持有多头仓位。</strong></font><font color="red"><strong>强势而顽固的趋势通常由大量带影线和高度重叠的小K线所组成,但回撤幅度非常小,基本为横向调整。</strong></font><br><font color="orange"><strong>在大幅高开的情况下,市场走出上升或下跌的趋势性交易日的可能性很大,而像本例这种巨型缺口更可能引发上升趋势。</strong></font><font color="green"><strong>由于头几根K线没有出现抛压,有可能形成始于开盘的上升趋势,交易者必须找机会做多。</strong></font><strong>市场全天稳步上涨,原因是机构需要建立多头头寸,但他们会在整个交易日分批买入,因为他们害怕期待中的回调不会出现。他们的持续买入使得市场无法出现深度回撤。</strong><font color="black"><strong>他们之所以不愿一次性全部买入,是因为这样做将造成耗竭性买入高潮,可能造成剧烈反转并大幅跌破他们的买入价。</strong></font>而且,<strong>在市场上涨过程当中,随着投资者信心增强,机构全天会不断接到买入指令。</strong></p><p>本图的深入探讨</p><p>在图23.10<font color="green"><strong>这种强劲趋势中,你可以以任何理由在任何时间买入。在回调K线上方买入较为稳妥,但也可以在前一根K线低点或其下方挂限价单买入。在这种行情中,在任何K线下方做空都是错误的策略。</strong></font><strong>如果你非要做空,应该只在K线上方或强趋势K线收盘时做空。当交易日如此强劲,大部分交易者都不应该做空,因为它可能造成干扰,导致你错过买入机会。这些买入机会属于强趋势中的摆动交易,因此比刮头皮更容易获利。</strong><br><font color="black"><strong>K线3是一波两根K线急速拉升的第一根K线,随后市场以窄幅交易区间进入横向震荡,然后开始通道性上涨。</strong></font><font color="orange"><strong>最强劲的趋势倾向于不停地产生反转形态,但看起来似乎总是不太对劲。</strong></font><strong>冒进空头不停地落入陷阱,以为小K线意味着风险(止损)很小,但在亏损4~5次之后,他们当天已经注定亏损,要追平几乎不太可能。我们不能仅仅因为风险很小就参与一笔交易,还需要考虑成功率和利润目标。</strong><br><strong>空头将K线5、7、9看成三连推形态(楔形的变体),将K线7、9、10也看成另一个楔形。</strong><font color="orange"><strong>然而当楔形的调整为横向而非下跌,你应该判断出趋势非常强劲,停止寻找反转,只做顺势交易。</strong></font><br><font color="black"><strong>K线14恰好是联储公布利率决议的时间,市场先是迅速跳水,但立即向上反转,最低点高于K线5高点1个最小报价单位。</strong></font><br><strong>尾盘市场出现了几波两根K线的拉升</strong>(K线16、K线17、K线21为这些两根K线拉升走势的第一根K线)。<br><strong>这种强劲趋势往往全天不断出现反转形态,但这些建仓形态总是不太对劲,几乎总是会失败。</strong><font color="black"><strong>截至K线9的楔形位于一个几乎完全由多头趋势K线所构成的上升通道之内。市场连续两个多小时没有触到均线。这说明多头力量很强大,做空胜算不高。K线10刺破趋势通道线,但收出一根阳线。而且,通道非常窄,市场在前面并未表现出空头动能。</strong></font><font color="orange"><strong>在强趋势行情中,你只能在二次信号做空,而且前面必须表现出空头动能,比如5~10根K线的测试均线的回撤。</strong></font><strong>不具备这个条件,任何做空都相当于赌市场突然无缘无故地改变全天的行为模式。</strong><font color="black"><strong>全天最大的回撤仅9个最小报价单位。如果你在某根K线下方做空,价格从你的入场点下跌5单位之后,你需要市场再下跌5单位才能获得1个点的刮头皮利润。由于市场一直在频繁发生回撤,而回撤幅度从未超过9单位,所以你的空头交易成功率是非常低的。</strong></font><font color="orange"><strong>只有在成功率达到60%或更高的情况下,你才能够冒6个甚至7个单位的风险,刮取1个点的利润</strong></font>,<strong>所以这里是不能做空的。你也许会说,截至K线12的走势突破了上升趋势线,因此K线13的抬升高点是一个可接受的做空点。</strong><font color="black"><strong>但均线就在价格下方6单位,市场一直还没有回踩均线,因此在均线处一定会迎来买盘。而且,K线13是连续第五根阳线,在上升动能如此强劲的情况下,显然不宜做空。</strong></font><br><font color="red"><strong>在大部分强趋势交易日,市场往往会在上午11点和中午之间(PST时间)出现剧烈、短暂的反转,将弱势多头震仓出局,并套住那些希望挽回之前亏损的冒进空头。</strong></font><font color="orange"><strong>这种走势通常受消息触发,不过这不重要。重要的是它通常会构成买入机会,只要你不被市场的急速下跌所吓住。</strong></font><br>在本例中,联储议息声明在上午11点15分公布。<strong>消息公布后,K线14一度呈现出大阴线的外观。但如果你在这根K线收盘之前做空,以为消息将促使市场进步大跌,那么你就违背了</strong><font color="red"><strong>一条重要纪律:应该等待K线收盘,因为这根K线在4分钟时是一根大阴线,收盘时可能变成一根十字星甚至多头反转K线。</strong></font><br><font color="green"><strong>K线16是出现在从K线14低点到K线15高点上涨走势之后的一个抬升低点,接下来的K线17构成一个突破回踩做多入场点。</strong></font><font color="black"><strong>所有急速行情都应该同时被视为高潮和突破</strong></font>,<font color="green"><strong>从K线16开始的两根K线急速拉升是一次突破,相应地K线17就是一次突破回踩。</strong></font><br><font color="black"><strong>K线19是一个双顶熊旗,但市场前面没有出现强势下挫走势,因此市场在K线17急速拉升之后更有可能只是横向调整。</strong></font><br><font color="green"><strong>K线20是一根多头反转K线和高2买点,K线21(入场K线的后一根K线)跌破入场K线低点,将部分多头震仓出局。由于入场K线仅突破K线20高点1单位,保护性止损应该设在K线20信号K线下方,不要过早收紧止损。</strong></font>正如前面所言,<font color="black"><strong>强趋势交易日会有各种把戏让多头过早退出、空头过早做空。空头必须回补空头头寸,增加了市场买压,而且至少在接下来1~2根K线不会继续做空。他们刚刚出现亏损,需要休整一下才会再次寻找做空机会。</strong></font><strong>那些刚刚被震仓出局的多头将会追高买入,使得市场上升动能进一步增强。</strong></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第10个案例（图 23.10）<br>第356-359页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.09.始于开盘的趋势发生反转</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-09-shi-yu-kai-pan-de-qu-shi-fa-sheng-fan-zhuan/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-09-shi-yu-kai-pan-de-qu-shi-fa-sheng-fan-zhuan/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide9.JPG" alt="图 23.9 始于开盘的趋势发生反转"></p><blockquote><p><font color="red"><strong>并非所有始于开盘的趋势交易日都会成为与初始趋势同向的强劲趋势交易日。</strong></font>在图23.9中,<strong>交易日开盘后走出一段下跌趋势。当天开盘跳空跌破前一天的低点,但立即出现回撤,几乎完全回补缺口。</strong><font color="green">**K线1是一个突破回踩做空建仓形态。**市场连续下跌5根K线,**在K线3构成首次回撤做空形态,但接下来进入窄幅交易区,并未立即触发卖点。**虽然可以做一笔刮头皮,<strong>市场在K线4的拾升低点向上反转。</strong></font></p><p>本图的深入探讨</p><p>在图23.9中,<font color="green"><strong>K线1是开盘跌破前一天收盘前交易区间后的突破回踩做空建仓形态。</strong></font><font color="orange"><strong>截至K线2的初始跌势幅度约为12点,相当于近期日均波幅。一旦市场反转站上开盘高点、向上突破,接下来很可能出现等距上涨。有时候等距上涨幅度相当于当天开盘到当天低点的距离,然后在收盘时返回开盘价附近,从而在日线上构成一根十字星。在其他情况下,等距上涨幅度相当于整个初始下跌行情的高度。</strong></font><strong>图中当天最高点K线17仅低于等距运动目标3个最小报价单位。向上反转超越开盘区间的走势在日线上构成一根长下影线。</strong><font color="orange"><strong>当市场从一个大开盘区间的等距上涨目标附近转跌,通常情况下都会跌回原形,收于区间中部。</strong></font>本例即是如此。<br><font color="green"><strong>从K线4到K线5的急速拉升也可用作等距运动目标的计算,不过实际上并未如此发生,而是按照"第一波=第二波"的原理发生的。</strong></font><font color="black"><strong>第一波是从K线4到K线5.第二波是从K线6低点到K线17高点。截至收盘的下跌还测试了急速上涨之后上升通道的起点K线6。</strong></font><br><font color="black"><strong>市场从K线15开始出现两根K线的急速下挫,随后发生回撤并在K线17形成高点拾升。</strong></font><font color="orange"><strong>有时候急速下跌之后的回撤可以形成高点拾升,但这种情况下,通常回撤结束之后还会再出现一轮急速下跌。</strong></font>在这里,<font color="black"><strong>K线17后面那根长内包阴线就是急速下跌,从K线18开始的下跌构成第二轮急速下跌。截至K线13的3根K线下跌也是一波急速行情,因此有可能对后面最终出现的下跌行情产生了一些影响。</strong></font><font color="orange"><strong>当市场开始形成多根空头趋势K线,卖压将开始累积,往往最终战胜多头</strong></font>,本例也是如此。</p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第9个案例（图 23.9）<br>第355-356页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.08.开盘为交易日最高点</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-08-kai-pan-wei-jiao-yi-ri-zui-gao-dian/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-08-kai-pan-wei-jiao-yi-ri-zui-gao-dian/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide8.JPG" alt="图 23.8 开盘为交易日最高点"></p><blockquote><p><font color="red">有时候,始于开盘的下跌趋势会开在当天最高点。</font>在图23.8中,<font color="black"><strong>K线12是当天第一根K线,开在最高点并向下突破了前一天收盘前形成的楔形。</strong></font><strong>大部分交易者都没有那么快的反应速度,能够在前一天收盘的那根内包K线下方卖出</strong>,<font color="green"><strong>不过在第一根K线收盘时开一个小的空仓是合理的。<strong>如果你错过了第一个入场点,可以在1分钟图上的小幅回撤中卖出,或者</strong>等待5分钟图出现做空建仓形态。当市场出现始于开盘的下跌趋势,在第一次回撤时卖出属于高概率的交易。</strong></font><strong>不过交易者在实际操作中往往有一定心理障碍</strong>,就本例来讲,<font color="black"><strong>这相当于在一轮大幅下跌行情的低点附近卖出。</strong></font><font color="green"><strong>K线15是首次回撤做空机会的信号K线,同时回撤走势刚好在均线下方向下反转。由于空头迫切想要人场,所以并没有等市场真正测试均线,而是在均线下方卖出。</strong></font><font color="black"><strong>在市场连续走出5根阳线之后,部分交易者可能不敢做空。</strong></font><font color="green"><strong>但这些阳线实体都很短,而且是一轮急速下跌之后的第一次回撤,因此属于可靠的低1做空形态。它也是对均线的测试,并与K线13高点构成双顶熊旗。</strong></font><br><font color="black"><strong>当天行情成为一轮急速与通道下跌趋势,通道部分从K线15(以及K线17)开始,在K线19结束。尾盘出现反弹,并未收于当天低点。</strong></font></p><p>本图的深入探讨</p><p>与大部分交易日一样,图23.8中<strong>还存在其他的急速与通道行为。</strong><font color="black"><strong>K线12与其后一根K线构成急速下跌,K线13以及K线14前一根K线亦然,截至K线14的整轮下跌也是急速行情。K线15后面两根K线也构成急速下跌,从K线17的低2开始进人下跌通道,在K线19结束。</strong></font><br><font color="black"><strong>K线16也是对突破K线14和K线1低点走势的一次突破回踩。它非常接近于突破前一天的低点,因此可以表现得像实际突破之后的回撤(交易中只需要近似就够了)。</strong></font><strong>空头做空的迫切性使得第一次回撤未能触到均线。他们担心反弹可能到不了均线,所以以价格无法达到均线目标这一假设为前提大规模做空。当回撤走势在均线下方掉头向下,空头变得非常激进、迫切感更强了。他们急切想要做空,哪怕在相对较低的位置,因此市场可能进一步下跌。</strong><br><font color="black"><strong>K线19属于急速拉升,随后的通道性上涨阶段从K线20拾升低点开始。K线20后面那根K线也属于急速拉升,引发截至K线21的3根K线上升通道。</strong></font><br>市场前一交易日也存在急速与通道形态,<font color="black"><strong>比如截至K线2的急速拉升以及从K线3或K线5开始的通道性上涨。从K线5到K线6的走势也是急速行情,以及K线7前面那根K线。二者的通道部分均从K线8低点开始。从K线5到K线7的整个上涨行情在较高时间级别上可能也对应一波急速拉升。</strong></font><br><font color="green"><strong>前一天收盘前的上升通道刺破了趋势通道线(根据连接K线5和K线9的上升趋势线画平行线而成)。当市场在K线12(当天第一根K线)返回通道之内、接下来至少会测试通道下轨。下一个目标是根据通道高度测量的等距下跌,再下一个目标则是前一天通道的起点,即K线8低点。由于截至K线11的上涨呈楔形、市场测试了楔形起点下方的位置,因此下一个目标是等距下跌。</strong></font><strong>用K线11的高点减去K线8的低点得出楔形高度,然后用楔形起点K线8低点减去这一幅度。</strong><font color="black"><strong>这一目标在市场跌破K线17低点时被超越。</strong></font><br><font color="green"><strong>K线19是市场第二次突破下降趋势通道线(连接K线15和K线17高点趋势线的平行线)之后向上反转,因此可能出现两段式反弹。</strong></font><strong>K线18试图在小幅探破趋势通道线之后反转,但市场一直没有站上双K线反转的高点,因此并未触发做多入场点。</strong><br><font color="green"><strong>我们必须意识到,虽然前一天收盘前形成楔形顶部,但依然属于一轮强劲的上升趋势。这使得交易新手在当天开盘后期待市场延续升势,而否认不断展开的反转走势。</strong></font><font color="red"><strong>虽然有时候某种判断似乎显而易见,但我们永远要想到它的反面,因为它将会有40%的可能性发生。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第8个案例（图 23.8）<br>第353-355页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.07.跳空交易日第一根K线往往指示趋势方向</title>
      <link href="/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-07-tiao-kong-jiao-yi-ri-di-yi-gen-k-xian-wang-wang-zhi-shi-qu-shi-fang-xiang/"/>
      <url>/2023/07/07/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-07-tiao-kong-jiao-yi-ri-di-yi-gen-k-xian-wang-wang-zhi-shi-qu-shi-fang-xiang/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide7.JPG" alt="图 23.7 跳空交易日第一根K线往往指示趋势方向"></p><blockquote><p>在图23.7中,<strong>市场以中等缺口跳空下跌。</strong><font color="black"><strong>K线3是第一根K线,为空头趋势K线,有可能成为一轮始于开盘的下跌趋势的起点。市场反转前一交易日摆动低点K线2的尝试失败,因此可能测试前一天的下一个支撑位,也就是K线1的低点。</strong></font><font color="green"><strong>交易者将会在K线3低点下方1个最小报价单位处挂单做空。一旦跌破前一天的低点市场就有可能再次试图向上反转,至少是短暂地,因此交易者将会在第一根较佳的信号K线上方1单位挂单做多。</strong></font><font color="black"><strong>部分交易者将会在K线4上方买入,但它是一根空头趋势K线,收于振幅中位之下,更安全的做法是等下一根K线收盘,看是否会出现更好的形态。</strong></font><font color="green"><strong>第二根K线是一根实体长度不错的阳线,与K线4构成双K线反转。入场点在其高点上方。</strong></font>一般来讲,<font color="black"><strong>在多头趋势K线上方买入总是更安全一些,尤其在逆势交易的时候。</strong></font><br><font color="green"><strong>如果买单没有成交,下一根K线形成低点下降,交易者将会尝试在其高点上方买入,希望市场对前一天低点的突破出现失败,形成开盘反转。然而如果市场进步大幅下跌,而没有出现好的买入形态,交易者应该只考虑做空,可以等反弹突破某根趋势线之后。</strong></font><br><font color="black"><strong>市场出现两段式上涨,测试均线,站上了当天最高点,并构成均线处的一个双顶熊旗。突破K线4的那根长多头趋势K线紧跟着一根阴线,不是太理想,意味着市场可能形成交易区间而非上升趋势。</strong></font><strong>市场一直在交易区间震荡,直到中午时分。</strong><font color="orange"><strong>在这个时点,区间宽度大约为日均波动区间的一半。这提醒交易者市场可能发生突破,让波动区间大约扩大一倍,形成趋势性交易区间交易日。</strong></font><font color="green"><strong>突破走势从始于K线10的急速下挫开始。</strong></font>图上没有显示当天尾盘的行情,实际上<font color="orange"><strong>市场尾盘强势向上反转并收于始于K线7的窄幅交易区间范围之内。这种情况在趋势性交易区间交易日经常发生。窄幅交易区间具有磁力,倾向于在市场突破之后又将其拉回去。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第7个案例（图 23.7）<br>第352-353页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.06.缺口可引发上升趋势或下跌趋势</title>
      <link href="/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-06-que-kou-ke-yin-fa-shang-sheng-qu-shi-huo-xia-die-qu-shi/"/>
      <url>/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-06-que-kou-ke-yin-fa-shang-sheng-qu-shi-huo-xia-die-qu-shi/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide6.JPG" alt="图 23.6 缺口可引发上升趋势或下跌趋势"></p><blockquote><p>图23.6中显示了<strong>3个连续的开盘缺口,虽然3天第一根K线都是空头趋势K线,结果却各不相同。K线1和K线9同时也是日线图上的开盘缺口。</strong><br><font color="green"><strong>K线1没有上影线,下影线极短,为长空头趋势K线,属于大幅跳空高开交易日的极佳做空形态。紧接着的入场K线也是一根长阴线。</strong></font><font color="orange"><strong>如果交易日第一根K线是强趋势K线(见嵌图),通常会出现延续性走势,如果前两根K线都很强劲,那么向上反转的尝试往往会形成高点下降</strong></font>,本例即是如此。<font color="orange"><strong>当市场跳空高开之后遭遇强劲抛盘,往往会成为始于开盘的下跌趋势交易日。</strong></font><font color="black"><strong>截至K线3是一轮强劲反弹,测试开盘价位,但这次失败的开盘反转造成一个高点下降或者双顶,然后进人一轮漫长的下跌。K线2是尝试对突破前一天高点的走势构成突破回踩,但空头力量过于强大,反弹在K线3失败。</strong></font><br><font color="black"><strong>K线6往后两根K线是一根强多头反转K线,也是在开盘的空头趋势K线跌破前一天最后两个小时上升通道之后的开盘反转。</strong></font><font color="green"><strong>上升通道相当于熊旗,那么这根多头反转K线就是试图让突破旗形的走势归于失败。</strong></font>在本例中,<font color="orange"><strong>在开盘第一根K线下方做空风险很高,虽然它是一根空头趋势K线,但位于前一天尾盘交易区间的底部附近,而在交易区间底部做空往往是失败的策略,尤其在缺乏明确方向的市场中(交易区间)。</strong></font><br><font color="green"><strong>截至K线7的强劲上涨测试了前一天的收盘,并形成一个高点下降或双顶。那根阴线信号K线使其成为一个不错的做空机会。</strong></font><strong>多头锁定利润造成市场回调。为什么在趋势如此强劲的情况下,交易者还会锁定利润呢?</strong><font color="black"><strong>因为无论趋势如何强劲,市场都可能发生深度回撤,让交易者能够在更好的价位再次人场,有时候趋势还会反转。</strong></font><strong>如果他们不先至少锁定部分利润,就有可能眼看着一大笔利润消失甚至转亏。</strong><br><font color="black"><strong>K线9跳空低开并跌破前一天的最低点,形成一根空头趋势K线,但上下影线都较长,说明交易者在这根K线收盘前买进。第二根K线是一根阴线,收于最低点,意味着空头非常强势,但紧接着又出现一根强多头趋势K线,从而构成反转。虽然买点并未被触发,但至少说明空头并无杀跌的迫切欲望。</strong></font><font color="green"><strong>在缺口如此之大的情况下,所有人都知道市场已过度下跌,如果不能立即出现延续性跌势,市场将会迅速反转、以化解这种极端状况。</strong></font><br><font color="black"><strong>K线10是一根长空头趋势K线,因此属于卖出高潮。下一根K线为内包K线,使得市场处于突破模式。</strong></font><font color="green"><strong>如果市场不立即出现延续性跌势,空头将会开始大规模回补空头头寸,打算在较高位置再卖出;多头也将买人,希望自己买在当天最低点。</strong></font><font color="black"><strong>市场已经在一个大的下跌通道运行数天,并处于通道底部,因此很有可能向上反转,而突破通道下轨、进入更陡峭下跌趋势的概率则较低。</strong></font>通道没有画出来,下降趋势线可以连接K线1和K线7的高点而成,下降趋势通道线可以大致连接K线4和K线8的低点画出来。<font color="green"><strong>多头还会在阳线上方买人,比如K线10前面那根阳线,以及K线10往后数两根K线的那根阳线。他们还会在K线12后面那根内包小阳线上方买人(失败的低2)。</strong></font><font color="black"><strong>由于市场可能已经从当天低点以及一个持续两天的牛旗(下降通道相当于牛旗)向上反转,因此这是一个不错的买点。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第6个案例（图 23.6）<br>第350-352页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.05.开盘第一根强势K线可能是骗入的</title>
      <link href="/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-05-kai-pan-di-yi-gen-qiang-shi-k-xian-ke-neng-shi-pian-ren-de/"/>
      <url>/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-05-kai-pan-di-yi-gen-qiang-shi-k-xian-ke-neng-shi-pian-ren-de/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide5.JPG" alt="图 23.5 开盘第一根强势K线可能是骗入的"></p><blockquote><p><font color="red"><strong>有时候第一根K线可能诱使交易者做错方向,然后交易日成为朝相反方向的强劲趋势交易日。</strong></font>如图23.5所示,<strong>市场当天开盘跳空跌破前一天的低点,并突破了前一天后半部分形成的宽幅交易区间(头肩顶熊旗)。</strong><font color="black"><strong>当天第一根K线(K线9)是多头趋势K线,这种情况往往会造成部分回补缺口的走势甚至形成一轮上升趋势许多交易者在其上方1个最小报价单位处挂单做多。然而两根K线之后市场跌破其低点,造成这些多头被套。这根多头趋势K线之所以造成多头被套、空头踏空,是因为交易者认为它是一个强势信号,预示市场将会试图回补缺口,甚至可能成为上升趋势交易日。这根阳线尝试反转开盘跌破前一天交易区间和趋势通道线的走势。</strong></font><strong>然而在开盘的时候,你必须保持高度灵活,必须假定市场可能出现与你一分钟之前判断完全相反的走势。你必须在其发生之时立即发现它,以尽早入场。</strong><font color="green"><strong>市场试图返回趋势通道线上方,但这一努力归于失败,成为一个突破回踩做空形态。这一双K线突破回踩可能带来某种等距下跌。如果交易日成为趋势交易日,而你错过了最初的入场点,不要焦虑,全天都会有机会入场。</strong></font><br><font color="green"><strong>K线10提供了一个非常好的做空机会,卖点在K线9多头趋势K线低点下方1单位,因为大部分被套的多头都会在这里卖出,从而推动市场下跌。</strong></font><font color="black"><strong>而且,任何潜在的买家都会等待进一步的价格信号,使得市场上只剩下卖家,使之成为高概率的做空机会。空头还会一路在熊旗中加仓,让那些过早入场抄底的被套多头帮助推动市场进一步下跌。</strong></font><br><font color="green"><strong>截至K线11收盘(确认了向下突破走势),交易者确信市场已经彻底转空。许多交易者在K线11前面那根空头突破K线收盘时相信"始终入场"的方向巳转为向下。</strong></font><strong>随后市场出现大量反转尝试,但依然收于最低点。这个例子很好地说明。</strong><font color="green"><strong>当你看到市场走出始于开盘的强劲趋势,至少应该试图让一部分头寸参与摆动。如果你还同时做多,那么在退出多头之后,你必须强迫自己重新回到空头阵营,抓住一个小的做多机会而错过大的做空机会是不划算的。</strong></font></p><p>本图的深入探讨</p><p>在图23.5中,<font color="black"><strong>K线12是一根强多头趋势K线,但它与前面两根K线大致重卺,因此是一个小型交易区间的一部分而非真正的反转K线。</strong></font><strong>反转K线必须放到整体环境下来进行判断,当其与前面的K线重叠度过高,就属于小型交易区间的一部分</strong>,<font color="green"><strong>而在下跌趋势中,在交易区间上方买入是错误的。聪明交易者反其道而行之,在前一根K线(即便其为实体较长的阳线)高点及其上方挂限价空单。</strong></font><br><font color="green"><strong>K线13是一个低2做空形态,但信号K线为小十字星。</strong></font><font color="orange"><strong>十字星属于弱信号K线,而弱建仓形态通常意味着市场尚未准备好突破。不过,在这种强劲下跌趋势中,你可以以任何理由做空,只需要把止损设宽一点。</strong></font><font color="green"><strong>你也可以在K线12或K线11低点下方做空。</strong></font><font color="orange"><strong>在强劲下跌趋势中,你可以在K线低点以及摆动低点下方做空</strong></font>,依然能够获利。<br><font color="black"><strong>K线14是低2失败之后市场向上反转的尝试,因此是第三波向上推动。</strong></font><strong>K线11后面那根十字星是第一波,K线12是第二波。</strong><font color="green"><strong>熊旗中的第三波向上推动构成个楔形熊旗,因此在其低点下方做空是合理的。</strong></font><br><font color="orange">K线14低2失败买入形态告诉我们,<strong>交易者最糟糕的操作之一就是在熊旗中根弱K线上方买入,试图获取刮头皮利润。这种做法不仅造成这笔刮头皮交易亏损,而且会让你陷入多头思维,无法在心理上准备好在市场突破熊旗时做空</strong>,而后者成功率要高得多,而且可能带来一个摆动交易机会而非仅仅是刮头皮。</font><br><font color="black"><strong>K线15突破K线是一根强空头趋势K线,表明空头控制着市场。</strong></font><font color="orange"><strong>当市场出现如此强势的向下突破,通常至少还会出现两波下跌,形成一个下降通道,而这另外的两波下跌往往构成一个楔形牛旗。接下来通常会进入两段式调整</strong></font>,<strong>图中即为K线22回踩均线的反弹走势。</strong><br><font color="orange"><strong>K线22是一根均线处的空头反转K线,以及一个低2卖点。它还是一个20根均线缺口K线做空形态以及楔形熊旗</strong></font><strong>(截至K线19的向上推动是楔形中的第一波上涨)。</strong><br><font color="black"><strong>随后市场继续下跌并创出新低</strong></font>,<font color="orange"><strong>在K线25出现双K线反转。K线25还是对一个单K线末端旗形的向上反转,以及一个形成中交易区间底部的高2买入信号。</strong></font><br><font color="black"><strong>K线27是一根强多头趋势K线,试图构成一次向上突破,但最终与K线22构成双顶熊旗。</strong></font><br><font color="green"><strong>K线28双内包(ii)形态成为一个末端旗形,市场从K线29小型下降高点以及均线缺口K线做空形态向下反转。</strong></font><br><font color="black"><strong>K线30是对下跌行情低点的两段式低点抬升方式的测试。</strong></font><br><font color="green"><strong>跌势反弹在K线35的楔形熊旗结束(K线27和K线33是前两波向上推动)这个高点抬升造成多头被套、空头踏空,也提醒交易者市场可能恢复下跌。交易者注意到K线35未能扫掉K线11下方空头的盈亏平衡止损</strong></font>,<font color="black"><strong>意味着最强势的空头在发力。这些强势空头在K线15强势突破中接管市场,然后在一旁观望,等待市场测试突破位。收盘前他们突然杀将出来,将市场打压至新低。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第5个案例（图 23.5）<br>第348-350页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.04.第一次突破趋势线通常会失败</title>
      <link href="/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-04-di-yi-ci-tu-po-qu-shi-xian-tong-chang-hui-shi-bai/"/>
      <url>/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-04-di-yi-ci-tu-po-qu-shi-xian-tong-chang-hui-shi-bai/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide4.JPG" alt="图 23.4 第一次突破趋势线通常会失败"></p><blockquote><p><font color="red"><strong>在强劲趋势中,判断哪次回调将会成为第一次重大回撤是非常困难的。在这种情况下,你的顺势交易获利的概率非常高,因为回撤很不清晰恰恰说明逆势交易者力量极弱。</strong></font>在图23.4中,<strong>K线2和K线3都是极其微小的回撤,并未突破任何重要趋势线。第一次突破趋势线的回撤是K线4。</strong><font color="red"><strong>首次突破趋势线往往会跟随新一轮趋势行情,因此是极佳的入场点</strong></font><font color="green"><strong>(比如在K线4空头趋势K线下方做空)</strong></font>。例中<strong>当天行情属于始于开盘下跌趋势中的小幅回撤类型趋势。</strong></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第4个案例（图 23.4）<br>第347-348页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.03.小幅回撤交易日是最强劲的趋势类型</title>
      <link href="/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-03-xiao-fu-hui-che-jiao-yi-ri-shi-zui-qiang-jing-de-qu-shi-lei-xing/"/>
      <url>/2023/07/06/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-03-xiao-fu-hui-che-jiao-yi-ri-shi-zui-qiang-jing-de-qu-shi-lei-xing/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc23%2FSlide3.JPG" alt="图 23.3 小幅回撤交易日是最强劲的趋势类型"></p><blockquote><p><font color="red"><strong>当市场走出始于开盘的趋势,所有回撤幅度都低于近期日均波幅的20%~30%,那么当天就属于小幅回撤交易日,属于最强劲的趋势类型。在这种交易日中,尾盘通常会出现幅度约为当天此前回撤150%~200%的回调</strong></font>,图23.3中OIH的走势就是如此。<font color="orange"><strong>所有横盘都属于走势暂停(回调的一种),属于买入形态。</strong></font><font color="green"><strong>K线1的双内包(i)突破是一个不错的入场点,K线3对两段式调整的突破也是一个买点。最后,K线4为窄幅交易区间突破。</strong></font><font color="green"><strong>所有这些入场点都应该被视为第一波上涨的一部分,而非第一次回调(第一次回调发生在第一波上涨之后,为第二波上涨埋下伏笔)。</strong></font><font color="orange"><strong>在少数交易日,市场几乎不回调,迫使交易者在市场突破哪怕非常短暂的横向暂停走势时入场。</strong></font><font color="green"><strong>实际上,在这种强劲趋势交易日中,你可以在任何价位以市价买入,相信即便入场后行情立即反转,市场在大幅回撤之前创出新高的概率也相当高。许多交易者会在多头趋势K线和空头趋势K线收盘时买入,或在前一根K线低点及其下方买入。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第3个案例（图 23.3）<br>第346-347页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.02.小幅回撤上升趋势交易日</title>
      <link href="/2023/07/02/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-02-xiao-fu-hui-che-shang-sheng-qu-shi-jiao-yi-ri/"/>
      <url>/2023/07/02/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-02-xiao-fu-hui-che-shang-sheng-qu-shi-jiao-yi-ri/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts/trends/c23/Slide2.JPG" alt="图 23.2 小幅回撤上升趋势交易日"></p><blockquote><p><font color="red"><strong>始于开盘的趋势是最强劲的趋势交易日类型,而小幅回撤交易日又是最强劲的始于开盘趋势类型。始于开盘的趋势每周出现1~2天,但小幅回撤交易日(见图23.2)每个月仅出现1~2次。</strong></font><strong>Emini近期日均波幅大约为12点,截至K线9当天最大回撤仅为9个最小报价单位。截至K线11的回撤仅为11单位。<strong>聪明多头看到了这种情况,于是<font color="green">在最近高点下方6~10个单位处挂限价买单。他们的初始止损可能是2~3个点。</font><strong>在截至K线17的回调中,市场试图制造一波较大调整,但最终都无法将市场推低14个单位以上。</strong><font color="black"><strong>多头将K线14前面的拉升视为买入高潮,不少多头在这里获利了结。</strong></font><font color="green"><strong>当市场突然拉升,而且急速拉升发生在市场可能发生回调的位置,此时往往是获利了结的良机</strong></font>,可以卖在一个非常好的位置,而这样的机会</strong>稍纵即逝</strong>。<font color="green"><strong>其他交易老手会在K线14收盘及其前一根K线或后一根K线收盘卖空。</strong></font><strong>K线14及其后一根K线均收出上影线,属于卖压信号。</strong><font color="black"><strong>空头预计市场将进入持续大约10根K线的两段式回调,而且几乎肯定会测试均线,因为市场已经在K线9和K线11两次测试均线。</strong></font><font color="green"><strong>在小幅回撤趋势交易日,市场往往会在上午11点(PST时间)之后某个时间出现幅度约为当天前面最大回撤幅度两倍的回调。</strong></font></p><p><font color="green"><strong>K线9上方是一个20根均线缺口K线做多机会,多头在K线8、9、11、13、17和19测试均线时买入。</strong></font><font color="black"><strong>全天都没有出现强劲的卖出信号,但激进空头可能会在K线14后面那根内包K线下方入场做刮头皮空头交易。</strong></font><font color="green"><strong>不过在这种强劲多头趋势交易日中,大部分交易者都会寻求在回调中买入,而非在新高位置做空。</strong></font></p><p><font color="green"><strong>市场从K线2开始出现一轮强劲的急速拉升,然后在交易日剩余时间里走出上升通道。交易者在K线2或后面那根强多头趋势K线感到市场"始终入场"的方向已转为多头。</strong></font><font color="orange"><strong>整个通道大部分都属于一个略微上倾的窄幅交易区间,价格涨幅很小。这种情况在小幅回撤交易日十分普遍。当天最高点仅高于上午8点25分(PST时间)K线5的高点4个点。</strong></font></p><p><font color="green"><strong>与所有强劲趋势一样,例中大部分买入信号K线看起来都很糟糕。</strong></font><strong>这使得多头不敢买入,不断踏空行情,最后不得不追高买进。同时,这也使得空头迟迟不愿回补,直希望出现更好的退出价位,结果造成亏损不断扩大。</strong><font color="black"><strong>市场还出现许多空头趋势K线和急速下跌走势。这种抛压诱使新手不断寻找反转形态,一再错过买入信号。</strong></font>相反,老练的、非情绪化的交易者明白,<font color="red"><strong>在小幅回撤趋势交易日,糟糕的买入信号K线和空头趋势K线恰恰说明上升趋势非常强劲。</strong></font>所以尽管形态很弱,他们依然会买入。<font color="green"><strong>他们将会在K线2突破那根十字星高1信号K线时买入。在K线4向上反转为外包K线时买入(K线4还与7根K线前的多头反转K线构成双底)。他们还在K线8以及后面那根阳线上方的高2买点买入(K线8与后一根K线构成双K线反转)。</strong></font></p><p><font color="green"><strong>K线9是上升趋势交易日中的一个三角形态(K线6和K线8是头两波向下推动),因此属于牛旗买入形态。交易者在收于均线下方的阴线K线11上方买入,因为它是对K线8和K线9双底的1个单位的假突破,同时也是对截至K线10的三角形突破走势的回撤。</strong></font><font color="black"><strong>此时市场处于交易区间,大部分多头都不会在市场向下突破时退出。</strong></font><font color="orange"><strong>他们知道大部分突破尝试都会失败,而上升趋势中大部分交易区间都是牛旗,最终会向上突破。</strong></font><font color="green"><strong>大部分多头要么在K线10后面那根阴线中退出,要么将止损设在最近急速拉升K线的下方。比如说,他们可能将止损设在K线4下方1单位,或者在3根K线后的那根外包阳线下方。</strong></font></p><p><font color="orange"><strong>通常情况下,当市场出现微型下跌通道(比如从K线10到K线11的走势),最好是等突破之后在回踩时买入,但在强劲趋势中,交易者有一种迫切感</strong></font>,<font color="black"><strong>聪明交易者不愿等待那个完美的买点,因为他们不想错过行情。</strong></font><font color="green"><strong>他们还会在K线13后面那根阴线上方买入,尽管阴线属于较弱的做多信号K线。这是一个高2买入形态(K线12后面那根阳线是高1),是对突破从K线10开始的微型下降通道回踩的二次入场点(那个高1是首次入场点)。聪明交易者还会在K线17拉升为外包阳线时再次买入,尽管它前面是一根小十字星和一根长阴线。均线继续成为所有回调走势的支撑。他们在K线17十字星阳线上方买入,以及后面那根阳线上方买入。他们还在K线19后面那根阴线上方买入,因为这也是均线附近的一个小型高2买点。它是一根阴线,第一波下跌由K线18后面那两根阴线所构成。其他交易者将会在K线19上方买入,因为它是强劲上升趋势中回踩均线的一根阳线。</strong></font></p><p><font color="orange"><strong>交易日大部分时间,市场一直试图向下反转,扫掉多头的止损,诱使交易新手做空,但最终顽强地一路走高,形成高点拾升和低点拾升,开在当天最低点附近、收在最高点附近。</strong></font><font color="black"><strong>在本例中,所有买入形态看起来都属于低概率机会,让经验不足的交易者踏空行情。</strong></font><font color="green"><strong>然而老练的交易者知道市场在发生什么,他们将所有急速下挫都视为买入机会。他们知道,做多形态糟糕恰恰说明趋势强劲,因此成功率远远高于其表象。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第2个案例（图 23.2）<br>第344-346页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.01.在强趋势中第一次回调中买入</title>
      <link href="/2023/07/02/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-01-zai-qiang-qu-shi-zhong-di-yi-ci-hui-diao-zhong-mai-ru/"/>
      <url>/2023/07/02/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-01-zai-qiang-qu-shi-zhong-di-yi-ci-hui-diao-zhong-mai-ru/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts/trends/c23/Slide1.JPG" alt="图 23.1 在强趋势中第一次回调中买入"></p><blockquote><p>如图23.1所示,<font color="red"><strong>市场走出始于开盘的上升趋势,K线2跌破趋势线,属于首次回调。</strong></font><font color="green"><strong>虽然它是一根弱信号K线(收出阴线,不过至少收在了中位之上),交易者将会在其高点上方1个最小报价单位挂止损单买人。激进多头可能在K线2前一根K线低点挂限价买单,期待市场出现微型通道假突破然后进一步走高。</strong></font></p><p><strong>在当天第一根K线下方做空是合理的,因为这是一根空头趋势K线,而且当天市场跳空高开,入场点距离均线及前一天收盘有一点空间。</strong><font color="black"><strong>不过这一交易仍略显激进,因为前天最后个小时走出数根强多头趋势K线,属于买压信号。</strong></font><font color="green"><strong>当我们犹豫不定之时,尤其是在刚开盘的时候,最好等待更多信息,或者发现某一方被套之后再入场。这笔做空交易的问题在于,对于大部分交易者而言,可能无法快速转变思路、在K线2上方反手做多。</strong></font><strong>这可能导致交易者错过多头行情,而大部分交易者可能原本等待在第一次回调上方买入,较晚的入场可能使他们错失几个点的利润。</strong></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>第1个案例（图 23.1）<br>第343-344页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.00.02.始于开盘的趋势与小幅回撤的趋势</title>
      <link href="/2023/07/02/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-00-02-shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/"/>
      <url>/2023/07/02/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-00-02-shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="orange"><strong>由于几乎所有小幅回撤交易日都属于始于开盘的趋势,它们应该被视为后者的强势变体。</strong></font><font color="red"><strong>始于开盘的趋势交易日通常是最强劲的趋势类型,但只发生在大约20%的交易日中。</strong></font><font color="orange"><strong>这意味着在开盘第一根K线上方做多或下方做空,期待其成为一轮强劲趋势的起点,属于低概率的交易。市场在第一个小时行情中反转要常见得多</strong></font>(我们将在第三本书讨论这个问题)。<font color="red"><strong>在开盘大幅跳空的情况下,如果第一根K线是大阳线或者大阴线,那么这根K线成为当天行情最高点或者最低点的概率可以达到50%或更高。在大约50%的交易日中,一天的最高点或最低点出现在头5根K线。然而这根K线90%情况下形成于开盘区间之内,而区间行情可以持续几个小时。</strong></font><font color="orange"><strong>任何类型的趋势交易日都可以从开盘走出趋势。</strong></font><font color="red"><strong>在始于开盘的趋势交易日中,市场在第一根K线或头几根K线形成最高点或最低点,然后全天作趋势性运动,往往收于最低点或最高点附近。</strong></font><font color="red"><strong>市场在头30分钟左右可能形成一个小型交易区间,然后发生突破</strong></font>,<font color="orange"><strong>但当天开盘通常非常接近交易日最高点(下降趋势)或最低点(上升趋势)。这些交易日往往开盘大幅跳空,然后市场朝任何一个方向作趋势运动。</strong></font>换句话说,<font color="red"><strong>大幅跳空低开既可以造成始于开盘的上升趋势交易日,也可以导致始于开盘的下跌趋势交易日。</strong></font>在两种情况下,<font color="red"><strong>建仓形态的可靠性将会更高:一是当其形成于像趋势通道线这样的强磁力位(比如形成楔形反转形态),二是属于一个反转形态的一部分(比如从昨天收盘前的末端旗形反转)。</strong></font></p><p><font color="red"><strong>这种类型的趋势可以非常强劲,一直持续到第二天头1~2个小时的行情中</strong></font>,<font color="green"><strong>因此交易者在第二天开盘后应该寻求在回调中顺势人场。</strong></font><font color="red"><strong>很多时候回调力度很强,让交易者怀疑市场是否正在反转,然而通常情况下表面上的强势回调在较高时间级别上只是正常的两段式调整</strong></font>,比如回调到15分钟图上的均线。不过对于大部分交易者来讲,交易时只看一张图会更简单一点,当回调结束后,5分钟图上肯定会出现恰当的建仓形态。</p><p><font color="red"><strong>在始于开盘的趋势交易日展开过程中,通常全天回撤幅度都非常小。这种情况就属于小幅回撤趋势交易日。这是最强劲的趋势交易日类型,每个月只有1~2天。这种交易日大约2/3情况下都会在上午11点(PST时间)之后出现较大回撤。这一回撤幅度往往大约是趋势从头一个小时开始之后所发生的最大回撤的两倍。在其发生之前,通常会出现1~2根朝趋势方向的相对较长的强劲趋势K线,代表动能耗竭。</strong></font>比如说,市场处于一轮小幅回撤上升趋势,整个交易日一直呈通道性上涨,最大回撤为9个最小报价单位。然后在上午11点和中午之间某个时间,市场连续出现两根相对较长的多头趋势K线,突破至盘中新高。那么这种走势更可能属于耗竭性买入高潮,而非新一轮上涨的起点。高潮走势在第三本书将有详细讲解,但简单来讲,<font color="orange"><strong>当一轮趋势已经持续很长时间,此时行情突然加速,通常意味着行情暂时告一段落,开始进人至少持续10根K线左右的两段式回调。</strong></font><font color="green"><strong>经验丰富的交易者预计市场将出现3~5个点的调整,因此退出多头锁定利润。部分交易者甚至会在第二根多头趋势K线收盘时做空,或者可能在其高点上方1~2个单位处做空。他们也可能耐心等待下一根K线收盘,如果这根K线收于振幅中位附近,他们将会在其收盘时做空;如果它是一根空头反转K线,他们可能在其低点下方做空。如果他们在一根空头反转K线下方人场,保护性止损将设在其高点上方,如果在急速拉升K线收盘时以市价入场,可能会使用3-4个点的止损,并且在其上方1~2个点加空。即便判断失误,市场并未能出现数点的跌幅,也有可能进入交易区间,让他们可以在最后一个小时锁定小幅利润出场。</strong></font></p><p><font color="red"><strong>在趋势开始之前,市场在第一个小时可能出现幅度稍大的回调,但只有趋势开始之后的回调才是重要的。观察回调的幅度,如果回调都非常小,后面每一次都与第一次幅度相当或更小,就说明交易日处于强劲趋势之中。</strong></font>举例而言,某交易日Emini处于上升趋势,近期日均波幅大约为12点,当天所有回撤可能仅2~3个点。<strong>在这种行情中,多头希望市场出现较大幅度的回调,让他们以较低风险人场。然而期待中的回调一直没有出现,于是他们开始分批小仓位以市价以及在小幅回撤中买入。这些全天持续的小规模买盘推动市场不断走高。同时,空头一直没有发现好的做空点,于是决定以较小仓位在一些弱势形态做空。这些形态未能造成持续跌势,于是他们被迫买入回补。他们的买盘也成为推动市场走高的力量。动能交易者看到市场处于明确上升趋势,于是他们也持续买人。这种趋势往往会持续一整天,中间只有很小的回撤。</strong><font color="black"><strong>由于多头全天都在小规模买入,所以不会出现恐慌性追高买盘;同样,空头仓位也很低,不会出现强劲的空头回补。其结果就是,虽然当天为趋势交易日,但涨幅不会特别大,多头虽然做对了方向,但很难获得暴利。</strong></font></p><p><font color="red"><strong>上午7点(PST时间)公布的经济数据通常会造成市场出现一根反转K线、突破K线或者长外包K线,成为一轮强劲趋势的起点并可能持续整个交易日。</strong></font>在经济数据方面,计算机享有巨大优势。它们能够以可解读的格式立即获得数据,并据之做出决策和形成交易指令。所有这一切都是在一秒钟以内完成,相比交易者而言它们享有巨大优势。<font color="green"><strong>当计算机占据巨大先机,交易者就处于不利地位,因此交易者应该避免在数据公布时人场。计算机程序往往会在1~2根K线内指示市场的明确方向,或者造成强势反转。此时交易者将获得较有利的概率,可以朝恰当的方向入场。</strong></font><strong>作为趋势起点的强势K线并非总是出现在数据公布时,也可能形成于公布时间之前或之后数根K线,不过出现在数据公布时的概率比较大</strong>,所以交易者应该提前做好准备,一旦市场方向变得明确,就可以立即入场。</p><p><font color="red"><strong>有时候,市场经过大约30分钟的小幅震荡之后,会在上午7点左右(PST时间)测试开盘点位,往往恰好对应经济数据的公布时间。虽然这造成一个小规模交易区间,但突破区间之后的趋势行情比我们在趋势性交易区间交易日看到的要强劲得多,而是与始于开盘的趋势相当,应视为后者的变体。</strong></font></p><p><font color="red"><strong>即便最佳的形态也会有大约40%的概率不按你的预期运行。如果开盘之后的走势在第三根或第四根K线都没有出现休整,说明行情可能运行过快过远,那么接下来市场反转的概率将大于趋势延续的概率。</strong></font></p><p><font color="orange"><strong>所有交易日都会在开盘头几根K线形成始于开盘的趋势。一旦一根K线站上前根K线的高点,交易日就属于始于开盘的上升趋势交易日,至少暂时如此。如果反而跌破第一根K线的低点,就属于始于开盘的下跌趋势交易日。</strong></font><font color="red"><strong>在大部分交易日行情并不会持续性上涨或下跌,而是发生反转,从而演变成其他类型的交易日。不过,如果对前一根K线的突破发展为更大幅度的急速运动,形成始于开盘的强劲趋势交易日的概率将大幅上升,此时交易者应该开始将其作为强趋势交易日来对待。</strong></font></p><p><font color="red"><strong>如果市场连续四根或以上K线做趋势运动而没有出现回撤,甚至只是两根长趋势K线,那么走势应该被视为强劲急速运动。</strong></font><strong>急速运动意味着多头和空头都同意市场不应在当前位置停留太久,需要迅速移动到另一个价位</strong>。<font color="red"><strong>当急速运动发生在头几根K线,交易日为始于开盘的趋势交易日。</strong></font><font color="orange"><strong>这种状态可能在交易日剩下的时间里持续下去,但有时候市场也可能很快发生反转并朝另一个方向突破。这可能导致朝相反方向的趋势,比如急速与通道趋势,或趋势性交易区间交易日,或者简单的交易区间交易日。</strong></font><strong>与任何急速运动一样,较早买入的多头将会在某个时点锁定部分利润。从而造成小幅回撤</strong>(见前面关于趋势的章节)。<strong>其他错过行情的多头将会在回撤中强力买进,还有一些多头利用回撤加仓。部分多头将以限价单的方式在前一根K线低点及其下方挂买单,希望当前K线能够跌破前一根K线,让他们买在略低的位置。其他多头则会在回撤K线的高点上方挂止损单买入(高1买人信号)。</strong></p><p><font color="red"><strong>急速运动通常会有三种后续发展。</strong></font>第一种情况,<font color="red"><strong>市场可能已经运行过快过远,属于耗竭性高潮走势。</strong></font>比如说,<font color="black"><strong>如果市场在急速运动之后出现休整或回撤(比如形成一根内包K线或小楔形旗),这可能成为一个末端旗形并在小幅突破之后发生反转,反转走势可以持续数小时。</strong></font>第二种情况,<font color="red"><strong>市场可能在一个窄幅交易区间横盘数小时,然后趋势恢复直到收盘,构成一个趋势恢复交易日。在持续长达5~10根K线的急速行情之后,这种窄幅震荡走势是十分常见的。</strong></font>第三种也是<font color="red"><strong>最常见的情况是,当急速运动幅度不足以构成动能耗竭,市场会形成趋势通道,交易日成为急速与通道趋势交易日。</strong></font></p><p><font color="red"><strong>在第一波强劲走势的首次回撤中入场,属于利用强劲走势具有测试极端位置倾向性这一特点。大部分强劲行情都至少有两波走势,因此在第一次回撤时人场获利概率很高。</strong></font><font color="green"><strong>尤其在始于开盘的趋势交易日,如果你错过了初始入场点,这一入场点就显得尤其重要。不过,在强劲趋势中,所谓"首次回撤"并非总是那么一目了然,因为趋势中经常会出现2~3根横向运行的K线,并未突破某根重要的趋势线,因此其力度似乎不足以构成一次"回撤"。然而,即便并未真正出现对价格的回撤,走势暂停属于横向调整,也是是回撤的一种。</strong></font></p><p><font color="red"><strong>在这些极强趋势交易日,交易的困难之处主要在于,趋势在形成过程中看起来并不是特别强劲。通常市场并不会出现可观的急速运动,或者回踩均线的高概率入场点。相反,市场往往每隔几根K线就出现回撤,而且出现大量朝相反方向的趋势K线。市场往往处于一个看起来很弱的通道之中。</strong></font>交易新手所没有看到的是,<font color="black"><strong>市场回撤幅度都很小,价格完全没有向均线靠拢的意思,而是缓慢地不断远离开盘价位。</strong></font>交易老手知道<font color="black"><strong>这些都是表明上升趋势非常强劲的信号,所以有把握进行摆动交易。</strong></font>他们明白,<font color="green"><strong>虽然这些K线看起来处于弱势通道(表面上属于低概率建仓形态),然而当它们发生在小幅回撤上升趋势交易日,所构成的却是高概率的摆动交易建仓形态。在始于开盘的趋势交易日,所有回撤都是极佳的顺势人场点,哪怕建仓形态看起来几乎总是很弱。即便在回撤最终突破一根重要趋势线之后,交易者仍可继续顺势人场。在强劲上升趋势中,买点包括前一个K线的低点,或其下方1~2个最小报价单位,或高1和高2形态上方1个单位。</strong></font><font color="red"><strong>注意趋势开始之后所有回撤的幅度。</strong></font>比如说,<font color="green"><strong>在一轮小幅回撤上升趋势中,如果过去几个小时行情最大幅度的回撤仅为8个单位,可以在盘中高点下方5~7个单位处挂限价买单。在强劲下跌趋势中则刚好相反,可以在前一根K线高点或其上方1~2个单位处做空,或者在低1和低2信号K线下方1单位做空,以及在任何相对于近期K线平均长度的反弹中做空。</strong></font></p><p><font color="red"><strong>市场存在惰性,第一次终结趋势的尝试通常会失败。当市场突破趋势线,意味着发生重大回撤,趋势的第一波行情可能已经结束。然而即便如此,第一次突破趋势线也很可能仅仅构成顺势人场点,从而引发第二波趋势行情,并创出新高或者新低。</strong></font></p><p><font color="red"><strong>回撤走势通常会出现很弱的信号K线,以及很多反方向的趋势K线。</strong></font>比如说,<font color="green"><strong>在强劲上升趋势中,大部分做多的信号K线可能是小阴线或十字星,部分入场K线可能是实体很短的外包阳线。它们往往出现在2~3根连续空头趋势K线或微型下跌通道之后。</strong></font><font color="black"><strong>这种持续的抛压让很多交易者上当,过早卖出多头头寸,转而寻找做空信号。虽然卖出信号看起来也不是太强,但部分交易者还是会卖出,因为它们比买入信号还是要强一点,而且他们有交易的欲望。他们看到,几乎在每个买人信号之后,市场都会出现回撤并打到盈亏平衡止损,认为这说明多头趋势很弱。</strong></font><strong>当然他们也看到市场处于上升趋势,想要人场做多,无奈却不知道怎么做,因为他们认为所有买人信号看起来都很糟糕。回撤幅度太小,建仓形态又太弱。而且,由于这种交易日每个月只发生几次,他们习惯了那种卖压往往带来可交易的做空机会的市况,所以不断地在一些不太恰当的做空点卖出。</strong><font color="black"><strong>这些卖点之所以不太恰当,是因为它们是牛旗的起点,而非反转的开始。</strong></font><font color="orange"><strong>交易老手的视角却有所不同。他们看到上升趋势仅出现小幅回撤,未能跌破均线,同时出现许多空头趋势K线和弱买入信号</strong></font>,明白市场正在发生什么。<font color="orange"><strong>他们看到交易者被震出多头仓位,不停地在高位做空,知道这种情况属于非常强劲的上升趋势。交易老手知道大批交易者将会被迫回补亏损的空头,接下来将追高买入,从而给市场造成持续的向上的张力。</strong></font>这就造成一种鲜明的对照,一边是大量交易者想买但未买,一边是交易老手持续买入并获得丰厚利润。</p><p><font color="red"><strong>此类交易日通常处于较窄的通道,如果交易者打算让交易参与摆动,不应过早将止损收紧到盈亏平衡点。</strong></font><font color="red"><strong>当趋势处于窄幅上升通道,市场在创出新高之前往往会回测入场点</strong></font>,缺乏经验的交易者往往感到害怕,错误地过早止损,从而错过一轮强劲趋势。举例而言,<font color="red"><strong>在强劲上升趋势中,市场往往会在5~10根K线内回到信号K线高点的入场点,甚至探破这一位置1~2个最小报价单位。</strong></font>这会让交易新手感到紧张。他们原本已获得足够的刮头皮利润,但由于当天为趋势交易日,他们打算做摆动交易,让利润奔跑。现在,一个小时之后,市场回到他们的入场点。这一个小时他们直处于焦虑之中,因为市场并未涨到入场点上方太高的位置。现在他们则由焦虑变成恐慌,因为一笔赚钱的交易即将变成亏损交易。于是他们忍无可忍,以小幅盈利或亏损出局。几根K线后,他们方才后悔不迭市场已经创出新高,而他们只能眼睁睁看着,错失大好机会,只好等待下次回调之后再次买人。<font color="green"><strong>只有当市场回撤到信号K线高点区域然后创出新高之后,交易者才应该将保护性止损上移到最近摆动低点下方。趋势倾向于出现趋势性高点和低点,因此一旦多头趋势创出新高,交易者应该将保护性止损上移到最近摆动低点下方。</strong></font><strong>由于预期市场低点呈趋势性上移,他们希望下一次回撤在最近低点上方止步。</strong><font color="black"><strong>当市场开始进入交易区间,回撤将会跌破上一个抬升低点,此时交易者需要调整为适用于交易区间的交易方法</strong></font>(将在第二本书讨论).</p><p><font color="red"><strong>如果市场大幅跳空开盘,而且第一根K线为强趋势K线(影线较短、实体较长),做朝两个方向的突破往往是不错的交易。</strong></font><font color="black"><strong>每天第一根K线都可能是一个始于开盘的上升趋势交易日或始于开盘的下跌趋势交易日的信号K线,具体要看市场朝哪个方向突破这根K线。</strong></font><font color="red"><strong>如果入场后保护性止损在下一根K线被扫掉,可以考虑反手做笔摆动交易,因为接下来的行情幅度通常会超过你第一次入场所亏损的点数,而且总存在演变成始于开盘趋势的可能性。</strong></font></p><p><font color="red"><strong>即便开盘没有跳空,如果第一根K线为趋势K线,也是不错的建仓形态。只不过,在跳空的情况下,交易的成功率更高一些,因为市场状态更为过度,任何走势都倾向于更加强劲。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>始于开盘趋势交易日的主要特征<br>第337-343页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23.00.01.始于开盘趋势交易日的主要特征</title>
      <link href="/2023/07/01/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-00-01-shi-yu-kai-pan-qu-shi-jiao-yi-ri-de-zhu-yao-te-zheng/"/>
      <url>/2023/07/01/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/23.shi-yu-kai-pan-de-qu-shi-yu-xiao-fu-hui-che-de-qu-shi/23-00-01-shi-yu-kai-pan-qu-shi-jiao-yi-ri-de-zhu-yao-te-zheng/</url>
      
        <content type="html"><![CDATA[<p>始于开盘趋势交易日的主要特征:</p><blockquote><ul><li><font color="red"><strong>上升</strong>趋势交易日的<strong>低点</strong>或<strong>下跌</strong>趋势交易日的<strong>高点</strong>出现在当天<strong>头几根K线</strong>。</font></li><li><font color="red">如果交易日开盘区间低于近期日均波幅的<strong>25%</strong>,在<strong>上升</strong>趋势交易日可能出现<strong>双底</strong>,在<strong>下跌</strong>趋势交易日可能出现<strong>双顶</strong></font><font color="orange">(如果开盘区间大约为日均波幅的<strong>50%</strong>,则突破更可能造成<strong>趋势性交易区间交易日</strong>)</font></li><li><font color="red">交易日可能始于一轮持续多根K线的<strong>急速行情</strong>,也可能始于<strong>窄幅开盘区间</strong>。</font></li><li><font color="red">如果市场从<strong>第一根K线左右就走出趋势</strong>,而且<strong>最初的急速行情持续3根或以上K线</strong>,那么在<strong>首次回撤时入场</strong>通常至少是不错的刮头皮机会。</font></li><li><font color="red">如果一开盘就出现一波<strong>持续多根K线、幅度较大的强劲急速行情</strong>,交易日通常会成为<strong>急速与通道趋势交易日</strong>。</font></li><li><font color="red"><strong>开盘大幅跳空</strong>通常会造成始于开盘的趋势交易日,而趋势的<strong>方向可以是任意的</strong>。当市场大幅跳空高开、形成始于开盘的趋势交易日,那么交易日大约有 <strong>60%</strong> 的概率为上升趋势交易日、 <strong>40%</strong> 概率为下跌趋势。</font>跳空低开的情况则刚好相反。<font color="red"><strong>缺口越大,交易日越有可能成为趋势交易日,而且趋势越有可能与缺口同向。</strong></font></li><li><font color="red">始于开盘的趋势交易日从一开始就具有一种迫切性和确定性,通常<strong>属于最强劲的趋势,回撤幅度最小</strong>。</font></li><li><font color="red">在趋势后期往往会出现<strong>20根均线缺口K线建仓形态</strong>。</font></li><li><font color="red">无论对于始于开盘的趋势交易日,还是所有的趋势交易日,<strong>最强劲类型的趋势都属于开盘区间很窄,然后整个交易日伴随小幅回撤持续做趋势性运动</strong>的行情。我们将这种行情称之为<strong>小幅回撤趋势交易日</strong>。</font>比如说,<font color="orange">Emini回撤幅度可能仅为10~12个最小报价单位(日均波幅的10%~30%)</font>。在这种情况下,<font color="red"><strong>市场通常会在最后两个小时出现幅度约为前期回撤150%~200%的回撤,然后恢复原有趋势直到收盘。</strong></font></li><li>对于老练交易者而言,<font color="red"><strong>摆动交易建仓形态具有70%或更高的成功率</strong></font>,不过初学者完全感觉不到有这么高的确定性。<font color="red"><strong>许多信号K线看起来很糟糕,就像所有强劲趋势中那样。大部分建仓形态看起来似乎都只有50%甚至更低的成功率。这就使得交易者不敢入场,从而迫使他们在后面追涨杀跌或彻底错过趋势。</strong></font></li><li><font color="red"><strong>往往出现许多相反方向的趋势K线。这是逆势压力的信号,诱使交易新手不停地寻找逆势入场点,而错过顺势机会。比如说,在上升趋势中,市场可能出现许多空头趋势K线,甚至不少于2~3根K线的急速下跌。</strong></font>新手反复入场做空,并反复亏钱。急速下跌演变成牛旗,但形态看起来非常弱,新手不敢买入。他们只是退出亏损空头,却不敢做多。因为他们害怕再次亏损,尤其是在建仓形态看起来很弱的情况下。<font color="red"><strong>所有难看的牛旗都成功了,然后跟着再出现一个很漂亮的但失败的做空形态。</strong></font></li><li><font color="red"><strong>趋势通常处于一个相对较窄的通道,回撤走势往往会扫掉盈亏平衡止损,将交易者震仓出局。在上升趋势中,交易者应该将止损跟踪移动到最近摆动低点下方;在下降趋势中,则是摆动高点上方。如果过于急切地将止损收紧到盈亏平衡点,将会被扫掉止损。</strong></font></li></ul></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第23章 始于开盘的趋势与小幅回撤趋势<br>始于开盘趋势交易日的主要特征<br>第336-337页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 始于开盘的趋势与小幅回撤趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.00.02.趋势性交易区间交易日</title>
      <link href="/2023/07/01/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-00-02-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/"/>
      <url>/2023/07/01/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-00-02-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red"><strong>所有趋势都会发生回撤，回撤属于小型交易区间，因此在所有趋势交易日都会出现某种形式的趋势性交易区间。</strong></font><font color="green"><strong>在每周的行情中，至少有2~3个交易日的主要特征为趋势性交易区间行情。如果交易日开盘区间大约为近期日均波幅的1/3到1/2,我们可以期待市场发生突破，使得当天振幅扩大为开盘区间的两倍左右。</strong></font><font color="red"><strong>这些趋势交易日由一系列交易区间所构成，通常是两个，偶尔达到两个以上，中间被短暂的突破所分隔。有时候这些形态并不能一眼看出属于交易区间。</strong></font><font color="black"><strong>在日线图上，交易日为明确的趋势交易日，开盘和收盘分别位于日K线的两端。当市场形成趋势性摆动，看起来又不像明确的趋势交易日，那么就可能属于趋势性交易区间交易日。</strong></font>另外，<font color="green"><strong>如果交易日头1~2个小时的区间只有近期日均波幅的1/3到1/2,我们可以期待市场发生突破并出现等距运动，在交易日剩下的时间里形成第二个交易区间。市场每周都会有几天出现某种形式的此类趋势，但通常情况下最好将其归为其他趋势类型或宽幅交易区间。</strong></font></p><p><font color="red"><strong>依据力度强弱，我们可以将许多交易日归为两类，要么是急速与通道交易日，要么是趋势性交易区间交易日。</strong></font><font color="orange"><strong>趋势力度越强，交易日越有可能表现为急速与通道趋势交易日。</strong></font><strong>我们之所以对二者做出区分，是因为这两种行情的交易方法不同。</strong><font color="orange"><strong>在急速与通道趋势交易日中，由于市场处于强劲趋势，交易者应该只关注顺势机会和摆动交易。除非市场明确转入交易区间或相反趋势，交易者应该避免做逆势交易。</strong></font>相反，<font color="red"><strong>当交易日更接近趋势性交易区间，交易者通常可以进行双向交易，寻找更多刮头皮机会。</strong></font>在行情展开过程中，<strong>有一些信号可以告诉交易者突破走势更可能造成强劲趋势交易日（比如急速与通道趋势交易日，甚至小幅回撤趋势交易日），还是趋势性交易区间交易日。</strong><font color="red"><strong>交易区间比强劲趋势更为常见</strong></font>，相应地，<font color="green"><strong>趋势性交易区间交易日的数量也差不多是急速与通道趋势交易日的两倍（虽然每天盘中都至少会出现一波急速与通道摆动）。</strong></font><font color="orange"><strong>急速与通道趋势交易日的急速行情部分往往出现在早盘，甚至往往是开盘第一根K线或由开盘大幅跳空所构成。而且，市场往往要么大幅突破前一天收盘前的一组K线，要么突破之后强劲反转（比如大幅跳空低开之后第一根K线强劲拉升）</strong></font>。<font color="red"><strong>趋势性交易区间交易日则不同，其急速行情部分是对交易区间的突破，但突破之后市场往往仍处于前一天的交易区间之内。</strong></font></p><p><font color="red"><strong>在趋势性交易区间交易日，开盘交易区间往往持续l~3个小时，可以达到日均波幅的一半左右。这是行情缺乏迫切性的表现，说明交易日不太可能成为一个强劲趋势交易日。</strong></font>而且，<font color="black"><strong>与任何交易区间一样，开盘区间有一种牵引力，使得突破走势很难运行太远，而是进入回调并形成另一个交易区间。</strong></font><font color="orange"><strong>在急速与通道趋势交易日，突破走势往往幅度很大、速度很快。急速行情可以出现3根或以上很长的趋势K线、影线很短、重叠度很低。</strong></font><font color="red"><strong>然而在趋势性交易区间交易日，急速行情往往只有l~3根K线，K线实体较短、影线较长、重叠度较高。</strong></font><font color="orange"><strong>如果回撤走势只有一根K线，而且对回撤走势的突破也是急速运动，即便幅度更小、只有一根K线，那么交易日往往更符合急速与通道趋势交易日的特征。</strong></font>相反，<font color="red"><strong>如果回撤走势为5~10根K线的横盘，或者对回撤走势的突破为一个弱势通道（大批重叠K线和方向相反的趋势K线），那么交易日更接近于趋势性交易区间交易日。</strong></font><font color="green"><strong>如果急速运动之后的回撤非常强劲，让交易者无法确定“始终入场”的方向，那么市场更可能处于交易区间而非趋势通道，应该做刮头皮而不是摆动交易。</strong></font></p><p><font color="green"><strong>除非特殊情况下，一般在突破交易区间时入场属于低概率交易</strong></font>（我们将在第二本书详细讨论交易区间）。<font color="green"><strong>通常更好的方法是在突破回踩时入场，或者在之前市场从交易区间另一端反转时入场。但如果交易者有把握交易日可能演变成趋势性交易区间交易日，而且突破力度很强，那么可以考虑在突破K线形成过程中入场，或者在突破K线收盘价附近或第二根K线收盘（如果依然很强）入场。</strong></font><font color="red"><strong>急速突破走势通常会跟随一个通道，但行情往往在等距运动目标区域结束，接下来市场将进入交易区间。市场突破一个交易区间，然后形成第二个交易区间。</strong></font><font color="orange"><strong>极少数情况下，一个交易日会出现3~4个小型交易区间。不过这种交易日最好将其视为较强的趋势类型，比如急速与通道趋势交易日或小幅回撤趋势交易日，交易者应该主要甚至完全关注顺势建仓形态。</strong></font><font color="red"><strong>如果市场随后回撤到上一个区间之内，通常会一路撤退到该区间的另一端，也就是说，市场突破之后进入区间盘整。这意味着接下来市场将会出现双向交易、同时测试新区间的上轨和下轨，在某个时点可能朝任何一个方向突破。</strong></font><font color="green"><strong>一旦市场到达等距运动目标区域，就有可能转入第二个交易区间。此时交易者的思维方式也应该从趋势交易风格转为交易区间交易。</strong></font>举例来说，<font color="green"><strong>在多头趋势性交易区间交易日中，如果趋势力度减弱，交易者应该在等距运动目标区域（依据下方交易区间的高度）锁定利润，因为接下来市场很可能向下测试突破区域，然后进入新的交易区间。</strong></font></p><p><font color="green"><strong>如果交易者认为市场处于多头趋势性交易区间，不应该将保护性止损收紧到最近摆动低点下方，因为通常情况下都会被扫掉。更合理的做法是在区间上轨处逢高卖出，而不要在低位出场。记住，在交易区间中，交易者应该低买高卖。激进的交易者将会在等距运动目标区域逆势交易长趋势K线。</strong></font>举例而言，<strong>在一个多头趋势性交易区间交易日，当市场接近等距运动目标，空头将等待市场出现一根大阳线。一旦大阳线现身，他们将会在其收盘或高点上方卖空，如果市场继续走高，他们还会分批加空。</strong><font color="black"><strong>因为他们预计这根长多头趋势K线属于耗竭性买入高潮，接下来最终会向下测试缺口（指构成对下方交易区间突破的2~3根多头趋势K线），可能下探下方交易区间的上轨。由于他们预计市场将形成一个上方的交易区间，在急速拉升走势的高点卖出是一个非常好的入场点（因为该区域可能构成这个上方交易区间的上轨）。</strong></font>这一内容我们将在第二本书关千交易区间交易的章节详细讨论。<font color="black"><strong>即便市场继续上涨，最终再次回到他们入场点下方的概率也很高。</strong></font><strong>如果交易者逢高分批加空，可能会在盈亏平衡点退出最早建仓的头寸，然后将后面加仓部分的止损收紧到盈亏平衡点，一直持有到市场向下测试缺口。</strong></p><p><font color="red"><strong>由于全天都处于双向交易模式，市场在收盘前最后1~2个小时通常会至少反转其中一个交易区间（返回区间之内）。</strong></font><strong>交易区间属于双向交易模式，多头和空头都感到这里具有交易价值</strong>，<font color="black"><strong>因此它具有一种牵引力，倾向于将突破走势拉回区间之内。</strong></font></p><p><font color="red"><strong>辨识这种类型交易日的重要性在于，这种反转属于可靠的逆势交易机会，因为市场通常会出现突破回踩。</strong></font>因此，<font color="green"><strong>一旦突破走势大约到达等距运动目标，趋势交易者将会锁定利润，逆势交易者将进行反方向的交易，寻求在市场发生突破回踩时出场。当市场以一根长趋势K线运行到等距运动目标，交易老手会逆向开仓，期待市场回撤并测试突破缺口。</strong></font>举例来说，<strong>当Emini日均波动区间约为10个点，如果某个交易日头两个小时形成一个交易区间，然后向上突破，强势空头将会开始在下方交易区间上方4~6个点分批建空。他们期待市场回撤到突破区域，甚至一路跌至下方交易区间上轨。</strong><font color="red"><strong>如果市场反转进入前期区间，有可能测试前期区间中的逆势信号K线。</strong></font>比如说，<font color="black"><strong>如果一轮下跌趋势向上反转，它将会试图上探之前失败的多头信号K线的高点。</strong></font><strong>如果市场反弹至或突破上方交易区间的上轨，并收于这一位置，那么交易日在日线上将显示为反转交易日。</strong><font color="red"><strong>大部分反转交易日都始于趋势性交易区间行情</strong></font>（第三本书关于反转交易日的章节有实例），<font color="green"><strong>因此当交易者发现交易日属于趋势性交易区间交易日，应随时准备好迎接尾盘的反转波段交易。这种反转可能走出很大的趋势行情，可以跨越整个交易日的区间。</strong></font></p><p><strong>趋势性交易区间交易日往往会出现一些微妙的信号</strong>，<font color="black"><strong>告诉我们是否应该期待突破。</strong></font><font color="red"><strong>如果你看到一个交易区间交易日正在形成，但每一个摆动高点都略微高于前一个，每一个摆动低点也高于前一个，那么市场可能已经处于趋势之中，尽管它仍为交易区间。</strong></font><font color="orange"><strong>一旦足够多参与者意识到这一点，市场将会突破并迅速上涨到更高位置，然后再次进入双向运动并形成另一个交易区间。</strong></font></p><p><font color="red"><strong>当市场发生初始突破、试图扩展到日均波幅，不要认定必然会发生等距运动。在大约1/3情况下，市场朝一个方向突破区间之后使区间略微扩大，然后反转并朝相反方向突破，使区间再次略微扩大，从而形成一个非常平静的交易区间交易日。</strong></font></p><p><font color="red"><strong>有时候市场会处于一个高度只有近期日均波幅大约一半的交易区间，一直持续到收盘前最后一个小时。</strong></font>举例而言，如果Emini的近期日均波幅为12个点，某个交易日在最后一个小时之前振幅只有5个点，而且在过去12个月中只有两个交易日最终区间为5个点或更小，<font color="red"><strong>那么我们就要警惕尾盘可能发生突破。</strong></font>毫无疑问，每个交易日都会有某个时点区间高度为5个点，但在大部分趋势性交易区间交易日中，当初始区间高度只有5个点，<font color="red"><strong>通常会在头2~3个小时发生突破。然而每年都会有那么几天，交易日一直在窄幅区间运行，直到收盘前1~2个小时。</strong></font>当出现这种情况，<font color="orange"><strong>大部分时候都会有一次突破将区间扩大，不过往往难以扩大到近期日均波幅的程度。</strong></font>不要过早放弃，以为今天的行情就只有5个点的振幅．<font color="red"><strong>在90％的情况下，区间都会在收盘前扩大</strong></font>，让我们从快速突破走势中获利。<font color="orange"><strong>由于突破发生在尾盘，交易日通常没有足够的时间再形成一个完整的交易区间</strong></font>，但既然整个交易日看起来都可能成为一个趋势性交易区间交易日，所有必要在这里稍微讲一下。</p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>趋势性交易区间交易日<br>第317-321页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.00.01.趋势性交易区间交易日的主要特征</title>
      <link href="/2023/07/01/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-00-01-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri-de-zhu-yao-te-zheng/"/>
      <url>/2023/07/01/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-00-01-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri-de-zhu-yao-te-zheng/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>开盘区间大约为近期日均波动区间的<font color="red"><strong>1/3</strong></font>到<font color="red"><strong>1/2</strong></font>。</li><li>开盘<font color="red"><strong>一两个小时</strong></font>后发生突破，然后市场形成另一个交易区间。</li><li>由于存在交易区间，通常出现朝<font color="red"><strong>两个方向的交易机会</strong></font>。</li><li><font color="red"><strong>有时候会有多次突破和多个交易区间</strong></font>，但在这种情况下，最好将交易日视为一种较强势的趋势交易日，<font color="red"><strong>只做顺势交易</strong></font>。</li><li>在第二个交易区间开始形成之后，往往会出现回撤，<font color="red"><strong>测试上一个交易区间</strong></font>。</li><li><font color="red"><strong>测试通常会突破进入上一个交易区间</strong></font>。<strong>如果只是接近而未能返回前期区间，说明趋势略微强势一些</strong>。</li><li><font color="red"><strong>有时候市场会完全穿越前期区间</strong></font>，从而交易日成为一个反转交易日。</li><li><font color="red"><strong>大部分反转交易日都是从趋势性交易区间交易日开始的</strong></font>。</li><li><font color="red"><strong>当突破非常强势</strong></font>，交易日更可能走出<font color="red"><strong>较弱的急速与通道趋势</strong></font>。</li></ul></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>趋势性交易区间交易日的主要特征<br>第317页</p>]]></content>
      
      
      <categories>
          
          <category> 趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.01.趋势性交易区间交易日</title>
      <link href="/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-01-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/"/>
      <url>/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-01-qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts/trends/c22/Slide1.JPG" alt="图22.1趋势性交易区间交易日"></p><blockquote><p><font color="red"><strong>趋势性交易区间交易日的两个区间之间通常会出现一根长趋势K线。</strong></font>在图22.l中，市场前一天最后两个小时从K线1到K线3处于一个交易区间，并持续到当天前两个小时的行情当中。<font color="black"><strong>K线10是一根长多头趋势K线，突破了交易区间并向上突破K线5、7、9所构成的楔形顶部。下一根K线也是多头趋势K线，确认了突破走势（大幅增加了价格继续上涨和出现某种类型等距上涨的概率）。</strong></font>随后市场立即进入一个小型交易区间并持续到收盘。</p><p>区间走势持续到第三天。<font color="red"><strong>所有交易区间对价格走势都有一种牵引力，使得大部分突破尝试归于失败。</strong></font><font color="black"><strong>从K线11到K线19的交易区间是上涨行情中的末端旗形，截至K线21的突破以失败告终。接下来市场以K线22长空头趋势K线向下突破这个上方交易区间。下跌走势测试了前一天交易区间的顶部，然后形成另一个交易区间。K线29是对下方区间上轨的假突破，也是第三波向上推动。由于下方区间的拉力大于上方区间，随后市场返回下方区间，在K线32测试了区间下轨，最后收于下方交易区间的上轨附近。</strong></font></p><p><font color="green"><strong>从K线8到K线13的急速上涨幅度很大，而从K线12到K线17的延续性通道上涨部分显得过小。相比上方区间的高度，下方交易区间上轨K线9与上方交易区间下轨K线12之间的突破缺口比较大。这就增加了市场向下测试缺口支撑力度的概率。从K线23到K线33的交易区间基本处于从K线9到K线12的突破缺口范围之内。这种情况是很常见的。</strong></font></p><p><font color="red"><strong>从K线4到K线9的初始区间约为日均波幅的一半，因此交易者预计振幅还将扩大大约一倍。当市场出现约为日均波幅一半的交易区间，区间扩大最常见的方式就是突破并形成一个趋势性交易区间交易日。</strong></font></p><p><font color="green"><strong>第三天从K线19到K线21的开盘区间大约为日均波幅的1/3,交易者预计将会发生突破。由于他们也预计市场将测试前一天的缺口，因此向下突破概率更大。只不过在此之前，市场先对区间上轨发生一次假突破。持续到K线23的下跌动能很强，使得当天有可能成为一个急速与通道下跌趋势交易日。但K线23受到了前一天交易区间上轨的支撑（K线3、5、7的高点）。这里大致是等距下跌的目标区域，而且市场测试了一根持续3天的趋势线（没画出来）。这意味着下跌可能仅仅是卖出真空所造成的</strong></font>，即强势多头和空头在市场跌至支撑位之前袖手旁观，造成市场突然失去买盘支撑。<font color="black"><strong>从K线23、25和26开始的急速拉升、K线25和26之间急速拉升所造成的双底牛旗以及K线28的双底回撤都代表买压上升，市场甚至在截至K线29的急速上涨行情中转为明确的多头态势。这与一般情况下急速与通道下跌趋势交易日中急速下跌之后的回撤大相径庭，因此市场更可能形成趋势性交易区间。</strong></font><strong>假如这是一个急速与通道下跌趋势交易日，那么K线23急速下跌之后的回撤相对于急速下跌的力度通常不应表现出太大的买压。</strong><font color="black"><strong>买压所造成的不确定性增加了进入交易区间的概率，而非短暂同调之后走出延续性下跌通道。不确定性标志着交易区间，而不是熊旗（市场进入下跌通道之前的回撤）。</strong></font></p><p><font color="red"><strong>急速与通道趋势交易日与趋势性交易区间交易日的区别并非总是泾渭分明，有时候甚至没必要严格区分。</strong></font>**虽然从K线12开始的交易区间使当天成为一个趋势性交易区间交易日，但它同样也出现了几个低点抬升和高点抬升，因此屈于弱势上升通道。**记住，<font color="red"><strong>通道只是倾斜的交易区间，二者都属于双向交易区域。斜率越低，行情表现得更像交易区间，交易者同时朝两个方向交易就越安全。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第1个案例（图22.1）<br>第321-322页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.02.初始交易区间约为日均波幅一半</title>
      <link href="/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-02-chu-shi-jiao-yi-qu-jian-yue-wei-ri-jun-bo-fu-yi-ban/"/>
      <url>/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-02-chu-shi-jiao-yi-qu-jian-yue-wei-ri-jun-bo-fu-yi-ban/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts/trends/c22/Slide2.JPG" alt="图22.2初始交易区间约为日均波幅一半"></p><blockquote><p>如图22.2所示，两个<font color="red"><strong>交易日头两个小时，震荡区间都大约为近期日均波幅一半。这就提醒交易者，市场可能朝任何一个方向突破。由于开盘区间缺乏明确方向、幅度大约为日均波幅一半，当市场盘中发生突破之时，通常不会造成强劲和持续的行情，比如急速与通道趋势。相反，市场通常会发生回撤，然后形成一个下方交易区间。形成下方区间之后，市场可能会或也可能不会向上突破并返回上方区间之内，有时候可能会再次向下突破，然后形成第三个或第四个交易区间。由于市场更可能形成一个下方区间而非走出一轮强劲跌势，交易应该是双向的，市场往往会回测突破区域。一旦突破走势持续运行到突破点下方大约日均区间的1/3，交易者将会寻求买入，期待市场出现一轮向上摆动，测试上方区间的底部。</strong></font><font color="green"><strong>他们可能会在市场第二次尝试向上反转时买入，比如K线11和K线28上方。交易者还可能在K线15的双底和K线29的抬升低点买入。</strong></font></p><p><font color="red"><strong>一旦市场向上突破、返回上方区间之内并停留在那里，通常悄况下都会进一步测试上方区间顶部区域。</strong></font>本例第二天的行情即是如此。<strong>如果交易日收于上方区间顶部附近或其上方，就成为反转交易日。</strong><font color="green"><strong>激进多头可能会在K线27前面那根长空头趋势K线收盘时买入，预计它可能属于耗竭性卖出高潮并将引发向上测试上方交易区间底部的行情。部分交易者可能会在与上方交易区间高度相当的等距下跌目标处挂限价买单。</strong></font>他们计算从K线22上轨到K线21或25下轨之间的点数，再用K线21或25的低点减去这一幅度，<strong>然后在这一价位附近开始分批建仓</strong>，可能从这一位置上方1~2个点开始，持续买入到其下方数点。<font color="green"><strong>其他交易者则在第一个双向交易信号出现时买入，比如K线27收盘时，或者当K线27从其低点反转走高时。假如市场日均波动区间大约为10个点，部分多头将会在上方区间底部K线25下方4~6个点分批入场，期待市场回踩突破缺口（K线25下方的数根空头趋势K线），以获取3~6个点的利润。</strong></font></p><p><font color="red"><strong>虽然从K线19到K线21的下跌非常迅速，截至K线22的上涨力度也不小。这就在开盘区间造成极大的方向不确定性，降低了市场出现急速与通道趋势的概率，提高了形成趋势性交易区间交易日的概率。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第2个案例（图22.2）<br>第323-324页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.03.趋势性交易区间构成明确趋势</title>
      <link href="/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-03-qu-shi-xing-jiao-yi-qu-jian-gou-cheng-ming-que-qu-shi/"/>
      <url>/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-03-qu-shi-xing-jiao-yi-qu-jian-gou-cheng-ming-que-qu-shi/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts/trends/c22/Slide3.JPG" alt="图22.03趋势性交易区间构成明确趋势"></p><blockquote><p><font color="red"><strong>有时候交易日大部分时间都处于交易区间，但仍属于趋势交易日。</strong></font>如图22.3所示，当天可能看起来不像是一个趋势交易日，但事实上是，从嵌图的日线图就可以看出来(K线1)。<font color="red"><strong>这轮趋势行情由一系列小的趋势性交易区间所构成。这种交易日往往会在尾盘反转，至少彻底逆转最后一个交易区间。</strong></font></p><p>本图的深入探讨</p><p><strong>有些交易日开盘后一个小时或以上都未能出现可靠的建仓形态</strong>。在图22.3中，<strong>当天市场开盘位于走平的均线处，并被前一天最后一根K线所囊括。前一天市场收盘前一直处于窄幅交易区间，并持续到当天开盘后的头两根K线。相对于区间的高度，这两根K线比较长，不适合作为信号K线。虽然在第二根K线下方做空是可以接受的，因为它是一个双K线反转，又属于均线下方的楔形熊旗做空形态，但这个入场点可能处于交易区间底部附近，风险较大。</strong><font color="black"><strong>比较保险的做法是等市场突破之后在回踩时做空。市场在数根K线后发生突破回踩，可惜回踩走势为一个小型窄幅区间，而且K线上下影线很长，使得交易的可靠性较低。</strong></font><font color="green"><strong>最佳入场点在上午8点（PST时间）的双K线反转下方。市场刚刚测试了均线，属于一个低2卖点。</strong></font></p><p><font color="green"><strong>市场在11点45分（PST时间）出现一个均线缺口K线做空形态，对下跌行情低点的测试形成低点抬升。我们也可以恰当地将其称之为双底牛旗。</strong></font></p><p><font color="black"><strong>这是一个趋势性交易区间交易日，因此当市场开始在185美元附近盘整，交易者可能会在这一区域买入，期待市场测试略高于186美元的上方区间下轨。</strong></font><font color="green"><strong>市场以两段式调整的方式跌至185美元附近，第二段大致为等距运动。</strong></font>上午的交易区间中位大约低于当天高点2美元，10点15分的双K线反转又是大约再往下2美元，<font color="green"><strong>因此交易者将会开始买入。</strong></font><strong>空头回补部分空头头寸，多头预期市场测试上方交易区间下轨而买入。</strong><font color="black"><strong>随后市场进入窄幅交易区间，在11点05分长空头趋势K线之前走出3波小型向下推动。11点30分出现一个低点抬升，信号K线为阳线。这个抬升低点也是一个高2,因为其前一根K线以及再往前两根K线均为阴线实体。</strong></font><strong>这种属于显微镜式的分析</strong>，大部分交易者在实盘中都不会信任这些信号，但老练的交易者总在寻找市场可能转向的信号，而<strong>这些微妙之处可以增强他们做多的信心</strong>。如果他们在11点30分的低点上方买入，设在低点下方的止损可能为50美分，期待市场测试交易区间上轨，利润目标大约为1美元。</p><p><font color="red"><strong>虽然你永远不可能确切地知道市场出现与止损同等幅度运动的方向概率，但如果你感到市场处于非均衡状态，就可以假定概率至少为60%。</strong></font>就本例而言，如果你在185美元附近买入，可以合理假定市场至少有60％的概率测试186美元。换句话说，如果你在入场点下方设置与利润目标同等幅度的止损，市场在扫掉你的止损之前，将会先到达利润目标（有60％概率在亏损l块钱之前先赚1块钱）。<font color="green"><strong>你可以在11点40分急速拉升K线后面那根十字星内包K线锁定部分利润，然后在市场突破失败时在盈亏平衡点退出剩余头寸。当市场在12点25分形成双底，你可以尝试再次做多</strong></font>，而且将会成功。<strong>市场本来有可能从双底出现等距上涨，达到2美元的利润目标，但由于交易日即将结束，因此已经没有这种可能。</strong></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第3个案例（图22.3）<br>第324-326页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.04.第一个交易区间可以在前一天形成</title>
      <link href="/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-04-di-yi-ge-jiao-yi-qu-jian-ke-yi-zai-qian-yi-tian-xing-cheng/"/>
      <url>/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-04-di-yi-ge-jiao-yi-qu-jian-ke-yi-zai-qian-yi-tian-xing-cheng/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc22%2FSlide4.JPG" alt="图22.4第一个交易区间可以在前一天形成"></p><blockquote><p>如图22.4所示，当天也是一个趋势性交易区间交易日，<font color="red"><strong>第一个交易区间形成于前一天尾盘。</strong></font>嵌图日线图显示这是一个下跌趋势交易日(K线1)。</p><p><font color="red"><strong>最后一个交易区间向上反转，市场测试了上一个交易区间顶部附近的位置。这种情况很常见，因为双向交易意味着趋势性力量弱于其他类型的趋势交易日。当行情力度较弱，收于最低点的概率就比较小。交易者了解这一点，所以会在收盘前寻找反转机会。</strong></font></p><p>在图22.4中，<strong>市场当天基本平开，而且开在走平的均线附近。开盘后3根K线的急速下挫使得市场可能出现下跌趋势交易日。</strong><font color="black"><strong>急速下跌走势突破了前一天最后一个小时形成的交易区间。这个交易区间也是一波两段式上涨，从而是一个熊旗，因此突破走势可以看成突破了熊旗下方的趋势线。</strong></font><font color="green"><strong>交易者可以在第一次回踩的那根K线下方做空，然后在那根测试均线的K线下方再次做空。后者也是一次朝向均线的两段式横向调整，大致构成一个双顶熊旗做空形态。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第4个案例（图22.4）<br>第326页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.05.被突破所分隔的交易区间</title>
      <link href="/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-05-bei-tu-po-suo-fen-ge-de-jiao-yi-qu-jian/"/>
      <url>/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-05-bei-tu-po-suo-fen-ge-de-jiao-yi-qu-jian/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc22%2FSlide5.JPG" alt="图22.5被突破所分隔的交易区间"></p><blockquote><p>如图22.5所示，<strong>交易日第一个小时在一个7个点的区间震荡，但近期日均波幅大约为20点，因此交易者预计当日振幅还将扩大大约一倍。</strong><font color="red"><strong>当趋势在交易日运行一个小时之后才开始，当天往往会成为趋势性交易区间交易日。</strong></font>按照上述前提，第一个小时的行情很显然是一个交易区间。<font color="red"><strong>在交易日后期，市场通常会反转进入，有时候穿越一个或以上的下方交易区间</strong></font>，本例即是如此。</p><p>本图的深入探讨</p><p>当交易日出现图22.5这种<strong>多个趋势性交易区间，交易者应该将主要精力放在寻找顺势交易机会上面</strong>。<font color="black"><strong>在K线2双K线反转到K线9高2买点（也屈于20根均线缺口K线形态）之间，交易者应该只考虑做多，同时应该只考虑在K线10末端旗形反转形态做空。</strong></font></p><p><strong>在K线10前一根多头趋势K线的收盘及其高点上方，许多多头会在这里锁定利润，激进空头开始做空。截至K线3,市场出现一轮急速拉升，然后进入一个通道，由一系列小型交易区间所构成。</strong><font color="black"><strong>但从K线8开始的区间相对较窄，呈水平方向。这属于强劲双向交易的区域，因此具有一种磁力，能够在市场发生突破之时将其拉回来，造成突破失败。</strong></font><font color="red"><strong>另外，市场通常会在尾盘返回前期交易区间，而上午11点半（PST时间）又是最容易发生反转的时间</strong></font>，<font color="green"><strong>因此市场突破失败、走出末端旗形反转的概率很高。回调走势有可能测试通道起点K线4,因此空头很乐意在一根长多头趋势K线突破前期摆动高点并可能构成末端旗形时在其高点做空。许多交易者还会愿意逄高加空，因为他们相信市场在收盘前有70％甚至更高的概率至少测试他们最初的卖空点。一旦来到这一位置，他们就可以在盈亏平衡点退出最早的空头头寸，然后决定是同时锁定上方空单的利润，还是将保护性止损移到盈亏平衡点</strong></font>，让头寸参与摆动。</p><p><font color="green"><strong>K线2是一个双K线反转的第一根K线，市场可能构成一个低2失败形态，形成双重底或三重底，成为一轮上升趋势的起点</strong></font>。交易者此时已意识到市场可能发生突破并大幅走高。发生突破之后，市场从K线4到K线6形成一个上方区间，由两个较小的窄幅区间所构成。<font color="green"><strong>K线5上方的高2买点是一个合理的突破回踩入场点，虽然市场走出纠缠的铁丝网形态。这一突破既是对从K线3到K线4的小型牛旗的突破，也是对从K线3到K线5的整个交易区间的突破。</strong></font><font color="black"><strong>从K线3到K线5的区间是对市场突破K线1高点的两段式横向回踩。</strong></font></p><p>市场突破进入第三个区间（从K线8到K线9）。当其再次向上突破，走势在K线10失败（末端旗形反转），随后回撤穿越第三个区间的底部并最终跌至第二个区间的底部。<font color="black"><strong>在急速下跌之后，K线11下方是一个突破回踩做空点，但铁丝网形态使其风险较高。在截至K线12的两根阴线急速下挫之后，K线13下方出现第二个突破回踩做空点。</strong></font></p><p><font color="black"><strong>“区间”一词隐含的意思是市场将会在某个时点测试区间的下轨，即便接下来可能继续走高。</strong></font><font color="red"><strong>当市场对一轮强劲行情发生回撤，第一个目标永远是之前的逆势入场点。</strong></font>就本例而言，<font color="green"><strong>在市场突破最上方区间之后，最近的做空入场点是K线6的低点，</strong></font><font color="red"><strong>即最近一根空头信号K线。</strong></font><font color="green"><strong>市场向下突破最上方区间之后，进入紧邻的下方区间范围，并在K线12跌破那根空头信号K线的低点。</strong></font></p><p><font color="black"><strong>截至收盘，市场已经测试了第二个区间中K线3的低点，即位置最低的一根空头信号K线。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第5个案例（图22.5）<br>第327-328页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.06.趋势交易日中的双向交易</title>
      <link href="/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-06-qu-shi-jiao-yi-ri-zhong-de-shuang-xiang-jiao-yi/"/>
      <url>/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-06-qu-shi-jiao-yi-ri-zhong-de-shuang-xiang-jiao-yi/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc22%2FSlide6.JPG" alt="图22.6趋势交易日中的双向交易"></p><blockquote><p>如图22.6所示，<strong>虽然当天市场几乎开在最高点、收在最低点，属于始于开盘的下跌趋势交易日，但头两个小时行情震荡剧烈，很难像始于开盘的趋势那样去交易。</strong><font color="red"><strong>通常，始于开盘的趋势交易日不会出现太多大幅逆势摆动，但趋势性交易区间行情存在这种情况</strong></font>，所以趋势性交易区间屈于较弱的、更难预测的趋势类型。<strong>初始交易区间在K线4向下突破，进入一个下方区间，从而确立趋势性交易区间交易日</strong>。</p><p><font color="black"><strong>直到K线3,当天振幅只有近期日均振幅的一半左右，因此交易者明白市场有可能形成一个下方交易区间。</strong></font><br><font color="green"><strong>K线6既是对均线的回踩，也是突破上方区间下轨K线2之后的回踩，因此是合理的做空入场点。</strong></font><br><font color="green"><strong>K线9是对上方区间的突破回踩，同时也是对这个较低区间顶部的假突破，也构成一个卖点。</strong></font><br><strong>K线12向下突破进入第三个区间，但交易日已经没有足够的时间向上测试k线13区间顶部。</strong></p><p>本图的深入探讨</p><p>在图22.6中，市场前一天收于均线下方，而当天开盘是一次多头突破，同时突破了前一天的收盘和均线。<strong>当天第一根K线为十字星，因此并非可靠的做空信号K线</strong>。<font color="green"><strong>K线1强空头趋势K线是一根合理的信号K线，交易者可以在其低点下方1个最小报价单位卖出，预期市场测试均线，甚至昨天的收盘。</strong></font><font color="black"><strong>由于开盘大幅跳空往往造成趋势性交易日，而这根阴线说明空头做空意愿很强，因此当天可能成为下跌趋势交易日。交易者可以较早入场做空，将部分头寸参与摆动，直到市场出现强势向上反转或时间接近收盘。</strong></font></p><p><font color="black"><strong>在两根K线的急速下跌之后，交易者预计市场将进入下跌通道，开始在回撤中做空。</strong></font><font color="green"><strong>第一个回撤做空点是由上午7点整（PST时间）之后那根外包大阴线所触发的低2卖点。下一个做空点在K线3空头反转K线下方。这是一个双重做空形态，既与前面的回撤构成双顶，也是是楔形熊旗</strong></font>（第一波向上推动是K线2往前数两根K线）。</p><p><font color="green"><strong>K线14</strong></font><strong>是一根多头反转K线，但与前面两根K线重叠度太高，使其可靠性下降。而且，它处于K线12急速下跌之后一个相对较窄的通道之内，</strong><font color="black"><strong>因此最好等待出现市场发生突破回踩、形成低点抬升后再去做多。</strong></font><font color="green"><strong>由于它是下跌趋势中的一个弱势买入形态，因此其失败可能反而构成不错的做空形态。K线15是一个失败的高2</strong></font>,<font color="orange"><strong>而在下跌趋势中，均线附近空头反转K线所构成的低2往往是高概率的做空形态，因为那些在高1和高2趋势反转尝试中买入的交易者通常会在低2退出。</strong></font><strong>市场从当天新低做出两次反转尝试，而这第二次在K线15做多入场点失败后失败。</strong><font color="orange"><strong>如果市场某种尝试失败两次，通常就会朝相反方向运行。</strong></font></p><blockquote></blockquote></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第6个案例（图22.6）<br>第328-330页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.07.第一个小时后开始的趋势往往很弱</title>
      <link href="/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-07-di-yi-ge-xiao-shi-hou-kai-shi-de-qu-shi-wang-wang-hen-ruo/"/>
      <url>/2023/06/30/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-07-di-yi-ge-xiao-shi-hou-kai-shi-de-qu-shi-wang-wang-hen-ruo/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc22%2FSlide7.JPG" alt="图22.7第一个小时后开始的趋势往往很弱"></p><blockquote><p><font color="red"><strong>当市场在第一个小时后开始进入某种趋势，我们可以假定它会成为趋势性交易区间交易日，或者表现出类似特征，因此可以朝两个方向做刮头皮交易。</strong></font>在图22.7中，<strong>虽然市场走出始于开盘的上升趋势，但升势在K线5急速拉升和高潮走势之后结束，然后反转进人趋势性交易区间下跌趋势。</strong><font color="black"><strong>我们也可以将其视为急速与通道下跌趋势，从K线5到K线6的下跌为急速下跌阶段，从K线7到K线8的下跌以及截至K线10的3根K线向下突破走势也属于急速行情。由于下跌通道较宽，两次突破之后的回撤与前期摆动低点重叠，因此整轮下跌行情也属于楼梯形态下跌趋势。</strong></font></p><p>本图的深入探讨</p><p>在图22.7中，<strong>市场当天跳空低开，与上一交易日的低点构成一个低点抬升，有可能走出始千开盘的上升趋势。它是市场前一天收盘前急速拉升之后对均线的回踩，以及对陡峭上升通道的一次假突破。</strong><br><strong>两段式上涨走势在K线5末端旗形卖点结束。随后市场出现4根K线的急速下跌，并发展成一波更大规模的急速下跌（截至K线6）。</strong><font color="black"><strong>下跌走势跌破了开盘后强劲上涨的上升趋势线，因此接下来出现的高点下降可能引发趋势向下反转。</strong></font><br><font color="green"><strong>K线7是一波两段式调整之后形成的高点下降，提醒交易者市场可能继续下跌。K线7是一个双重卖点，它与截至K线6的楔形下跌通道的顶部构成一个双顶</strong></font>（这个楔形始于K线5下方4根K线急速下跌之后的那个小型下降低点），<font color="green"><strong>还是一个楔形熊旗</strong></font>（第一波向上推动结束于K线6前一根K线，K线7是第三波向上推动）。<br>在交易日剩下的时间里，市场表现得像一轮趋势性交易区间下跌行情。<font color="green"><strong>截至k线1和截至K线5的两波强劲上涨属于急速行情，因此有可能在第二天或者第三天跟随一个上升通道。K线6、8、10构成一个大的楔形牛旗，市场有可能测试K线5高点。</strong></font>K线4也可以看成下跌通道的一部分。第二天（图上未显示）市场的确跳空高开至K线7高点附近，然后走出始于开盘的强劲上升趋势。</p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第7个案例（图 22.7）<br>第330-331页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.08.初始交易区间往往预示着出现下一个交易区间</title>
      <link href="/2023/06/29/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-08-chu-shi-jiao-yi-qu-jian-wang-wang-yu-shi-zhao-chu-xian-xia-yi-ge-jiao-yi-qu-jian/"/>
      <url>/2023/06/29/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-08-chu-shi-jiao-yi-qu-jian-wang-wang-yu-shi-zhao-chu-xian-xia-yi-ge-jiao-yi-qu-jian/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc22%2FSlide8.JPG" alt="图22.8初始交易区间往往预示着出现下一个交易区间"></p><blockquote><p>在图22.8中，<font color="red"><strong>市场头两个小时的区间大约为日均波幅的一半，从而提醒交易者市场有可能发生突破并形成一个上方或下方的交易区间，构成趋势性交易区间交易日</strong></font>。在K线9突破之前，上升趋势已经较为明显。我们注意到，K线5摆动低点高于K线2低点，K线6低点高于K线5低点，K线8低点又高于K线6低点。K线3、4、7这些摆动高点的情况也是一样的。<strong>虽然市场前两个半小时处于交易区间，但无论摆动高点还是摆动低点都呈趋势性上移，意味着在交易区间内可能已经形成一轮上升趋势。此时交易者要提防市场向上突破</strong>(发生在K线9)。上方交易区间一直持续到K线13向上反转之后的突破。<font color="black"><strong>K线11和K线13都属于突破回踩。K线11微型双底跌入下方交易区间之内，但K线13的低点刚好测试了下方交易区间顶部K线7的高点</strong></font>，丝毫不差。<font color="red"><strong>当回踩走势无法跌破突破点，说明多头力量较强。</strong></font></p><p>本图的深入探讨</p><p>在图22.8中，<strong>市场跳空低开，第一根K线为阴线，因此交易日可能成为始于开盘的下跌趋势交易日。</strong><font color="green"><strong>然而K线1上方和下方都有影线，增加了市场形成初始交易区间的概率。在这种情况下，交易者应该耐心等待</strong></font>。<font color="black"><strong>K线2是一个微型双底，但两根K线均为十字星，并非可能引发强劲趋势的建仓形态。连K线4这个形成于均线附近的楔形熊旗都是弱势形态，因为它属于一个6根K线窄幅交易区间的一部分，所有这些K线都有影线。这说明市场存在不确定性（交易区间的主要特征）</strong></font>。<font color="green"><strong>交易者可能会在K线5后面那根内包阳线上方买入</strong></font>，<font color="green"><strong>但在K线4楔形熊旗之后，市场应该会有第二次向下测试。测试发生在K线6并与K线5构成双底</strong></font>（也是对当天低点K线2与后面第三根K线所构成双底的一次双底回踩）。<font color="green"><strong>稳妥的做法是等市场出现进一步的强势信号，比如截至K线7的4根K线急速拉升。</strong></font><strong>不过K线2之后市场已经出现数根强多头趋势K线，这一强势信号足以让我们开始在回调中寻找做多机会。这些长多头趋势K线是买压迹象，而买压是累积性的，最终多头将掌握控制权，市场开始上涨。</strong><font color="green"><strong>在截至K线7的急速拉升之后，市场在K线8后面那根内包阳线上方出现一个突破回踩买入建仓形态，也是一个低2失败买入信号。4根K线后市场出现高2买点，引发K线9强势多头突破。</strong></font></p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第8个案例（图 22.8）<br>第331-333页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.09.初始交易区间可以造成交易区间交易日</title>
      <link href="/2023/06/29/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-09-chu-shi-jiao-yi-qu-jian-ke-yi-zao-cheng-jiao-yi-qu-jian-jiao-yi-ri/"/>
      <url>/2023/06/29/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-09-chu-shi-jiao-yi-qu-jian-ke-yi-zao-cheng-jiao-yi-qu-jian-jiao-yi-ri/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc22%2FSlide9.JPG" alt="图 22.9 初始交易区间可以造成交易区间交易日"></p><blockquote><p><font color="red"><strong>仅仅因为头两个小时区间约为日均波幅的一半，并不意味着一定会发生突破并走出趋势性交易区间交易日。在大约1/3的情况下，市场会同时向上和向下突破，造成区间扩大。</strong></font>图22.9就是如此。市场在K线4和K线6从盘中新低位置向上反转，在K线3、10、12、19、21从盘中新高位置向下反转。<strong>开盘区间可能在从K线5开始的向下反转走势结束，此时区间高度大约为近期日均波幅的一半</strong>。<font color="green"><strong>这提醒交易者市场有可能向上或者向下突破，然后出现等距运动，导致当天振幅大约扩大一倍。然而，简单地在市场突破区间时人场是一种失败的策略，因为市场具有惰性</strong></font>，大部分从趋势转为交易区间、或从交易区间转为趋势的尝试都会失败。<font color="green"><strong>K线6突破至当天新低后并未出现好的做空形态，相反，三连推下跌（K线2、4、6）之后的K线7抬升低点和K线8突破回踩都属于合理的买入信号，可以预期市场测试当天高点。</strong></font></p><p><strong>K线10突破至盘中新高之后向下反转，但市场处于一个窄幅上升通道，因此这里并不是好的卖点。同时，由于上升动能并不是特别强，K线11突破回踩也顶多是一个刮头皮买点。市场从K线12双K线反转形态再次转跌。</strong><font color="green"><strong>在交易区间交易日，反转交易的二次入场点通常是可靠的，至少可以做刮头皮。</strong></font></p><p><strong>在K线16形成楔形牛旗之后，市场创出当天新高，但上攻走势在K线19和K线21再次失败。</strong><font color="green"><strong>由于向上突破已经明显无法获得成功，市场再次尝试向下突破当天低点，最后收于区间中位，这在交易区间交易日是十分常见的。</strong></font></p><p><strong>当开盘区间的上轨和下轨存在几种可能性，通常情况下如何选择并不重要</strong>，因为每个人的看法都不一样。<font color="green"><strong>如果你想设定一个等距运动目标作为锁定利润的位置，刚开始可以使用最窄的情况作为开盘区间，比如从K线2到K线3。如果市场到达这一区域后并未止步，再考虑更宽的可能性</strong></font>，比如从K线3到K线4，或者从K线3到K线6。<strong>由于本例中当天最终形成交易区间交易日，而非趋势性交易区间交易日，因此连最低的等距运动目标都未达到</strong>。不过，<font color="red"><strong>所有反转走势都是程序化交易依据某种等距算法所造成的，它们的交易等式中几乎一定会有某种类型的等距目标，尽管有时候并不明显。</strong></font></p></blockquote><p>注意：本例由初始交易区间演变为交易区间的扩大，而非趋势性交易区间，放在此处以增加对趋势性交易区间解读的更多视角。</p><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第9个案例（图 22.9）<br>第333-334页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22.10.尾盘突破</title>
      <link href="/2023/06/28/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-10-wei-pan-tu-po/"/>
      <url>/2023/06/28/pa/qu-shi-fen-xi/04.chang-jian-qu-shi-xing-tai/22.qu-shi-xing-jiao-yi-qu-jian-jiao-yi-ri/22-10-wei-pan-tu-po/</url>
      
        <content type="html"><![CDATA[<p><img src="https://objectstorage.us-phoenix-1.oraclecloud.com/n/axdikqaqm3dc/b/bucket1/o/pa-price-charts%2Ftrends%2Fc22%2FSlide10.JPG" alt="图 22.10 尾盘突破"></p><blockquote><p><font color="red"><strong>有时候市场初始交易区间约为日均波幅的一半，但直到交易日最后一个小时才发生突破</strong></font>。在图22.10中，虽然已经没有足够时间形成一个真正的上方交易区间，但<font color="orange"><strong>市场全天都处于可能突破并形成趋势性交易区间交易日的状态之中</strong></font>。在突破之前，交易区间高度只有5.25点，而过去11个月中只有两天最终振幅只有5.25点或更低。也就是说，在过去11个月其他交易日，当交易日大部分时间振幅只有5.25点或更低，收盘时都发生了振幅扩大的现象。这使得本例在尾盘向上或向下突破的概率较高。<strong>由于市场在K线7三重底和三角形态之后一直处于上升态势，K线9到K线12之间阳线数量较多，说明市场存在买压，因此向上突破可能性更大。</strong><font color="green"><strong>交易者可能在K线14突破当天高点K线4时买入，或者在K线14这根强突破K线收盘时及其高点上方买入</strong></font>。<br><strong>当天最高点刚好位于从K线3到K线4初始急速拉升走势的</strong><font color="green"><strong>等距运动目标</strong></font>。当然，交易者不可能能知道多头将会在哪个等距运动目标锁定利润，但意识到这些可能性的存在是有帮助的。这样你也可以在市场快速上涨过程中锁定利润，而不是在下跌之后低几个点的位置。除了这种可能性，<strong>市场也可能在从K线1低点到K线2高点或从K线5低点到K线4、6、10、12高点幅度的等距运动目标见顶</strong>。</p></blockquote><hr><p>详见：<br>《高级趋势技术分析 价格行为交易系统之趋势分析》<br>第四篇 常见趋势形态<br>第22章 趋势性交易区间交易日<br>第10个案例（图 22.10）<br>第334-335页</p>]]></content>
      
      
      <categories>
          
          <category> 案例-趋势分析-常见趋势形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 案例-趋势性交易区间交易日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230625-集权社会的运行逻辑</title>
      <link href="/2023/06/25/ri-ji/ri-ji-20230625-ji-quan-she-hui-de-yun-xing-luo-ji/"/>
      <url>/2023/06/25/ri-ji/ri-ji-20230625-ji-quan-she-hui-de-yun-xing-luo-ji/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="7d723c26958c6466a3a7a702fb2e4a6545cbbb1d6dad263086e45d3b66dbe594">775986d9acbb0b15ae59994c4d3eed101f3061455724b96e595a9019c1ef657c08f9f337faccd7eb1c3da77e2e7c58747e8284f7ddfc38bcde7999a12d01afdff980ad17e13fff4b27cc5baa1ebad4775c1ba74957f2d9b469dd2b015732ff3898d9e5e4fbb6f2d58625afca844a0e299949de6fad575133df621622e7d7439643784fa1b494350db0a2eaf617e74ff501b1dc7304c0170351fa215700fa3f2ae927f134f4784ba8910c7ca2f387ad1450089c63816f3c522a15c498ccc522eeb2c77f9d8fff4252d79520a8fae736944de5e52c56bebcc0f2b5bd89e2490380a29fc70d25abb1f8106466156717f777f5307c4333053425faeaafe84fbe60f3f5d052f40a5dc5e978d730c7ce5eea3e67e5310c9d77944ea637dc6174394cceaa11ae15b183ae2c9f12697be61e5b860364cea2e0ce9ae9b02965d3b886239c106b87833515c4637e4f4de3c00049357d38022c47faa1f314c0b194dfe7ad08a9600192e06654179b33a4646e0bff28c24daf818740e74f4306359228322a2032e80855eaecec61d93325c1c288ee866cabed523c7f8fda94ec084fed8b053436b62917bc13512d7648c5f542971680c4c35f201684c4b5873c60ce89a37877873e9df8d29daacf9f044dd9e763b7fb2bc864bd65337d28563326ffbe0464b1d7b7c83812ca0dde75432d8d57a5eb15e2658b86ba74b434ec992178f5c604b6ae68070a56c0ee2a57eb5a958196776e1abfb685a74d175f026691ba807f957f10e18a987fa4dd9d7a7991248ca2221f18e839a486602d172dcdc3f1432168b9e28e4ca59e0231687f6e15078602e0a6bba44a6a771ad9b9b61a88d8aedaf2bf7afe662547f26cfaaa61d2969492ef186c6b1d6911d8795d960efc447bf421134c21b98f13aac9966729309b80c1794158090cff462f0c639ea5f9d3df3cd49fcbc81b0e2ac462fcd6358aa9d6bda395fb69aa84f4d0c8d4ab6af2120df48126a9a4728f8977896100550985314fbf46873495c76e98213ccc9f14bb84a5f11690e6d71ed5e23acf371a63eb6f9115dbec33de0457cf4f210e078d02d23b75f0c94b99f94e9885b89d83b0b6bd419e8229b4c74746990bff81abeaf2570170748b75b334da70de22af823e03456ad6c5e699c4f129cd11b3e801213e48c277301aa94315dae51694b6270f860399f0c2fcb7cb8de153c048c3c6bb09b15a893e45c15afb46b6545b8d0ea183909db33bc2f74e59a7d52f73a2b164b5c27c41d34c860704748b76b8c6690a5a5e6713c740abe0b1a0176ca7f937ce45051c1db59039c8150461ed30bd427456be4ebba8f286c1609e202dc1ebffd604a4ecad68e8b9219f7929e855301cacdd07676677b859a863b08405803c84447087fc65d65c2cdfccb95f975f9d1eca19c08d8f710d2c9a9b6dd243f0b1030a83b4a548a8705f9ac9edbfdd16255711c7e9c7d99a6ec056b58369c4c90cc7f6f67e7928325e38ab9f60ac5738a87bbefec7b60472141324ae4c40f597556a69df1e06a4c59655ca76bfcd311427d0b0e3f7532e19d917d1ee81246dc4c46283a7dd6633b4e976bf90059a91fde0255a4737d7a9dbbb718d887eeb146bc4c4ef23f8117fee4baa63251fe216cff3b5a7a502fe8f8f5089639c6e600022142fd915471f3d4152844fffea9eed3fa8a3f8ebd97cdb5b5196dfaf3c643660df40d6ccdcfd3c1a4c7060bb2cc2822e93e85dac7fff8212</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>capital-K线形态识别系统</title>
      <link href="/2023/06/24/capital/capital-k-xian-xing-tai-shi-bie-xi-tong/"/>
      <url>/2023/06/24/capital/capital-k-xian-xing-tai-shi-bie-xi-tong/</url>
      
        <content type="html"><![CDATA[<p>k线的周期性和分形性是天然的差值和降维算法，高级的未必是适合的，在k线形态识别上，AI未必优于简单的概率统计。</p><p>模型调优：</p><ul><li>模型的灵敏度取决于前置状态的丰富度</li><li>模型的准确度取决于后置状态的丰富度</li><li>模型分类的数量取决于样本k线的长度</li></ul><p><img src="/static/capital/%E5%88%86%E7%B1%BB%E5%99%A8.png" alt="K线形态识别系统"></p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Capital </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Iphone-更换地区解锁应用商店</title>
      <link href="/2023/06/23/yun-wei/iphone-geng-huan-di-qu-jie-suo-ying-yong-shang-dian/"/>
      <url>/2023/06/23/yun-wei/iphone-geng-huan-di-qu-jie-suo-ying-yong-shang-dian/</url>
      
        <content type="html"><![CDATA[<ol><li>去设置里将国家设为美国</li><li>去应用商店里将国家设为台湾（无需验证，验证时会自动跳过）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Iphone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K线形态-光K线</title>
      <link href="/2023/06/22/k-xian-xing-tai/k-xian-xing-tai-guang-k-xian/"/>
      <url>/2023/06/22/k-xian-xing-tai/k-xian-xing-tai-guang-k-xian/</url>
      
        <content type="html"><![CDATA[<p>一端或两端没有影线的K线<br>只有当其形成于强趋势之中，才是一个建仓形态<br>（比如在强劲上升趋势中，如果出现一根没有上影线或下影线的多头趋势K线，那么它就是一个买入形态）</p>]]></content>
      
      
      <categories>
          
          <category> K线形态 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K线形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-计算皮尔逊相关系数</title>
      <link href="/2023/06/21/template/javascript-ji-suan-pi-er-xun-xiang-guan-xi-shu/"/>
      <url>/2023/06/21/template/javascript-ji-suan-pi-er-xun-xiang-guan-xi-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算皮尔逊相关系数</span><span class="token keyword">function</span> <span class="token function">pearsonCorrelation</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> sum1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum1Sq <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum2Sq <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> pSum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum1 <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        sum2 <span class="token operator">+=</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        sum1Sq <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sum2Sq <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pSum <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> num <span class="token operator">=</span> pSum <span class="token operator">-</span> <span class="token punctuation">(</span>sum1 <span class="token operator">*</span> sum2<span class="token punctuation">)</span> <span class="token operator">/</span> n<span class="token punctuation">;</span>    <span class="token keyword">let</span> den <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>        <span class="token punctuation">(</span>sum1Sq <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>sum1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>sum2Sq <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>sum2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> n<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>den <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> num <span class="token operator">/</span> den<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算相似度 (0-1，值越大越相似)</span><span class="token keyword">function</span> <span class="token function">pccSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">pearsonCorrelation</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 分类算法 </tag>
            
            <tag> 皮尔逊相关系数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-计算余弦相似度</title>
      <link href="/2023/06/21/template/javascript-ji-suan-yu-xian-xiang-si-du/"/>
      <url>/2023/06/21/template/javascript-ji-suan-yu-xian-xiang-si-du/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算余弦相似度</span><span class="token keyword">function</span> <span class="token function">cosineSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> dotProduct <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> magnitude1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> magnitude2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        dotProduct <span class="token operator">+=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        magnitude1 <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        magnitude2 <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    magnitude1 <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>magnitude1<span class="token punctuation">)</span><span class="token punctuation">;</span>    magnitude2 <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>magnitude2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>magnitude1 <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> magnitude2 <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> dotProduct <span class="token operator">/</span> <span class="token punctuation">(</span>magnitude1 <span class="token operator">*</span> magnitude2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 分类算法 </tag>
            
            <tag> 余弦相似度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-计算曼哈顿距离</title>
      <link href="/2023/06/21/template/javascript-ji-suan-man-ha-dun-ju-chi/"/>
      <url>/2023/06/21/template/javascript-ji-suan-man-ha-dun-ju-chi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算曼哈顿距离</span><span class="token keyword">function</span> <span class="token function">manhattanDistance</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> sum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算相似度</span><span class="token keyword">function</span> <span class="token function">manhattanSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token function">manhattanDistance</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 分类算法 </tag>
            
            <tag> 曼哈顿距离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-计算斯皮尔曼等级相关系数</title>
      <link href="/2023/06/21/template/javascript-ji-suan-si-pi-er-man-deng-ji-xiang-guan-xi-shu/"/>
      <url>/2023/06/21/template/javascript-ji-suan-si-pi-er-man-deng-ji-xiang-guan-xi-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 计算斯皮尔曼等级相关系数</span><span class="token keyword">function</span> <span class="token function">spearmanRankCorrelation</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 计算排名</span>    <span class="token keyword">function</span> <span class="token function">rank</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> sorted <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> sorted<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> rankS <span class="token operator">=</span> <span class="token function">rank</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> rankT <span class="token operator">=</span> <span class="token function">rank</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> dSquaredSum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        dSquaredSum <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>rankS<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> rankT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> dSquaredSum<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算相似度 (0-1，值越大越相似)</span><span class="token keyword">function</span> <span class="token function">spearmanRankSimilarity</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">spearmanRankCorrelation</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 分类算法 </tag>
            
            <tag> 斯皮尔曼等级相关系数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-使用条件概率表达式计算对象数组的条件概率</title>
      <link href="/2023/06/20/template/javascript-shi-yong-tiao-jian-gai-lu-biao-da-shi-ji-suan-dui-xiang-shu-zu-de-tiao-jian-gai-lu/"/>
      <url>/2023/06/20/template/javascript-shi-yong-tiao-jian-gai-lu-biao-da-shi-ji-suan-dui-xiang-shu-zu-de-tiao-jian-gai-lu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">calculateProbability</span><span class="token punctuation">(</span><span class="token parameter">inputObjArr<span class="token punctuation">,</span> expression</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 解析表达式</span>    <span class="token keyword">let</span> match <span class="token operator">=</span> expression<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^P\((.*)\)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'无效的表达式'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> conditions <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s*\|\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> mainConditions <span class="token operator">=</span> conditions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s*,\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> givenConditions <span class="token operator">=</span> conditions<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s*,\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 解析条件</span>    <span class="token keyword">function</span> <span class="token function">parseCondition</span><span class="token punctuation">(</span><span class="token parameter">condition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> match <span class="token operator">=</span> condition<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([a-zA-Z]+)\s*([&lt;&gt;])\s*([\d.-]+)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'无效的条件'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            <span class="token literal-property property">dimension</span><span class="token operator">:</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">operator</span><span class="token operator">:</span> match<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> mainConditionsParsed <span class="token operator">=</span> mainConditions<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseCondition<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> givenConditionsParsed <span class="token operator">=</span> givenConditions<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>parseCondition<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 计算概率</span>    <span class="token keyword">let</span> givenCount <span class="token operator">=</span> inputObjArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">point</span> <span class="token operator">=&gt;</span> givenConditionsParsed<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span>operator <span class="token operator">===</span> <span class="token string">'&gt;'</span> <span class="token operator">?</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&gt;</span> condition<span class="token punctuation">.</span>threshold <span class="token operator">:</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&lt;</span> condition<span class="token punctuation">.</span>threshold<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>givenCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> count <span class="token operator">=</span> inputObjArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">point</span> <span class="token operator">=&gt;</span> mainConditionsParsed<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span>operator <span class="token operator">===</span> <span class="token string">'&gt;'</span> <span class="token operator">?</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&gt;</span> condition<span class="token punctuation">.</span>threshold <span class="token operator">:</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&lt;</span> condition<span class="token punctuation">.</span>threshold<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> givenConditionsParsed<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">condition</span> <span class="token operator">=&gt;</span> condition<span class="token punctuation">.</span>operator <span class="token operator">===</span> <span class="token string">'&gt;'</span> <span class="token operator">?</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&gt;</span> condition<span class="token punctuation">.</span>threshold <span class="token operator">:</span> point<span class="token punctuation">[</span>condition<span class="token punctuation">.</span>dimension<span class="token punctuation">]</span> <span class="token operator">&lt;</span> condition<span class="token punctuation">.</span>threshold<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">return</span> count <span class="token operator">/</span> givenCount<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> pointArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> probability <span class="token operator">=</span> <span class="token function">calculateProbability</span><span class="token punctuation">(</span>pointArr<span class="token punctuation">,</span> <span class="token string">'P(a &gt; 2 | b &gt; 3)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>probability<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 条件概率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-计算两个数组之间的DTW距离</title>
      <link href="/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-dtw-ju-chi/"/>
      <url>/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-dtw-ju-chi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 归一化</span><span class="token keyword">function</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算二维数组的距离</span><span class="token keyword">function</span> <span class="token function">euclideanDistance</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum <span class="token operator">+=</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算DTW距离</span><span class="token keyword">function</span> <span class="token function">dtw</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> t<span class="token punctuation">,</span> dist</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> m <span class="token operator">=</span> t<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> <span class="token constant">DTW</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token constant">DTW</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token constant">DTW</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> cost <span class="token operator">=</span> <span class="token function">dist</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token constant">DTW</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> cost <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token constant">DTW</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DTW</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">DTW</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token constant">DTW</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 去重，保留相似序列片段中相似度最大的值</span><span class="token keyword">function</span> <span class="token function">deduplication</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span>    keys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> keys<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>            maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token comment">// 计算两个数组之间的DTW距离，找出与inputArr的所有相似序列片段</span><span class="token keyword">function</span> <span class="token function">findSimilarSegmentsDTW</span><span class="token punctuation">(</span><span class="token parameter">inputArr<span class="token punctuation">,</span> largeArr<span class="token punctuation">,</span> threshold <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">,</span> windowSize <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    windowSize <span class="token operator">=</span> windowSize <span class="token operator">||</span> inputArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> nInputArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>inputArr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> similarityDict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> largeArr<span class="token punctuation">.</span>length <span class="token operator">-</span> windowSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> subArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>largeArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> windowSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> similarity <span class="token operator">=</span> <span class="token function">dtw</span><span class="token punctuation">(</span>nInputArr<span class="token punctuation">,</span> subArr<span class="token punctuation">,</span> euclideanDistance<span class="token punctuation">)</span>        similarity <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> similarity<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>similarity <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span> <span class="token punctuation">{</span>            similarityDict<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> similarity<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// return deduplication(similarityDict);</span>    <span class="token keyword">return</span> similarityDict<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> DTW </tag>
            
            <tag> 分类算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-计算两个数组之间的欧几里得距离</title>
      <link href="/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-ou-ji-li-de-ju-chi/"/>
      <url>/2023/06/20/template/javascript-ji-suan-liang-ge-shu-zu-zhi-jian-de-ou-ji-li-de-ju-chi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 归一化</span><span class="token keyword">function</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 计算欧几里得距离</span><span class="token keyword">function</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> similarity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> distance <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            distance <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        similarity <span class="token operator">+=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> similarity <span class="token operator">/</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 去重，保留相似序列片段中相似度最大的值</span><span class="token keyword">function</span> <span class="token function">deduplication</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span>    keys<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> keys<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> maxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>            maxKey <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            maxValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    result<span class="token punctuation">[</span>maxKey<span class="token punctuation">]</span> <span class="token operator">=</span> maxValue<span class="token punctuation">;</span>    <span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token comment">// 计算两个数组之间的欧几里得距离，找出与inputArr的所有相似序列片段</span><span class="token keyword">function</span> <span class="token function">findSimilarSegments</span><span class="token punctuation">(</span><span class="token parameter">inputArr<span class="token punctuation">,</span> largeArr<span class="token punctuation">,</span> threshold <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">,</span> windowSize <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    windowSize <span class="token operator">=</span> windowSize <span class="token operator">||</span> inputArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token keyword">let</span> nInputArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>inputArr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> similarityDict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> largeArr<span class="token punctuation">.</span>length <span class="token operator">-</span> windowSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> subArr <span class="token operator">=</span> <span class="token function">normalizeSegment</span><span class="token punctuation">(</span>largeArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> windowSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> similarity <span class="token operator">=</span> <span class="token function">calculateSimilarity</span><span class="token punctuation">(</span>nInputArr<span class="token punctuation">,</span> subArr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>similarity <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span> <span class="token punctuation">{</span>            similarityDict<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> similarity<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// return deduplication(similarityDict);</span>    <span class="token keyword">return</span> similarityDict<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 分类算法 </tag>
            
            <tag> 欧几里得距离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-数组转SVG</title>
      <link href="/2023/06/20/template/javascript-shu-zu-zhuan-svg/"/>
      <url>/2023/06/20/template/javascript-shu-zu-zhuan-svg/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">svgHtmlByArr</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> color<span class="token punctuation">,</span> strokeWidth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> maxValue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> minValue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> xStep <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> svg <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;svg width="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>width<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">" height="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>height<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    svg <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;polyline points="</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">-</span> minValue<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>maxValue <span class="token operator">-</span> minValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> height<span class="token punctuation">;</span>        <span class="token keyword">const</span> x <span class="token operator">=</span> index <span class="token operator">*</span> xStep<span class="token punctuation">;</span>        svg <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>height <span class="token operator">-</span> y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    svg <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">" style="fill:none;stroke:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;stroke-width:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>strokeWidth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">" /&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    svg <span class="token operator">+=</span> <span class="token string">'&lt;/svg&gt;'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> svg<span class="token punctuation">}</span><span class="token keyword">const</span> svgHtml <span class="token operator">=</span> <span class="token function">svgHtmlByArr</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">'black'</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> SVG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Caddy2-反向代理到其他端口</title>
      <link href="/2023/06/16/template/caddy2-fan-xiang-dai-li-dao-qi-ta-duan-kou/"/>
      <url>/2023/06/16/template/caddy2-fan-xiang-dai-li-dao-qi-ta-duan-kou/</url>
      
        <content type="html"><![CDATA[<ul><li><code>handle_path</code>: 代理时去除前缀</li><li><code>route</code>: 代理时不去除前缀</li></ul><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">xxx.site</span> <span class="token value attr-value">{</span><span class="token key attr-name">    root</span> <span class="token value attr-value">* /usr/share/caddy</span>    file_server<span class="token key attr-name">    log</span> <span class="token value attr-value">{</span><span class="token key attr-name">        output</span> <span class="token value attr-value">file /var/log/caddy/access.log</span>    }<span class="token key attr-name">    tls</span> <span class="token value attr-value">xxx@gmail.com</span><span class="token key attr-name">    tls</span> <span class="token value attr-value">{</span><span class="token key attr-name">        protocols</span> <span class="token value attr-value">tls1.2 tls1.3</span><span class="token key attr-name">        ciphers</span> <span class="token value attr-value">TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256</span>    }<span class="token key attr-name">    route</span> <span class="token value attr-value">/path/* {</span><span class="token key attr-name">        reverse_proxy</span> <span class="token value attr-value">http://xxx.site:18000</span>    }    <span class="token key attr-name">    handle_path</span> <span class="token value attr-value"> /path_server/* {</span><span class="token key attr-name">        reverse_proxy</span> <span class="token value attr-value">http://xxx.site:15000 </span>    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> config-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Caddy2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes-kubectl 报错 The connection to the server localhost:8080 was refused</title>
      <link href="/2023/06/14/yun-wei/kubernetes-kubectl-bao-cuo-the-connection-to-the-server-localhost-8080-was-refused/"/>
      <url>/2023/06/14/yun-wei/kubernetes-kubectl-bao-cuo-the-connection-to-the-server-localhost-8080-was-refused/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"export KUBECONFIG=/etc/kubernetes/admin.conf"</span> <span class="token operator">&gt;&gt;</span> /etc/profile<span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes-kubeadm init 报错 unknown service runtime.v1.RuntimeService</title>
      <link href="/2023/06/14/yun-wei/kubernetes-kubeadm-init-bao-cuo-unknown-service-runtime-v1-runtimeservice/"/>
      <url>/2023/06/14/yun-wei/kubernetes-kubeadm-init-bao-cuo-unknown-service-runtime-v1-runtimeservice/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 移除 /etc/containerd/config.toml</span><span class="token function">mv</span> /etc/containerd/config.toml /root/config.toml.baksystemctl restart containerdkubeadm init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis-单线程+IO多路复用+SCAN</title>
      <link href="/2023/06/13/it/redis-dan-xian-cheng-io-duo-lu-fu-yong-scan/"/>
      <url>/2023/06/13/it/redis-dan-xian-cheng-io-duo-lu-fu-yong-scan/</url>
      
        <content type="html"><![CDATA[<h2 id="单线程">单线程</h2><p><font color="orange">Redis 的单线程主要是指 Redis 的网络 IO 和键值对读写是由一个线程来完成的</font>，这也是 Redis 对外提供键值存储服务的主要流程。但 Redis 的其他功能，比如<font color="orange">持久化、异步删除、集群数据同步等，其实是由额外的线程执行的。</font></p><p>因为它所有的数据都在内存中，所有的运算都是内存级别的运算，而且<font color="orange">单线程避免了多线程的切换性能损耗问题</font>。正因为 Redis 是单线程，所以要<font color="orange">小心使用耗时的指令(比如keys)</font>，一不小心就可能会导致 Redis 卡顿。</p><h2 id="IO多路复用">IO多路复用</h2><p>Redis的IO多路复用：<font color="orange">redis利用epoll来实现IO多路复用</font>，将连接信息和事件放到队列中，依次放到文件事件分派器，事件分派器将事件分发给事件处理器。<br>查看redis支持的最大连接数，在redis.conf文件中可修改：<code>CONFIG GET maxclients</code><br><img src="/static/IT/Redis/Redis-IO.png" alt="IO多路复用"></p><h2 id="SCAN">SCAN</h2><p><code>KEYS</code>是全量遍历，当数据量大时，性能很差，应用SCAN取代（手动分段遍历，直到游标为0停止遍历）<br><code>SCAN 0 match jxch** count 100</code><br>以0为游标，分段扫描以jxch开头的key，每次返回100个，然后<font color="orange">以返回值为游标，继续扫描，直到返回的游标为0</font><br>注意，100是个参考值，实际返回的是接近100的数目，可能多也可能少（取决于HASH桶中有几个值，因为Redis的存储结构是哈希表）</p><p>如果在scan的过程中如果有键的变化（增加、 删除、 修改） ，那么遍历效果可能会碰到如下问题： 新增的键可能没有遍历到（不会扫描已经遍历过的HASH桶）， 遍历出了重复的键（发生了RE-HASH）等情况， 也就是说<font color="orange">SCAN并不能保证完整的遍历出来所有的键</font>，这些是我们在开发时需要考虑的，但在追求性能的情况下，往往并不要求一致性。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-自动配置流程</title>
      <link href="/2023/06/11/it/springboot-zi-dong-pei-zhi-liu-cheng/"/>
      <url>/2023/06/11/it/springboot-zi-dong-pei-zhi-liu-cheng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableAutoConfiguration</span>    <span class="token annotation punctuation">@AutoConfigurationPackage</span>    <span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoConfigurationImportSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector</span><span class="token punctuation">)</span>         <span class="token function">getImportGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token class-name">AutoConfigurationGroup</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector<span class="token punctuation">.</span>Group</span>            <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token function">getAutoConfigurationEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token class-name">ImportCandidates</span><span class="token punctuation">.</span>load  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token operator">/</span><span class="token operator">%</span>s<span class="token punctuation">.</span>imports                <span class="token function">getConfigurationClassFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token class-name">AutoConfigurationMetadataLoader</span><span class="token punctuation">.</span>loadMetadata  <span class="token operator">-&gt;</span>  <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token operator">-</span>autoconfigure<span class="token operator">-</span>metadata<span class="token punctuation">.</span>properties                <span class="token function">fireAutoConfigurationImportEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token operator">-&gt;</span>  <span class="token class-name">SpringFactoriesLoader</span><span class="token punctuation">.</span>loadFactories  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories            <span class="token function">selectImports</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>  <span class="token function">sortAutoConfigurations</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token operator">-&gt;</span>  <span class="token annotation punctuation">@AutoConfigureOrder</span> <span class="token operator">&amp;</span> <span class="token annotation punctuation">@AutoConfigureBefore</span> <span class="token operator">&amp;</span> <span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token annotation punctuation">@ComponentScan</span> <span class="token operator">-&gt;</span>  excludeFilters    <span class="token class-name">AutoConfigurationExcludeFilter</span> <span class="token operator">-&gt;</span>  <span class="token function">isAutoConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories        <span class="token class-name">TypeExcludeFilter</span>   <span class="token operator">-&gt;</span>   <span class="token class-name">ApplicationContextInitialize</span>  <span class="token operator">-&gt;</span>   <span class="token constant">META</span><span class="token operator">-</span><span class="token constant">INF</span><span class="token operator">/</span>spring<span class="token punctuation">.</span>factories<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/static/IT/SpringCloud/SpringBootAutoConfiguration.png" alt="SpringBoot 自动配置流程"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-核心流程模拟实现</title>
      <link href="/2023/06/10/it/springboot-he-xin-liu-cheng-mo-ni-shi-xian/"/>
      <url>/2023/06/10/it/springboot-he-xin-liu-cheng-mo-ni-shi-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="核心流程">核心流程</h2><p>模拟springboot注意事项（启动流程，自动装配，依赖控制）：</p><ol><li>springboot选择一个webserver启动（只能有一个），run启动spring容器，将app作为配置类，随后启动webserver</li><li>根据依赖选择哪个bean生效（当存在哪些类或Bean且不存在哪些类或Bean时生效）</li><li>根据spi自动装配（DeferredImportSelector- 用户自定义bean优先）</li><li>最终项目通过自定义依赖来保证只有一个tomcat容器功能（核心项目实现其他容器功能时需要全部依赖，但是不将这些依赖打入自己的jar包）</li><li>使用ASM绕过类加载器读取class文件注解，避免没有相关依赖时运行报错（class文件不会在编译期报错）</li></ol><p>第四条和第五条由于过于复杂，并未实现，这里只是简单说明</p><pre class="line-numbers language-none"><code class="language-none">项目结构    boot-core 模拟springboot    boot-bean 模拟自定义项目的自动装配，需要boot-core依赖    boot-app  模拟引用boot-core和boot-bean创建app<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="boot-默认启动-Tomcat（boot-core）">boot 默认启动 Tomcat（boot-core）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ComponentScan</span><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoImport</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SpringBootApp</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> app<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">AnnotationConfigWebApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigWebApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        applicationContext<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>        applicationContext<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">WebServer</span> webServer <span class="token operator">=</span> <span class="token function">getWebServer</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">;</span>        webServer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">WebServer</span> <span class="token function">getWebServer</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">AnnotationConfigWebApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">WebServer</span><span class="token punctuation">&gt;</span></span> webServers <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeansOfType</span><span class="token punctuation">(</span><span class="token class-name">WebServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>webServers<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">"请引入WebServer的依赖，如Tomcat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>webServers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"只能保留一个WebServer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> webServers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span><span class="token string">"classpath:application.properties"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebServerAutoConfig</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">,</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">WebApplicationContext</span> applicationContext<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${server.port}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> port<span class="token punctuation">;</span>         <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">Tomcat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">WebServer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">TomcatWebServer</span> <span class="token function">tomcatWebServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Tomcat</span> tomcat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tomcat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Server</span> server <span class="token operator">=</span> tomcat<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Service</span> service <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">findService</span><span class="token punctuation">(</span><span class="token string">"Tomcat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connector</span> connector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        connector<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Engine</span> engine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        engine<span class="token punctuation">.</span><span class="token function">setDefaultHost</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Host</span> host <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        host<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> contextPath <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">addLifecycleListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Tomcat<span class="token punctuation">.</span>FixContextListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        host<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        engine<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">;</span>        service<span class="token punctuation">.</span><span class="token function">setContainer</span><span class="token punctuation">(</span>engine<span class="token punctuation">)</span><span class="token punctuation">;</span>        service<span class="token punctuation">.</span><span class="token function">addConnector</span><span class="token punctuation">(</span>connector<span class="token punctuation">)</span><span class="token punctuation">;</span>        tomcat<span class="token punctuation">.</span><span class="token function">addServlet</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">,</span> <span class="token string">"dispatcher"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span>applicationContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">addServletMappingDecoded</span><span class="token punctuation">(</span><span class="token string">"/*"</span><span class="token punctuation">,</span> <span class="token string">"dispatcher"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TomcatWebServer</span><span class="token punctuation">(</span>tomcat<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">WebApplicationContext</span><span class="token punctuation">)</span> applicationContext<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>使用 <code>ConditionalOnClass</code> 保证只有引入 <code>Tomcat</code> 依赖时这个 <code>Bean</code> 才会生效</li><li>使用 <code>ConditionalOnMissingBean</code> 保证只在没有 <code>WebServer</code> 时这个 <code>Bean</code> 才会生效，保证只有一个 <code>WebServer</code> 且用户自定义的优先</li><li>此处可以加入多个 <code>WebServer</code> 的实现，如 <code>Jetty</code>, 客户端控制引入的依赖决定使用哪个 <code>WebServer</code></li><li>打包时分开打包，不将这些依赖打入自己的 <code>jar</code> 包，最终 <code>spring-boot-starter-web</code> 再引入默认的依赖，比如 <code>Tomcat</code></li><li>此处并不会因为依赖类的缺失而报错，因为使用了 <code>ASM</code> 技术绕过了类加载器进行 <code>class</code> 文件注解的读取</li><li>但最终 <code>ConditionalOnClass</code> 验证是否存在这个类时，还是使用了类加载器是否报错来确定的</li></ol><h2 id="使用SPI支持自动配置（boot-core）">使用SPI支持自动配置（boot-core）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置SPI文件，对应的类必须实现了 <code>AutoConfig</code> 接口<br><code>META-INF/services/org.jxch.study.studyspringcloud.boot.core.AutoConfig</code></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">org.jxch.study.studyspringcloud.boot.core.webserver.WebServerAutoConfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用<code>DeferredImportSelector</code>保证先扫描用户自定义的<code>Bean</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoImport</span> <span class="token keyword">implements</span> <span class="token class-name">DeferredImportSelector</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@NonNull</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">selectImports</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">AnnotationMetadata</span> importingClassMetadata<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">StreamSupport</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">AutoConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">spliterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>autoConfig <span class="token operator">-&gt;</span> autoConfig<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SPI自定义项目的自动装配（boot-bean）">SPI自定义项目的自动装配（boot-bean）</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用 <code>ConditionalOnMissingBean</code> 保证只在没有 <code>BeanTest</code> 时这个 <code>Bean</code> 才会生效，即用户自定义的 <code>Bean</code> 优先配置</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanAutoConfig</span> <span class="token keyword">implements</span> <span class="token class-name">AutoConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">BeanTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">BeanTest</span> <span class="token function">beanTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置SPI文件<br><code>META-INF/services/org.jxch.study.studyspringcloud.boot.core.AutoConfig</code></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">org.jxch.study.studyspringcloud.boot.bean.BeanAutoConfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试（boot-app）">测试（boot-app）</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8088</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApp</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootApp</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApp</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">BootApp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">BeanTest</span> beanTest<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/test"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>beanTest<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span>    <span class="token comment">// 验证用户自定义的 Bean 优先使用</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">BeanTest</span> <span class="token function">beanTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BeanTest</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖（boot-core）">依赖（boot-core）</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>6.0.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>11.0.0-M7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-集成MinIO</title>
      <link href="/2023/06/09/template/springboot-ji-cheng-minio/"/>
      <url>/2023/06/09/template/springboot-ji-cheng-minio/</url>
      
        <content type="html"><![CDATA[<h2 id="集成">集成</h2><p>WEB界面创建 order-bucket 桶和 access-key（生成 secret-key）</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">minio</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">9010</span>  <span class="token key atrule">access-key</span><span class="token punctuation">:</span> 6uajU1xXhYt1X3SvJnoo  <span class="token key atrule">secret-key</span><span class="token punctuation">:</span> rePumpyhi8sHaLzqXtBzOHJZ0bUB3JOijhjZY6oX  <span class="token key atrule">bucket-name</span><span class="token punctuation">:</span> order<span class="token punctuation">-</span>bucket<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Builder</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"minio"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioProperty</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> endpoint<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> accessKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> secretKey<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">MinioClient</span> <span class="token function">minioClient</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">MinioProperty</span> minioProperty<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">MinioClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">endpoint</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">credentials</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> minioProperty<span class="token punctuation">.</span><span class="token function">getSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MinioClient</span> minioClient<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MinioProperty</span> minioProperty<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">PutObjectArgs</span> args <span class="token operator">=</span> <span class="token class-name">PutObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        minioClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">GetObjectArgs</span> args <span class="token operator">=</span> <span class="token class-name">GetObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>minioProperty<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> content <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">MinioServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">MinioService</span> minioService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        minioService<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token string">"order-test"</span><span class="token punctuation">,</span> <span class="token string">"E:\\work\\jxch-study\\study-springcloud\\study-springcloud\\cloud-order\\src\\main\\resources\\order-test1.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        minioService<span class="token punctuation">.</span><span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token string">"order-test"</span><span class="token punctuation">,</span> <span class="token string">"E:\\work\\jxch-study\\study-springcloud\\study-springcloud\\cloud-order\\src\\main\\resources\\order-test1-d.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="MinIO-伪分布式部署">MinIO 伪分布式部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9010:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9011:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>  <span class="token key atrule">minio2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9020:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9021:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MinIO </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO-分布式部署</title>
      <link href="/2023/06/09/yun-wei/minio-fen-bu-shi-bu-shu/"/>
      <url>/2023/06/09/yun-wei/minio-fen-bu-shi-bu-shu/</url>
      
        <content type="html"><![CDATA[<p>密码和KEY至少8位数</p><h2 id="Docker-Compose-伪分布式部署">Docker Compose 伪分布式部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9010:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9011:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio1-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>  <span class="token key atrule">minio2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> minio/minio    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9020:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9021:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-1:/data1'</span>      <span class="token punctuation">-</span> <span class="token string">'./data/minio2-2:/data2'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> server <span class="token punctuation">-</span><span class="token punctuation">-</span>console<span class="token punctuation">-</span>address "<span class="token punctuation">:</span>9001" http<span class="token punctuation">:</span>//minio<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span>/data<span class="token punctuation">{</span>1<span class="token punctuation">...</span>2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDD-主要概念</title>
      <link href="/2023/06/09/it/ddd-zhu-yao-gai-nian/"/>
      <url>/2023/06/09/it/ddd-zhu-yao-gai-nian/</url>
      
        <content type="html"><![CDATA[<ol><li>软件的核心复杂性<br>a. 技术主动理解业务（<font color="orange">领域驱动</font>）<br>b. “<font color="orange">刚刚好</font>”解决问题（兼顾灵活性-分层抽象）</li><li>领域设计<br>a. 构建<font color="orange">领域地图</font>（边界）<br>b. 使用<font color="orange">四层架构</font><br>c. 领域的内敛（<font color="orange">业务上的限界</font>，而非技术上的隔离）<br>d. <font color="orange">单体优先</font> -&gt; 拆分成微服务</li><li>DDD 架构（构建通用型领域仓库）<br>a. 包结构： <pre class="line-numbers language-none"><code class="language-none">applicationdomain    xxx     adaptor          interface     entity      infrastructure     repository     service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/static/IT/DDD/DDD-NS.png" alt="领域-菱形架构"><br><img src="/static/IT/DDD/DDD-d.png" alt="DDD 设计方案"></li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDD-通用型领域</title>
      <link href="/2023/06/09/it/ddd-tong-yong-xing-ling-yu/"/>
      <url>/2023/06/09/it/ddd-tong-yong-xing-ling-yu/</url>
      
        <content type="html"><![CDATA[<p>可以<font color="orange">构建领域仓库，实现领域复用</font>：也可以用于优化中台战略，并且取缔大中台（中台拆分），因为一个中台组不可能同时满足所有其他项目组的需求</p><p>通过消息契约层，不光保证逻辑边界清晰，同时也保证数据边界也很清晰<br><img src="/static/IT/DDD/DDD-NS.png" alt="领域-菱形架构"></p><p><img src="/static/IT/DDD/DDD-clear.png" alt="领域-清晰架构"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDD-领域划分设计</title>
      <link href="/2023/06/09/it/ddd-ling-yu-hua-fen-she-ji/"/>
      <url>/2023/06/09/it/ddd-ling-yu-hua-fen-she-ji/</url>
      
        <content type="html"><![CDATA[<p><font color="orange">高内聚，低耦合</font>：单一职责原则、依赖反转原则、开放封闭原则</p><ol><li><font color="orange">构建领域地图（边界）</font><br>a. 在DDD中推荐了<font color="orange">事件风暴会议</font>这样的具体形式，也强调了<font color="orange">统一语言</font>的理论模型。<br>b. 针对各个核心环节，优先构建单元测试案例，从而形成一些<font color="orange">TDD</font>测试驱动设计的实践场景。<br>c. 领域并不是天然存在的，这需要依赖于软件团队对软件需求的合理分析。并且分析的过程，即不能太过偏向于真实的业务领域，也不能太过偏向于极度抽象的技术领域，需要在整个项目团队内形成共识，然后通过初步抽象的通用语言将设计结果固化下来。</li><li>使用<font color="orange">四层架构</font>巩固领域基础（包结构） <pre class="line-numbers language-none"><code class="language-none">applicationdomain    xxx     adaptor          interface     entity      infrastructure     repository     service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><font color="orange">划分限界上下文</font>，巩固领域划分（DDD落地实践的关键）<br>a. 传统MVC设计方式中，强调的是技术隔离，而并没有从业务上的限界上下文边界，所以，逻辑边界是混乱的。<br>b. 领域应该是<font color="orange">足够内敛</font>的，每个领域内的业务能力是与当前领域的知识语境紧密相连的。一个领域想要调用另外一个领域的业务能力，只能通过对方暴露出来的业务能力进行协作，而不能去干预对方领域的实现细节。所谓的单体架构、微服务架构、甚至包括MQ事件驱动架构，在DDD的视野中，都是领域之间的不同协作方式而已，对领域内部都是没有影响的。<br>c. <img src="/static/IT/DDD/DDD-neilian.png" alt="DDD 内敛"></li><li><font color="orange">单体架构优先</font>（SPI）<br>a. 越是复杂的项目，就越应该重视单体架构的快速验证和快速试错，这对于提高复杂项目的运行效率是非常重要的<br>b. 然后将单体架构中的关键领域拆分成微服务（比如SPI切换为Nacos，由于有防腐层，所以只需要切换抽象接口的实现类即可）</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDD-MVC与DDD四层架构</title>
      <link href="/2023/06/09/it/ddd-mvc-yu-ddd-si-ceng-jia-gou/"/>
      <url>/2023/06/09/it/ddd-mvc-yu-ddd-si-ceng-jia-gou/</url>
      
        <content type="html"><![CDATA[<p>一个需求非常确定的项目，不管多复杂，都没有必要非转型成DDD，短平快的设计方式更为快捷。<br>如果项目中有很多不确定性，以往的设计模式会遇到非常多的变数，这时DDD就是一个很好的选项了。</p><h2 id="DDD-重构">DDD 重构</h2><ol><li>抽象数据持久层 - 建立<font color="orange">仓库</font>（让业务逻辑不再需要面向数据库编程，而是面向实体编程）</li><li>ACL <font color="orange">防腐层</font> - 抽象第三方服务（防止第三方服务状态不可控，入参出参强耦合的问题）</li><li>重构业务逻辑<br>a. 使用<font color="orange">值对象</font>（具有业务意义的对象）<br>i. 比如做参数校验，避免类似逻辑分散出去，污染系统代码<br>b. 使用<font color="orange">充血模型</font>改造实体类，保留改变状态的方法<br>c. 使用<font color="orange">领域服务封装实体逻辑</font>（跨领域对象的行为）</li></ol><p>改造之后：</p><ol><li>最底层不再是数据库，而是实体(Entity)，值对象(ValueObject)，领域服务(Domain Service)。这些对象都不依赖任何外部服务和框架。这些对象可以打包成一个领域层(Domain Layer)。<font color="orange">领域层没有任何外部依赖关系</font>。</li><li>原有的Service层，经过重新编排后，只依赖于一些抽象出来的防腐层(ACL)和仓库工厂(Repository)。他们的具体实现都是通过依赖注入进来的。他们一起负责整个组件的编排，这样就可以把他们打包成一个应用层(Application Layer)。<font color="orange">应用层依赖领域层，但是不依赖具体实现</font>。</li><li>最后是一些与外部依赖打交道的组件。这些组件的实现通常依赖外部具体的技术实现和框架，可以统称为<font color="orange">基础设施层</font>(Infrastructure Layer)。</li></ol><p>开发业务时，可以优先开发领域层的业务逻辑，然后再写应用层的服务编排，而具体的外部依赖与具体实现可以最后再完成。整体就形成了一种以<font color="orange">领域优先</font>的架构形式。</p><p><img src="/static/IT/DDD/DDD4.png" alt="DDD 四层架构"></p><hr><h2 id="传统-MVC-事务脚本式编码的问题">传统 MVC 事务脚本式编码的问题</h2><ol><li>代码层面的软件老化风险（代码不断膨胀）<br>a. 数据来源被固定<br>b. 业务逻辑无法复用<br>c. 业务逻辑与数据存储相互依赖</li><li>架构层面的软件老化风险（不敢升级，不敢写新功能）<br>a. 数据结构变更<br>b. JDBC依赖调整<br>c. 第三方服务变更<br>d. MQ中间件调整</li><li>随之而来的实施及测试问题<br>a. 设施搭建困难（依赖的外部组件太多）<br>b. 测试用例覆盖困难</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDD-软件的核心复杂性</title>
      <link href="/2023/06/09/it/ddd-ruan-jian-de-he-xin-fu-za-xing/"/>
      <url>/2023/06/09/it/ddd-ruan-jian-de-he-xin-fu-za-xing/</url>
      
        <content type="html"><![CDATA[<p>很多软件设计上的不足，表面上看，似乎是技术架构的问题。因为如果架构师经验足够丰富，就能提前考虑到这些问题。如果开发团队技术足够过硬，就可以最快速度解决这些问题。但是，如果你将视野放开，放到到整个项目团队。你就会发现，<font color="orange">一味的要求技术人员能够未卜先知，这是不现实也是不理智的</font>。尤其对于长期建设的大型项目，更是看如此。难道你要求当年开发淘宝时就要支持好双十一吗？DDD希望让整个软件团队都用统一的方式思考解决问题，减少架构师、程序员、产品经理、测试人员等各个参与角色之间的分歧。</p><p>两个非常核心的思想：</p><ol><li><font color="orange">技术主动理解业务</font></li><li><font color="orange">“刚刚好”解决问题</font></li></ol><ul><li><font color="orange">Controller、Service等概念并不具备实际的业务价值</font>。因此，业务专家设计出来的业务流程，总是需要产品人员进行梳理，以及技术人员设计才能最终落地到项目当中。而这其中，不可避免的会产生<font color="orange">信息不对称的情况</font>。尤其在面对频繁变化的复杂业务时。<ul><li>比如业务专家看到的是消息转发、历史请求管理、应用注册管理这三个业务能力，不管多复杂的业务场景，基于这三个能力进行组织就行。但是在技术人员的视野中，却显然更关注MVC的三层架构。会更注重Controller、Service这样一个个技术层面的逻辑分工与复用。当业务需求发生变化后，业务专家考虑的是如何通过这三种业务能力将整个业务场景贯穿起来。而技术专家往往会更多的考虑新的结构对以往的架构有多大的冲突。<font color="orange">如果新的设计对已有的架构造成太大的冲突，就只能考虑重构。而重构对于业务专家来说，没有什么业务价值。</font></li><li>DDD则是主动强调让技术贴近业务，鼓励形成团队内部的<font color="orange">通用语言，业务如何组织，软件就如何构建</font>。让不怎么懂技术的业务专家也能主动参与到软件建设的整个过程当中，而不仅仅是前期的需求设计。</li><li>在DDD的实践过程当中，有很多技术人员容易陷入以往的技术思维中，将DDD理解成某种技术架构，将组件描述成技术实现（用原来技术架构硬套在DDD上，改了个包名而已，领域专家看了依然是一脸懵逼）。相反，<font color="orange">更应该体现业务属性，让领域专家看到这样的组件，即便不了解实现细节，也能够知道这些组件是干什么的</font>，从而有可能继续深入的参与软件建设过程。</li></ul></li><li>在以往的设计过程中，为了更多的兼容日后的需求变化，技术人员往往会做很多的“提前设计”。寄希望于这些“提前设计”能够减少未来业务变化对软件架构的冲击。但是，<font color="orange">往往项目未来的需求变化并不是技术人员能够把控的。如果未来的业务需求不是按照之前设计的路线演进，这些“提前设计“不但无法起到设计时的作用，反而会增加软件项目的复杂度</font>，从而给软件后续的升级改造带来更多的负担。而DDD强调的则是让软件<font color="orange">可以”刚刚好“的解决眼前的业务问题，同时为软件保持足够的灵活性。</font><ul><li>以DDD中的Repository仓库组件为例。在DDD设计中，我们会将实体的持久化逻辑全部交由仓库组件负责，在业务流程中不需要考虑持久化相关的逻辑。当我们需要设计更复杂的持久化策略时，就只需要调整仓库层的实现，而不需要考虑业务上有什么影响。比如，往往很多项目在最初的设计中，都会选择将关键业务信息通过MyBatis这样的框架直接存入到数据库。但是如果软件的并发量逐渐增大，往往我们就需要增加一个Redis缓存层，用来保护数据库，提高系统的并发能力。而围绕Redis缓存，各种缓存穿透、缓存击穿、缓存雪崩、缓存预热等等这样的一些业务逻辑就自然而然的冒出来了。这样一个简单的MyBatis就不够用了。<font color="orange">如果没有抽象出Repository仓库层，那么这些新增加的逻辑就不可避免的要蔓延到上层的DAO或者Service当中。但是，如果抽象出了Repository仓库层，不管多复杂的持久化逻辑，都只是一个仓库实现而已，不会对业务造成任何影响。这些需求就可以比较独立的进行改造。</font></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FFmpeg-使用示例</title>
      <link href="/2023/06/08/template/ffmpeg-shi-yong-shi-li/"/>
      <url>/2023/06/08/template/ffmpeg-shi-yong-shi-li/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将三个视频完整的拼接成一个视频</span>ffmpeg <span class="token parameter variable">-i</span> input1.mp4 <span class="token parameter variable">-i</span> input2.mp4 <span class="token parameter variable">-i</span> input3.mp4 <span class="token parameter variable">-filter_complex</span> <span class="token string">"[0:v] [0:a] [1:v] [1:a] [2:v] [2:a] concat=n=3:v=1:a=1 [v] [a]"</span> <span class="token parameter variable">-map</span> <span class="token string">"[v]"</span> <span class="token parameter variable">-map</span> <span class="token string">"[a]"</span> output.mp4<span class="token comment"># 截取视频的前一个小时</span>ffmpeg <span class="token parameter variable">-i</span> input.mp4 <span class="token parameter variable">-ss</span> 00:00:00 <span class="token parameter variable">-t</span> 01:00:00 <span class="token parameter variable">-c</span> copy output.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FFmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-集成Leaf-Snowflake模式</title>
      <link href="/2023/06/07/template/springboot-ji-cheng-leaf-snowflake-mo-shi/"/>
      <url>/2023/06/07/template/springboot-ji-cheng-leaf-snowflake-mo-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="集成">集成</h2><ol><li>依赖 <code>leaf-boot-starter</code></li><li>设置 zookeeper 地址</li><li>开启 <code>@EnableLeafServer</code></li><li>使用 <code>SnowflakeService</code> 获取分布式唯一ID</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">leaf</span><span class="token punctuation">:</span>  <span class="token key atrule">snowflake</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">address</span><span class="token punctuation">:</span> localhost    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@EnableLeafServer</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IDAPP</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token constant">IDAPP</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/id"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IDController</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">SnowflakeService</span> snowflakeService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">"/nextId"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">nextId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// snowflakeService 中并未使用这个参数，因此可以传空字符串</span>        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>snowflakeService<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">LeafServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">SnowflakeService</span> snowflakeService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">nextId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"id: {}"</span><span class="token punctuation">,</span> snowflakeService<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看 zookeeper 节点</span><span class="token comment"># 出现 [services, snowflake] 这两个节点说明部署成功 </span>zkCli.sh <span class="token parameter variable">-server</span> localhost:2181<span class="token function">ls</span> /<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.tencent.devops.leaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>leaf-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.2-RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zookeeper-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="zookeeper">zookeeper</h2><p>注意时区和微服务保持一致</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">zoo1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo1    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"2181:2181"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/zoo1<span class="token punctuation">:</span>/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=0.0.0.0<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=zoo2<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai  <span class="token key atrule">zoo2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo2    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"2182:2181"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/zoo2<span class="token punctuation">:</span>/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">2</span>      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=zoo1<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=0.0.0.0<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Leaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-集成MongoDB</title>
      <link href="/2023/06/07/template/springboot-ji-cheng-mongodb/"/>
      <url>/2023/06/07/template/springboot-ji-cheng-mongodb/</url>
      
        <content type="html"><![CDATA[<h2 id="集成">集成</h2><ol><li>依赖 <code>spring-boot-starter-data-mongodb</code></li><li>设置 uri</li><li>创建 <code>@Document(collection = "table")</code></li><li>创建 <code>MongoRepository</code></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">data</span><span class="token punctuation">:</span>    <span class="token key atrule">mongodb</span><span class="token punctuation">:</span>      <span class="token key atrule">uri</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//order<span class="token punctuation">:</span>order@localhost<span class="token punctuation">:</span>27017/order<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Builder</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@NoArgsConstructor</span><span class="token annotation punctuation">@AllArgsConstructor</span><span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>collection <span class="token operator">=</span> <span class="token string">"users"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserMongo</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Id</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMongoRepository</span> <span class="token keyword">extends</span> <span class="token class-name">MongoRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserMongo</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token class-name">UserMongo</span> <span class="token function">findByName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserMongoRepTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">UserMongoRepository</span> userMongoRepository<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mongoTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        userMongoRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserMongo</span><span class="token punctuation">(</span><span class="token string">"jxch"</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">UserMongo</span> jxch <span class="token operator">=</span> userMongoRepository<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span><span class="token string">"jxch"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>jxch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库部署">数据库部署</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">mongodb</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 27017<span class="token punctuation">:</span><span class="token number">27017</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/mongodb_data<span class="token punctuation">:</span>/data/db    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">MONGO_INITDB_ROOT_USERNAME</span><span class="token punctuation">:</span> root      <span class="token key atrule">MONGO_INITDB_ROOT_PASSWORD</span><span class="token punctuation">:</span> pw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> <span class="token keyword">order</span>db<span class="token punctuation">.</span>createUser<span class="token punctuation">(</span>{    <span class="token keyword">user</span>: <span class="token string">"order"</span><span class="token punctuation">,</span>    pwd: <span class="token string">"order"</span><span class="token punctuation">,</span>    roles: <span class="token punctuation">[</span>        { role: <span class="token string">"readWrite"</span><span class="token punctuation">,</span> db: <span class="token string">"order"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"dbAdmin"</span><span class="token punctuation">,</span> db: <span class="token string">"order"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"userAdmin"</span><span class="token punctuation">,</span> db: <span class="token string">"order"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"clusterAdmin"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"readAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"readWriteAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"userAdminAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"dbAdminAnyDatabase"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"restore"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }<span class="token punctuation">,</span>        { role: <span class="token string">"backup"</span><span class="token punctuation">,</span> db: <span class="token string">"admin"</span> }    <span class="token punctuation">]</span>}<span class="token punctuation">)</span><span class="token comment">// 测试写入数据</span>db<span class="token punctuation">.</span>usersTest<span class="token punctuation">.</span>insertOne<span class="token punctuation">(</span>{name: <span class="token string">"John"</span><span class="token punctuation">,</span> age: <span class="token number">30</span>}<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-集成RocksDB</title>
      <link href="/2023/06/07/template/springboot-ji-cheng-rocksdb/"/>
      <url>/2023/06/07/template/springboot-ji-cheng-rocksdb/</url>
      
        <content type="html"><![CDATA[<h2 id="集成">集成</h2><ol><li>依赖 <code>rocksdbjni</code></li><li>设置数据库的本地存储路径</li><li>配置 <code>RocksDB</code> 的 Bean</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">rocksdb</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> E<span class="token punctuation">:</span>\work\jxch<span class="token punctuation">-</span>study\study<span class="token punctuation">-</span>springcloud\study<span class="token punctuation">-</span>springcloud\data\rocksdb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${rocksdb.path}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> rocksDBPath<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">RocksDB</span> <span class="token function">rocksDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        <span class="token class-name">Options</span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCreateIfMissing</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">RocksDB</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> rocksDBPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RockDBTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token class-name">RocksDB</span> rocksDB<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        rocksDB<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>rocksDB<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RocksDBException</span> <span class="token punctuation">{</span>        rocksDB<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.rocksdb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>rocksdbjni<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.1.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> RocksDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>架构-订单支付系统设计</title>
      <link href="/2023/06/05/jia-gou/jia-gou-ding-dan-zhi-fu-xi-tong-she-ji/"/>
      <url>/2023/06/05/jia-gou/jia-gou-ding-dan-zhi-fu-xi-tong-she-ji/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/IT/SpringCloud/OrderPay.png" alt="订单支付系统设计"></p>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>架构-订单系统设计</title>
      <link href="/2023/06/04/jia-gou/jia-gou-ding-dan-xi-tong-she-ji/"/>
      <url>/2023/06/04/jia-gou/jia-gou-ding-dan-xi-tong-she-ji/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/IT/SpringCloud/OrderSystem.png" alt="订单系统设计"></p><hr><h2 id="幂等">幂等</h2><p>一件事情做几次结果都一样（防止用户提交两次订单）<br>唯一性索引：生成订单ID的操作提前到核对订单页面并在页面携带此ID，提交订单时直接使用此ID</p><p>ABA问题（使用版本号）：<br>如用户修改订单详情，物品颜色（更新订单信息的ABA问题）：</p><ul><li>红色，修改成功，网络响应失败（触发重试）</li><li>绿色，用户修改成功</li><li>红色，重试成功<br>用户想要的是第二次修改的绿色，最后结果确是红色</li></ul><p>使用版本号解决这个问题：<code>update</code> db时检查 <code>version</code> 有没有发生变化</p><h2 id="读写分离">读写分离</h2><p>我的订单中，每个用户的订单都不同，所以不能用 <code>redis</code> 缓存数据，只能用读写分离优化查询速度<br>存在主从同步时数据暂时的不一致情况，可以插入支付成功页面，几秒后跳转详情页面，然后从读库查询<br><em>在要求较高的业务场景下可以在同一事务中，在写库写完就在写库读然后返回给前端</em></p><h2 id="分库分表">分库分表</h2><p>能少拆就少拆，能不拆就不拆，降低维护复杂度<br>在MySQL中，如果一行存1kb的数据，那么一张表可以在不影响性能的情况下，大概存储2100条数据</p><p>数据量大：分表<br>并发量大：分库</p><h3 id="分表分片策略">分表分片策略</h3><p>按时间或按ID取模等</p><ul><li>根据orderid mod缺陷：无法根据userid查询该用户下的所有订单<ul><li>解决方案：根据 orderid 和 userid 后几位拼接一个新的 orderid（基因法），然后 mod 取模<ul><li>缺陷：无法根据店铺ID查询该店铺下的所有订单<ul><li>解决方案 - 数据冗余：订单数据同步到其他存储，比如ES，Hadoop或MySQL（以店铺ID作为分片键的只读订单库）等</li></ul></li></ul></li></ul></li></ul><h3 id="实现方案">实现方案</h3><ul><li>Sharding-JDBC（推荐使用）</li><li>代理方式（MyCat，好久不更新了）：使用起来最简单<ul><li>缺陷：性能损失较大，需要两次请求</li></ul></li><li>历史订单归档（数据迁移，根据热尾效应，只保留近3个月的数据，提高提高表的查询速度）<ul><li>定时任务：MySQL -&gt; MongoDB<ul><li>循环批量插入（mysql delete，mongodb insert）</li><li>数据库负载很大，MySQL可以按ID范围删除（每次2000条），每次循环休眠一个随机数，让MySQL完成页面合并，降低负载</li><li>碎片优化负载很大，建议晚上迁移，一晚上迁移不完，可以暂停，第二天晚上继续迁移</li><li>迁移前做好备份</li></ul></li><li>数据一致性：需要事务，但不需要分布式事务<ul><li>获取上一次成功的最大ID，以它为起始ID：只需保证某一边有数据就可以</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 幂等 </tag>
            
            <tag> 读写分离 </tag>
            
            <tag> 分库分表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PI-树莓派安装Kubernetes</title>
      <link href="/2023/06/04/yun-wei/pi-shu-mei-pai-an-zhuang-kubernetes/"/>
      <url>/2023/06/04/yun-wei/pi-shu-mei-pai-an-zhuang-kubernetes/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span class="token builtin class-name">echo</span> <span class="token string">"deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/kubernetes.list<span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> kubelet kubeadm kubectl kubernetes-cni<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加 cgroup_enable=memory cgroup_memory=1</span><span class="token function">vi</span> /boot/cmdline.txt<span class="token comment"># 重启</span><span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 如果有无法解决的报错，可以添加这个参数暂时跳过 --ignore-preflight-errors all</span><span class="token function">sudo</span> kubeadm initkubectl apply <span class="token parameter variable">-f</span> https://docs.projectcalico.org/v3.14/manifests/calico.yamlkubectl get nodes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PI </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-分布式唯一ID-Leaf</title>
      <link href="/2023/06/03/jia-gou/springcloud-fen-bu-shi-wei-yi-id-leaf/"/>
      <url>/2023/06/03/jia-gou/springcloud-fen-bu-shi-wei-yi-id-leaf/</url>
      
        <content type="html"><![CDATA[<p>为什么需要分布式唯一ID而不是UUID：因为数据库存储采用B树（有序），<font color="orange">无序数据导致B树不断旋转</font><br>所有业务都需要分布式唯一ID吗？订单主表：全局唯一；<font color="orange">订单详情表：1. 不需要全局唯一；2. 一次性获取所有ID</font></p><h2 id="方案（推荐-Leaf-Snowflake）">方案（推荐 Leaf-Snowflake）</h2><ol><li>雪花算法（1bit + timestamp(41bit) + workid(机房号5bit+机器号5bit) + 序列号12bit）<ul><li>缺陷：<font color="orange">时钟回拨导致ID重复</font></li></ul></li><li>Mongdb: objeckID</li><li>Seata: UUID: IdWorker</li><li>数据库，一张表专门生成ID（累加，mysql: replace into；Oracle: sequence）<ul><li>缺陷：IO并发量太低，可以使用多台服务器，为了保证不重复，可以让第一台奇数，第二台偶数<ul><li>缺陷：水平扩容复杂</li></ul></li></ul></li><li>redis（incr）<ul><li>缺陷：<font color="orange">断电故障（持久化是异步的）</font></li></ul></li><li>Leaf-Segment（mysql数据表用于记录自定义批量生成的ID）<ul><li>缺陷：批量的，id不随机，<font color="orange">数据量会被猜到</font></li><li>解决毛刺现象：<font color="orange">双缓存优化</font>（日常用量的600倍，mysql宕机有10-20分钟重启）</li><li>高可用：<font color="orange">mysql强一致</font>，MGR - Paxos算法</li></ul></li><li>Leaf-Snowflake（雪花 + zookeeper，避免数据量被猜到）<ul><li><font color="orange">使用zookeeper，让workid递增，避免workid配置错误</font></li><li>解决时钟回拨<ul><li>上线新节点时，通过RPC获得其他所有leaf服务的系统时间（<code>sum(time)/nodeSize</code>），<font color="orange">相差超过阈值，则启动失败</font></li><li>老节点在运行过程中，<font color="orange">定时往zookeeper登记自己的时间戳，时间不对就失败（告警重试）</font></li></ul></li></ul></li></ol><p><img src="/static/IT/SpringCloud/Leaf.png" alt="SpringCloud-Leaf"></p><p>目前Leaf的性能在4C8G的机器上QPS能压测到近5万/s，TP999 1ms，已经能够满足大部分的业务的需求。每天提供亿数量级的调用量。</p>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Leaf </tag>
            
            <tag> 分布式ID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-网关+授权中心</title>
      <link href="/2023/06/03/jia-gou/springcloud-wang-guan-shou-quan-zhong-xin/"/>
      <url>/2023/06/03/jia-gou/springcloud-wang-guan-shou-quan-zhong-xin/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/IT/SpringCloud/%E7%BD%91%E5%85%B3%2B%E6%8E%88%E6%9D%83%E4%B8%AD%E5%BF%83.png" alt="SpringCloud-网关+授权中心"></p>]]></content>
      
      
      <categories>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> 网关 </tag>
            
            <tag> 授权中心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-WIN下DockerDesktop无法开启Kubernetes</title>
      <link href="/2023/06/02/yun-wei/docker-win-xia-dockerdesktop-wu-fa-kai-qi-kubernetes/"/>
      <url>/2023/06/02/yun-wei/docker-win-xia-dockerdesktop-wu-fa-kai-qi-kubernetes/</url>
      
        <content type="html"><![CDATA[<p>开启代理等方式都无效，只能换源:</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token string">"https://docker.mirrors.ustc.edu.cn"</span><span class="token punctuation">,</span>  <span class="token string">"https://cr.console.aliyun.com/"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-gateway网关配置</title>
      <link href="/2023/06/01/template/springcloud-gateway-wang-guan-pei-zhi/"/>
      <url>/2023/06/01/template/springcloud-gateway-wang-guan-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="配置文件">配置文件</h2><h3 id="bootstrap-yml">bootstrap.yml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>gateway <span class="token comment"># 微服务的名称</span>  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="bootstrap-dev-yml">bootstrap-dev.yml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">config</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span> <span class="token comment"># 配置中心的地址</span>        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> 54fdd84f<span class="token punctuation">-</span>44bb<span class="token punctuation">-</span>45c1<span class="token punctuation">-</span>b9c7<span class="token punctuation">-</span>2b13bb4dca57        <span class="token key atrule">shared-configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>gateway.yml            <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="cloud-gateway-yml">cloud-gateway.yml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8888</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud‐gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server‐addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span>        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> 54fdd84f<span class="token punctuation">-</span>44bb<span class="token punctuation">-</span>45c1<span class="token punctuation">-</span>b9c7<span class="token punctuation">-</span>2b13bb4dca57    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">locator</span><span class="token punctuation">:</span>          <span class="token comment"># 发现微服务</span>          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">lower-case-service-id</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token comment"># 路由规则 </span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>order          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>order          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/order/<span class="token important">**</span><span class="token key atrule">logging</span><span class="token punctuation">:</span>  <span class="token key atrule">level</span><span class="token punctuation">:</span>    <span class="token key atrule">org.springframework.cloud.gateway</span><span class="token punctuation">:</span> debug<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="拦截器">拦截器</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CloudGlobalFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"CloudGlobalFilter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> gateway </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-gateway报错:type=Service Unavailable, status=503</title>
      <link href="/2023/06/01/yun-wei/springcloud-gateway-bao-cuo-type-service-unavailable-status-503/"/>
      <url>/2023/06/01/yun-wei/springcloud-gateway-bao-cuo-type-service-unavailable-status-503/</url>
      
        <content type="html"><![CDATA[<p>后端没有报错，前端返回503，如果配置文件确定没有问题的话，应该是缺依赖的问题：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><p>配置文件:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8888</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud‐gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server‐addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span>        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> 54fdd84f<span class="token punctuation">-</span>44bb<span class="token punctuation">-</span>45c1<span class="token punctuation">-</span>b9c7<span class="token punctuation">-</span>2b13bb4dca57    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">locator</span><span class="token punctuation">:</span>          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">lower-case-service-id</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>order          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//cloud<span class="token punctuation">-</span>order          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/order/<span class="token important">**</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>依赖:</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gateway </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-Win下报错： bind: An attempt was made to access a socket in a way forbidden by its access permissions.</title>
      <link href="/2023/06/01/yun-wei/docker-win-xia-bao-cuo-bind-an-attempt-was-made-to-access-a-socket-in-a-way-forbidden-by-its-access-permissions/"/>
      <url>/2023/06/01/yun-wei/docker-win-xia-bao-cuo-bind-an-attempt-was-made-to-access-a-socket-in-a-way-forbidden-by-its-access-permissions/</url>
      
        <content type="html"><![CDATA[<p>如果没有端口占用：<code>Restart-Service -Name winnat</code>, 然后重试</p><hr><p>如果是端口占用了，则更换端口或杀死端口占用的进程:</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 查找端口占用的PID</span>netstat <span class="token operator">-</span>ano <span class="token punctuation">|</span> findstr <span class="token variable">$port</span><span class="token comment"># 查看PID对应的进程信息</span>tasklist <span class="token punctuation">|</span> findstr <span class="token variable">$pid</span><span class="token comment"># 通过进程名称结束进程</span>taskkill <span class="token operator">/</span>f <span class="token operator">/</span>t <span class="token operator">/</span>im <span class="token variable">$name</span><span class="token comment"># 通过PID结束进程</span>taskkill <span class="token operator">/</span>f <span class="token operator">/</span>t <span class="token operator">/</span>pid <span class="token variable">$pid</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-Nacos配置中心</title>
      <link href="/2023/06/01/template/springcloud-nacos-pei-zhi-zhong-xin/"/>
      <url>/2023/06/01/template/springcloud-nacos-pei-zhi-zhong-xin/</url>
      
        <content type="html"><![CDATA[<h2 id="bootstrap-yml">bootstrap.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>order <span class="token comment"># 微服务的名称</span>  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="bootstrap-dev-yml">bootstrap-dev.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>order<span class="token punctuation">-</span>dev <span class="token comment"># 微服务的名称</span>  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">config</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span> <span class="token comment"># 配置中心的地址</span>        <span class="token comment"># 在配置中心的命名空间中定义 cloud-order.yml 和 test.yml 配置文件，分组设为 DEFAULT_GROUP</span>        <span class="token comment"># 配置中心不会自动注册微服务，需要在 cloud-order.yml 中配置服务注册</span>        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> 54fdd84f<span class="token punctuation">-</span>44bb<span class="token punctuation">-</span>45c1<span class="token punctuation">-</span>b9c7<span class="token punctuation">-</span>2b13bb4dca57        <span class="token key atrule">shared-configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>order.yml            <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token punctuation">-</span> <span class="token key atrule">data-id</span><span class="token punctuation">:</span> test.yml            <span class="token key atrule">group</span><span class="token punctuation">:</span> DEFAULT_GROUP            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="docker-compose-部署单机-Nacos">docker-compose 部署单机 Nacos</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nacos</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nacos/nacos<span class="token punctuation">-</span>server    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PREFER_HOST_MODE=hostname      <span class="token punctuation">-</span> MODE=standalone    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/nacos<span class="token punctuation">-</span>data<span class="token punctuation">:</span>/home/nacos/data      <span class="token punctuation">-</span> ./data/nacos<span class="token punctuation">-</span>standalone<span class="token punctuation">-</span>logs/<span class="token punctuation">:</span>/home/nacos/logs    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8848:8848"</span>      <span class="token punctuation">-</span> <span class="token string">"9848:9848"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nacos </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud-Nacos注册中心</title>
      <link href="/2023/06/01/template/springcloud-nacos-zhu-ce-zhong-xin/"/>
      <url>/2023/06/01/template/springcloud-nacos-zhu-ce-zhong-xin/</url>
      
        <content type="html"><![CDATA[<h2 id="application-yml">application.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>order  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">18848</span>        <span class="token comment"># 在WEB页面定义一个命名空间</span>        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> 94976701<span class="token punctuation">-</span>cbee<span class="token punctuation">-</span>4f8c<span class="token punctuation">-</span>af69<span class="token punctuation">-</span>786ffe69ae83<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud-alibaba.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="docker-compose-部署单机-Nacos">docker-compose 部署单机 Nacos</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nacos</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nacos/nacos<span class="token punctuation">-</span>server    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PREFER_HOST_MODE=hostname      <span class="token punctuation">-</span> MODE=standalone    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/nacos<span class="token punctuation">-</span>data<span class="token punctuation">:</span>/home/nacos/data      <span class="token punctuation">-</span> ./data/nacos<span class="token punctuation">-</span>standalone<span class="token punctuation">-</span>logs/<span class="token punctuation">:</span>/home/nacos/logs    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"18848:8848"</span>      <span class="token punctuation">-</span> <span class="token string">"19848:9848"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nacos </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务-拆分</title>
      <link href="/2023/06/01/it/wei-fu-wu-chai-fen/"/>
      <url>/2023/06/01/it/wei-fu-wu-chai-fen/</url>
      
        <content type="html"><![CDATA[<h2 id="拆分时机">拆分时机</h2><ul><li>业务规模</li><li>团队规模</li><li>技术储备</li><li>人才储备</li><li>研发效率</li></ul><h2 id="拆分原则">拆分原则</h2><ul><li>闭包原则（CCP）</li><li>服务自治、接口隔离原则</li><li>持续演进原则</li><li>避免影响产品的日常功能迭代</li><li>服务接口的定义要具备可扩展性</li><li>避免环形依赖与双向依赖</li><li>阶段性合并</li><li>自动化驱动</li></ul><h2 id="拆分策略">拆分策略</h2><p>拆分后的服务由相对独立的团队负责</p><ul><li>功能维度拆分策略（基于业务复杂度）<ul><li>基于数据驱动（业务复杂度较低）： 自下而上的架构设计方法，通过分析需求，确定整体数据结构，根据表之间的关系拆分服务</li><li>基于领域驱动（业务复杂度足够高）： 自上而下的架构设计方法，通过和领域专家建立统一的语言，不断交流，确定关键业务场景，逐步确定边界上下文</li><li>从已有单体架构中逐步拆分：前后端分离，提取公共基础服务（如授权服务，分布式ID服务），不断从老系统抽取服务，垂直划分优先，适当水平切分</li></ul></li><li>非功能维度拆分策略：扩展性、复用性、高性能、高可用、安全性、异构性</li></ul><h2 id="拆分风险">拆分风险</h2><ul><li>开发团队是否具备足够的经验</li><li>不断纠正</li><li>要做行动派，而不是理论派：在具体怎么拆分上，也不要太纠结于是否合适，如果拆了之后发现真的不合适，在重新调整就好了。</li><li>服务拆合<ul><li>拆相当于我们开发代码，合相当于重构代码</li><li>人员和服务数量的不匹配</li><li>微服务数量过多和资源不匹配。合并后的服务包内的服务依然要满足微服务定义，以便在未来某一天要重新拆开的时候可以很快就分离</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-无题三</title>
      <link href="/2023/05/31/zuo-pin/shi-ci-wu-ti-san/"/>
      <url>/2023/05/31/zuo-pin/shi-ci-wu-ti-san/</url>
      
        <content type="html"><![CDATA[<blockquote><p>绕不过愁丝万缕，总不改一梦繁华。<br>天涯路远不归客，又借灯酒数落花。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间轮-Netty自定义时间轮算法</title>
      <link href="/2023/05/31/template/shi-jian-lun-netty-zi-ding-yi-shi-jian-lun-suan-fa/"/>
      <url>/2023/05/31/template/shi-jian-lun-netty-zi-ding-yi-shi-jian-lun-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="时间轮类">时间轮类</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NettyTimer</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">HashedWheelTimer</span> timer<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">NettyTimer</span><span class="token punctuation">(</span><span class="token keyword">int</span> tickDuration<span class="token punctuation">,</span> <span class="token keyword">int</span> ticksPerWheel<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 异步执行任务</span>        timer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashedWheelTimer</span><span class="token punctuation">(</span>r <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token string">"HashedWheelTimer "</span> <span class="token operator">+</span> r<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                tickDuration<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span> ticksPerWheel<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addTask</span><span class="token punctuation">(</span><span class="token class-name">TimerTask</span> task<span class="token punctuation">,</span> <span class="token keyword">long</span> delay<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>        timer<span class="token punctuation">.</span><span class="token function">newTimeout</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addTimerTask</span><span class="token punctuation">(</span><span class="token class-name">TimerTask</span> task<span class="token punctuation">,</span> <span class="token keyword">long</span> duration<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 在间隔时间后重复执行任务</span>        timer<span class="token punctuation">.</span><span class="token function">newTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>            task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">addTimerTask</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> duration<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> duration<span class="token punctuation">,</span> unit<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        timer<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">NettyTimerTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">addTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">NettyTimer</span> nettyTimer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NettyTimer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        nettyTimer<span class="token punctuation">.</span><span class="token function">addTimerTask</span><span class="token punctuation">(</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.netty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>netty-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.0.0.Alpha2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间轮 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-使用dynamic-datasource进行多数据源管理</title>
      <link href="/2023/05/31/template/springboot-shi-yong-dynamic-datasource-jin-xing-duo-shu-ju-yuan-guan-li/"/>
      <url>/2023/05/31/template/springboot-shi-yong-dynamic-datasource-jin-xing-duo-shu-ju-yuan-guan-li/</url>
      
        <content type="html"><![CDATA[<h2 id="数据源配置-dynamic">数据源配置 - dynamic</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">dynamic</span><span class="token punctuation">:</span>      <span class="token key atrule">primary</span><span class="token punctuation">:</span> w1      <span class="token comment">#严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源</span>      <span class="token key atrule">strict</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token key atrule">datasource</span><span class="token punctuation">:</span>        <span class="token key atrule">w1</span><span class="token punctuation">:</span>          <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>55432/study          <span class="token key atrule">username</span><span class="token punctuation">:</span> user          <span class="token key atrule">password</span><span class="token punctuation">:</span> pw          <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.postgresql.Driver        <span class="token key atrule">r1</span><span class="token punctuation">:</span>          <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>55433/study          <span class="token key atrule">username</span><span class="token punctuation">:</span> user          <span class="token key atrule">password</span><span class="token punctuation">:</span> pw          <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.postgresql.Driver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Dao-Mybatis">Dao - Mybatis</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">R</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">W</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Mapper-Service-DS">Mapper &amp; Service - @DS</h2><p>可以直接在<code>Mapper</code>接口里面使用<code>@DS</code>切换数据源，也可以在<code>Service</code>里面使用，也可以在其他任何可以使用AOP的地方使用<code>@DS</code>切换数据源。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RMapper</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"r1"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from r"</span><span class="token punctuation">)</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WMapper</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@DS</span><span class="token punctuation">(</span><span class="token string">"w1"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from w"</span><span class="token punctuation">)</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">W</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SelectService</span> <span class="token punctuation">{</span>    <span class="token class-name">String</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SelectServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SelectService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RMapper</span> rMapper<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">WMapper</span> wMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>wMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>rMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试-SpringBootTest">测试 - SpringBootTest</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">SelectServiceImplTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">SelectService</span> selectService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>selectService<span class="token punctuation">.</span><span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>selectService<span class="token punctuation">.</span><span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.jxch.study<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>2022.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-jpa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.14.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dynamic-datasource-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.6.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.postgresql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>postgresql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>42.2.23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="库表结构-sql">库表结构 - sql</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">public</span><span class="token punctuation">.</span>w <span class="token punctuation">(</span>  id <span class="token keyword">integer</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  name <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">public</span><span class="token punctuation">.</span>r <span class="token punctuation">(</span>  id <span class="token keyword">integer</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  name <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库部署-docker-compose">数据库部署 - docker-compose</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">db_w1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"55432:5432"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/db_w1<span class="token punctuation">:</span>/var/lib/postgresql/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_PASSWORD=pw      <span class="token punctuation">-</span> POSTGRES_USER=user      <span class="token punctuation">-</span> POSTGRES_DB=study  <span class="token key atrule">db_r1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"55433:5432"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/db_r1<span class="token punctuation">:</span>/var/lib/postgresql/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_PASSWORD=pw      <span class="token punctuation">-</span> POSTGRES_USER=user      <span class="token punctuation">-</span> POSTGRES_DB=study<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> DataSource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-使用MyBatis注册多个SqlSessionFactory进行多数据源管理</title>
      <link href="/2023/05/31/template/springboot-shi-yong-mybatis-zhu-ce-duo-ge-sqlsessionfactory-jin-xing-duo-shu-ju-yuan-guan-li/"/>
      <url>/2023/05/31/template/springboot-shi-yong-mybatis-zhu-ce-duo-ge-sqlsessionfactory-jin-xing-duo-shu-ju-yuan-guan-li/</url>
      
        <content type="html"><![CDATA[<h2 id="数据源配置-DruidDataSource">数据源配置 - DruidDataSource</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource    <span class="token key atrule">w1</span><span class="token punctuation">:</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>55432/study      <span class="token key atrule">username</span><span class="token punctuation">:</span> user      <span class="token key atrule">password</span><span class="token punctuation">:</span> pw    <span class="token key atrule">r1</span><span class="token punctuation">:</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>55433/study      <span class="token key atrule">username</span><span class="token punctuation">:</span> user      <span class="token key atrule">password</span><span class="token punctuation">:</span> pw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="多数据源配置-SqlSessionFactory">多数据源配置 - SqlSessionFactory</h2><p>用<code>MapperScan</code>中不同的<code>basePackages</code>创建不同的<code>SqlSessionFactory</code></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"org.jxch.study.studyspringcloud.mapper.w"</span><span class="token punctuation">,</span> sqlSessionFactoryRef <span class="token operator">=</span> <span class="token string">"wSqlSessionFactory"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WMyBatisConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.datasource.w1"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">dsw1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token keyword">public</span> <span class="token class-name">SqlSessionFactory</span> <span class="token function">wSqlSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> <span class="token class-name">SqlSessionFactoryBean</span> sessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sessionFactory<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token function">dsw1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 指定对应的mapper.xml文件</span>        <span class="token comment">// sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver().getResources("classpath:mapper/w/*.xml"));</span>        <span class="token keyword">return</span> sessionFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">DataSourceTransactionManager</span> <span class="token function">wTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">DataSourceTransactionManager</span> dataSourceTransactionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dataSourceTransactionManager<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token function">dsw1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dataSourceTransactionManager<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">TransactionTemplate</span> <span class="token function">wTransactionTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TransactionTemplate</span><span class="token punctuation">(</span><span class="token function">wTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"org.jxch.study.studyspringcloud.mapper.r"</span><span class="token punctuation">,</span> sqlSessionFactoryRef <span class="token operator">=</span> <span class="token string">"rSqlSessionFactory"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RMyBatisConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.datasource.r1"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">dsr1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">SqlSessionFactory</span> <span class="token function">rSqlSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">final</span> <span class="token class-name">SqlSessionFactoryBean</span> sessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sessionFactory<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token function">dsr1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 指定对应的mapper.xml文件</span>        <span class="token comment">// sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver().getResources("classpath:mapper/r/*.xml"));</span>        <span class="token keyword">return</span> sessionFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">DataSourceTransactionManager</span> <span class="token function">rTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">DataSourceTransactionManager</span> dataSourceTransactionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dataSourceTransactionManager<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token function">dsr1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> dataSourceTransactionManager<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">TransactionTemplate</span> <span class="token function">rTransactionTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TransactionTemplate</span><span class="token punctuation">(</span><span class="token function">rTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Dao-Mybatis">Dao - Mybatis</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">R</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">W</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Mapper-MapperScan-basePackages">Mapper - MapperScan(basePackages)</h2><p>不同的数据源放到不同的<code>package</code>路径</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>jxch<span class="token punctuation">.</span>study<span class="token punctuation">.</span>studyspringcloud<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>r</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RMapper</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from r"</span><span class="token punctuation">)</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>jxch<span class="token punctuation">.</span>study<span class="token punctuation">.</span>studyspringcloud<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>w</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WMapper</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from w"</span><span class="token punctuation">)</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">W</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="切换数据源-无侵入">切换数据源 - 无侵入</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SelectService</span> <span class="token punctuation">{</span>    <span class="token class-name">String</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SelectServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SelectService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RMapper</span> rMapper<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">WMapper</span> wMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>wMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>rMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试-SpringBootTest">测试 - SpringBootTest</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">SelectServiceImplTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">SelectService</span> selectService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>selectService<span class="token punctuation">.</span><span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>selectService<span class="token punctuation">.</span><span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.jxch.study<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>2022.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.14.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.postgresql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>postgresql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>42.2.23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="库表结构-sql">库表结构 - sql</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">public</span><span class="token punctuation">.</span>w <span class="token punctuation">(</span>  id <span class="token keyword">integer</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  name <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">public</span><span class="token punctuation">.</span>r <span class="token punctuation">(</span>  id <span class="token keyword">integer</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  name <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库部署-docker-compose">数据库部署 - docker-compose</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">db_w1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"55432:5432"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/db_w1<span class="token punctuation">:</span>/var/lib/postgresql/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_PASSWORD=pw      <span class="token punctuation">-</span> POSTGRES_USER=user      <span class="token punctuation">-</span> POSTGRES_DB=study  <span class="token key atrule">db_r1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"55433:5432"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/db_r1<span class="token punctuation">:</span>/var/lib/postgresql/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_PASSWORD=pw      <span class="token punctuation">-</span> POSTGRES_USER=user      <span class="token punctuation">-</span> POSTGRES_DB=study<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> DataSource </tag>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-使用AbstractRoutingDataSource进行多数据源管理</title>
      <link href="/2023/05/31/template/springboot-shi-yong-abstractroutingdatasource-jin-xing-duo-shu-ju-yuan-guan-li/"/>
      <url>/2023/05/31/template/springboot-shi-yong-abstractroutingdatasource-jin-xing-duo-shu-ju-yuan-guan-li/</url>
      
        <content type="html"><![CDATA[<h2 id="数据源配置-DruidDataSource">数据源配置 - DruidDataSource</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource    <span class="token key atrule">w1</span><span class="token punctuation">:</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>55432/study      <span class="token key atrule">username</span><span class="token punctuation">:</span> user      <span class="token key atrule">password</span><span class="token punctuation">:</span> pw    <span class="token key atrule">r1</span><span class="token punctuation">:</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>postgresql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>55433/study      <span class="token key atrule">username</span><span class="token punctuation">:</span> user      <span class="token key atrule">password</span><span class="token punctuation">:</span> pw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.datasource.w1"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">dsw1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"spring.datasource.r1"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">dsr1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DruidDataSourceBuilder</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="多数据源配置-AbstractRoutingDataSource">多数据源配置 - AbstractRoutingDataSource</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Primary</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DynamicDataSource</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractRoutingDataSource</span> <span class="token punctuation">{</span>    <span class="token comment">// 当前使用的数据源标识</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DSType</span><span class="token punctuation">&gt;</span></span> name<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">DataSource</span> dsr1<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">DataSource</span> dsw1<span class="token punctuation">;</span>    <span class="token comment">// 返回当前数据源标识</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">determineCurrentLookupKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 为targetDataSources初始化所有数据源</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> targetDataSources<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        targetDataSources<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">DSType</span><span class="token punctuation">.</span><span class="token constant">W1</span><span class="token punctuation">,</span>dsw1<span class="token punctuation">)</span><span class="token punctuation">;</span>        targetDataSources<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">DSType</span><span class="token punctuation">.</span><span class="token constant">R1</span><span class="token punctuation">,</span>dsr1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setTargetDataSources</span><span class="token punctuation">(</span>targetDataSources<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 为defaultTargetDataSource 设置默认的数据源</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setDefaultTargetDataSource</span><span class="token punctuation">(</span>dsw1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="多数据源自动切换-AOP">多数据源自动切换 - AOP</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">DSType</span> <span class="token punctuation">{</span>    <span class="token constant">R1</span><span class="token punctuation">,</span>    <span class="token constant">W1</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Inherited</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token constant">DDS</span> <span class="token punctuation">{</span>    <span class="token class-name">DSType</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">DSType</span><span class="token punctuation">.</span><span class="token constant">W1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@Aspect</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DynamicDataSourceAspect</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"@annotation(dds)"</span><span class="token punctuation">,</span> argNames <span class="token operator">=</span> <span class="token string">"point,dds"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">before</span><span class="token punctuation">(</span><span class="token class-name">JoinPoint</span> point<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">DDS</span> dds<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">DSType</span> type <span class="token operator">=</span> dds<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">DynamicDataSource</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Dao-Mapper-Mybatis">Dao &amp; Mapper - Mybatis</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">R</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">W</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RMapper</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from r"</span><span class="token punctuation">)</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WMapper</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">"select * from w"</span><span class="token punctuation">)</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">W</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="切换数据源-DDS-DSType-W1">切换数据源 - @DDS(DSType.W1)</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SelectService</span> <span class="token punctuation">{</span>    <span class="token class-name">String</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SelectServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SelectService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RMapper</span> rMapper<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">WMapper</span> wMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@DDS</span><span class="token punctuation">(</span><span class="token class-name">DSType</span><span class="token punctuation">.</span><span class="token constant">W1</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>wMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@DDS</span><span class="token punctuation">(</span><span class="token class-name">DSType</span><span class="token punctuation">.</span><span class="token constant">R1</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>rMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试-SpringBootTest">测试 - SpringBootTest</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">SelectServiceImplTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">SelectService</span> selectService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>selectService<span class="token punctuation">.</span><span class="token function">selectWAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>selectService<span class="token punctuation">.</span><span class="token function">selectRAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.jxch.study<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>study-springcloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>2022.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-boot.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-jpa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.14.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.28<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.postgresql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>postgresql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>42.2.23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.33<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-boot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="库表结构-sql">库表结构 - sql</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">public</span><span class="token punctuation">.</span>w <span class="token punctuation">(</span>  id <span class="token keyword">integer</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  name <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">public</span><span class="token punctuation">.</span>r <span class="token punctuation">(</span>  id <span class="token keyword">integer</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  name <span class="token keyword">character</span> <span class="token keyword">varying</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库部署-docker-compose">数据库部署 - docker-compose</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">db_w1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"55432:5432"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/db_w1<span class="token punctuation">:</span>/var/lib/postgresql/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_PASSWORD=pw      <span class="token punctuation">-</span> POSTGRES_USER=user      <span class="token punctuation">-</span> POSTGRES_DB=study  <span class="token key atrule">db_r1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"55433:5432"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data/db_r1<span class="token punctuation">:</span>/var/lib/postgresql/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_PASSWORD=pw      <span class="token punctuation">-</span> POSTGRES_USER=user      <span class="token punctuation">-</span> POSTGRES_DB=study<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> DataSource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-贪吃蛇小游戏</title>
      <link href="/2023/05/31/template/python-tan-chi-she-xiao-you-xi/"/>
      <url>/2023/05/31/template/python-tan-chi-she-xiao-you-xi/</url>
      
        <content type="html"><![CDATA[<p>撞墙会死，撞自己不会，每吃一个蛋会加速移速</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> pygame<span class="token comment"># 初始化 Pygame</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 定义游戏窗口大小</span>window_width <span class="token operator">=</span> <span class="token number">640</span>window_height <span class="token operator">=</span> <span class="token number">480</span><span class="token comment"># 定义贪吃蛇的初始位置和大小</span>snake_x <span class="token operator">=</span> <span class="token number">0</span>snake_y <span class="token operator">=</span> <span class="token number">0</span>snake_size <span class="token operator">=</span> <span class="token number">20</span><span class="token comment"># 定义贪吃蛇的移动速度和方向</span>snake_speed <span class="token operator">=</span> <span class="token number">0.1</span>add_snake_speed <span class="token operator">=</span> <span class="token number">0.01</span>snake_directions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'left'</span><span class="token punctuation">,</span> <span class="token string">'down'</span><span class="token punctuation">,</span> <span class="token string">'up'</span><span class="token punctuation">]</span>snake_direction <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>snake_directions<span class="token punctuation">)</span><span class="token comment"># 定义食物的初始位置和大小</span>food_x <span class="token operator">=</span> <span class="token number">0</span>food_y <span class="token operator">=</span> <span class="token number">0</span>food_size <span class="token operator">=</span> <span class="token number">20</span><span class="token comment"># 定义贪吃蛇的身体</span>snake_body <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment"># 定义游戏循环标志</span>running <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># 创建游戏窗口</span>window <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span>window_width<span class="token punctuation">,</span> window_height<span class="token punctuation">)</span><span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'Snake Game'</span><span class="token punctuation">)</span><span class="token comment"># 创建时钟对象</span>clock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 初始化游戏</span><span class="token keyword">def</span> <span class="token function">init_game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> snake_x<span class="token punctuation">,</span> snake_y<span class="token punctuation">,</span> snake_body<span class="token punctuation">,</span> food_x<span class="token punctuation">,</span> food_y    <span class="token comment"># 初始化贪吃蛇的位置和身体</span>    snake_x <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> window_width <span class="token operator">//</span> snake_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> snake_size    snake_y <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> window_height <span class="token operator">//</span> snake_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> snake_size    snake_body <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> snake_x<span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> snake_y<span class="token punctuation">}</span><span class="token punctuation">]</span>    <span class="token comment"># 初始化食物的位置</span>    spawn_food<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 更新游戏状态</span><span class="token keyword">def</span> <span class="token function">update_game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> snake_x<span class="token punctuation">,</span> snake_y<span class="token punctuation">,</span> snake_body<span class="token punctuation">,</span> food_x<span class="token punctuation">,</span> food_y<span class="token punctuation">,</span> running<span class="token punctuation">,</span> snake_speed    <span class="token comment"># 移动贪吃蛇</span>    <span class="token keyword">if</span> snake_direction <span class="token operator">==</span> <span class="token string">'right'</span><span class="token punctuation">:</span>        snake_x <span class="token operator">+=</span> snake_speed <span class="token operator">*</span> snake_size    <span class="token keyword">elif</span> snake_direction <span class="token operator">==</span> <span class="token string">'left'</span><span class="token punctuation">:</span>        snake_x <span class="token operator">-=</span> snake_speed <span class="token operator">*</span> snake_size    <span class="token keyword">elif</span> snake_direction <span class="token operator">==</span> <span class="token string">'down'</span><span class="token punctuation">:</span>        snake_y <span class="token operator">+=</span> snake_speed <span class="token operator">*</span> snake_size    <span class="token keyword">elif</span> snake_direction <span class="token operator">==</span> <span class="token string">'up'</span><span class="token punctuation">:</span>        snake_y <span class="token operator">-=</span> snake_speed <span class="token operator">*</span> snake_size    <span class="token comment"># 检测贪吃蛇是否撞墙</span>    <span class="token keyword">if</span> snake_x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> snake_x <span class="token operator">&gt;=</span> window_width <span class="token keyword">or</span> snake_y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> snake_y <span class="token operator">&gt;=</span> window_height<span class="token punctuation">:</span>        running <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token comment"># 检测贪吃蛇是否吃到了食物</span>    <span class="token keyword">if</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>snake_x <span class="token operator">-</span> food_x<span class="token punctuation">)</span> <span class="token operator">&lt;</span> snake_size <span class="token keyword">and</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>snake_y <span class="token operator">-</span> food_y<span class="token punctuation">)</span> <span class="token operator">&lt;</span> snake_size<span class="token punctuation">:</span>        spawn_food<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 将贪吃蛇的头部添加到身体列表中</span>        snake_body<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> snake_x<span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> snake_y<span class="token punctuation">}</span><span class="token punctuation">)</span>        snake_speed <span class="token operator">=</span> snake_speed <span class="token operator">+</span> add_snake_speed    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment"># 移除贪吃蛇的尾部</span>        snake_body<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 将贪吃蛇的头部添加到身体列表中</span>        snake_body<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> snake_x<span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> snake_y<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 绘制游戏元素</span><span class="token keyword">def</span> <span class="token function">draw_game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 绘制背景</span>    window<span class="token punctuation">.</span>fill<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 绘制四周墙体</span>    pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> window_width<span class="token punctuation">,</span> snake_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> snake_size<span class="token punctuation">,</span> window_height<span class="token punctuation">)</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> window_height <span class="token operator">-</span> snake_size<span class="token punctuation">,</span> window_width<span class="token punctuation">,</span> snake_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>window_width <span class="token operator">-</span> snake_size<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> snake_size<span class="token punctuation">,</span> window_height<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 绘制贪吃蛇的身体</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> body_part <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>snake_body<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 计算蛇身颜色</span>        color <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">-</span> <span class="token number">255</span> <span class="token operator">*</span> i <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>snake_body<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span> <span class="token operator">*</span> i <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>snake_body<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>window<span class="token punctuation">,</span> color<span class="token punctuation">,</span> <span class="token punctuation">(</span>body_part<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> body_part<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> snake_size<span class="token punctuation">,</span> snake_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 绘制贪吃蛇的头部</span>    pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>snake_body<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> snake_body<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> snake_size<span class="token punctuation">,</span> snake_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 绘制食物</span>    pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>food_x<span class="token punctuation">,</span> food_y<span class="token punctuation">,</span> food_size<span class="token punctuation">,</span> food_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 更新屏幕</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 生成食物的随机位置</span><span class="token keyword">def</span> <span class="token function">spawn_food</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> food_x<span class="token punctuation">,</span> food_y    food_x <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> window_width <span class="token operator">//</span> snake_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> snake_size    food_y <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> window_height <span class="token operator">//</span> snake_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> snake_size<span class="token comment"># 处理键盘输入</span><span class="token keyword">def</span> <span class="token function">handle_input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> snake_direction    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            pygame<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>            quit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span>            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> pygame<span class="token punctuation">.</span>K_RIGHT <span class="token keyword">and</span> snake_direction <span class="token operator">!=</span> <span class="token string">'left'</span><span class="token punctuation">:</span>                snake_direction <span class="token operator">=</span> <span class="token string">'right'</span>            <span class="token keyword">elif</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> pygame<span class="token punctuation">.</span>K_LEFT <span class="token keyword">and</span> snake_direction <span class="token operator">!=</span> <span class="token string">'right'</span><span class="token punctuation">:</span>                snake_direction <span class="token operator">=</span> <span class="token string">'left'</span>            <span class="token keyword">elif</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> pygame<span class="token punctuation">.</span>K_DOWN <span class="token keyword">and</span> snake_direction <span class="token operator">!=</span> <span class="token string">'up'</span><span class="token punctuation">:</span>                snake_direction <span class="token operator">=</span> <span class="token string">'down'</span>            <span class="token keyword">elif</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> pygame<span class="token punctuation">.</span>K_UP <span class="token keyword">and</span> snake_direction <span class="token operator">!=</span> <span class="token string">'down'</span><span class="token punctuation">:</span>                snake_direction <span class="token operator">=</span> <span class="token string">'up'</span><span class="token comment"># 初始化游戏</span>init_game<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 游戏循环</span><span class="token keyword">while</span> running<span class="token punctuation">:</span>    <span class="token comment"># 处理键盘输入</span>    handle_input<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 更新游戏状态</span>    update_game<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 绘制游戏元素</span>    draw_game<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 控制游戏帧率</span>    clock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token comment"># 退出 Pygame</span>pygame<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-油猴脚本实现下载Youtube进度条上的热度统计数据</title>
      <link href="/2023/05/30/template/javascript-you-hou-jiao-ben-shi-xian-xia-zai-youtube-jin-du-tiao-shang-de-re-du-tong-ji-shu-ju/"/>
      <url>/2023/05/30/template/javascript-you-hou-jiao-ben-shi-xian-xia-zai-youtube-jin-du-tiao-shang-de-re-du-tong-ji-shu-ju/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// ==UserScript==</span><span class="token comment">// @name         Extract YouTube Heatmap Points</span><span class="token comment">// @namespace    http://tampermonkey.net/</span><span class="token comment">// @version      1</span><span class="token comment">// @description  Extract heatmap points from YouTube video player's heatmap path,返回视频秒数对应的热度值，最大值100</span><span class="token comment">// @author       Your Name</span><span class="token comment">// @match        https://www.youtube.com/watch*</span><span class="token comment">// @grant        none</span><span class="token comment">// ==/UserScript==</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token string">'use strict'</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">pathToPoints</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> total</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> commands <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?=[LMC])</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> command <span class="token keyword">of</span> commands<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> <span class="token punctuation">[</span>type<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">]</span> <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\s,]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'M'</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'C'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>          <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">const</span> lastX <span class="token operator">=</span> points<span class="token punctuation">[</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> ratio <span class="token operator">=</span> total <span class="token operator">/</span> lastX<span class="token punctuation">;</span>    <span class="token keyword">return</span> points      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>x <span class="token operator">*</span> ratio<span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>y <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">&lt;=</span> total <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">extractHeatmapPoints</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> totalTimeStr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"ytp-time-duration"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>textContent<span class="token punctuation">;</span>    <span class="token keyword">let</span> totalSeconds <span class="token operator">=</span> <span class="token function">timeToSeconds</span><span class="token punctuation">(</span>totalTimeStr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> path <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"ytp-heat-map-path"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> points <span class="token operator">=</span> <span class="token function">pathToPoints</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> totalSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> points<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">timeToSeconds</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> parts <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> hours <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> minutes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> seconds <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>parts<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      hours <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      minutes <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      seconds <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>parts<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      minutes <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      seconds <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      seconds <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> hours <span class="token operator">*</span> <span class="token number">3600</span> <span class="token operator">+</span> minutes <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span> seconds<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">addButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// Check if the current URL matches the video player URL</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'https://www.youtube.com/watch'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// Create a download button</span>    <span class="token keyword">const</span> downloadButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    downloadButton<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">'Heat'</span><span class="token punctuation">;</span>    downloadButton<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'fixed'</span><span class="token punctuation">;</span>    downloadButton<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'500px'</span><span class="token punctuation">;</span>    downloadButton<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'0px'</span><span class="token punctuation">;</span>    downloadButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token function">extractHeatmapPoints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>json<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'application/json'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>      a<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">'points.json'</span><span class="token punctuation">;</span>      a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>downloadButton<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token function">addButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-获取YouTube视频播放进度条上的热度统计数据</title>
      <link href="/2023/05/30/template/javascript-huo-qu-youtube-shi-pin-bo-fang-jin-du-tiao-shang-de-re-du-tong-ji-shu-ju/"/>
      <url>/2023/05/30/template/javascript-huo-qu-youtube-shi-pin-bo-fang-jin-du-tiao-shang-de-re-du-tong-ji-shu-ju/</url>
      
        <content type="html"><![CDATA[<p>获取视频秒数对应的热度数据（Y轴最大值是100）：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">timeToSeconds</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> parts <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> hours <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> minutes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> seconds <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>parts<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    hours <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    minutes <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    seconds <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>parts<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    minutes <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    seconds <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    seconds <span class="token operator">=</span> <span class="token operator">+</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> hours <span class="token operator">*</span> <span class="token number">3600</span> <span class="token operator">+</span> minutes <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span> seconds<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">pathToPoints</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> total</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> commands <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?=[LMC])</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> command <span class="token keyword">of</span> commands<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span>type<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">]</span> <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\s,]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'M'</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'C'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>        <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">const</span> lastX <span class="token operator">=</span> points<span class="token punctuation">[</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ratio <span class="token operator">=</span> total <span class="token operator">/</span> lastX<span class="token punctuation">;</span>  <span class="token keyword">return</span> points    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>x <span class="token operator">*</span> ratio<span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>y <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">&lt;=</span> total <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> totalTimeStr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"ytp-time-duration"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>textContent<span class="token keyword">var</span> totalSeconds <span class="token operator">=</span> <span class="token function">timeToSeconds</span><span class="token punctuation">(</span>totalTimeStr<span class="token punctuation">)</span><span class="token keyword">var</span> path <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"ytp-heat-map-path"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">)</span><span class="token keyword">var</span> points <span class="token operator">=</span> <span class="token function">pathToPoints</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> totalSeconds<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原SVG绘图时的Y轴从下到上是100-0，即Y轴值越低，热度越高，100代表的热度最低（是0），这反常识（便于绘制SVG），因此我给改了，将Y轴变为0-100，值越高热度越高，最高100</p><p>X轴在结束时，因为画的是C曲线(三次贝塞尔曲线)，所以有的点会故意超过总长度，因此我把这些点删除了<br>一个小问题：视频最后一秒会有两个热度数据，因为热点数据以0开始，以0结尾，最后一个是0，如有干扰，可以删除最后一个数据</p><hr><p>如果只关注C曲线的最终点，就不会出现这些问题了，但会导致热度数据的残缺：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'M'</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'C'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-将二维曲线图SVG的Path转为二维坐标数组</title>
      <link href="/2023/05/30/template/javascript-jiang-er-wei-qu-xian-tu-svg-de-path-zhuan-wei-er-wei-zuo-biao-shu-zu/"/>
      <url>/2023/05/30/template/javascript-jiang-er-wei-qu-xian-tu-svg-de-path-zhuan-wei-er-wei-zuo-biao-shu-zu/</url>
      
        <content type="html"><![CDATA[<p>保留两位小数：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">pathToPoints</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> commands <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?=[LMC])</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> command <span class="token keyword">of</span> commands<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span>type<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">]</span> <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\s,]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'M'</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'C'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>        <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> points<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果只关心C(三次贝塞尔曲线)的最终坐标：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">pathToPoints</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> commands <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?=[LMC])</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> command <span class="token keyword">of</span> commands<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token punctuation">[</span>type<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">]</span> <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\s,]+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'M'</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'C'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">+</span>args<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> points<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>示例</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token string">'M 0.0,100.0 C 1.0,92.6 2.0,65.0 5.0,63.0 C 8.0,61.0 11.0,86.4 15.0,90.0 C 19.0,93.6 21.0,98.7 25.0,80.8 C 29.0,63.0 31.0,9.8 35.0,0.8 C 39.0,-8.3 41.0,22.4 45.0,35.7 C 49.0,49.1 51.0,59.3 55.0,67.5 C 59.0,75.7 61.0,74.4 65.0,76.6 C 69.0,78.8 71.0,78.1 75.0,78.6 C 79.0,79.1 81.0,81.2 85.0,79.1 C 89.0,76.9 91.0,72.1 95.0,68.0 C 99.0,63.8 101.0,69.0 105.0,58.3 C 109.0,47.6 111.0,26.1 115.0,14.6 C 119.0,3.1 121.0,-1.8 125.0,0.8 C 129.0,3.5 131.0,17.6 135.0,27.8 C 139.0,38.0 141.0,48.2 145.0,51.7 C 149.0,55.3 151.0,43.8 155.0,45.5 C 159.0,47.3 161.0,58.8 165.0,60.5 C 169.0,62.2 171.0,52.3 175.0,54.0 C 179.0,55.8 181.0,65.9 185.0,69.3 C 189.0,72.7 191.0,70.6 195.0,71.1 C 199.0,71.6 201.0,79.6 205.0,72.0 C 209.0,64.3 211.0,40.1 215.0,32.6 C 219.0,25.2 221.0,33.3 225.0,34.8 C 229.0,36.3 231.0,47.0 235.0,40.1 C 239.0,33.1 241.0,-3.2 245.0,0.0 C 249.0,3.2 251.0,40.5 255.0,56.2 C 259.0,71.9 261.0,74.5 265.0,78.5 C 269.0,82.5 271.0,77.5 275.0,76.2 C 279.0,74.9 281.0,71.2 285.0,72.0 C 289.0,72.8 291.0,79.0 295.0,80.0 C 299.0,81.0 301.0,78.2 305.0,77.0 C 309.0,75.8 311.0,76.4 315.0,74.2 C 319.0,72.0 321.0,71.3 325.0,66.1 C 329.0,60.9 331.0,47.5 335.0,48.0 C 339.0,48.6 341.0,67.4 345.0,68.8 C 349.0,70.2 351.0,58.4 355.0,55.2 C 359.0,51.9 361.0,55.7 365.0,52.7 C 369.0,49.8 371.0,41.7 375.0,40.4 C 379.0,39.2 381.0,43.5 385.0,46.5 C 389.0,49.5 391.0,52.4 395.0,55.4 C 399.0,58.4 401.0,58.5 405.0,61.5 C 409.0,64.4 411.0,69.4 415.0,70.1 C 419.0,70.9 421.0,66.7 425.0,65.2 C 429.0,63.7 431.0,63.2 435.0,62.6 C 439.0,62.1 441.0,63.1 445.0,62.4 C 449.0,61.7 451.0,62.0 455.0,59.3 C 459.0,56.6 461.0,47.2 465.0,48.8 C 469.0,50.3 471.0,62.9 475.0,67.2 C 479.0,71.5 481.0,67.9 485.0,70.3 C 489.0,72.8 491.0,80.1 495.0,79.5 C 499.0,79.0 501.0,72.6 505.0,67.5 C 509.0,62.4 511.0,54.4 515.0,54.1 C 519.0,53.8 521.0,66.8 525.0,66.0 C 529.0,65.2 531.0,51.0 535.0,50.1 C 539.0,49.2 541.0,58.9 545.0,61.4 C 549.0,64.0 551.0,61.2 555.0,62.9 C 559.0,64.7 561.0,70.7 565.0,70.2 C 569.0,69.7 571.0,63.5 575.0,60.5 C 579.0,57.5 581.0,55.9 585.0,55.3 C 589.0,54.8 591.0,53.8 595.0,57.9 C 599.0,62.0 601.0,72.3 605.0,75.7 C 609.0,79.1 611.0,75.4 615.0,74.9 C 619.0,74.4 621.0,71.7 625.0,73.2 C 629.0,74.6 631.0,80.1 635.0,82.1 C 639.0,84.1 641.0,85.7 645.0,83.3 C 649.0,80.9 651.0,75.2 655.0,70.1 C 659.0,65.1 661.0,58.9 665.0,58.0 C 669.0,57.0 671.0,63.6 675.0,65.4 C 679.0,67.3 681.0,64.9 685.0,67.1 C 689.0,69.3 691.0,76.1 695.0,76.5 C 699.0,76.9 701.0,69.8 705.0,69.1 C 709.0,68.4 711.0,74.7 715.0,72.9 C 719.0,71.1 721.0,62.9 725.0,60.2 C 729.0,57.5 731.0,57.6 735.0,59.5 C 739.0,61.5 741.0,66.4 745.0,69.9 C 749.0,73.3 751.0,76.5 755.0,76.7 C 759.0,76.9 761.0,70.0 765.0,70.7 C 769.0,71.4 771.0,85.2 775.0,80.1 C 779.0,75.0 781.0,50.7 785.0,45.2 C 789.0,39.8 791.0,47.4 795.0,52.7 C 799.0,58.1 801.0,66.0 805.0,72.1 C 809.0,78.2 811.0,80.6 815.0,83.1 C 819.0,85.7 821.0,85.4 825.0,84.9 C 829.0,84.3 831.0,82.5 835.0,80.4 C 839.0,78.3 841.0,74.7 845.0,74.4 C 849.0,74.1 851.0,78.0 855.0,78.9 C 859.0,79.8 861.0,82.0 865.0,78.8 C 869.0,75.7 871.0,66.3 875.0,63.4 C 879.0,60.4 881.0,62.9 885.0,64.1 C 889.0,65.4 891.0,74.2 895.0,69.6 C 899.0,65.1 901.0,48.6 905.0,41.5 C 909.0,34.5 911.0,27.5 915.0,34.6 C 919.0,41.6 921.0,65.7 925.0,76.8 C 929.0,87.9 931.0,87.4 935.0,90.0 C 939.0,92.6 941.0,90.0 945.0,90.0 C 949.0,90.0 951.0,90.0 955.0,90.0 C 959.0,90.0 961.0,90.0 965.0,90.0 C 969.0,90.0 971.0,90.0 975.0,90.0 C 979.0,90.0 981.0,91.3 985.0,90.0 C 989.0,88.7 992.0,84.7 995.0,83.4 C 998.0,82.1 999.0,80.1 1000.0,83.4 C 1001.0,86.7 1000.0,96.7 1000.0,100.0'</span><span class="token keyword">var</span> points <span class="token operator">=</span> <span class="token function">pathToPoints</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JS-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> SVG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powershell-统计目录下所有视频的总时长</title>
      <link href="/2023/05/26/template/powershell-tong-ji-mu-lu-xia-suo-you-shi-pin-de-zong-shi-chang/"/>
      <url>/2023/05/26/template/powershell-tong-ji-mu-lu-xia-suo-you-shi-pin-de-zong-shi-chang/</url>
      
        <content type="html"><![CDATA[<h2 id="代码示例">代码示例</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token namespace">[CmdletBinding()]</span><span class="token keyword">Param</span><span class="token punctuation">(</span>    <span class="token namespace">[string]</span> <span class="token variable">$dirPath</span><span class="token punctuation">)</span><span class="token function">Write-Host</span> <span class="token string">"&gt;&gt;&gt; ${dirPath}"</span><span class="token comment"># 获取目下所有可能的视频文件</span><span class="token variable">$videos</span> = <span class="token function">Get-ChildItem</span> <span class="token operator">-</span>Path <span class="token variable">$dirPath</span> <span class="token operator">-</span>Recurse <span class="token operator">-</span>Include <span class="token operator">*</span><span class="token punctuation">.</span>mp4<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>avi<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mkv<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mov<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>wmv<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>flv<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>webm<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mpg<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mpeg<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>m4v<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>3gp<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>ts<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>vob<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token function">ogv</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>m2ts<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mts<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>divx<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>xvid<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>rmvb<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>asf<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>qt<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>fv<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mxf<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mpv<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mp2<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mpe<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mpa<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>m2v<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>m1v<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mod<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>tod<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>dvr-ms<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>wtv<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>ogm<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token function">rm</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>ram<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mk3d<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mks<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>nsv<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>dts<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>ac3<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>eac3<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>aac<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>wma<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>wav<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>flac<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>ape<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>alac<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>opus<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">.</span>mka<span class="token comment"># 初始化总时长为 0</span><span class="token variable">$totalDuration</span> = 0<span class="token variable">$totalVideos</span> = <span class="token variable">$videos</span><span class="token punctuation">.</span>Count<span class="token comment"># 记录当前位置</span><span class="token variable">$cursorLeft</span> = <span class="token namespace">[Console]</span>::CursorLeft<span class="token variable">$cursorTop</span> = <span class="token namespace">[Console]</span>::CursorTop<span class="token variable">$i</span> = 1<span class="token comment"># 遍历所有视频文件</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$video</span> in <span class="token variable">$videos</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment"># 不断刷新着显示正在扫描的视频</span><span class="token function">Write-Host</span> <span class="token string">"[${i}/${totalVideos}] -&gt; "</span> <span class="token variable">$video</span><span class="token punctuation">.</span>FullName  <span class="token operator">-</span>NoNewline<span class="token function">Write-Host</span> <span class="token operator">-</span>NoNewline <span class="token punctuation">(</span><span class="token string">" "</span> <span class="token operator">*</span> <span class="token namespace">[Console]</span>::CursorLeft<span class="token punctuation">)</span><span class="token namespace">[Console]</span>::SetCursorPosition<span class="token punctuation">(</span><span class="token variable">$cursorLeft</span><span class="token punctuation">,</span> <span class="token variable">$cursorTop</span><span class="token punctuation">)</span><span class="token variable">$i</span> = <span class="token variable">$i</span> <span class="token operator">+</span> 1    <span class="token comment"># 使用 ffprobe 获取视频时长</span>    <span class="token variable">$duration</span> = &amp; ffprobe<span class="token punctuation">.</span>exe <span class="token operator">-</span>i <span class="token variable">$video</span><span class="token punctuation">.</span>FullName <span class="token operator">-</span>show_entries format=duration <span class="token operator">-</span>v quiet <span class="token operator">-</span>of csv=<span class="token string">"p=0"</span>    <span class="token comment"># 将时长转换为秒</span>    <span class="token variable">$durationSeconds</span> = <span class="token namespace">[math]</span>::Round<span class="token punctuation">(</span><span class="token variable">$duration</span><span class="token punctuation">)</span>    <span class="token comment"># 累加总长</span><span class="token variable">$totalDuration</span> <span class="token operator">+=</span> <span class="token variable">$durationSeconds</span><span class="token punctuation">}</span><span class="token comment"># 换行</span><span class="token function">Write-Host</span> <span class="token string">""</span><span class="token comment"># 将总时长转换为时分秒格式</span><span class="token variable">$ts</span> = <span class="token namespace">[TimeSpan]</span>::FromSeconds<span class="token punctuation">(</span><span class="token variable">$totalDuration</span><span class="token punctuation">)</span><span class="token comment"># 输出结果</span><span class="token function">Write-Host</span> <span class="token string">"Total duration of all videos in ${dirPath}: <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$ts</span><span class="token punctuation">.</span>Days<span class="token punctuation">)</span></span> days, <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$ts</span><span class="token punctuation">.</span>Hours<span class="token punctuation">)</span></span> hours, <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$ts</span><span class="token punctuation">.</span>Minutes<span class="token punctuation">)</span></span> minutes, <span class="token function">$<span class="token punctuation">(</span><span class="token variable">$ts</span><span class="token punctuation">.</span>Seconds<span class="token punctuation">)</span></span> seconds"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用方法">使用方法</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 依赖 FFmpeg 里的 ffprobe</span>winget install Gyan<span class="token punctuation">.</span>FFmpeg <span class="token operator">-</span>l D:\Programs\Gyan\FFmpeg <span class="token operator">--</span>accept-package-agreements<span class="token comment"># 获取视频总长度</span><span class="token punctuation">.</span>\videos_total_time<span class="token punctuation">.</span>ps1 <span class="token operator">-</span>dirPath <span class="token string">"G:\学习资料\图灵\5期"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powershell-Write-Host 回显本行</title>
      <link href="/2023/05/26/template/powershell-write-host-hui-xian-ben-xing/"/>
      <url>/2023/05/26/template/powershell-write-host-hui-xian-ben-xing/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 记录当前位置</span><span class="token variable">$cursorLeft</span> = <span class="token namespace">[Console]</span>::CursorLeft<span class="token variable">$cursorTop</span> = <span class="token namespace">[Console]</span>::CursorTop<span class="token comment"># 遍历所有视频文件</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$video</span> in <span class="token variable">$videos</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment"># 不断刷新着显示正在扫描的视频</span><span class="token function">Write-Host</span> <span class="token variable">$video</span><span class="token punctuation">.</span>FullName  <span class="token operator">-</span>NoNewline<span class="token function">Write-Host</span> <span class="token operator">-</span>NoNewline <span class="token punctuation">(</span><span class="token string">" "</span> <span class="token operator">*</span> <span class="token namespace">[Console]</span>::CursorLeft<span class="token punctuation">)</span><span class="token namespace">[Console]</span>::SetCursorPosition<span class="token punctuation">(</span><span class="token variable">$cursorLeft</span><span class="token punctuation">,</span> <span class="token variable">$cursorTop</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment"># 换行</span><span class="token function">Write-Host</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Capital-基于强化学习的优势率买卖信号学习</title>
      <link href="/2023/05/25/capital/capital-ji-yu-qiang-hua-xue-xi-de-you-shi-lu-mai-mai-xin-hao-xue-xi/"/>
      <url>/2023/05/25/capital/capital-ji-yu-qiang-hua-xue-xi-de-you-shi-lu-mai-mai-xin-hao-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="模型含义">模型含义</h2><p>举例来说：</p><ul><li>短期优势率弱买信号：未来20天有多大的概率（模型胜率）在股价跌破前20天最低点之前，获得1-3倍最大不利变动的盈利。</li><li>…</li></ul><hr><h2 id="模型设计">模型设计</h2><p>N日买卖信号优势率预测模型：</p><ul><li>信号：弱买，中买，强买，弱卖，中卖，强卖，观望（触发止损按观望算）</li><li>得分：买卖信号正确则加分，错误则扣分，观望信号不加分也不扣分</li><li>奖惩：按发出的买卖信号强弱与实际优势率的偏差进行奖惩，在存在优势率的买卖点发出观望信号同样按偏离程度扣分</li><li>死亡：初始得分1000，扣完即死，分越高越好；初始奖惩值1000，扣完即死</li><li>观测值：前N天的COHLV和短期EMA的百分比归一化值，以及当前的状态</li><li>优势率：未来N日的最大有利变动 / 未来N日的最大不利变动 / 当日ATR（标准化）</li><li>止损：<ul><li>时间止损：未来N日</li><li>空间止损：前N日的最高/最低价 （即未来N日的最大不利变动超过了前N日的最高/最低价）</li></ul></li><li>模型胜率：按优势率给出所有信号计算胜率</li><li>真实胜率：只计算买卖信号的胜率</li><li>数据集：<ul><li>同时观测X支股票的数据（COHLV, EMA, 优势率以及是否触发空间止损信号的数据）</li><li>每只股票都计算奖惩和得分，最后相加计算总的模型奖惩和得分</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Capital </tag>
            
            <tag> 工作计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB逆向-下载腾讯课堂已购视频</title>
      <link href="/2023/05/23/ni-xiang/web-ni-xiang-xia-zai-teng-xun-ke-tang-yi-gou-shi-pin/"/>
      <url>/2023/05/23/ni-xiang/web-ni-xiang-xia-zai-teng-xun-ke-tang-yi-gou-shi-pin/</url>
      
        <content type="html"><![CDATA[<ol><li>浏览器F12，然后打开要观看的视频</li><li>"网络"中找到<code>voddrm.token.xxxxxxxxx</code>，请求网址就是m3u8的地址</li><li>查看"启动器"，点击进入<code>t.load</code>对应的js文件</li><li>搜索<code>decryptkey</code>，找到类似<code>r.decryptdata ? (this.decryptkey = r.decryptdata.key = new Uint8Array(e.data),</code>的代码行</li><li>在其下一行打上断点</li><li>刷新页面进入断点</li><li>查看key: <code>r.levelkey.key</code></li><li>转为16进制: <code>Array.from(r.levelkey.key).map(i =&gt; i.toString(16).padStart(2, '0')).join('');</code></li><li>使用工具下载合并m3u8: <a href="https://github.com/nilaoda/N_m3u8DL-CLI/releases">N_m3u8DL-CLI</a><ul><li>填写m3u8地址和自定义key</li></ul></li></ol><p>有时这个m3u8地址可能有问题，可以刷新重试，也可以用浏览器的<code>Video DownloadHelper</code>插件获取地址<br>建议使用<code>Video DownloadHelper</code>，方便快捷</p><hr><p>使用批量工具下载: <a href="https://github.com/Prince-cool/tx_course_download/releases">tx_course_download</a></p><ul><li>获取 cookie: <code>document.cookie</code></li><li>下载目录: <code>视频</code>，下载时可用目录联接，<code>mklink /J sources target</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-本地推送镜像成功但是docker hub里面没有更新镜像</title>
      <link href="/2023/05/22/yun-wei/docker-ben-di-tui-song-jing-xiang-cheng-gong-dan-shi-docker-hub-li-mian-mei-you-geng-xin-jing-xiang/"/>
      <url>/2023/05/22/yun-wei/docker-ben-di-tui-song-jing-xiang-cheng-gong-dan-shi-docker-hub-li-mian-mei-you-geng-xin-jing-xiang/</url>
      
        <content type="html"><![CDATA[<ol><li>登录 docker: <code>docker login</code> 和GUI登录</li><li><a href="https://hub.docker.com/settings/security">创建令牌登录</a>: <code>docker login --username xxx</code> 然后输入令牌</li><li>删除 <code>moby/buildkit:buildx-stable-1</code> 镜像的全部内容</li><li>重新推送，等待一段时间</li></ol><p>有必要的话，开启全局代理</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CDN-AWS CloudFront 接入</title>
      <link href="/2023/05/20/yun-wei/cdn-aws-cloudfront-jie-ru/"/>
      <url>/2023/05/20/yun-wei/cdn-aws-cloudfront-jie-ru/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://us-east-1.console.aws.amazon.com/cloudfront/v3/home?region=ap-northeast-1#/distributions/create">创建分配</a></li><li>填写源的完整域名和名称</li><li>缓存选 <code>Legacy cache settings</code></li><li>不启用 WAF</li><li>添加CNAME(自定义域名，与源域名不同)和SSL证书</li><li>创建分配，获取分配域名</li><li>去DNS注册商管理界面添加CNAME记录，将自定义域名映射到CloudFront分配的域名上</li><li>其他选项自行配置，比如HTTPS和HTTP端口（指的是源的端口，ACF的端口只能是80和443，建议只进行HTTPS代理，安全）</li></ol><p>等待几分钟后，在浏览器输入自定义域名会直接跳转到源服务. 比如源HTTPS的端口是443，那么页面就会显示源服务器443端口返回的信息</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TLS-AWS Certificate Manager 申请证书</title>
      <link href="/2023/05/20/yun-wei/tls-aws-certificate-manager-shen-qing-zheng-shu/"/>
      <url>/2023/05/20/yun-wei/tls-aws-certificate-manager-shen-qing-zheng-shu/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://us-east-1.console.aws.amazon.com/acm/home?region=us-east-1#/certificates/request">请求证书</a></li><li>填写完全限定域名，选择DNS验证</li><li>去域名注册商管理界面，添加DNS验证信息（ACM给的CNAME名称有问题: <code>xxx.域名.</code>，所以建议直接添加以下五条信息）</li></ol><table><thead><tr><th>类型</th><th>Host</th><th>Value</th></tr></thead><tbody><tr><td>CNAME</td><td>xxx.子域名</td><td>value</td></tr><tr><td>CNAME</td><td>xxx.域名</td><td>value</td></tr><tr><td>TXT</td><td>xxx</td><td>value</td></tr><tr><td>TXT</td><td>xxx.域名</td><td>value</td></tr><tr><td>TXT</td><td>xxx.子域名</td><td>value</td></tr></tbody></table><hr><p>等待几分钟后，ACM管理界面证书状态更新为<code>已颁发</code>，就表示验证成功，可以使用了，然后就可以删除上述五条记录了</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TLS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TLS-key和crt转pem</title>
      <link href="/2023/05/20/yun-wei/tls-key-he-crt-zhuan-pem/"/>
      <url>/2023/05/20/yun-wei/tls-key-he-crt-zhuan-pem/</url>
      
        <content type="html"><![CDATA[<h2 id="ECDSA-P-256">ECDSA P 256</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl pkcs8 <span class="token parameter variable">-in</span> xxx.key <span class="token parameter variable">-topk8</span> <span class="token parameter variable">-nocrypt</span> <span class="token parameter variable">-out</span> xxx.key.pemopenssl x509 <span class="token parameter variable">-in</span> xxx.crt <span class="token parameter variable">-out</span> xxx.crt.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="RSA">RSA</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl rsa <span class="token parameter variable">-in</span> xxx.key <span class="token parameter variable">-out</span> xxx.key.pemopenssl x509 <span class="token parameter variable">-in</span> xxx.crt <span class="token parameter variable">-out</span> xxx.crt.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TLS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WIN-开启Chrome浏览器的Google翻译</title>
      <link href="/2023/05/18/coding/win-kai-qi-chrome-liu-lan-qi-de-google-fan-yi/"/>
      <url>/2023/05/18/coding/win-kai-qi-chrome-liu-lan-qi-de-google-fan-yi/</url>
      
        <content type="html"><![CDATA[<ol><li>去设置里面开启Google翻译功能</li><li>开启系统的全局代理，让浏览器走系统代理</li><li>找到一个自动翻译的页面，让浏览器自动翻译</li><li>关闭系统代理，切换回浏览器的自动代理</li></ol>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Caddy2-获取证书</title>
      <link href="/2023/05/17/yun-wei/caddy2-huo-qu-zheng-shu/"/>
      <url>/2023/05/17/yun-wei/caddy2-huo-qu-zheng-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">caddy</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> caddy    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"80:80"</span>      <span class="token punctuation">-</span> <span class="token string">"443:443"</span>      <span class="token punctuation">-</span> <span class="token string">"443:443/udp"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./caddy/file/Caddyfile<span class="token punctuation">:</span>/etc/caddy/Caddyfile      <span class="token punctuation">-</span> ./caddy/data<span class="token punctuation">:</span>/data      <span class="token punctuation">-</span> ./caddy/config<span class="token punctuation">:</span>/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Caddyfile">Caddyfile</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">xxx.xxxxx.com</span> <span class="token value attr-value">{</span>  <span class="token key attr-name">    root</span> <span class="token value attr-value">* /usr/share/caddy</span>    file_server<span class="token key attr-name">    log</span> <span class="token value attr-value">{</span><span class="token key attr-name">        output</span> <span class="token value attr-value">file /var/log/caddy/access.log</span>    }<span class="token key attr-name">    tls</span> <span class="token value attr-value">xicheng.jiang.1@gmail.com</span><span class="token key attr-name">    tls</span> <span class="token value attr-value">{</span><span class="token key attr-name">        protocols</span> <span class="token value attr-value">tls1.2 tls1.3</span><span class="token key attr-name">        ciphers</span> <span class="token value attr-value">TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256</span>    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>证书保存在<code>data</code>目录里，使用<code>tree</code>命令查看目录结构就能找到</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Caddy2 </tag>
            
            <tag> TLS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow-ValueError logits and labels must have the same shape, received ((None, 240, 1) vs (None,)).</title>
      <link href="/2023/05/16/coding/tensorflow-valueerror-logits-and-labels-must-have-the-same-shape-received-none-240-1-vs-none/"/>
      <url>/2023/05/16/coding/tensorflow-valueerror-logits-and-labels-must-have-the-same-shape-received-none-240-1-vs-none/</url>
      
        <content type="html"><![CDATA[<p>如果输入的 <code>shape</code> 都没问题，那应该是没加 <code>Flatten</code> 的原因</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">model <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>models<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token comment"># input_shape 保持和数据集一致</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span>input_shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'sigmoid'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jhipster-error &#39;./lib/util/namespace&#39; is not defined by exports in &#39;xxxx/package.json&#39;</title>
      <link href="/2023/05/15/yun-wei/jhipster-error-namespace-is-not-defined-by-exports-in-package-json/"/>
      <url>/2023/05/15/yun-wei/jhipster-error-namespace-is-not-defined-by-exports-in-package-json/</url>
      
        <content type="html"><![CDATA[<p><code>package.json</code> 中的 <code>exports</code> 中添加 <code>"./lib/util/namespace": "./lib/util/namespace.js"</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"exports"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token property">"."</span><span class="token operator">:</span> <span class="token string">"./lib/environment.js"</span><span class="token punctuation">,</span>  <span class="token property">"./cli/"</span><span class="token operator">:</span> <span class="token string">"./cli/"</span><span class="token punctuation">,</span>  <span class="token property">"./lib/"</span><span class="token operator">:</span> <span class="token string">"./lib/"</span><span class="token punctuation">,</span>  <span class="token property">"./lib/util/"</span><span class="token operator">:</span> <span class="token string">"./lib/util/"</span><span class="token punctuation">,</span>  <span class="token property">"./adapter"</span><span class="token operator">:</span> <span class="token string">"./lib/adapter.js"</span><span class="token punctuation">,</span>  <span class="token property">"./conflicter"</span><span class="token operator">:</span> <span class="token string">"./lib/util/conflicter.js"</span><span class="token punctuation">,</span>  <span class="token property">"./log"</span><span class="token operator">:</span> <span class="token string">"./lib/util/log.js"</span><span class="token punctuation">,</span>  <span class="token property">"./transform"</span><span class="token operator">:</span> <span class="token string">"./lib/util/transform.js"</span><span class="token punctuation">,</span>  <span class="token property">"./package.json"</span><span class="token operator">:</span> <span class="token string">"./package.json"</span><span class="token punctuation">,</span>  <span class="token property">"./lib/util/namespace"</span><span class="token operator">:</span> <span class="token string">"./lib/util/namespace.js"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jhipster </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gin-hello world</title>
      <link href="/2023/05/15/template/gin-hello-world/"/>
      <url>/2023/05/15/template/gin-hello-world/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"github.com/gin-gonic/gin"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 默认监听 8080 端口</span>err <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> go-template </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWT-生成和校验Token</title>
      <link href="/2023/05/15/coding/jwt-sheng-cheng-he-xiao-yan-token/"/>
      <url>/2023/05/15/coding/jwt-sheng-cheng-he-xiao-yan-token/</url>
      
        <content type="html"><![CDATA[<h2 id="JwtTokenService">JwtTokenService</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtTokenService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token constant">EXPIRATION_TIME</span> <span class="token operator">=</span> <span class="token number">3_600_000</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Key</span> key <span class="token operator">=</span> <span class="token class-name">Keys</span><span class="token punctuation">.</span><span class="token function">secretKeyFor</span><span class="token punctuation">(</span><span class="token class-name">SignatureAlgorithm</span><span class="token punctuation">.</span><span class="token constant">HS256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">getExpiration</span><span class="token punctuation">(</span><span class="token keyword">long</span> expirationTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> userid<span class="token punctuation">,</span> <span class="token class-name">Date</span> expiration<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>userid<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">signWith</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setExpiration</span><span class="token punctuation">(</span>expiration<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createDefaultToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">createToken</span><span class="token punctuation">(</span>userid<span class="token punctuation">,</span> <span class="token function">getExpiration</span><span class="token punctuation">(</span><span class="token constant">EXPIRATION_TIME</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">validateToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">parserBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">parseClaimsJws</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JwtTokenServiceTest">JwtTokenServiceTest</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">class</span> <span class="token class-name">JwtTokenServiceTest</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token class-name">JwtTokenService</span> jwtTokenService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">token</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> token <span class="token operator">=</span> jwtTokenService<span class="token punctuation">.</span><span class="token function">createDefaultToken</span><span class="token punctuation">(</span><span class="token string">"userid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> userid <span class="token operator">=</span> jwtTokenService<span class="token punctuation">.</span><span class="token function">validateToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>userid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springboot.version</span><span class="token punctuation">&gt;</span></span>3.0.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springboot.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lombok.version</span><span class="token punctuation">&gt;</span></span>1.18.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lombok.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jjwt.version</span><span class="token punctuation">&gt;</span></span>0.11.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jjwt.version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>junit.version</span><span class="token punctuation">&gt;</span></span>5.10.0-M1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>junit.version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.junit.jupiter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit-jupiter-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${junit.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jjwt-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${jjwt.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jjwt-impl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${jjwt.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.jsonwebtoken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jjwt-jackson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${jjwt.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${lombok.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${springboot.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Fly-Caddy2-WebSocket-部署</title>
      <link href="/2023/05/14/yun-wei/v2fly-caddy2-websocket-bu-shu/"/>
      <url>/2023/05/14/yun-wei/v2fly-caddy2-websocket-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><p>这里使用了 nfs 挂载数据卷，也可以直接挂到本地</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.8"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">caddy</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> caddy    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"80:80"</span>      <span class="token punctuation">-</span> <span class="token string">"443:443"</span>      <span class="token punctuation">-</span> <span class="token string">"443:443/udp"</span>      <span class="token punctuation">-</span> <span class="token string">"22345:22345"</span>      <span class="token punctuation">-</span> <span class="token string">"22345:22345/udp"</span>    <span class="token key atrule">configs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span> Caddyfile        <span class="token key atrule">target</span><span class="token punctuation">:</span> /etc/caddy/Caddyfile    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> caddy_data<span class="token punctuation">:</span>/data      <span class="token punctuation">-</span> caddy_config<span class="token punctuation">:</span>/config  <span class="token key atrule">v2fly</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> v2fly/v2fly<span class="token punctuation">-</span>core    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 12345<span class="token punctuation">:</span><span class="token number">12345</span>    <span class="token key atrule">configs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span> v2fly.conf        <span class="token key atrule">target</span><span class="token punctuation">:</span> /etc/v2ray/config.json    <span class="token key atrule">entrypoint</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v2ray"</span><span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span>  <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"/etc/v2ray/config.json"</span><span class="token punctuation">]</span><span class="token key atrule">configs</span><span class="token punctuation">:</span>  <span class="token key atrule">Caddyfile</span><span class="token punctuation">:</span>    <span class="token key atrule">file</span><span class="token punctuation">:</span> /root/config/caddy/Caddyfile  <span class="token key atrule">v2fly.conf</span><span class="token punctuation">:</span>    <span class="token key atrule">file</span><span class="token punctuation">:</span> /root/config/v2fly/config.json<span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">caddy_data</span><span class="token punctuation">:</span>    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"nfs"</span>      <span class="token key atrule">o</span><span class="token punctuation">:</span> <span class="token string">"addr=nfs-ip,rw"</span>      <span class="token key atrule">device</span><span class="token punctuation">:</span> <span class="token string">":/srv/nfs4/caddy_data"</span>  <span class="token key atrule">caddy_config</span><span class="token punctuation">:</span>    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"nfs"</span>      <span class="token key atrule">o</span><span class="token punctuation">:</span> <span class="token string">"addr=nfs-ip,rw"</span>      <span class="token key atrule">device</span><span class="token punctuation">:</span> <span class="token string">":/srv/nfs4/caddy_config"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Caddyfile">Caddyfile</h2><pre class="line-numbers language-config" data-language="config"><code class="language-config">域名:22345 {      root * /usr/share/caddy    file_server    log {        output file /var/log/caddy/access.log    }    tls email@gmail.com    tls {        protocols tls1.2 tls1.3        ciphers TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256    }    @v2ray_ws {      path /long_path      header Connection Upgrade      header Upgrade websocket    }    reverse_proxy @v2ray_ws 域名:12345}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="config-json">config.json</h2><p>由于使用了 Caddy 反代，v2ray 可以不使用 tls</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"log"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"access"</span><span class="token operator">:</span> <span class="token string">"/var/log/v2ray/access.log"</span><span class="token punctuation">,</span>        <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"/var/log/v2ray/error.log"</span><span class="token punctuation">,</span>        <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"warning"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"inbound"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>        <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"vless"</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"clients"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"UUID"</span><span class="token punctuation">,</span>                    <span class="token property">"level"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token property">"alterId"</span><span class="token operator">:</span> <span class="token number">0</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"decryption"</span><span class="token operator">:</span><span class="token string">"none"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"streamSettings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"network"</span><span class="token operator">:</span> <span class="token string">"ws"</span><span class="token punctuation">,</span>        <span class="token property">"security"</span><span class="token operator">:</span><span class="token string">"none"</span><span class="token punctuation">,</span>            <span class="token property">"wsSettings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/long_path"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"outbound"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"freedom"</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"inboundDetour"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"outboundDetour"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"blackhole"</span><span class="token punctuation">,</span>            <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"blocked"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"routing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"strategy"</span><span class="token operator">:</span> <span class="token string">"rules"</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"rules"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>                    <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                        <span class="token string">"0.0.0.0/8"</span><span class="token punctuation">,</span>                        <span class="token string">"10.0.0.0/8"</span><span class="token punctuation">,</span>                        <span class="token string">"100.64.0.0/10"</span><span class="token punctuation">,</span>                        <span class="token string">"127.0.0.0/8"</span><span class="token punctuation">,</span>                        <span class="token string">"169.254.0.0/16"</span><span class="token punctuation">,</span>                        <span class="token string">"172.16.0.0/12"</span><span class="token punctuation">,</span>                        <span class="token string">"192.0.0.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"192.0.2.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"192.168.0.0/16"</span><span class="token punctuation">,</span>                        <span class="token string">"198.18.0.0/15"</span><span class="token punctuation">,</span>                        <span class="token string">"198.51.100.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"203.0.113.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"::1/128"</span><span class="token punctuation">,</span>                        <span class="token string">"fc00::/7"</span><span class="token punctuation">,</span>                        <span class="token string">"fe80::/10"</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"blocked"</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> V2Ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WIN-开启BBR</title>
      <link href="/2023/05/12/yun-wei/win-kai-qi-bbr/"/>
      <url>/2023/05/12/yun-wei/win-kai-qi-bbr/</url>
      
        <content type="html"><![CDATA[<p>管理员模式打开 powershell</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">netsh int tcp <span class="token function">set</span> supplemental Template=Internet CongestionProvider=bbr2netsh int tcp <span class="token function">set</span> supplemental Template=Datacenter CongestionProvider=bbr2netsh int tcp <span class="token function">set</span> supplemental Template=Compat CongestionProvider=bbr2netsh int tcp <span class="token function">set</span> supplemental Template=DatacenterCustom CongestionProvider=bbr2netsh int tcp <span class="token function">set</span> supplemental Template=InternetCustom CongestionProvider=bbr2<span class="token comment"># 查看是否成功开启</span><span class="token function">Get-NetTCPSetting</span> <span class="token punctuation">|</span> <span class="token function">Select</span> SettingName<span class="token punctuation">,</span> CongestionProvider<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>改回默认模式</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">netsh int tcp <span class="token function">set</span> supplemental template=internet congestionprovider=CUBICnetsh int tcp <span class="token function">set</span> supplemental template=internetcustom congestionprovider=CUBICnetsh int tcp <span class="token function">set</span> supplemental template=Compat congestionprovider=NewRenonetsh int tcp <span class="token function">set</span> supplemental template=Datacenter congestionprovider=CUBICnetsh int tcp <span class="token function">set</span> supplemental template=Datacentercustom congestionprovider=CUBIC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIN </tag>
            
            <tag> BBR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-开启BBR</title>
      <link href="/2023/05/12/yun-wei/linux-kai-qi-bbr/"/>
      <url>/2023/05/12/yun-wei/linux-kai-qi-bbr/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"net.core.default_qdisc=fq"</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf<span class="token builtin class-name">echo</span> <span class="token string">"net.ipv4.tcp_congestion_control=bbr"</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf<span class="token comment"># 生效</span><span class="token function">sysctl</span> <span class="token parameter variable">-p</span><span class="token comment"># 查看内核是否已开启BBR</span><span class="token function">sysctl</span> net.ipv4.tcp_available_congestion_control<span class="token comment"># 查看BBR是否启动</span>lsmod <span class="token operator">|</span> <span class="token function">grep</span> bbr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> BBR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-echarts-更新图表</title>
      <link href="/2023/05/12/coding/vue-echarts-geng-xin-tu-biao/"/>
      <url>/2023/05/12/coding/vue-echarts-geng-xin-tu-biao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-chart</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>line-chart<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>line-chart<span class="token punctuation">"</span></span> <span class="token attr-name">:option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chartOptions<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> chartDemo <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>refs<span class="token punctuation">[</span><span class="token string">'line-chart'</span><span class="token punctuation">]</span>        <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>            chartDemo <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>refs<span class="token punctuation">[</span><span class="token string">'line-chart'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> chartOptions <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>data<span class="token punctuation">,</span>            <span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                <span class="token comment">// 更新 chartOptions; </span>                <span class="token comment">// 可能由于 vue-echarts 内部的 bug, 更新 reactive options 后图表会出现上次数据集残留的脏数据</span>                <span class="token comment">// 所以需要手动更新</span>                chartDemo<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>chartOptions<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230510-Brooks-S&amp;P Emini</title>
      <link href="/2023/05/11/shi-chang-fen-xi/shi-chang-fen-xi-20230510-brooks-s-p-emini/"/>
      <url>/2023/05/11/shi-chang-fen-xi/shi-chang-fen-xi-20230510-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Wednesday May 10, 2023</font></p><h1><font color="green">S&amp;P Emini pre-open market analysis</font></h1><h2 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h2><ul><li>The Emini has had two consecutive days, with the range being less than 20 points. Bulls want follow-through buying.<ul><li>Emini连续两天涨幅都在20点以内。多头希望跟进购买</li></ul></li><li>The daily chart is in the middle of a trading range that has gone on for over a month. This means that the market is in breakout mode and deciding on the direction of the breakout.<ul><li>日线图处于已经持续了一个多月的交易区间的中间。这意味着市场处于突破模式并决定突破的方向</li></ul></li><li>Traders should assume that the probability is close to 50% for both the bulls and the bears.<ul><li>交易者应假设多头和空头的概率都接近 50%</li></ul></li><li>At the moment, the odds slightly favor the bulls, but not by much. If the bulls had a big advantage, the market would not go sideways.<ul><li>目前，赔率略有利于多头，但幅度不大。如果多头有很大的优势，市场就不会横盘整理</li></ul></li><li>Since last Friday had a strong reversal up, that increases the odds that the bulls will get a second leg up to the May 1st low.<ul><li>由于上周五出现了强劲的反转，这增加了多头再次上涨至 5 月 1 日低点的可能性</li></ul></li><li>The bulls will probably get at least a small second leg up because of the strength of the May 5th bull breakout.<ul><li>由于 5 月 5 日牛市突破的力量，多头可能至少会在第二回合上涨</li></ul></li><li>The bears had a 4-bar bear micro channel down to May 4th. The bears that sold the May 4th high are trapped and likely sold more higher. Trading ranges are forgiving if a trader uses wide stops and scales in higher. Like the bears that sold the April 26th high and scaled in higher, the market eventually allowed those bears out.<ul><li>截至 5 月 4 日，熊市有一个 4 栏熊市微频道。卖出 5 月 4 日高点的空头被困，可能卖出更高。如果交易者使用较宽的止损和较高的规模，则交易范围是宽容的。就像卖出 4 月 26 日高点并走高的空头一样，市场最终允许这些空头离场</li></ul></li><li>Overall, the market is in breakout mode, and it is important to realize that the probability is close to 50% for both the bulls and the bears. If one side had a high probability, the market would not go sideways. Traders who want high probability should wait and see a clear breakout with follow-through; otherwise, sideways is more likely.<ul><li>总体而言，市场处于突破模式，重要的是要意识到多头和空头的概率都接近 50%。如果一方有很大的概率，市场就不会横盘整理。想要高概率的交易者应该观望一个明显的突破并跟进；否则，横向的可能性更大</li></ul></li></ul><h2 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h2><ul><li>Emini is up 27 points in the overnight Globex session.</li><li>The Globex Market had an upside breakout recently during the 5:30 AM PT report.<ul><li>Globex 市场最近在太平洋时间上午 5:30 的报告中出现了上行突破</li></ul></li><li>Today will probably gap up, and the Bulls will try to get a second leg up after last Friday’s bull breakout.<ul><li>今天可能会跳空，多头将在上周五的牛市突破后尝试第二回合上涨</li></ul></li><li>As I often say, traders should expect the open to go sideways for the first 6-12 bars. However, they should be open to a possible bull trend from the open.<ul><li>正如我经常说的，交易者应该预料到前 6-12 个柱线的开盘价会横盘整理。但是，他们应该对开盘后可能出现的牛市趋势持开放态度</li></ul></li><li>Since the odds are the market will gap up, traders should expect the bulls to get at least a second leg up. If the market sells off on the open, traders should expect the bulls to get at least an attempt up following the gap up.<ul><li>由于市场很可能会跳空，交易员应该预计多头至少会再次上涨。如果市场在开盘时抛售，交易者应该预计多头至少会在跳空后尝试上涨</li></ul></li><li>If the buying pressure is not strong on the open, traders should expect sideways to down and for the market to try and test the moving average.<ul><li>如果开盘时买盘压力不强，交易者应预期横向下跌，市场将尝试测试移动平均线</li></ul></li></ul><h2 id="font-color-red-Emini-intraday-market-update-font"><font color="red">Emini intraday market update</font></h2><ul><li>The Emini gapped up and sold off quickly down to bar 5.<ul><li>Emini 跳空并迅速抛售至 bar 5</li></ul></li><li>The selloff to bar 5 was strong enough to make the market Always In Short and increased the odds of a second leg down. However, the selloff was climactic, which increased the risk of a deep pullback.<ul><li>抛售到 5 根柱线的力度足以使市场始终处于空头状态，并增加了第二条腿下跌的可能性。然而，抛售达到高潮，这增加了深度回调的风险</li></ul></li><li>It was reasonable to buy bar 1 following the large gap up. Any selloff was more likely to convert the market into a trading range instead of a bear trend.<ul><li>在大幅上涨后买入 1 号柱是合理的。任何抛售都更有可能将市场转变为交易区间而不是熊市趋势</li></ul></li><li>The rally on bar 7 was strong. However, it followed a large selloff.<ul><li>7 号柱的涨势强劲。然而，随后出现了大规模抛售</li></ul></li><li>This meant the best the bulls could expect was a trading range. While the odds favored buyers below bar 7:10 AM PT for a second leg up, the bears got a downside breakout a few bars later, a new low of the day.<ul><li>这意味着多头可以预期的最好的是一个交易区间。虽然在太平洋时间上午 7 点 10 分柱线下方买家获得第二轮上涨的可能性较大，但空头在几个柱线后出现下行突破，创下当日新低</li></ul></li><li>As of bar 40 (9:50 AM PT), while the bears have done a good job with the selling pressure today, there has been a lot of buying pressure. This increases the risk of today not closing on its low, so traders should expect a rally back to the bar 5 low.<ul><li>截至 40 柱（太平洋时间上午 9 点 50 分），虽然空头今天很好地应对了抛售压力，但也存在很大的买盘压力。这增加了今天未收于低点的风险，因此交易者应该期待反弹回到 5 低点</li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230510-SP500-Emini-5-Min-Trending-Trading-Range-with-Close-near-Open-768x432.png" alt="Emini 5 Min - Yesterday"></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-14.最长公共前缀</title>
      <link href="/2023/05/11/leetcode/leetcode-14-zui-chang-gong-gong-qian-zhui/"/>
      <url>/2023/05/11/leetcode/leetcode-14-zui-chang-gong-gong-qian-zhui/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>编写一个函数来查找字符串数组中的最长公共前缀。<br>如果不存在公共前缀，返回空字符串 “”。</p><blockquote><p>示例 1：<br>输入：strs = [“flower”,“flow”,“flight”]<br>输出：“fl”</p></blockquote><blockquote><p>示例 2：<br>输入：strs = [“dog”,“racecar”,“car”]<br>输出：“”<br>解释：输入不存在公共前缀。</p></blockquote><blockquote><p>提示：<br>1 &lt;= strs.length &lt;= 200<br>0 &lt;= strs[i].length &lt;= 200<br>strs[i] 仅由小写英文字母组成</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">longestCommonPrefix</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> strs<span class="token punctuation">)</span><span class="token punctuation">:</span>        ans <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token operator">*</span>strs<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                ans <span class="token operator">+=</span> i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token keyword">return</span> ans<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">longestCommonPrefix</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> strs<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>commonprefix<span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-13.罗马数字转整数</title>
      <link href="/2023/05/11/leetcode/leetcode-13-luo-ma-shu-zi-zhuan-zheng-shu/"/>
      <url>/2023/05/11/leetcode/leetcode-13-luo-ma-shu-zi-zhuan-zheng-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。</p><pre class="line-numbers language-none"><code class="language-none">字符          数值I             1V             5X             10L             50C             100D             500M             1000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1 。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><ul><li>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。</li><li>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。</li><li>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。</li></ul><p>给定一个罗马数字，将其转换成整数。</p><blockquote><p>示例 1:<br>输入: s = “III”<br>输出: 3</p></blockquote><blockquote><p>示例 2:<br>输入: s = “IV”<br>输出: 4</p></blockquote><blockquote><p>示例 3:<br>输入: s = “IX”<br>输出: 9</p></blockquote><blockquote><p>示例 4:<br>输入: s = “LVIII”<br>输出: 58<br>解释: L = 50, V= 5, III = 3.</p></blockquote><blockquote><p>示例 5:<br>输入: s = “MCMXCIV”<br>输出: 1994<br>解释: M = 1000, CM = 900, XC = 90, IV = 4.</p></blockquote><blockquote><p>提示：<br>1 &lt;= s.length &lt;= 15<br>s 仅含字符 (‘I’, ‘V’, ‘X’, ‘L’, ‘C’, ‘D’, ‘M’)<br>题目数据保证 s 是一个有效的罗马数字，且表示整数在范围 [1, 3999] 内<br>题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。<br>IL 和 IM 这样的例子并不符合题目要求，49 应该写作 XLIX，999 应该写作 CMXCIX 。<br>关于罗马数字的详尽书写规则，可以参考<a href="https://b2b.partcommunity.com/community/knowledge/zh_CN/detail/10753/%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97#knowledge_article">罗马数字 - Mathematics</a> 。</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">romanToInt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'I'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'IV'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'V'</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'IX'</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'X'</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">'XL'</span><span class="token punctuation">:</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">'L'</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">'XC'</span><span class="token punctuation">:</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'CD'</span><span class="token punctuation">:</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">'CM'</span><span class="token punctuation">:</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token string">'M'</span><span class="token punctuation">:</span><span class="token number">1000</span><span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token builtin">max</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i<span class="token punctuation">,</span> n <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-12.整数转罗马数字</title>
      <link href="/2023/05/11/leetcode/leetcode-12-zheng-shu-zhuan-luo-ma-shu-zi/"/>
      <url>/2023/05/11/leetcode/leetcode-12-zheng-shu-zhuan-luo-ma-shu-zi/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。</p><pre class="line-numbers language-none"><code class="language-none">字符          数值I             1V             5X             10L             50C             100D             500M             1000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：</p><ul><li>I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。</li><li>X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。</li><li>C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。</li></ul><p>给你一个整数，将其转为罗马数字。</p><blockquote><p>示例 1:<br>输入: num = 3<br>输出: “III”</p></blockquote><blockquote><p>示例 2:<br>输入: num = 4<br>输出: “IV”</p></blockquote><blockquote><p>示例 3:<br>输入: num = 9<br>输出: “IX”</p></blockquote><blockquote><p>示例 4:<br>输入: num = 58<br>输出: “LVIII”<br>解释: L = 50, V = 5, III = 3.</p></blockquote><blockquote><p>示例 5:<br>输入: num = 1994<br>输出: “MCMXCIV”<br>解释: M = 1000, CM = 900, XC = 90, IV = 4.</p></blockquote><blockquote><p>提示：<br>1 &lt;= num &lt;= 3999</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">intToRoman</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> num<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        <span class="token comment"># 使用哈希表，按照从大到小顺序排列</span>        hashmap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1000</span><span class="token punctuation">:</span><span class="token string">'M'</span><span class="token punctuation">,</span> <span class="token number">900</span><span class="token punctuation">:</span><span class="token string">'CM'</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">:</span><span class="token string">'D'</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">:</span><span class="token string">'CD'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span><span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">:</span><span class="token string">'XC'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">:</span><span class="token string">'L'</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">:</span><span class="token string">'XL'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token string">'X'</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">:</span><span class="token string">'IX'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token string">'V'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span><span class="token string">'IV'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token string">'I'</span><span class="token punctuation">}</span>        res <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> key <span class="token keyword">in</span> hashmap<span class="token punctuation">:</span>            <span class="token keyword">if</span> num <span class="token operator">//</span> key <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>                count <span class="token operator">=</span> num <span class="token operator">//</span> key  <span class="token comment"># 比如输入4000，count 为 4</span>                res <span class="token operator">+=</span> hashmap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">*</span> count                 num <span class="token operator">%=</span> key        <span class="token keyword">return</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-11.盛最多水的容器</title>
      <link href="/2023/05/11/leetcode/leetcode-11-sheng-zui-duo-shui-de-rong-qi/"/>
      <url>/2023/05/11/leetcode/leetcode-11-sheng-zui-duo-shui-de-rong-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i]) 。<br>找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。<br>返回容器可以储存的最大水量。<br>说明：你不能倾斜容器。</p><blockquote><p>示例 1：<br>输入：[1,8,6,2,5,4,8,3,7]<br>输出：49<br>解释：容器能够容纳水的最大值为 49 (8和7, 7*7=49)。</p></blockquote><blockquote><p>示例 2：<br>输入：height = [1,1]<br>输出：1</p></blockquote><blockquote><p>提示：<br>$n == height.length$<br>$2 &lt;= n &lt;= 10^5$<br>$0 &lt;= height[i] &lt;= 10^4$</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">maxArea</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> height<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>        left<span class="token punctuation">,</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>        res <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">while</span> left <span class="token operator">&lt;</span> right<span class="token punctuation">:</span>            area <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>height<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span>            res <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> area<span class="token punctuation">)</span>            <span class="token keyword">if</span> height<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;</span> height<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">:</span>                left <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                right <span class="token operator">-=</span> <span class="token number">1</span>        <span class="token keyword">return</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powershell-导出壁纸缓存图片</title>
      <link href="/2023/05/11/coding/powershell-dao-chu-bi-zhi-huan-cun-tu-pian/"/>
      <url>/2023/05/11/coding/powershell-dao-chu-bi-zhi-huan-cun-tu-pian/</url>
      
        <content type="html"><![CDATA[<h2 id="export-wallper-ps1">export_wallper.ps1</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token namespace">[CmdletBinding()]</span><span class="token keyword">Param</span><span class="token punctuation">(</span>    <span class="token namespace">[bool]</span> <span class="token variable">$init</span><span class="token punctuation">)</span><span class="token variable">$link_target</span> = <span class="token string">'C:\Users\xiche\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets'</span><span class="token variable">$link_dir</span> = <span class="token string">'D:\xiche\Pictures\wallper'</span><span class="token variable">$link_files</span> = <span class="token string">'D:\xiche\Pictures\wallper\*'</span><span class="token variable">$export_dir</span> = <span class="token string">'D:\xiche\Pictures\wallper_export'</span><span class="token variable">$export_files</span> = <span class="token string">'D:\xiche\Pictures\wallper_export\*'</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Test-Path</span> <span class="token variable">$link_dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">Remove-Item</span> <span class="token variable">$link_dir</span> <span class="token operator">-</span>Recurse    <span class="token punctuation">}</span>    <span class="token function">New-Item</span> <span class="token operator">-</span>ItemType Junction <span class="token operator">-</span>Target <span class="token variable">$link_target</span> <span class="token operator">-</span>Path <span class="token variable">$link_dir</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Test-Path</span> <span class="token variable">$export_dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">Remove-Item</span> <span class="token variable">$export_dir</span> <span class="token operator">-</span>Recurse    <span class="token punctuation">}</span>    <span class="token function">New-Item</span> <span class="token variable">$export_dir</span> <span class="token operator">-</span><span class="token function">Type</span> Directory<span class="token punctuation">}</span><span class="token function">Copy-Item</span> <span class="token variable">$link_files</span> <span class="token operator">-</span>Destination <span class="token variable">$export_dir</span><span class="token function">Get-ChildItem</span> <span class="token variable">$export_files</span> <span class="token punctuation">|</span> <span class="token function">Rename-Item</span> <span class="token operator">-</span>NewName <span class="token punctuation">{</span> <span class="token variable">$_</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="用法">用法</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">export_wallper<span class="token punctuation">.</span>ps1 <span class="token operator">-</span>init <span class="token boolean">$True</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WIN-命令行模式使用天翼云盘</title>
      <link href="/2023/05/10/yun-wei/win-ming-ling-xing-mo-shi-shi-yong-tian-yi-yun-pan/"/>
      <url>/2023/05/10/yun-wei/win-ming-ling-xing-mo-shi-shi-yong-tian-yi-yun-pan/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">winget <span class="token function">install</span> tickstep.cloudpan189-go <span class="token parameter variable">-l</span> D:<span class="token punctuation">\</span>Programs<span class="token punctuation">\</span>cloudpan189-go --accept-package-agreements<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="使用">使用</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">help</span><span class="token comment"># 登录</span>login<span class="token comment"># 修改下载目录</span>config <span class="token builtin class-name">set</span> <span class="token parameter variable">-savedir</span> D:<span class="token punctuation">\</span>xiche<span class="token punctuation">\</span>下载<span class="token function">ls</span><span class="token builtin class-name">cd</span><span class="token comment"># 下载文件</span>d xxx.xx<span class="token comment"># 上传文件</span>u xxx.xx<span class="token comment"># 秒传文件</span>ru xxx.xx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIN </tag>
            
            <tag> cloudpan189-go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-线程池</title>
      <link href="/2023/05/10/coding/python-xian-cheng-chi/"/>
      <url>/2023/05/10/coding/python-xian-cheng-chi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> concurrent<span class="token punctuation">.</span>futures <span class="token keyword">import</span> ThreadPoolExecutor<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> ALL_COMPLETEDpool <span class="token operator">=</span> ThreadPoolExecutor<span class="token punctuation">(</span>max_workers<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>tasks <span class="token operator">=</span> <span class="token punctuation">[</span>pool<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>the_function<span class="token punctuation">,</span> params<span class="token punctuation">)</span> <span class="token keyword">for</span> the_task <span class="token keyword">in</span> all_tasks<span class="token punctuation">]</span><span class="token comment"># 阻塞等待所有任务执行完</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">,</span> return_when<span class="token operator">=</span>ALL_COMPLETED<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow-partially initialized module &#39;charset_normalizer&#39; has no attribute &#39;md__mypyc&#39;</title>
      <link href="/2023/05/10/coding/tensorflow-partially-initialized-module-charset-normalizer-has-no-attribute-md-mypyc/"/>
      <url>/2023/05/10/coding/tensorflow-partially-initialized-module-charset-normalizer-has-no-attribute-md-mypyc/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token parameter variable">-U</span> --force-reinstall charset-normalizer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3-打包静态页面后显示空白页且页面没有挂载任何元素</title>
      <link href="/2023/05/08/coding/vue3-da-bao-jing-tai-ye-mian-hou-xian-shi-kong-bai-ye-qie-ye-mian-mei-you-gua-zai-ren-he-yuan-su/"/>
      <url>/2023/05/08/coding/vue3-da-bao-jing-tai-ye-mian-hou-xian-shi-kong-bai-ye-qie-ye-mian-mei-you-gua-zai-ren-he-yuan-su/</url>
      
        <content type="html"><![CDATA[<p>将 <code>vue</code> 文件中 <code>&lt;script setup&gt;</code> 里的 <code>setup</code> 删除，只保留 <code>&lt;script&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-日期迭代器</title>
      <link href="/2023/05/06/coding/python-ri-qi-die-dai-qi/"/>
      <url>/2023/05/06/coding/python-ri-qi-die-dai-qi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> datetime<span class="token keyword">def</span> <span class="token function">date_range</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">:</span>    range_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    d <span class="token operator">=</span> begin    delta <span class="token operator">=</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> d <span class="token operator">&lt;=</span> end<span class="token punctuation">:</span>        range_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>d<span class="token punctuation">)</span>        d <span class="token operator">+=</span> delta    <span class="token keyword">return</span> range_listbegin <span class="token operator">=</span> datetime<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>end <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>date_range<span class="token punctuation">(</span>begin<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cufflinks-绘制K线图</title>
      <link href="/2023/05/06/coding/cufflinks-hui-zhi-k-xian-tu/"/>
      <url>/2023/05/06/coding/cufflinks-hui-zhi-k-xian-tu/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-cufflinks">安装 cufflinks</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> cufflinks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="绘制K线图">绘制K线图</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> yfinance <span class="token keyword">as</span> yf<span class="token keyword">import</span> cufflinks <span class="token keyword">as</span> cfcf<span class="token punctuation">.</span>set_config_file<span class="token punctuation">(</span>offline<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> world_readable<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>data <span class="token operator">=</span> yf<span class="token punctuation">.</span>download<span class="token punctuation">(</span><span class="token string">'QQQ'</span><span class="token punctuation">,</span> <span class="token string">'2022-01-01'</span><span class="token punctuation">,</span> <span class="token string">'2023-05-06'</span><span class="token punctuation">)</span>qf <span class="token operator">=</span> cf<span class="token punctuation">.</span>QuantFig<span class="token punctuation">(</span>data<span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'QQQ'</span><span class="token punctuation">,</span> legend<span class="token operator">=</span><span class="token string">'top'</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'QQQ'</span><span class="token punctuation">)</span>qf<span class="token punctuation">.</span>add_volume<span class="token punctuation">(</span><span class="token punctuation">)</span>qf<span class="token punctuation">.</span>add_ema<span class="token punctuation">(</span>periods<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> column<span class="token operator">=</span><span class="token string">'Close'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>qf<span class="token punctuation">.</span>add_trendline<span class="token punctuation">(</span><span class="token string">'2023-01-06'</span><span class="token punctuation">,</span><span class="token string">'2023-03-13'</span><span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">'low'</span><span class="token punctuation">)</span>qf<span class="token punctuation">.</span>add_resistance<span class="token punctuation">(</span><span class="token string">'2022-08-16'</span><span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">'high'</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">'toend'</span><span class="token punctuation">)</span>qf<span class="token punctuation">.</span>add_support<span class="token punctuation">(</span><span class="token string">'2022-10-13'</span><span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">'low'</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">'toend'</span><span class="token punctuation">)</span>qf<span class="token punctuation">.</span>iplot<span class="token punctuation">(</span>up_color<span class="token operator">=</span><span class="token string">'green'</span><span class="token punctuation">,</span>down_color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="剔除周六周日">剔除周六周日</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">fig <span class="token operator">=</span> qf<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>up_color<span class="token operator">=</span><span class="token string">'green'</span><span class="token punctuation">,</span>down_color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>update_xaxes<span class="token punctuation">(</span>rangebreaks<span class="token operator">=</span><span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">(</span>bounds<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"sat"</span><span class="token punctuation">,</span> <span class="token string">"mon"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="剔除所有非交易日">剔除所有非交易日</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> datetime<span class="token keyword">def</span> <span class="token function">date_range</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">:</span>    range_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    d <span class="token operator">=</span> begin    delta <span class="token operator">=</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> d <span class="token operator">&lt;=</span> end<span class="token punctuation">:</span>        range_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>d<span class="token punctuation">)</span>        d <span class="token operator">+=</span> delta    <span class="token keyword">return</span> range_listbegin <span class="token operator">=</span> datetime<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>end <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 获取所有日期</span>dr <span class="token operator">=</span> date_range<span class="token punctuation">(</span>begin<span class="token punctuation">,</span> end<span class="token punctuation">)</span>dr_str <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 获取所有交易日</span>data_str <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>index<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 获取所有非交易日</span>s <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> data_str<span class="token punctuation">,</span>dr_str<span class="token punctuation">)</span><span class="token punctuation">)</span>fig <span class="token operator">=</span> qf<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>up_color<span class="token operator">=</span><span class="token string">'green'</span><span class="token punctuation">,</span>down_color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>update_xaxes<span class="token punctuation">(</span>    rangebreaks<span class="token operator">=</span><span class="token punctuation">[</span>        <span class="token builtin">dict</span><span class="token punctuation">(</span>values<span class="token operator">=</span>s<span class="token punctuation">)</span>  <span class="token comment"># 剔除所有非交易日</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cufflinks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-10.正则表达式匹配</title>
      <link href="/2023/05/05/leetcode/leetcode-10-zheng-ze-biao-da-shi-pi-pei/"/>
      <url>/2023/05/05/leetcode/leetcode-10-zheng-ze-biao-da-shi-pi-pei/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 ‘.’ 和 ‘*’ 的正则表达式匹配。</p><ul><li>‘.’ 匹配任意单个字符</li><li>‘*’ 匹配零个或多个前面的那一个元素</li></ul><p>所谓匹配，是要涵盖整个字符串 s 的，而不是部分字符串。</p><blockquote><p>示例 1：<br>输入：s = “aa”, p = “a”<br>输出：false<br>解释：“a” 无法匹配 “aa” 整个字符串。</p></blockquote><blockquote><p>示例 2:<br>输入：s = “aa”, p = “a*”<br>输出：true<br>解释：因为 ‘*’ 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 ‘a’。因此，字符串 “aa” 可被视为 ‘a’ 重复了一次。</p></blockquote><blockquote><p>示例 3：<br>输入：s = “ab”, p = “.<em>"<br>输出：true<br>解释：".</em>” 表示可匹配零个或多个（‘*’）任意字符（‘.’）。</p></blockquote><blockquote><p>提示：<br>1 &lt;= s.length &lt;= 20<br>1 &lt;= p.length &lt;= 20<br>s 只包含从 a-z 的小写字母。<br>p 只包含从 a-z 的小写字母，以及字符 . 和 *。<br>保证每次出现字符 * 时，前面都匹配到有效的字符</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">isMatch</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> p<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        m<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>        dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token comment"># 初始化</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> p<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'*'</span><span class="token punctuation">:</span>                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>        <span class="token comment"># 状态更新</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            dp2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>           <span class="token comment"># 滚动数组</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> p<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">or</span> p<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.'</span><span class="token punctuation">:</span>                    dp2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">elif</span> p<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'*'</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> p<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">and</span> p<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'.'</span><span class="token punctuation">:</span>                        dp2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp2<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        dp2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp2<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span>            dp <span class="token operator">=</span> dp2                        <span class="token comment"># 滚动数组</span>            <span class="token keyword">if</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token comment"># 提前结束</span>                <span class="token keyword">return</span> <span class="token boolean">False</span>                <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-Cohen-Sutherland直线裁剪算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-cohen-sutherland-zhi-xian-cai-jian-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-cohen-sutherland-zhi-xian-cai-jian-suan-fa/</url>
      
        <content type="html"><![CDATA[<p>在二维观察中，需要在观察坐标系下根据窗口大小对二维图形进行裁剪（clipping），只将位于窗口内的图形变换到视区输出。直线段裁剪是二维图形裁剪的基础，<strong>裁剪的实质是判断直线段是否与窗口相交，如相交则进一步确定直线段上位于窗口内的部分。</strong></p><h2 id="编码原理">编码原理</h2><p>Cohen-Sutherland直线段裁剪算法是最早流行的编码算法。<strong>每段直线的端点都被赋予一组四位二进制代码</strong>，称为区域编码(region code，RC)，用来<strong>标识直线段端点相对于窗口边界及其延长线的位置。</strong><br>假设窗口是标准矩形，由上、下、左、右4条边界组成，延长窗口的4条边界形成9个区域。这样根据直线段的任一端点P(x，y)所处的窗口区域位置，可以赋予一组4位二进制编码，称为区域码RC=C3C2C1C0。C0代表左边界， C1代表右边界， C2代表下边界， C3代表上边界。<br><img src="/static/IT/Graphics/Cohen-Sutherland-1.png" alt=""><br>为了保证窗口内及窗口边界上直线段端点的编码为零，定义规则如下：<br>C0：若端点的 x &lt; wxl，则C0=1，否则C0=0。<br>C1：若端点的x &gt; wxr，则C1=1，否则C1=0。<br>C2：若端点的y &lt; wyb，则C2=1，否则C2=0。<br>C3：若端点的y &gt; wyt，则C3=1，否则C3=0。</p><h2 id="裁剪步骤">裁剪步骤</h2><ol><li>若直线段的两个端点的区域编码都为0，有<strong>RC0|RC1=0</strong>（二者按位相或的结果为零，即<strong>RC0=0且RC1=0</strong>），说明直线段的两个端点都在窗口内，应“<strong>简取</strong>”之（trivally accepted）。</li><li>若直线段的两个端点的区域编码都不为0，且<strong>RC0&amp;RC1≠0</strong>（二者按位相与的结果不为零，即<strong>RC0≠0且RC1≠0</strong>），说明直线段位于窗外的同一侧，或左方、或右方、或上方、或下方，应“<strong>简弃</strong>”之（trivally rejected） 。</li><li>若直线段既不满足“简取”也不满足“简弃”的条件，则需要与窗口进行“<strong>求交</strong>”判断。这时，<strong>直线段必然与窗口边界或窗口边界的延长线相交</strong>，<strong>分两种情况处理</strong>。</li></ol><p><img src="/static/IT/Graphics/Cohen-Sutherland-2.png" alt=""><br>P0点的编码为0010。P1点编码为0000。交点P在窗口边界上，编码为0000。 根据编码判断PP1被简取。<br>Cohen-sutherland算法的关键技术：在于<strong>总是要让直线段的一个顶点处于窗口之外</strong>，例如P0点。这样P0点到交点P的直线段必然不可见，故可以直接抛弃。<br><img src="/static/IT/Graphics/Cohen-Sutherland-3.png" alt=""><br>直线段必然与窗口边界或窗口边界的延长线相交，分两种情况处理。<br><img src="/static/IT/Graphics/Cohen-Sutherland-4.png" alt=""><br>裁剪直线段时，一般按固定顺序**左（x=wxl），右（x=wxr）、下（y=wyb）、上（y=wyt）**求解窗口边界与直线段的交点。</p><h2 id="交点计算公式">交点计算公式</h2><p>对于端点坐标为 $P0(x0，y0)$ 和 $P1(x1，y1)$ 的直线段，<br>与窗口左边界（x＝wxl）或右边界（x＝wxr）交点的y坐标的计算公式为<br>$y = k(x-x_0)+y_0$<br>与窗口上边界（y＝wyt）或下边界（y＝wyb）交点的x坐标的计算公式为<br>$x = \frac{y-y_0}{k} + x_0$<br>其中，$k = \frac{y_1-y_0}{x_1-x_0}$</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-Liang-Barsky直线段裁剪算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-liang-barsky-zhi-xian-duan-cai-jian-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-liang-barsky-zhi-xian-duan-cai-jian-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="参数化算法-Cyrus-Beck">参数化算法(Cyrus-Beck)</h2><p>考虑凸多边形区域R和直线段 $P1P2：P(t)=(P2-P1)*t+P1$<br>设A是区域R的边界上一点，N是区域边界在A点的内法线向量<br><img src="/static/IT/Graphics/Liang-Barsky-1.png" alt=""><br>则对于线段P1P2上任一点P(t)<br>$N ·(P(t)-A)&lt; 0 \to 外侧$<br>$N ·(P(t)-A)&gt;0 \to 内侧$<br>$N ·(P(t)-A)=0 \to 边界或其延长线上$<br>凸多边形的性质：点P(t)在凸多边形内的<strong>充要条件</strong>是，对于凸多边形边界上任意一点A和该点处内法向N，都有N·(P(t)-A)&gt;0</p><p>k条边的多边形，可见线段参数区间的解:<br>$Ni· (p(t)-Ai)&gt;=0, i=0,…,k, 0≤t ≤1.$<br>即：$Ni· (P1-Ai)+ Ni· (P2-P1) t&gt;=0 $<br><img src="/static/IT/Graphics/Liang-Barsky-2.png" alt=""><br>令$ti= Ni· (P1-Ai)/[Ni· (P2-P1) ]$<br>$Ni· (P2-P1) =0-&gt;$ 平行于对应边。<br>此时判断$Ni· (P1-Ai)$<br><strong>若$Ni· (P1-Ai) &lt;0 \to P1 P2在多边形外侧-&gt;不可见$，</strong><br><strong>若$Ni· (P1-Ai) &gt;0 \to  P1 P2在多边形内侧-&gt;继续其它边的判断$</strong><br>对于t值的选择：首先，要符合0≤t≤1；其次，对于凸窗口来说，每一个线段与其至多有两个交点，即有两个相应的t值。所以我们可以把计算出的t值分成两组：一组为下限组，是分布在线段起点一侧的；一组为上限组，是分布在线段终点一侧的。这样，只要找出下限组中的最大值及上限组中的最小值，就可确定线段了。<br>分组的依据是：<br><strong>如果$Ni· (P2-P1) ＜0$，则计算出的值属于上限组</strong><br><strong>如果$Ni· (P2-P1) ＞0$，则计算出的值属于下限组</strong></p><h2 id="参数化算法的几何意义">参数化算法的几何意义</h2><p>上限组以$Ni· (P2-P1) &lt;0$为特征，表示在该处沿P1P2方向前进将越来越远地离开多边形区域。<br>下限组以$Ni· (P2-P1) &gt;0$为特征，表示在该处沿P1P2方向前进将接近或进入多边形内侧。<br><img src="/static/IT/Graphics/Liang-Barsky-3.png" alt=""></p><p>因此，线段可见的交点参数：<br><strong>tl=max{0,max{ti:  Ni· (P2-P1) &gt;0}}</strong><br><strong>tu=min{1,min{ti:  Ni· (P2-P1)&lt;0}}</strong><br>若 $tl &lt;= tu$, <strong>[tl ， tu]是可见线段的交点参数区间</strong>，否则，线段不可见。</p><p>当凸多边形是矩形窗口且矩形的边与坐标轴平行时，该算法退化为Liang-Barsky算法。<br><img src="/static/IT/Graphics/Liang-Barsky-4.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-三维图形几何变换</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-san-wei-tu-xing-ji-he-bian-huan/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-san-wei-tu-xing-ji-he-bian-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="三维几何变换">三维几何变换</h2><p>同二维变换类似，三维变换同样引入了齐次坐标技术，在四维空间 $(x,y,z,w)$ 内进行讨论。定义了规范化齐次坐标以后，三维图形几何变换就可以表示为物体顶点集合的规范化齐次坐标矩阵与某一变换矩阵相乘的形式。用规范化齐次坐标表示的三维图形几何变换矩阵是一个4×4方阵，简称为三维几何变换矩阵。<br>$$<br>T=\left[<br>\begin{matrix}<br>a &amp; b &amp; c &amp; p\\<br>d &amp; e &amp; f  &amp; q\\<br>g &amp; h &amp; i  &amp; r\\<br>l  &amp; m &amp; n &amp; s<br>\end{matrix}<br>\right]<br>$$</p><p>$P’ = P \cdot T$</p><h3 id="平移变换">平移变换</h3><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; 1 &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; 1 &amp; 0\\<br>T_x  &amp; T_y &amp; T_z &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h3 id="比例变换">比例变换</h3><p>$$<br>T=\left[<br>\begin{matrix}<br>S_x &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; S_y &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; S_z &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h3 id="旋转变换">旋转变换</h3><h4 id="绕x轴旋转">绕x轴旋转</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; \cos \beta &amp; \sin \beta &amp; 0\\<br>0 &amp; -\sin \beta &amp; \cos \beta &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="绕y轴旋转">绕y轴旋转</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>\cos \beta &amp; 0 &amp; -\sin \beta  &amp; 0\\<br>0 &amp; 1 &amp; 0 &amp; 0\\<br>\sin \beta &amp; 0 &amp; \cos \beta &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="绕z轴旋转">绕z轴旋转</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>\cos \beta &amp; \sin \beta &amp; 0 &amp; 0\\<br>-\sin \beta &amp; \cos \beta &amp; 0 &amp; 0\\<br>0 &amp; 0 &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$<br><strong>β为正向旋转角</strong></p><h3 id="反射变换">反射变换</h3><h4 id="关于x轴的反射">关于x轴的反射</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; -1 &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; -1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="关于y轴的反射">关于y轴的反射</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>-1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; 1 &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; -1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="关于z轴的反射">关于z轴的反射</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>-1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; -1 &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="关于xoy面的反射">关于xoy面的反射</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; 1 &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; -1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="关于yoz面的反射">关于yoz面的反射</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>-1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; 1 &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="关于xoz面的反射">关于xoz面的反射</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; 0 &amp; 0 &amp; 0\\<br>0 &amp; -1 &amp; 0  &amp; 0\\<br>0 &amp; 0 &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h3 id="错切变换">错切变换</h3><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; b &amp; c &amp; 0\\<br>d &amp; 1 &amp; f  &amp; 0\\<br>g &amp; h &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="沿x方向错切">沿x方向错切</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; 0&amp; 0 &amp; 0\\<br>d &amp; 1 &amp; 0  &amp; 0\\<br>g &amp; 0 &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="沿y方向错切">沿y方向错切</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; b &amp; 0 &amp; 0\\<br>0 &amp; 1 &amp; 0  &amp; 0\\<br>0 &amp; h &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p><h4 id="沿z方向错切">沿z方向错切</h4><p>$$<br>T=\left[<br>\begin{matrix}<br>1 &amp; 0 &amp; c &amp; 0\\<br>0 &amp; 1 &amp; f  &amp; 0\\<br>0 &amp; 0 &amp; 1 &amp; 0\\<br>0  &amp; 0 &amp; 0 &amp; 1<br>\end{matrix}<br>\right]<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-三维复合变换</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-san-wei-fu-he-bian-huan/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-san-wei-fu-he-bian-huan/</url>
      
        <content type="html"><![CDATA[<p>$P’ = P\cdot T = P\cdot T_1\cdot T_2 \ldots T_n$<br>其中，T为复合变换矩阵，$T_1, T_2 \ldots T_n$为<strong>单次基本几何变换矩阵</strong>。</p><h2 id="相对于任一参考点的三维几何变换">相对于任一参考点的三维几何变换</h2><p>在三维基本几何变换中，比例变换和旋转变换是与参考点相关的。相对于任一参考点Q（x,y,z）的比例变换和旋转变换应表达为复合变换形式。变换方法是<strong>首先将参考点平移到坐标原点，相对于坐标原点作比例变换或旋转变换，然后再进行反平移将参考点平移回原位置。</strong></p><h2 id="相对于任意方向的三维几何变换">相对于任意方向的三维几何变换</h2><p>相对于任意方向的变换方法是首先对任意方向做旋转变换，使变换方向与某个坐标轴重合，然后对该坐标轴进行三维基本几何变换，最后做反向旋转变换，将任意方向还原到原来的方向。三维几何变换中需要进行<strong>两次旋转变换</strong>，才能使任意方向与某个坐标轴重合。一般做法是<strong>先将任意方向旋转到某个坐标平面内，然后再旋转到与该坐标平面内的某个坐标轴重合。</strong></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-直线的扫描转换</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-zhi-xian-de-sao-miao-zhuan-huan/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-zhi-xian-de-sao-miao-zhuan-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="直接计算法">直接计算法</h2><p>假定直线的起点、终点分别为：$(x1,y1), (x2,y2)$, 且都为整数。<br>计算出斜率 $k=(y2-y1)/(x2-x1)$ ,<br>在Y轴的截距 $b=y1-k*x1$　<br><img src="/static/IT/Graphics/StraightLine-1.png" alt="直接计算法"></p><p>这样一来，只要给定 x的值，根据解析式立即可以计算出对应的y值，然后输出 $(x,round(y))$。这种方法直观，但<strong>效率太低</strong>，因为每一步需要一次浮点乘法、一次浮点加法和一次舍入运算。</p><h2 id="数值微分法-DDA">数值微分法 (DDA)</h2><p>假定直线的起点、终点分别为：$(x1,y1), (x2,y2)$, 且都为整数。　<br><img src="/static/IT/Graphics/StraightLine-2.png" alt="数值微分法"></p><p>已知过端点 $P0(x1, y1), P1(x2, y2)$ 的直线段L：$y=kx+b$<br>直线斜率为：$k=(y2-y1)/(x2-x1)$<br>考虑当 x 从 $xi \to xi+1$ 时 y 的变化规律：<br>设：<br>$\Delta x = x_{i+1}- x_i$<br>$x_{i+1} = x_i+ \Delta x$</p><p>计算：<br>$y_{i + 1} = kx_{i+1} + b = k(x_i + \Delta x) +b $<br>$= kx_i+b+k\Delta x$<br>$= y_i+k\Delta x$<br>当 $\Delta x =1;y_{i+1} = y_i+k $<br>即：当 x 每递增 1 y 递增 k(即直线斜率)；<br>注意上述分析的算法仅适用于 $|k|≤1$ 的情形。在这种情况下，x每增加1,y最多增加1。<br>当 $|k|&gt;1$ 时，必须把x，y地位互换。</p><p>DDA算法就是一个<strong>增量算法</strong>。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">DDALine</span><span class="token punctuation">(</span><span class="token keyword">int</span> x0<span class="token punctuation">,</span><span class="token keyword">int</span> y0<span class="token punctuation">,</span><span class="token keyword">int</span> x1<span class="token punctuation">,</span><span class="token keyword">int</span> y1<span class="token punctuation">,</span><span class="token keyword">int</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> x；<span class="token keyword">float</span> dx<span class="token punctuation">,</span> dy<span class="token punctuation">,</span> y<span class="token punctuation">,</span> k<span class="token punctuation">;</span>dx<span class="token operator">=</span> x1<span class="token operator">-</span>x0<span class="token punctuation">,</span> dy<span class="token operator">=</span>y1<span class="token operator">-</span>y0<span class="token punctuation">;</span>   k<span class="token operator">=</span>dy<span class="token operator">/</span>dx<span class="token punctuation">,</span> y<span class="token operator">=</span>y0<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>x<span class="token operator">=</span>x0<span class="token punctuation">;</span> x<span class="token operator">&lt;=</span>x1<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">drawpixel</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">;</span>    y<span class="token operator">=</span>y<span class="token operator">+</span>k<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中点Bresenham算法">中点Bresenham算法</h2><p>原理：每次在主位移方向上走一步，另一个方向上走不走步取决于中点误差项的值。给定理想直线的起点坐标为P0(x0,y0)，终点坐标为P1(x1,y1),则直线的隐函数方程为：<br>$F(x,y) = y - kx - b = 0$<br>其中，直线的斜率：$k = \frac{\Delta y}{\Delta x} = \frac{y_1 - y_0}{x_1 - x_0}$<br>直线水平方向位移：$\Delta x = x_1 - x_0$<br>直线垂直方向位移：$\Delta y = y_1 - y_0$</p><p>理想直线将平面划分成三个区域：对于直线上的点，F(x，y)＝0；对于直线上方的点，F（x，y）＞0；对于直线下方的点，F（x，y）＜0。<br>假设直线的斜率为<strong>0≤k≤1</strong>，则Δx≥Δy，所以确定x方向为主位移方向。按照Bresenham原理，<strong>x方向上每次加1，y方向上加不加1取决于中点误差项的值。</strong><br><img src="/static/IT/Graphics/StraightLine-3.png" alt="中点Bresenham算法"></p><p>假定直线的当前点是P，沿主位移x方向走一步，下一点只能在Pu和Pd两点中选取，Pu和Pd的中点为M。显然，若中点M在理想直线的下方，则Pu点距离直线近，否则选取Pd。（u代表up，上面的像素；d代表down，下面的像素）</p><h3 id="构造中点误差项：">构造中点误差项：</h3><p>$从P_i(x_i,y_i)点出发选取下一像素时，需将P_u和P_d的中点M(x_i＋1,y_i＋0.5)代入隐函数方程，构造中点误差项d_i 。$<br>$d_i = F(x_i+1, y_i+0.5) = y_i+0.5 - k(x_i + 1) - b$</p><ul><li>$y_{i+1} =  y_i + 1 ,   d_i &lt; 0 $</li><li>$y_{i+1} =  y_i ,  d_i \ge 0$</li></ul><h3 id="中点误差项的递推公式">中点误差项的递推公式</h3><ol><li>$当d_i&lt;0时，下一步的中点坐标为M(x_i+2，y_i+1.5)，下一步中点误差项为$<br>$d_{i+1} = F(x_i+2, y_i + 1.5) = y_i+1.5 - k(x_i+2) - b$<br>$ = y_i + 0.5 - k(x_i+1) - b + 1 - k$<br>$ = d_i + 1 - k$</li><li>$当d_i≥0，时下一步的中点坐标为M(x_i+2，y_i+0.5)，下一步中点误差项为$<br>$d_{i+1} = F(x_i+2, y_i + 0.5) = y_i+0.5 - k(x_i+2) - b$<br>$ = y_i + 0.5 - k(x_i+1) - b - k$<br>$ = d_i - k$</li></ol><h3 id="中点误差项的初始值">中点误差项的初始值</h3><p>$直线的起点坐标为P_0(x_0,y_0)，x为主位移方向。因此，第一个中点是M (x_0+1,y_0+0.5)，相应的d_i的初始值为：  $<br>$d_0 = F(x_0+1, y_0 + 0.5) = y_0+0.5 - k(x_0+1) - b$<br>$ = y_0 -kx_0 - b - k + 0.5$<br>$其中，因为（x_0，y_0）在直线上，所以  y_0 -kx_0 - b = 0$<br>$所以 d_0 = 0.5 - k$</p><p>由于使用的是di的符号，可以用$2d_i\Delta x$代替$d_i$来摆脱小数，使得算法只涉及整数运算。现有的研究已经证明：<strong>端点采用整数坐标没有什么益处</strong>，因为现在的CPU可以按照与处理整数同样的速度处理浮点数。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-圆的扫描转换-中点Bresenham算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-yuan-de-sao-miao-zhuan-huan-zhong-dian-bresenham-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-yuan-de-sao-miao-zhuan-huan-zhong-dian-bresenham-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="圆的扫描转换">圆的扫描转换</h2><p>圆的扫描转换是在屏幕像素点阵中确定最佳逼近于理想圆的像素点集的过程。圆的绘制可以使用简单方程画圆算法或极坐标画圆算法，但这些算法涉及开方运算或三角运算，效率很低。<br><strong>仅包含加减运算的顺时针绘制1/8圆的中点Bresenham算法，根据对称性可以绘制整圆 。</strong><br><img src="/static/IT/Graphics/Circle-1.png" alt="圆的扫描转换"></p><p>默认的圆是圆心位于坐标系原点，半径为R的圆。<br>屏幕设备坐标系的原点位于左上角，绘制结果为1/4圆，需要进行圆心平移或使用自定义坐系可以绘制整圆。圆是椭圆的特例，使用椭圆中点Bresenham算法也可绘制。<br><img src="/static/IT/Graphics/Circle-2.png" alt=""></p><h2 id="算法原理">算法原理</h2><p>圆心在原点、半径为R的圆方程的隐函数表达式为：$F(x, y) = x^2 + y^2 - R^2 = 0$<br>圆将平面划分成三个区域：对于圆上的点，F(x，y)＝0；对于圆外的点，F（x，y）＞0；对于圆内的点，F（x，y）＜0。<br>根据圆的对称性，可以用四条对称轴<strong>x＝0，y＝0，x＝y，x＝－y</strong>将圆分成8等份。只要绘制出第一象限内的1/8圆弧，根据对称性就可绘制出整圆，这称为<strong>八分法画圆算法</strong>。<br>假定第一象限内的任意点为P(x,y)，可以顺时针确定另外7个点：P(y,x)，P(y,-x)，P(x,-y)，P(-x,-y)，P(-y,-x)，P(-y, x)，P(-x,y)。<br><img src="/static/IT/Graphics/Circle-3.png" alt="圆的对称性"></p><p>中点Bresenham算法要<strong>从(0,R) 顺时针确定最佳逼近于该段圆弧的像素点集。<strong>此段圆弧的斜率k处处满足</strong>|k|＜1，即|Δx|＞|Δy|</strong>，所以x方向为主位移方向，因此中点Bresenham算法的原理简化如下：<strong>x方向上每次加1，y方向上减不减1取决于中点误差项的值。</strong><br>假定圆上当前点是$P_i(x_i,y_i)$，下一像素只能在$P_u(x_i+1,y_i)$和$P_d(x_i+1,y_i-1)$中选取。$P_u$和$P_d$的中点为$M(x_i+1,y_i-0.5)$显然，若M点在理想圆弧的下方，则$P_u$点离圆弧近，选取$P_u$；否则应选取$P_d$。<br><img src="/static/IT/Graphics/Circle-4.png" alt=""></p><h2 id="构造中点误差项">构造中点误差项</h2><p>从$P(x_i，y_i$）开始，为了进行下一像素点的选取，需将$P_u$和$P_d$的中点$M(x_i+1,y_i-0.5)$代入隐函数，构造中点误差项：<br>$d = F(x_i+1, y_i-0.5) = (x_i+1)^2 + (y_i-0.5)^2 - R^2$<br>当$d_i&lt;0$时，中点M在圆弧内，下一像素点应选取$P_u$，即y方向上不退步；当$d_i&gt;0$时，中点M在圆弧外，下一像素点应选取$P_d$，即y方向上退一步；当$d_i＝0$时，中点M在圆弧上，$P_u、P_d$和圆弧的距离相等，选取$P_u$或$P_d$均可，约定取$P_d$。因此，</p><ul><li>$y_{i+1} =  y_i , d &lt; 0  $</li><li>$y_{i+1} =  y_i - 1 , d \ge 0 $</li></ul><h2 id="中点误差项的递推公式">中点误差项的递推公式</h2><p>现在如果考虑主位移方向再走一步，应该选择哪个中点代入中点误差项以决定下一步应该选取的像素，分两种情况讨论。</p><ol><li>$当d_i&lt;0时，下一步的中点坐标为M(x_i+2，y_i-0.5)，下一步中点误差项为$<br>$d_{i+1} = F(x_i+2, y_i-0.5) = (x_i+2)^2 + (y_i-0.5)^2 - R^2$<br>$ = (x_i+1)^2 + (y_i-0.5)^2 - R^2 + 2x_i + 3$<br>$ = d_i + 2x_i + 3$</li><li>$当d_i≥0时，下一步的中点坐标为M(x_i+2，y_i-1.5)，下一步中点误差项为$<br>$d_{i+1} = F(x_i+2, y_i-1.5) = (x_i+2)^2 + (y_i-1.5)^2 - R^2$<br>$ = (x_i+1)^2 + (y_i-0.5)^2 - R^2 + 2x_i + 3 + (-2y_i + 2)$<br>$ = d_i + 2(x_i - y_i) + 5$</li></ol><h2 id="中点误差项的初始值">中点误差项的初始值</h2><p>圆的起点为$P_0（0，R）$，x为主位移方向。因此，第一个中点是（1，R-0.5），对应的$d_i$的初始值为：<br>$d_0 = F(1, R-0.5) = 1 + (R-0.5)^2 - R^2 = 1.25 - R$</p><h2 id="算法源码">算法源码</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">double</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>d<span class="token punctuation">;</span> d<span class="token operator">=</span><span class="token number">1.25</span><span class="token operator">-</span>R<span class="token punctuation">;</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>y<span class="token operator">=</span>R<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>x<span class="token operator">&lt;=</span>y<span class="token punctuation">;</span>x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">CirclePoint</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>pDC<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用八分法画圆子函数</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>d<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>d<span class="token operator">+=</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">;</span>       <span class="token keyword">else</span> <span class="token punctuation">{</span>d<span class="token operator">+=</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span>x<span class="token operator">-</span>y<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">;</span>y<span class="token operator">--</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-椭圆的扫描转换-中点Bresenham算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-tuo-yuan-de-sao-miao-zhuan-huan-zhong-dian-bresenham-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-tuo-yuan-de-sao-miao-zhuan-huan-zhong-dian-bresenham-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="椭圆的扫描转换">椭圆的扫描转换</h2><p>椭圆的扫描转换是在屏幕像素点阵中选取最佳逼近于理想椭圆像素点集的过程。椭圆是长半轴和短半轴不相等的圆，椭圆的扫描转换与圆的扫描转换有类似之处。本节主要讲解顺时针绘制1/4椭圆的中点Bresenham算法原理，根据对称性可以绘制完整椭圆。<br><img src="/static/IT/Graphics/Oval-1.png" alt="椭圆的扫描转换"><br>默认的椭圆是圆心位于坐标系原点，长半轴为a、短半轴为b的椭圆 。需要进行圆心平移或使用自定义坐标系可以绘制椭圆。<br>如果“x方向上每次加1，y方向上减不减1取决于中点误差项的值”。绘制结果是圆，如何能绘制为椭圆？</p><h2 id="算法原理">算法原理</h2><p>圆心在原点、长半轴为a、短半轴为b的椭圆方程的隐函数表达式为 ：<br>$F(x, y) = b^2x^2+a^2y^2-a^2b^2 = 0$<br>椭圆将平面划分成三个区域：对于椭圆上的点，F(x，y)＝0；对于椭圆外的点，F（x，y）＞0；对于椭圆内的点，F（x，y）＜0。</p><p>考虑到椭圆的对称性，可以用对称轴x＝0，y＝0，把椭圆分成4等份。只要绘制出第一象限内的1/4椭圆弧，根据对称性就可绘制出整个椭圆，这称为<strong>四分法绘制椭圆算法</strong>。已知第一象限内的点P(x,y)，可以顺时针得到另外3个对称点：P(x,-y)，P(-x,-y)和P(-x,y)。<br><img src="/static/IT/Graphics/Oval-2.png" alt="椭圆的对称性"></p><p><img src="/static/IT/Graphics/Oval-3.png" alt="椭圆的法矢量"><br>$N(x, y) = \frac{\partial{F}}{\partial{x}}i + \frac{\partial{F}}{\partial{y}}j = 2b^2xi + 2a^2yj$<br>部分Ⅰ的AC椭圆弧段，法矢量的x向分量小于y向分量，斜率k处处满足|k|＜1，|Δx|＞|Δy|，所以x方向为主位移方向；在C点，法矢量的x向分量等于y向分量，斜率k满足k＝－1，|Δx|＝|Δy|；在部分Ⅱ的CB椭圆弧段，法矢量的x向分量大于y向分量，斜率k处处满足|k|＞1，|Δy|＞|Δx|，所以y方向为主位移方向。<br><strong>在部分Ⅰ</strong>椭圆的中点Bresenham的原理:<strong>每次在主位移x方向上走一步，y方向上退不退步取决于中点误差项的值。在部分Ⅱ：每次在主位移方向y上退一步，x方向上走不走步取决于中点误差项的值。</strong><br><img src="/static/IT/Graphics/Oval-4.png" alt="算法原理"></p><h2 id="构造上半部分Ⅰ的中点误差项">构造上半部分Ⅰ的中点误差项</h2><p>在上半部分Ⅰ，x方向每次加1，y方向上减不减1取决于中点误差项的值。从$P_i(x_i,y_i)$点出发选取下一像素时，需将$P_u(x_i+1，y_i)$和$P_d(x_i+1,y_i-1)$的中点$M(x_i+1,y_i-0.5)$代入隐函数，构造中点误差项：<br>$d_{1i} = F(x_i+1, y_i-0.5) = b^2(x_i+1)^2 + a^2(y_i-0.5)^2 - a^2b^2$<br><img src="/static/IT/Graphics/Oval-5.png" alt="上半部分"><br>当$d_{1i}&lt;0$时，中点M在椭圆内，下一像素点应选取$P_u$，即y方向上不退步；当$d_{1i} &gt;0$时，中点M在椭圆外，下一像素点应选取$P_d$，即y方向上退一步；当$d_{1i}＝0$时，中点M在椭圆上，$P_u、P_d$和椭圆的距离相等，选取$P_u$或$P_d$均可，约定取$P_d$。<br>因此，<br>$$y_{i+1} = \begin{cases} y_i  ,&amp; d_{1i}&lt;0 \ y_i - 1 , &amp; d_{1i} \ge 0<br>\end{cases}<br>$$</p><h3 id="上半部分Ⅰ的递推公式">上半部分Ⅰ的递推公式</h3><p>如果考虑主位移方向再走一步，应该选择哪个中点代入中点误差项以决定下一步应该选取的像素，分两种情况讨论。</p><ol><li>$当d_{1i}&lt;0时，下一步的中点坐标为M(x_i+2，y_i-0.5)，下一步中点误差项为 $<br>$d_{1(i+1)} = F(x_i+2, y_i-0.5) = b^2(x_i+2)^2 + a^2(y_i-0.5)^2 - a^2b^2$<br>$ = b^2(x_i+1)^2 + a^2(y_i-0.5)^2 - a^2b^2 + b^2(2x_i+3)$<br>$ = d_{1i} + b^2(2x_i+3)$</li><li>$当d_{1i}≥0时，下一步的中点坐标为M(x_i+2，y_i-1.5)，下一步中点误差项为 $<br>$d_{1(i+1)} = F(x_i+2, y_i-1.5) = b^2(x_i+2)^2 + a^2(y_i-1.5)^2 - a^2b^2$<br>$ = b^2(x_i+1)^2 + a^2(y_i-0.5)^2 - a^2b^2 + b^2(2x_i+3) + a^2(-2y_i + 2)$</li></ol><h3 id="中点误差项的初始值">中点误差项的初始值</h3><p>上半部分椭圆的起点为A（0，b），因此，第一个中点是（1，b－0.5），对应的$d_{1i}$的初值为<br>$d_{10} = F(1, b-0.5) = b^2 + a^2(b-0.5) - a^2b^2 = b^2 + a^2(-b+0.25)$</p><h2 id="构造下半部分Ⅱ的中点误差项">构造下半部分Ⅱ的中点误差项</h2><p>在下半部分Ⅱ，主位移方向发生变化，中点Bresenham算法原理为：y方向上每次减1，x方向上加1不加1取决于中点误差项的值。从上半部分Ⅰ的终止点$P_i(x_i,y_i)$出发选取下一像素时，需将$P_l(x_i,y_i-1)$和$P_r(x_i+1,y_i-1)$的中点$M(x_i+0.5,y_i-1)$代入隐函数，构造中点误差项<br>$d_{2i} = F(x_i+0.5, y_i-1) = b^2(x_i+0.5)^2 + a^2(y_i-1)^2 - a^2b^2$<br><img src="/static/IT/Graphics/Oval-6.png" alt=""><br>当$d_{2i}&lt;0$时，中点M在椭圆内，下一像素点应选取$P_r$，即x方向上走一步；当$d_{2i}&gt;0$时，中点M在椭圆外，下一像素点应选取$P_l$，即x方向上不走步；当$d_{2i}＝0$时，中点M在椭圆上，$P_l、P_r$和椭圆的距离相等，选取$P_l$或$P_r$均可，约定取$P_l$。 （l代表left，左面的像素；r代表right，右面的像素）</p><h3 id="下半部分Ⅱ的递推公式">下半部分Ⅱ的递推公式</h3><p>现在如果考虑主位移方向再走一步，应该选择哪个中点代入中点误差项以决定应该选取的像素。分两种情况讨论。</p><ol><li>$当d_{2i}&lt;0时，下一步的中点坐标为M(x_i+1.5，y_i-2)，下一步中点误差项为$<br>$d_{2(i+1)} = F(x_i+1.5，y_i-2) = b^2(x_i+1.5)^2 + a^2(y_i-2)^2 - a^2b^2$<br>$ = b^2(x_i+0.5)^2 + a^2(y_i-1)^2 - a^2b^2 + b^2(2x_i+2) + a^2(-2y_i + 3)$<br>$ = d_{2i} + b^2(2x_i+2) + a^2(-2y_i + 3)$</li><li>$当d_{2i}≥0时，下一步的中点坐标为M(x_i+0.5，y_i-2)，下一步中点误差项为$<br>$d_{2(i+1)} = F(x_i+0.5，y_i-2) = b^2(x_i+0.5)^2 + a^2(y_i-2)^2 - a^2b^2$<br>$ = b^2(x_i+0.5)^2 + a^2(y_i-1)^2 - a^2b^2 + a^2(-2y_i + 3)$<br>$ = d_{2i} + a^2(-2y_i + 3)$</li></ol><h3 id="中点误差项的初始值-2">中点误差项的初始值</h3><p>在上半部分Ⅰ，法矢量的x向分量小于y向分量；在C点，法矢量的x向分量等于y向分量；在下半部分Ⅱ，法矢量的x向分量大于y向分量。则对于上半部分椭圆上一点$P(x_i，y_i)$，如果其当前中点$M(x_i+1,y_i-0.5)$，满足x向分量小于y向分量<br>$b^2(x_i+1)^2 &lt; a^2(y_i-0.5)^2$<br>而在下一个中点，不等号改变方向，则说明椭圆从上半部分Ⅰ转入了下半部分Ⅱ。<br><img src="/static/IT/Graphics/Oval-7.png" alt=""></p><p>假定$P_i(x_i,y_i)$点是椭圆上半部分Ⅰ的最后一个像素，$MⅠ(x_i+1,y_i-0.5)$是用于判断选取$P_u$和$P_d$像素的中点。由于下一像素转入了下半部分Ⅱ，其中点改为判断$P_l$和$P_r$的中点$MⅡ(x_i+0.5,y_i-1)$，所以下半部分的初值d<sub>20</sub>为: $d_{20} = b^2(x+0.5)^2 + a^2(y-1)^2 - a^2b^2$</p><hr><h2 id="算法源码">算法源码</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">double</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>d1<span class="token punctuation">,</span>d2<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>a<span class="token operator">=</span><span class="token function">fabs</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>x<span class="token operator">-</span>p0<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token function">fabs</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>y<span class="token operator">-</span>p0<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>y<span class="token operator">=</span>b<span class="token punctuation">;</span>d1<span class="token operator">=</span>b<span class="token operator">*</span>b<span class="token operator">+</span>a<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">-</span>b<span class="token operator">+</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">EllipsePoint</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>pDC<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//椭圆AC弧段</span><span class="token keyword">while</span><span class="token punctuation">(</span>b<span class="token operator">*</span>b<span class="token operator">*</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>a<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>d1<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>d1<span class="token operator">+=</span>b<span class="token operator">*</span>b<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>d1<span class="token operator">+=</span>b<span class="token operator">*</span>b<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">}</span>x<span class="token operator">++</span><span class="token punctuation">;</span><span class="token function">EllipsePoint</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>pDC<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//椭圆CB弧段</span>d2<span class="token operator">=</span>b<span class="token operator">*</span>b<span class="token operator">*</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span>a<span class="token operator">*</span>a<span class="token operator">*</span>b<span class="token operator">*</span>b<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>y<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>d2<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>d2<span class="token operator">+=</span>b<span class="token operator">*</span>b<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>x<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>d2<span class="token operator">+=</span>a<span class="token operator">*</span>a<span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>y<span class="token operator">--</span><span class="token punctuation">;</span><span class="token function">EllipsePoint</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>pDC<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-反走样技术</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-fan-zou-yang-ji-zhu/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-fan-zou-yang-ji-zhu/</url>
      
        <content type="html"><![CDATA[<h2 id="反走样">反走样</h2><p>直线扫描转换算法在处理非水平、非垂直且非45°的直线段时会出现锯齿，这是因为直线段在光栅扫描显示器上显示的图像是由一系列亮度相同而面积不为零的离散像素点构成的。这种由离散量表示连续量而引起的失真称为走样（aliasing）。用于减轻走样现象的技术称为反走样（anti-aliasing,AA）或者抗锯齿。走样是理想直线（理想直线宽度为零）扫描转换后（真实像素点面积不为零）的必然结果。走样是光栅扫描显示器的一种固有现象，<strong>不可避免，只能减轻。</strong><br>反走样技术主要分为两类：<strong>一类是硬件技术，通过提高显示器的分辨率来实现；另一类是软件技术，通过改进软件算法来实现</strong>。<br>从硬件角度把显示器的分辩率提高了一倍。由于每个锯齿在x方向和y方向都只有原先分辨率的一半，所以看上去走样现象有所改善。虽然如此，硬件反走样技术由于受到硬件条件和成本的限制，实现起来较为困难，很难达到理想的反走样效果。<br>软件反走样技术主要是加权区域采样。算法的实质是利用人眼视觉特性，通过加权平均的方法，调节像素的亮度和灰度，以产生模糊的边界，从而达到较好的视觉效果以消除 “锯齿”。加权参数可以选择距离、面积和体积等。下面主要讲解<strong>直线的距离加权反走样算法</strong>，关于面积加权和体积加权反走样算法请读者参考相关文献。</p><h2 id="Wu反走样算法">Wu反走样算法</h2><p><img src="/static/IT/Graphics/AntiAliasing-1.png" alt="Wu反走样算法"><br>Wu反走样算法是采用空间混色原理来对走样进行修正。<strong>空间混色原理指出，人眼对某一区域颜色的识别是取这个区域颜色的平均值</strong>。Wu反走样算法原理是对于理想直线上的任一点，同时以两个不同亮度级别的相邻像素来表示。理想直线段上的点Q1，扫描转换后可用像素点P1和像素点P4以不同的亮度级别共同显示，<strong>像素点离理想直线段越近，其亮度值越小，像素越暗；像素点离理想直线段越远，其亮度值就越大，像素越亮，但二者的亮度级别之和等于像素Q1的灰度值。</strong></p><h2 id="构造距离误差项">构造距离误差项</h2><p><img src="/static/IT/Graphics/AntiAliasing-2.png" alt="构造距离误差项"><br>斜率为k的理想直线段与$P_u$和$P_d$像素中心连线的交点为$Q_i(x_{i+1},e_i）$。$e_i$为$Q_i$与$P_d$的距离。</p><ul><li>$P_d(x_i+1,y_i)$像素的亮度级别为：$c_d=RGB(e_i ×255,e_i ×255,e_i ×255)$</li><li>$P_u(x_i+1,y_i+1)$像素的亮度级别为：$c_u=RGB((1-e_i )×255,(1-e_i )×255,(1-e_i)×255)$</li></ul><p>每右移一个像素，$e_{i+1}=e_i+k$。当$e_i≥1.0$时，$y_{i+1}=y_i+1，e_{i+1}=e_i-1$</p><h3 id="算法源码">算法源码</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c">CPoint <span class="token function">p0</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">p1</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p<span class="token punctuation">;</span><span class="token keyword">int</span> dx<span class="token punctuation">,</span>dy<span class="token punctuation">;</span>dx<span class="token operator">=</span>p1<span class="token punctuation">.</span>x<span class="token operator">-</span>p0<span class="token punctuation">.</span>x<span class="token punctuation">;</span>dy<span class="token operator">=</span>p1<span class="token punctuation">.</span>y<span class="token operator">-</span>p0<span class="token punctuation">.</span>y<span class="token punctuation">;</span><span class="token keyword">double</span> k<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>dy<span class="token operator">/</span>dx<span class="token punctuation">,</span>e<span class="token punctuation">;</span>   <span class="token keyword">for</span><span class="token punctuation">(</span>p<span class="token operator">=</span>p0<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>p<span class="token punctuation">.</span>x<span class="token operator">&lt;</span>p1<span class="token punctuation">.</span>x<span class="token punctuation">;</span>p<span class="token punctuation">.</span>x<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment">//不包括终点p1</span><span class="token punctuation">{</span>pDC<span class="token operator">-&gt;</span><span class="token function">SetPixelV</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x<span class="token punctuation">,</span> p<span class="token punctuation">.</span>y<span class="token punctuation">,</span><span class="token function">RGB</span><span class="token punctuation">(</span>e<span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">,</span>e<span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">,</span>e<span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pDC<span class="token operator">-&gt;</span><span class="token function">SetPixelV</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>x<span class="token punctuation">,</span> p<span class="token punctuation">.</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">RGB</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>e<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>e<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>e<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    e<span class="token operator">+=</span>k<span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token operator">&gt;=</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    p<span class="token punctuation">.</span>y<span class="token operator">++</span><span class="token punctuation">;</span>        e<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="彩色直线段的反走样">彩色直线段的反走样</h2><p>因为Wu反走样算法是从前景色过渡到背景色，彩色直线段的反走样需要考虑背景色的影响。设直线段的前景色（foreground color）为cf，背景色（background color）为cb。彩色直线段的反走样是从前景色变化到背景色，出现模糊边界。绘制光滑过渡的彩色直线段时，需要使用以下公式进行前景色线性插值<br>$c=(1-t)c_0+tc_1  $<br>式中，$c$为颜色渐变直线段上任一点的颜色；$c_0$为直线段起点的颜色；$c_1$为直线段终点的颜色。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-有效边表填充算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-you-xiao-bian-biao-tian-chong-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-you-xiao-bian-biao-tian-chong-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="填充原理">填充原理</h2><p>有效边表填充算法通过维护边表和有效边表，避开了扫描线与多边形所有边求交的复杂运算。填充原理是按照扫描线从小到大的移动顺序，计算当前扫描线与有效边的交点，然后把这些交点按x值递增的顺序进行排序、配对，以确定填充区间，最后用指定颜色填充区间内的所有像素，即完成填充工作。有效边表填充算法已成为目前最为有效的多边形填充算法之一。</p><h2 id="边界像素处理原则">边界像素处理原则</h2><p>填充左下角为（1，1），右上角为（3，3）的正方形时，若将边界上的所有像素全部填充，就得到图示的结果。<br><img src="/static/IT/Graphics/EffectiveEdgeList-1.png" alt="填充"><br>在多边形填充过程中，常采用“左闭右开”和“下闭上开”的原则对边界像素进行处理。</p><p><img src="/static/IT/Graphics/EffectiveEdgeList-2.png" alt=""><br>局部最高点P1、P6和P4，共享顶点的两条边落在扫描线的下方；普通连接点P2，共享顶点的两条边分别落在扫描线两侧；局部最低点P0、P3和P5，共享顶点的两条边落在扫描线的上方。常根据共享顶点的两条边的另一端的y值大于扫描线y值的个数来将交点个数取为0、1和2。事实上，有效边表算法能自动处理这三类顶点。</p><h2 id="有效边与有效边表">有效边与有效边表</h2><h3 id="有效边">有效边</h3><p>多边形与当前扫描线相交的边称为有效边（active edge）。在处理一条扫描线时仅对有效边进行求交运算，可以避免与多边形的所有边求交，提高了算法效率。有效边上的扫描线由起点到终点每次加1，即像素点的y坐标为y＝y+1，x坐标的变化可以按如下方法推导。<br><img src="/static/IT/Graphics/EffectiveEdgeList-3.png" alt="有效边"></p><h3 id="有效边表">有效边表</h3><p><img src="/static/IT/Graphics/EffectiveEdgeList-4.png" alt="有效边表"></p><h2 id="桶表与边表">桶表与边表</h2><p>从有效边表的建立过程可以看出，有效边表给出了扫描线与有效边交点坐标的计算方法，但是并没有给出新边出现的位置坐标。为了确定在哪条扫描线上插入了新边，就需要构造一个边表（edge table，<strong>ET</strong>），用以存放扫描线上多边形各条边出现的信息。因为水平边的1/k为∞，并且水平边本身就是扫描线，在建立边表时可以不予考虑。</p><h3 id="桶表和边表的表示法">桶表和边表的表示法</h3><p>桶表是<strong>按照扫描线顺序管理边出现情况的一个数据结构</strong>。首先，构造一个纵向扫描线链表，<strong>链表的长度为多边形所占有的最大扫描线数</strong>，链表的每个结点称为桶（bucket），对应多边形覆盖的每一条扫描线。<br>将每条边的信息链入与<strong>该边最小y坐标（ymin）<strong>相对应的桶处。也就是说，若某边的较低端点为ymin，则该边就存放在相应的扫描线桶中。<br>对于每一条扫描线，如果新增多条边，则</strong>按x|ymin坐标递增的顺序存放在一个链表中，若x|ymin 相等，则按照1/k由小到大排序</strong>，这样就形成边表。<br><img src="/static/IT/Graphics/EffectiveEdgeList-5.png" alt="边"></p><h3 id="桶表与边表示例">桶表与边表示例</h3><p><img src="/static/IT/Graphics/EffectiveEdgeList-6.png" alt="边表结点"><br><img src="/static/IT/Graphics/EffectiveEdgeList-7.png" alt="边表"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-边缘填充算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-bian-yuan-tian-chong-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-bian-yuan-tian-chong-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="填充原理">填充原理</h2><p>边缘填充算法是先求出多边形的每条边与扫描线的交点，然后<strong>将交点右侧的所有像素颜色全部取为补色（或反色</strong>）。按任意顺序处理完多边形的所有边后，就完成了多边形的填充任务。边缘填充算法利用了图像处理中的求“补”或求“反”的概念，对于黑白图像，求补就是把RGB(1,1,1)（白色）的像素置为RGB(0,0,0)（黑色），反之亦然；对于彩色图像，求补就是将背景色置为填充色，反之亦然。求补的一条基本性质是<strong>一个像素求补两次就恢复为原色</strong>。<strong>如果多边形内部的像素被求补偶数次，保持原色，如果被求补奇数次，显示填充色。</strong></p><h2 id="填充过程">填充过程</h2><p>假定边的顺序为E0、E1、E2、E3、E4、E5和E6。这里，边的顺序并不影响填充结果，只是方便编写循环结构而已。<br><img src="/static/IT/Graphics/EdgeFilling.png" alt="填充过程"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-区域填充算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-qu-yu-tian-chong-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-qu-yu-tian-chong-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="填充原理">填充原理</h2><p><strong>种子填充算法</strong>是从区域内任一个种子像素位置开始，由内向外将填充色扩散到整个多边形区域的填充过程。种子填充算法突出的优点是<strong>能对具有任意复杂闭合边界的区域进行填充。</strong></p><h2 id="四邻接点与八邻接点">四邻接点与八邻接点</h2><p><img src="/static/IT/Graphics/AreaFill-1.png" alt="四邻接点与八邻接点"></p><h2 id="四连通域与八连通域">四连通域与八连通域</h2><p><img src="/static/IT/Graphics/AreaFill-2.png" alt="四连通域与八连通域"><br><img src="/static/IT/Graphics/AreaFill-3.png" alt="四连通域与八连通域"></p><h2 id="种子填充算法">种子填充算法</h2><h3 id="算法定义">算法定义</h3><p>从种子像素点开始，使用四邻接点方式搜索下一像素点的填充算法称为四邻接点填充算法。从种子像素点开始，使用八邻接点方式搜索下一像素点的填充算法称为八邻接点填充算法。八邻接点填充算法的设计和四邻接点填充算法基本相似，只要把搜索方式由四邻接点修改为八邻接点即可。</p><h3 id="算法原理">算法原理</h3><p>种子填充算法一般要求区域边界色和填充色不同，输入参数只有种子坐标位置和填充颜色。种子填充算法一般需要使用<strong>堆栈数据结构</strong>来实现。<br>先将种子像素入栈，种子像素为栈底像素，如果栈不为空，执行如下3步操作：</p><ol><li>栈顶像素出栈；</li><li>按填充颜色<strong>绘制出栈像素</strong>。</li><li>按左、右、下、上（或左、左上、上、右上、右、右下、下、左下）顺序搜索与出栈像素相邻的四（八）个像素，若该像素的颜色不是边界色并且未置成填充色，则把该像素入栈；否则丢弃该像素。</li></ol><p>该算法也可以填充有孔区域。<br><strong>缺点</strong>：递归执行，算法简单，但效率不高，区域内每一象素都引起一次递归，进/出栈，费时费内存。<br>改进算法，减少递归次数，提高效率。<strong>解决方法是用扫描线填充算法</strong>。</p><h2 id="扫描线算法">扫描线算法</h2><p>目标：减少递归层次<br>算法思想：在任意不间断区间中只取一个种子像素（不间断区间指在一条扫描线上一组相邻元素），填充当前扫描线上的该段区间；然后确定与这一区段相邻的上下两条扫描线上位于区域内的区段，并依次把它们保存起来，反复进行这个过程，直到所保存的个区段都填充完毕。</p><h2 id="扫描线种子填充算法">扫描线种子填充算法</h2><p>算法原理为：先将种子像素入栈，种子像素为栈底像素，如果栈不为空，执行如下4步操作。</p><ol><li>栈顶像素出栈。</li><li>沿扫描线对出栈像素的左右像素进行填充，直至遇到边界像素为止。即每出栈一个像素，就对区域内包含该像素的整个连续区间进行填充。</li><li>同时记录该区间，将区间最左端像素记为xleft，最右端像素记为xright。</li><li>在区间〔xleft，xright〕中检查与当前扫描线相邻的上下两条扫描线的有关像素是否全为边界像素或已填充像素，若存在非边界且未填充的像素，则把未填充区间的最右端像素取作种子像素入栈。</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-图形几何变换基础</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-tu-xing-ji-he-bian-huan-ji-chu/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-tu-xing-ji-he-bian-huan-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="规范化齐次坐标">规范化齐次坐标</h2><p>齐次坐标就是用n＋1维矢量表示n维矢量。例如，在二维平面中，点P(x,y)的齐次坐标表示为(wx,wy,w)。类似地，在三维空间中，点P(x,y,z)的齐次坐标表示为（wx,wy,wz,w）。<br>w＝1就是规范化的齐次坐标。二维点P(x，y)的规范化齐次坐标为〔x，y，1〕，三维点P(x，y，z)的规范化齐次坐标为(x，y，z，1)。<br>定义了规范化齐次坐标以后，图形几何变换可以表示为图形顶点集合的规范化齐次坐标矩阵与某一变换矩阵相乘的形式。</p><p>矩阵相乘: 由线性代数知道，矩阵乘法不满足交换律，只有左矩阵的列数等于右矩阵的行数时，两个矩阵才可以相乘。</p><h2 id="二维几何变换矩阵">二维几何变换矩阵</h2><p>用规范化齐次坐标表示的二维基本几何变换矩阵是一个3×3的方阵，简称为二维变换矩阵。<br><img src="/static/IT/Graphics/GraphicsTransBasics-1.png" alt="二维几何变换矩阵"><br>从功能上可以把二维变换矩阵T分为4个子矩阵。其中<br><img src="/static/IT/Graphics/GraphicsTransBasics-2.png" alt="二维几何变换矩阵"></p><h2 id="物体变换与坐标变换">物体变换与坐标变换</h2><p>同一种变换可以看作是物体变换，也可以看作是坐标变换。物体变换是使用同一变换矩阵作用于物体上的所有顶点，但坐标系位置不发生改变。坐标变换是坐标系发生变换，但物体位置不发生改变，然后在新坐标系下表示物体上的所有顶点。这两种变换紧密联系，各有各的优点，只是变换矩阵略有差异而已</p><h2 id="二维几何变换">二维几何变换</h2><p><img src="/static/IT/Graphics/GraphicsTransBasics-3.png" alt="二维几何变换"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-二维图形基本几何变换矩阵</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-er-wei-tu-xing-ji-ben-ji-he-bian-huan-ju-zhen/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-er-wei-tu-xing-ji-ben-ji-he-bian-huan-ju-zhen/</url>
      
        <content type="html"><![CDATA[<p>二维图形基本几何变换是指相对于坐标原点和坐标轴进行的几何变换，包括<strong>平移</strong>（Translate）、<strong>比例</strong>（Scale）、<strong>旋转</strong>（Rotate）、<strong>反射</strong>（Reflect）和<strong>错切</strong>（shear）5种变换。物体变换物体变换是通过变换物体上每一个顶点实现的，因此以点的二维基本几何变换为例讲解二维图形基本几何变换矩阵 。</p><h2 id="平移变换矩阵">平移变换矩阵</h2><p><img src="/static/IT/Graphics/TransMatrix2-1.png" alt="平移变换矩阵"></p><h2 id="比例变换矩阵">比例变换矩阵</h2><p><img src="/static/IT/Graphics/TransMatrix2-2.png" alt="比例变换矩阵"></p><h2 id="旋转变换矩阵">旋转变换矩阵</h2><p><img src="/static/IT/Graphics/TransMatrix2-3.png" alt="旋转变换矩阵"></p><h2 id="反射变换矩阵">反射变换矩阵</h2><p><img src="/static/IT/Graphics/TransMatrix2-4.png" alt="反射变换矩阵"><br><img src="/static/IT/Graphics/TransMatrix2-5.png" alt="反射变换矩阵"></p><h2 id="错切变换矩阵">错切变换矩阵</h2><p><img src="/static/IT/Graphics/TransMatrix2-6.png" alt="错切变换矩阵"><br><img src="/static/IT/Graphics/TransMatrix2-7.png" alt="错切变换矩阵"><br><img src="/static/IT/Graphics/TransMatrix2-8.png" alt="错切变换矩阵"></p><p>上面讨论的五种变换给出的都是点变换的公式，对于线框模型，图形的变换实际上都可以通过点变换来完成。例如直线段的变换可以通过对两个顶点坐标进行变换，连接新顶点得到变换后的新直线段；多边形的变换可以通过对每个顶点进行变换，连接新顶点得到变换后的新多边形。曲线的变换可通过变换控制多边形的控制点后，重新绘制曲线来实现。</p><hr><h2 id="二维仿射变换">二维仿射变换</h2><p>符合下面形式的坐标变换称为<strong>二维仿射变换</strong>（Affine Transformation）。<br><img src="/static/IT/Graphics/TransMatrix2-9.png" alt="二维仿射变换"><br>仿射变换具有平行线变换成平行线，有限点映射到有限点的一般特性。平移、比例、旋转、反射和错切五种变换都是二维仿射变换的特例，任何一组二维仿射变换总可表示为这5种变换的组合。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-二维复合变换</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-er-wei-fu-he-bian-huan/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-er-wei-fu-he-bian-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="复合变换原理">复合变换原理</h2><p>$P’ = P\cdot T = P\cdot T_1\cdot T_2 \ldots T_n$<br>其中，T为复合变换矩阵，$T_1, T_2 \ldots T_n$为<strong>单次基本几何变换矩阵</strong>。</p><h2 id="相对于任一参考点的二维几何变换">相对于任一参考点的二维几何变换</h2><p>相对于任一参考点的比例变换和旋转变换应表达为复合变换形式，变换方法为<strong>首先将参考点平移到坐标原点，对坐标原点进行比例变换和旋转变换，然后再进行反平移将参考点平移回原位置。</strong></p><h2 id="相对于任意方向的二维几何变换">相对于任意方向的二维几何变换</h2><p>相对于任意方向的变换方法是<strong>首先对任意方向做旋转变换，使变换方向与坐标轴重合，然后对坐标轴进行二维基本几何变换，最后做反向旋转变换，将任意方向还原到原来的方向。</strong></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机图形学-中点分割直线段裁剪算法</title>
      <link href="/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-zhong-dian-fen-ge-zhi-xian-duan-cai-jian-suan-fa/"/>
      <url>/2023/05/05/ji-suan-ji-tu-xing-xue/ji-suan-ji-tu-xing-xue-zhong-dian-fen-ge-zhi-xian-duan-cai-jian-suan-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="中点分割算法原理">中点分割算法原理</h2><p>中点分割直线段裁剪算法<strong>对Cohen-Sutherland直线裁剪算法的第3种情况做了改进</strong>，原理是简单地把起点为P0，终点为P1的直线段等<strong>分为两段直线P0P和PP1（P为直线段中点）</strong>，<strong>对每一段直线重复“简取”和“简弃”的处理</strong>，对于不能处理的直线段再继续等分下去线，直至每一段直线完全能够被“简取”或“简弃”，也就是说直至每段直线完全位于窗口之内或完全位于窗口之外，就完成了直线段的裁剪工作。</p><p>中点计算公式: $P = \frac{P_0+P_1}{2}$</p><p>基本思想:<br>从P0点出发找出离P0最近的可见点，和从P1点出发找出离P1最近的可见点。这两个可见点的连线就是原线段的可见部分。<br>与Cohen-Sutherland算法一样首先对线段端点进行编码，并把线段与窗口的关系分为三种情况，对前两种情况，进行一样的处理；对于第三种情况，<strong>用中点分割的方法求出线段与窗口的交点。A、B分别为距P0 、 P1最近的可见点，Pm为P0P1中点。</strong></p><p><img src="/static/IT/Graphics/MidpointSplitLineSegmentClipping.png" alt=""></p><h2 id="求线段与窗口的交点">求线段与窗口的交点</h2><p>从P0出发找距离P0最近可见点采用中点分割方法</p><ol><li>先求出P0P1的中点Pm</li><li>若P0Pm不是显然不可见的，并且P0P1在窗口中有可见部分，则距P0最近的可见点一定落在P0Pm上，所以用P0Pm代替P0P1；</li><li>否则取PmP1代替P0P1。</li><li>再对新的P0P1求中点Pm。重复上述过程，直到PmP1长度小于给定的控制常数为止，此时Pm收敛于交点。</li></ol><p>从P1出发找距离P1最近可见点采用上面类似方法。<br>对分辩率为<code>2N*2N</code>的显示器，上述二分过程至多进行N次。主要过程只用到加法和除法运算，适合硬件实现，它可以用左右移位来代替乘除法，这样就大大加快了速度。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-9.回文数</title>
      <link href="/2023/05/05/leetcode/leetcode-9-hui-wen-shu/"/>
      <url>/2023/05/05/leetcode/leetcode-9-hui-wen-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。<br>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p>例如，121 是回文，而 123 不是。</p><blockquote><p>示例 1：<br>输入：x = 121<br>输出：true</p></blockquote><blockquote><p>示例 2：<br>输入：x = -121<br>输出：false<br>解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</p></blockquote><blockquote><p>示例 3：<br>输入：x = 10<br>输出：false<br>解释：从右向左读, 为 01 。因此它不是一个回文数。</p></blockquote><blockquote><p>提示：<br>$ -2^{31} &lt;= x &lt;= 2^{31} - 1 $</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        y <span class="token operator">=</span> <span class="token number">0</span>        t <span class="token operator">=</span> x        <span class="token comment"># 翻转数字</span>        <span class="token keyword">while</span> x<span class="token punctuation">:</span>            y <span class="token operator">=</span> y <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> x <span class="token operator">%</span> <span class="token number">10</span>            x <span class="token operator">//=</span> <span class="token number">10</span>        <span class="token keyword">return</span> y <span class="token operator">==</span> t<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>x <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> x <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        y <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment"># 数字翻转一半就可以直接判断了</span>        <span class="token keyword">while</span> x <span class="token operator">&gt;</span> y<span class="token punctuation">:</span>            y <span class="token operator">=</span> y <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> x <span class="token operator">%</span> <span class="token number">10</span>            x <span class="token operator">//=</span> <span class="token number">10</span>        <span class="token keyword">return</span> x <span class="token operator">==</span> y <span class="token keyword">or</span> x <span class="token operator">==</span> y <span class="token operator">//</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-8.字符串转换整数(atoi)</title>
      <link href="/2023/05/05/leetcode/leetcode-8-zi-fu-chuan-zhuan-huan-zheng-shu-atoi/"/>
      <url>/2023/05/05/leetcode/leetcode-8-zi-fu-chuan-zhuan-huan-zheng-shu-atoi/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>请你来实现一个 <code>myAtoi(string s)</code> 函数，使其能将字符串转换成一个 <code>32</code> 位有符号整数（类似 <code>C/C++</code> 中的 <code>atoi</code> 函数）。</p><p>函数 <code>myAtoi(string s)</code> 的算法如下：</p><ol><li>读入字符串并丢弃无用的前导空格</li><li>检查下一个字符（假设还未到字符末尾）为正还是负号，读取该字符（如果有）。 确定最终结果是负数还是正数。 如果两者都不存在，则假定结果为正。</li><li>读入下一个字符，直到到达下一个非数字字符或到达输入的结尾。字符串的其余部分将被忽略。</li><li>将前面步骤读入的这些数字转换为整数（即，“123” -&gt; 123， “0032” -&gt; 32）。如果没有读入数字，则整数为 0 。必要时更改符号（从步骤 2 开始）。</li><li>如果整数数超过 32 位有符号整数范围 [−231,  231 − 1] ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 −231 的整数应该被固定为 −231 ，大于 231 − 1 的整数应该被固定为 231 − 1 。</li><li>返回整数作为最终结果。</li></ol><p>注意：</p><ul><li>本题中的空白字符只包括空格字符 ’ ’ 。</li><li>除前导空格或数字后的其余字符串外，请勿忽略任何其他字符。</li></ul><blockquote><p>示例 1：<br>输入：s = “42”<br>输出：42<br>解释：加粗的字符串为已经读入的字符，插入符号是当前读取的字符。<br></p><pre class="line-numbers language-none"><code class="language-none">第 1 步："42"（当前没有读入字符，因为没有前导空格）         ^第 2 步："42"（当前没有读入字符，因为这里不存在 '-' 或者 '+'）         ^第 3 步："42"（读入 "42"）           ^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>解析得到整数 42 。<br>由于 “42” 在范围 [-231, 231 - 1] 内，最终结果为 42 。<p></p></blockquote><blockquote><p>示例 2：<br>输入：s = "   -42"<br>输出：-42<br>解释：<br></p><pre class="line-numbers language-none"><code class="language-none">第 1 步："   -42"（读入前导空格，但忽视掉）            ^第 2 步："   -42"（读入 '-' 字符，所以结果应该是负数）             ^第 3 步："   -42"（读入 "42"）               ^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>解析得到整数 -42 。<br>由于 “-42” 在范围 [-231, 231 - 1] 内，最终结果为 -42 。<p></p></blockquote><blockquote><p>示例 3：<br>输入：s = “4193 with words”<br>输出：4193<br>解释：<br></p><pre class="line-numbers language-none"><code class="language-none">第 1 步："4193 with words"（当前没有读入字符，因为没有前导空格）         ^第 2 步："4193 with words"（当前没有读入字符，因为这里不存在 '-' 或者 '+'）         ^第 3 步："4193 with words"（读入 "4193"；由于下一个字符不是一个数字，所以读入停止）             ^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>解析得到整数 4193 。<br>由于 “4193” 在范围 [-231, 231 - 1] 内，最终结果为 4193 。<p></p></blockquote><blockquote><p>提示：<br>0 &lt;= s.length &lt;= 200<br>s 由英文字母（大写和小写）、数字（0-9）、’ ‘、’+‘、’-’ 和 ‘.’ 组成</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">myAtoi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>        s<span class="token punctuation">,</span> ans<span class="token punctuation">,</span> flag <span class="token operator">=</span> s<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span>        <span class="token keyword">if</span> s <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">:</span>             <span class="token keyword">return</span> <span class="token number">0</span>                    <span class="token keyword">if</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'+'</span><span class="token punctuation">:</span>             s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>                    <span class="token keyword">elif</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'-'</span><span class="token punctuation">:</span>             flag<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">:</span>            <span class="token comment"># 数字累加</span>            <span class="token keyword">if</span> c<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                 ans <span class="token operator">=</span> ans <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                 <span class="token keyword">break</span>        ans <span class="token operator">*=</span> flag        <span class="token keyword">return</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-7.整数反转</title>
      <link href="/2023/05/05/leetcode/leetcode-7-zheng-shu-fan-zhuan/"/>
      <url>/2023/05/05/leetcode/leetcode-7-zheng-shu-fan-zhuan/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。<br>如果反转后整数超过 32 位的有符号整数的范围 [−231,  231 − 1] ，就返回 0。<br>假设环境不允许存储 64 位整数（有符号或无符号）。</p><blockquote><p>示例 1：<br>输入：x = 123<br>输出：321</p></blockquote><blockquote><p>示例 2：<br>输入：x = -123<br>输出：-321</p></blockquote><blockquote><p>示例 3：<br>输入：x = 120<br>输出：21</p></blockquote><blockquote><p>示例 4：<br>输入：x = 0<br>输出：0</p></blockquote><blockquote><p>提示：<br>-231 &lt;= x &lt;= 231 - 1</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">reverse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>        y<span class="token punctuation">,</span> res <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span>        <span class="token comment"># 则其数值范围为 [−2^31,  2^31 − 1]</span>        boundry <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> y <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token comment"># 倒序累加</span>            res <span class="token operator">=</span> res<span class="token operator">*</span><span class="token number">10</span> <span class="token operator">+</span>y<span class="token operator">%</span><span class="token number">10</span>            <span class="token keyword">if</span> res <span class="token operator">&gt;</span> boundry<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token number">0</span>            y <span class="token operator">//=</span><span class="token number">10</span>        <span class="token keyword">return</span> res <span class="token keyword">if</span> x <span class="token operator">&gt;</span><span class="token number">0</span> <span class="token keyword">else</span> <span class="token operator">-</span>res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-6.N字形变换</title>
      <link href="/2023/05/05/leetcode/leetcode-6-n-zi-xing-bian-huan/"/>
      <url>/2023/05/05/leetcode/leetcode-6-n-zi-xing-bian-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>将一个给定字符串 <code>s</code> 根据给定的行数 <code>numRows</code> ，以从上往下、从左到右进行 <code>Z</code> 字形排列。<br>比如输入字符串为 <code>"PAYPALISHIRING"</code> 行数为 <code>3</code> 时，排列如下：</p><pre class="line-numbers language-none"><code class="language-none">P   A   H   NA P L S I I GY   I   R<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：<code>"PAHNAPLSIIGYIR"</code>。<br>请你实现这个将字符串进行指定行数变换的函数：<code>string convert(string s, int numRows);</code></p><blockquote><p>示例 1：<br>输入：s = “PAYPALISHIRING”, numRows = 3<br>输出：“PAHNAPLSIIGYIR”</p></blockquote><blockquote><p>示例 2：<br>输入：s = “PAYPALISHIRING”, numRows = 4<br>输出：“PINALSIGYAHRPI”<br>解释：<br></p><pre class="line-numbers language-none"><code class="language-none">P     I    NA   L S  I GY A   H RP     I<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p></p></blockquote><blockquote><p>示例 3：<br>输入：s = “A”, numRows = 1<br>输出：“A”</p></blockquote><blockquote><p>提示：<br>1 &lt;= s.length &lt;= 1000<br>s 由英文字母（小写和大写）、‘,’ 和 ‘.’ 组成<br>1 &lt;= numRows &lt;= 1000</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">convert</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> numRows<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> numRows <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>             <span class="token keyword">return</span> s        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">""</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>numRows<span class="token punctuation">)</span><span class="token punctuation">]</span>        i<span class="token punctuation">,</span> flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span>        <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">:</span>            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> c            <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">or</span> i <span class="token operator">==</span> numRows <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>                 flag <span class="token operator">=</span> <span class="token operator">-</span>flag            i <span class="token operator">+=</span> flag        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-5.最长回文子串</title>
      <link href="/2023/05/05/leetcode/leetcode-5-zui-chang-hui-wen-zi-chuan/"/>
      <url>/2023/05/05/leetcode/leetcode-5-zui-chang-hui-wen-zi-chuan/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给你一个字符串 s，找到 s 中最长的回文子串。<br>如果字符串的反序与原始字符串相同，则该字符串称为回文字符串。</p><blockquote><p>示例 1：<br>输入：s = “babad”<br>输出：“bab”<br>解释：“aba” 同样是符合题意的答案。</p></blockquote><blockquote><p>示例 2：<br>输入：s = “cbbd”<br>输出：“bb”</p></blockquote><blockquote><p>提示：<br>1 &lt;= s.length &lt;= 1000<br>s 仅由数字和英文字母组成</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">expandAroundCenter</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 中心扩展</span>        <span class="token keyword">while</span> left <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token keyword">and</span> right <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">and</span> s<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">==</span> s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">:</span>            left <span class="token operator">-=</span> <span class="token number">1</span>            right <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">return</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">def</span> <span class="token function">longestPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        start<span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            left1<span class="token punctuation">,</span> right1 <span class="token operator">=</span> self<span class="token punctuation">.</span>expandAroundCenter<span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token punctuation">)</span>            left2<span class="token punctuation">,</span> right2 <span class="token operator">=</span> self<span class="token punctuation">.</span>expandAroundCenter<span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> right1 <span class="token operator">-</span> left1 <span class="token operator">&gt;</span> end <span class="token operator">-</span> start<span class="token punctuation">:</span>                start<span class="token punctuation">,</span> end <span class="token operator">=</span> left1<span class="token punctuation">,</span> right1            <span class="token keyword">if</span> right2 <span class="token operator">-</span> left2 <span class="token operator">&gt;</span> end <span class="token operator">-</span> start<span class="token punctuation">:</span>                start<span class="token punctuation">,</span> end <span class="token operator">=</span> left2<span class="token punctuation">,</span> right2        <span class="token keyword">return</span> s<span class="token punctuation">[</span>start<span class="token punctuation">:</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-4.寻找两个正序数组的中位数</title>
      <link href="/2023/05/05/leetcode/leetcode-4-xun-zhao-liang-ge-zheng-xu-shu-zu-de-zhong-wei-shu/"/>
      <url>/2023/05/05/leetcode/leetcode-4-xun-zhao-liang-ge-zheng-xu-shu-zu-de-zhong-wei-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的 中位数 。<br>算法的时间复杂度应该为 O(log (m+n)) 。</p><blockquote><p>示例 1：<br>输入：nums1 = [1,3], nums2 = [2]<br>输出：2.00000<br>解释：合并数组 = [1,2,3] ，中位数 2</p></blockquote><blockquote><p>示例 2：<br>输入：nums1 = [1,2], nums2 = [3,4]<br>输出：2.50000<br>解释：合并数组 = [1,2,3,4] ，中位数 (2 + 3) / 2 = 2.5</p></blockquote><blockquote><p>提示：<br>nums1.length == m<br>nums2.length == n<br>0 &lt;= m &lt;= 1000<br>0 &lt;= n &lt;= 1000<br>1 &lt;= m + n &lt;= 2000<br>-106 &lt;= nums1[i], nums2[i] &lt;= 106</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findMedianSortedArrays</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums1<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums2<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">float</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">getKthElement</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token triple-quoted-string string">"""            - 主要思路：要找到第 k (k&gt;1) 小的元素，那么就取 pivot1 = nums1[k/2-1] 和 pivot2 = nums2[k/2-1] 进行比较            - 这里的 "/" 表示整除            - nums1 中小于等于 pivot1 的元素有 nums1[0 .. k/2-2] 共计 k/2-1 个            - nums2 中小于等于 pivot2 的元素有 nums2[0 .. k/2-2] 共计 k/2-1 个            - 取 pivot = min(pivot1, pivot2)，两个数组中小于等于 pivot 的元素共计不会超过 (k/2-1) + (k/2-1) &lt;= k-2 个            - 这样 pivot 本身最大也只能是第 k-1 小的元素            - 如果 pivot = pivot1，那么 nums1[0 .. k/2-1] 都不可能是第 k 小的元素。把这些元素全部 "删除"，剩下的作为新的 nums1 数组            - 如果 pivot = pivot2，那么 nums2[0 .. k/2-1] 都不可能是第 k 小的元素。把这些元素全部 "删除"，剩下的作为新的 nums2 数组            - 由于我们 "删除" 了一些元素（这些元素都比第 k 小的元素要小），因此需要修改 k 的值，减去删除的数的个数            """</span>                        index1<span class="token punctuation">,</span> index2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                <span class="token comment"># 特殊情况</span>                <span class="token keyword">if</span> index1 <span class="token operator">==</span> m<span class="token punctuation">:</span>                    <span class="token keyword">return</span> nums2<span class="token punctuation">[</span>index2 <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">if</span> index2 <span class="token operator">==</span> n<span class="token punctuation">:</span>                    <span class="token keyword">return</span> nums1<span class="token punctuation">[</span>index1 <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token builtin">min</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>index1<span class="token punctuation">]</span><span class="token punctuation">,</span> nums2<span class="token punctuation">[</span>index2<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token comment"># 正常情况</span>                newIndex1 <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>index1 <span class="token operator">+</span> k <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>                newIndex2 <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>index2 <span class="token operator">+</span> k <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>                pivot1<span class="token punctuation">,</span> pivot2 <span class="token operator">=</span> nums1<span class="token punctuation">[</span>newIndex1<span class="token punctuation">]</span><span class="token punctuation">,</span> nums2<span class="token punctuation">[</span>newIndex2<span class="token punctuation">]</span>                <span class="token keyword">if</span> pivot1 <span class="token operator">&lt;=</span> pivot2<span class="token punctuation">:</span>                    k <span class="token operator">-=</span> newIndex1 <span class="token operator">-</span> index1 <span class="token operator">+</span> <span class="token number">1</span>                    index1 <span class="token operator">=</span> newIndex1 <span class="token operator">+</span> <span class="token number">1</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    k <span class="token operator">-=</span> newIndex2 <span class="token operator">-</span> index2 <span class="token operator">+</span> <span class="token number">1</span>                    index2 <span class="token operator">=</span> newIndex2 <span class="token operator">+</span> <span class="token number">1</span>                m<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums2<span class="token punctuation">)</span>        totalLength <span class="token operator">=</span> m <span class="token operator">+</span> n        <span class="token keyword">if</span> totalLength <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> getKthElement<span class="token punctuation">(</span><span class="token punctuation">(</span>totalLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>getKthElement<span class="token punctuation">(</span>totalLength <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> getKthElement<span class="token punctuation">(</span>totalLength <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-3.无重复字符的最长子串</title>
      <link href="/2023/05/05/leetcode/leetcode-3-wu-chong-fu-zi-fu-de-zui-chang-zi-chuan/"/>
      <url>/2023/05/05/leetcode/leetcode-3-wu-chong-fu-zi-fu-de-zui-chang-zi-chuan/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。</p><blockquote><p>示例 1:<br>输入: s = “abcabcbb”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。</p></blockquote><blockquote><p>示例 2:<br>输入: s = “bbbbb”<br>输出: 1<br>解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。</p></blockquote><blockquote><p>示例 3:<br>输入: s = “pwwkew”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br>请注意，你的答案必须是 子串 的长度，“pwke” 是一个子序列，不是子串。</p></blockquote><blockquote><p>提示：<br>0 &lt;= s.length &lt;= 5 * 104<br>s 由英文字母、数字、符号和空格组成</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token comment"># Step 1: 定义需要维护的变量, 本题求最大长度，所以需要定义max_len, 该题又涉及去重，因此还需要一个哈希表</span>        max_len<span class="token punctuation">,</span> hashmap <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token comment"># Step 2: 定义窗口的首尾端 (start, end)， 然后滑动窗口</span>        start <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> end <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># Step 3</span>            <span class="token comment"># 更新需要维护的变量 (max_len, hashmap)</span>            <span class="token comment"># i.e. 把窗口末端元素加入哈希表，使其频率加1，并且更新最大长度</span>            hashmap<span class="token punctuation">[</span>s<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> hashmap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>s<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>hashmap<span class="token punctuation">)</span> <span class="token operator">==</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span>                max_len <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>max_len<span class="token punctuation">,</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>                        <span class="token comment"># Step 4: </span>            <span class="token comment"># 根据题意,  题目的窗口长度可变: 这个时候一般涉及到窗口是否合法的问题</span>            <span class="token comment"># 这时要用一个while去不断移动窗口左指针, 从而剔除非法元素直到窗口再次合法</span>            <span class="token comment"># 当窗口长度大于哈希表长度时候 (说明存在重复元素)，窗口不合法</span>            <span class="token comment"># 所以需要不断移动窗口左指针直到窗口再次合法, 同时提前更新需要维护的变量 (hashmap)</span>            <span class="token keyword">while</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>hashmap<span class="token punctuation">)</span><span class="token punctuation">:</span>                head <span class="token operator">=</span> s<span class="token punctuation">[</span>start<span class="token punctuation">]</span>                hashmap<span class="token punctuation">[</span>head<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span>                <span class="token keyword">if</span> hashmap<span class="token punctuation">[</span>head<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    <span class="token keyword">del</span> hashmap<span class="token punctuation">[</span>head<span class="token punctuation">]</span>                start <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment"># Step 5: 返回答案 (最大长度)</span>        <span class="token keyword">return</span> max_len<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-2.两数相加</title>
      <link href="/2023/05/05/leetcode/leetcode-2-liang-shu-xiang-jia/"/>
      <url>/2023/05/05/leetcode/leetcode-2-liang-shu-xiang-jia/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。<br>请你将两个数相加，并以相同形式返回一个表示和的链表。<br>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><blockquote><p>示例 1：<br>输入：l1 = [2,4,3], l2 = [5,6,4]<br>输出：[7,0,8]<br>解释：342 + 465 = 807.</p></blockquote><blockquote><p>示例 2：<br>输入：l1 = [0], l2 = [0]<br>输出：[0]</p></blockquote><blockquote><p>示例 3：<br>输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]<br>输出：[8,9,9,9,0,0,0,1]</p></blockquote><blockquote><p>提示：<br>每个链表中的节点数在范围 [1, 100] 内<br>0 &lt;= Node.val &lt;= 9<br>题目数据保证列表表示的数字不含前导零</p></blockquote><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Definition for singly-linked list.</span><span class="token comment"># class ListNode:</span><span class="token comment">#     def __init__(self, val=0, next=None):</span><span class="token comment">#         self.val = val</span><span class="token comment">#         self.next = next</span><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> l1<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>ListNode<span class="token punctuation">]</span><span class="token punctuation">,</span> l2<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>ListNode<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Optional<span class="token punctuation">[</span>ListNode<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token comment"># 初始化链表</span>        head <span class="token operator">=</span> tree <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token punctuation">)</span>        val <span class="token operator">=</span> tmp <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment"># 当三者有一个不为空时继续循环</span>        <span class="token keyword">while</span> tmp <span class="token keyword">or</span> l1 <span class="token keyword">or</span> l2<span class="token punctuation">:</span>            val <span class="token operator">=</span> tmp            <span class="token keyword">if</span> l1<span class="token punctuation">:</span>                val <span class="token operator">=</span> l1<span class="token punctuation">.</span>val <span class="token operator">+</span> val                l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span><span class="token builtin">next</span>            <span class="token keyword">if</span> l2<span class="token punctuation">:</span>                val <span class="token operator">=</span> l2<span class="token punctuation">.</span>val <span class="token operator">+</span> val                l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span><span class="token builtin">next</span>            tmp <span class="token operator">=</span> val <span class="token operator">//</span> <span class="token number">10</span>            val <span class="token operator">=</span> val <span class="token operator">%</span> <span class="token number">10</span>            <span class="token comment"># 实现链表的连接</span>            tree<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>val<span class="token punctuation">)</span>            tree <span class="token operator">=</span> tree<span class="token punctuation">.</span><span class="token builtin">next</span>        <span class="token keyword">return</span> head<span class="token punctuation">.</span><span class="token builtin">next</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-1.两数之和</title>
      <link href="/2023/05/05/leetcode/leetcode-1-liang-shu-zhi-he/"/>
      <url>/2023/05/05/leetcode/leetcode-1-liang-shu-zhi-he/</url>
      
        <content type="html"><![CDATA[<h2 id="题干">题干</h2><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。<br>你可以按任意顺序返回答案。</p><blockquote><p>示例 1：<br>输入：nums = [2,7,11,15], target = 9<br>输出：[0,1]<br>解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</p></blockquote><blockquote><p>示例 2：<br>输入：nums = [3,2,4], target = 6<br>输出：[1,2]</p></blockquote><blockquote><p>示例 3：<br>输入：nums = [3,3], target = 6<br>输出：[0,1]</p></blockquote><blockquote><p>提示：<br>2 &lt;= nums.length &lt;= 104<br>-109 &lt;= nums[i] &lt;= 109<br>-109 &lt;= target &lt;= 109<br>只会存在一个有效答案</p></blockquote><p>进阶：你可以想出一个时间复杂度小于 O(n2) 的算法吗？</p><h2 id="python">python</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">代码块<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        :type nums: List[int]        :type target: int        :rtype: List[int]        """</span>        <span class="token comment"># 遍历列表</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># 计算需要找到的下一个目标数字</span>            res <span class="token operator">=</span> target<span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>                <span class="token comment"># 遍历剩下的元素，查找是否存在该数字</span>            <span class="token keyword">if</span> res <span class="token keyword">in</span> nums<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token comment"># 若存在，返回答案。这里由于是两数之和，可采用.index()方法</span>                <span class="token comment"># 获得目标元素在nums[i+1:]这个子数组中的索引后，还需加上i+1才是该元素在nums中的索引</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML-特殊字符编码对照表</title>
      <link href="/2023/05/05/coding/html-te-shu-zi-fu-bian-ma-dui-zhao-biao/"/>
      <url>/2023/05/05/coding/html-te-shu-zi-fu-bian-ma-dui-zhao-biao/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>特殊符号</th><th>命名实体</th><th>十进制编码</th><th>特殊符号</th><th>命名实体</th><th>十进制编码</th><th>特殊符号</th><th>命名实体</th><th>十进制编码</th></tr></thead><tbody><tr><td>&amp;#913</td><td>&amp;Alpha;</td><td>&amp;#913;</td><td>Β</td><td>&amp;Beta;</td><td>&amp;#914;</td><td>Γ</td><td>&amp;Gamma;</td><td>&amp;#915;</td></tr><tr><td>Δ</td><td>&amp;Delta;</td><td>&amp;#916;</td><td>Ε</td><td>&amp;Epsilon;</td><td>&amp;#917;</td><td>Ζ</td><td>&amp;Zeta;</td><td>&amp;#918;</td></tr><tr><td>Η</td><td>&amp;Eta;</td><td>&amp;#919;</td><td>Θ</td><td>&amp;Theta;</td><td>&amp;#920;</td><td>Ι</td><td>&amp;Iota;</td><td>&amp;#921;</td></tr><tr><td>Κ</td><td>&amp;Kappa;</td><td>&amp;#922;</td><td>Λ</td><td>&amp;Lambda;</td><td>&amp;#923;</td><td>Μ</td><td>&amp;Mu;</td><td>&amp;#924;</td></tr><tr><td>Ν</td><td>&amp;Nu;</td><td>&amp;#925;</td><td>Ξ</td><td>&amp;Xi;</td><td>&amp;#926;</td><td>Ο</td><td>&amp;Omicron;</td><td>&amp;#927;</td></tr><tr><td>Π</td><td>&amp;Pi;</td><td>&amp;#928;</td><td>Ρ</td><td>&amp;Rho;</td><td>&amp;#929;</td><td>Σ</td><td>&amp;Sigma;</td><td>&amp;#931;</td></tr><tr><td>Τ</td><td>&amp;Tau;</td><td>&amp;#932;</td><td>Υ</td><td>&amp;Upsilon;</td><td>&amp;#933;</td><td>Φ</td><td>&amp;Phi;</td><td>&amp;#934;</td></tr><tr><td>Χ</td><td>&amp;Chi;</td><td>&amp;#935;</td><td>Ψ</td><td>&amp;Psi;</td><td>&amp;#936;</td><td>Ω</td><td>&amp;Omega;</td><td>&amp;#937;</td></tr><tr><td>α</td><td>&amp;alpha;</td><td>&amp;#945;</td><td>β</td><td>&amp;beta;</td><td>&amp;#946;</td><td>γ</td><td>&amp;gamma;</td><td>&amp;#947;</td></tr><tr><td>δ</td><td>&amp;delta;</td><td>&amp;#948;</td><td>ε</td><td>&amp;epsilon;</td><td>&amp;#949;</td><td>ζ</td><td>&amp;zeta;</td><td>&amp;#950;</td></tr><tr><td>η</td><td>&amp;eta;</td><td>&amp;#951;</td><td>θ</td><td>&amp;theta;</td><td>&amp;#952;</td><td>ι</td><td>&amp;iota;</td><td>&amp;#953;</td></tr><tr><td>κ</td><td>&amp;kappa;</td><td>&amp;#954;</td><td>λ</td><td>&amp;lambda;</td><td>&amp;#955;</td><td>μ</td><td>&amp;mu;</td><td>&amp;#956;</td></tr><tr><td>ν</td><td>&amp;nu;</td><td>&amp;#957;</td><td>ξ</td><td>&amp;xi;</td><td>&amp;#958;</td><td>ο</td><td>&amp;omicron;</td><td>&amp;#959;</td></tr><tr><td>π</td><td>&amp;pi;</td><td>&amp;#960;</td><td>ρ</td><td>&amp;rho;</td><td>&amp;#961;</td><td>ς</td><td>&amp;sigmaf;</td><td>&amp;#962;</td></tr><tr><td>σ</td><td>&amp;sigma;</td><td>&amp;#963;</td><td>τ</td><td>&amp;tau;</td><td>&amp;#964;</td><td>υ</td><td>&amp;upsilon;</td><td>&amp;#965;</td></tr><tr><td>φ</td><td>&amp;phi;</td><td>&amp;#966;</td><td>χ</td><td>&amp;chi;</td><td>&amp;#967;</td><td>ψ</td><td>&amp;psi;</td><td>&amp;#968;</td></tr><tr><td>ω</td><td>&amp;omega;</td><td>&amp;#969;</td><td>ϑ</td><td>&amp;thetasym;</td><td>&amp;#977;</td><td>ϒ</td><td>&amp;upsih;</td><td>&amp;#978;</td></tr><tr><td>ϖ</td><td>&amp;piv;</td><td>&amp;#982;</td><td>•</td><td>&amp;bull;</td><td>&amp;#8226;</td><td>…</td><td>&amp;hellip;</td><td>&amp;#8230;</td></tr><tr><td>′</td><td>&amp;prime;</td><td>&amp;#8242;</td><td>″</td><td>&amp;Prime;</td><td>&amp;#8243;</td><td>‾</td><td>&amp;oline;</td><td>&amp;#8254;</td></tr><tr><td>⁄</td><td>&amp;frasl;</td><td>&amp;#8260;</td><td>℘</td><td>&amp;weierp;</td><td>&amp;#8472;</td><td>ℑ</td><td>&amp;image;</td><td>&amp;#8465;</td></tr><tr><td>ℜ</td><td>&amp;real;</td><td>&amp;#8476;</td><td>™</td><td>&amp;trade;</td><td>&amp;#8482;</td><td>ℵ</td><td>&amp;alefsym;</td><td>&amp;#8501;</td></tr><tr><td>←</td><td>&amp;larr;</td><td>&amp;#8592;</td><td>↑</td><td>&amp;uarr;</td><td>&amp;#8593;</td><td>→</td><td>&amp;rarr;</td><td>&amp;#8594;</td></tr><tr><td>↓</td><td>&amp;darr;</td><td>&amp;#8595;</td><td>↔</td><td>&amp;harr;</td><td>&amp;#8596;</td><td>↵</td><td>&amp;crarr;</td><td>&amp;#8629;</td></tr><tr><td>⇐</td><td>&amp;lArr;</td><td>&amp;#8656;</td><td>⇑</td><td>&amp;uArr;</td><td>&amp;#8657;</td><td>⇒</td><td>&amp;rArr;</td><td>&amp;#8658;</td></tr><tr><td>⇓</td><td>&amp;dArr;</td><td>&amp;#8659;</td><td>⇔</td><td>&amp;hArr;</td><td>&amp;#8660;</td><td>∀</td><td>&amp;forall;</td><td>&amp;#8704;</td></tr><tr><td>∂</td><td>&amp;part;</td><td>&amp;#8706;</td><td>∃</td><td>&amp;exist;</td><td>&amp;#8707;</td><td>∅</td><td>&amp;empty;</td><td>&amp;#8709;</td></tr><tr><td>∇</td><td>&amp;nabla;</td><td>&amp;#8711;</td><td>∈</td><td>&amp;isin;</td><td>&amp;#8712;</td><td>∉</td><td>&amp;notin;</td><td>&amp;#8713;</td></tr><tr><td>∋</td><td>&amp;ni;</td><td>&amp;#8715;</td><td>∏</td><td>&amp;prod;</td><td>&amp;#8719;</td><td>∑</td><td>&amp;sum;</td><td>&amp;#8722;</td></tr><tr><td>−</td><td>&amp;minus;</td><td>&amp;#8722;</td><td>∗</td><td>&amp;lowast;</td><td>&amp;#8727;</td><td>√</td><td>&amp;radic;</td><td>&amp;#8730;</td></tr><tr><td>∝</td><td>&amp;prop;</td><td>&amp;#8733;</td><td>∞</td><td>&amp;infin;</td><td>&amp;#8734;</td><td>∠</td><td>&amp;ang;</td><td>&amp;#8736;</td></tr><tr><td>∧</td><td>&amp;and;</td><td>&amp;#8869;</td><td>∨</td><td>&amp;or;</td><td>&amp;#8870;</td><td>∩</td><td>&amp;cap;</td><td>&amp;#8745;</td></tr><tr><td>∪</td><td>&amp;cup;</td><td>&amp;#8746;</td><td>∫</td><td>&amp;int;</td><td>&amp;#8747;</td><td>∴</td><td>&amp;there4;</td><td>&amp;#8756;</td></tr><tr><td>∼</td><td>&amp;sim;</td><td>&amp;#8764;</td><td>≅</td><td>&amp;cong;</td><td>&amp;#8773;</td><td>≈</td><td>&amp;asymp;</td><td>&amp;#8773;</td></tr><tr><td>≠</td><td>&amp;ne;</td><td>&amp;#8800;</td><td>≡</td><td>&amp;equiv;</td><td>&amp;#8801;</td><td>≤</td><td>&amp;le;</td><td>&amp;#8804;</td></tr><tr><td>≥</td><td>&amp;ge;</td><td>&amp;#8805;</td><td>⊂</td><td>&amp;sub;</td><td>&amp;#8834;</td><td>⊃</td><td>&amp;sup;</td><td>&amp;#8835;</td></tr><tr><td>⊄</td><td>&amp;nsub;</td><td>&amp;#8836;</td><td>⊆</td><td>&amp;sube;</td><td>&amp;#8838;</td><td>⊇</td><td>&amp;supe;</td><td>&amp;#8839;</td></tr><tr><td>⊕</td><td>&amp;oplus;</td><td>&amp;#8853;</td><td>⊗</td><td>&amp;otimes;</td><td>&amp;#8855;</td><td>⊥</td><td>&amp;perp;</td><td>&amp;#8869;</td></tr><tr><td>⋅</td><td>&amp;sdot;</td><td>&amp;#8901;</td><td>⌈</td><td>&amp;lceil;</td><td>&amp;#8968;</td><td>⌉</td><td>&amp;rceil;</td><td>&amp;#8969;</td></tr><tr><td>⌊</td><td>&amp;lfloor;</td><td>&amp;#8970;</td><td>⌋</td><td>&amp;rfloor;</td><td>&amp;#8971;</td><td>◊</td><td>&amp;loz;</td><td>&amp;#9674;</td></tr><tr><td>♠</td><td>&amp;spades;</td><td>&amp;#9824;</td><td>♣</td><td>&amp;clubs;</td><td>&amp;#9827;</td><td>♥</td><td>&amp;hearts;</td><td>&amp;#9829;</td></tr><tr><td>♦</td><td>&amp;diams;</td><td>&amp;#9830;</td><td></td><td>&amp;nbsp;</td><td>&amp;#160;</td><td>¡</td><td>&amp;iexcl;</td><td>&amp;#161;</td></tr><tr><td>¢</td><td>&amp;cent;</td><td>&amp;#162;</td><td>£</td><td>&amp;pound;</td><td>&amp;#163;</td><td>¤</td><td>&amp;curren;</td><td>&amp;#164;</td></tr><tr><td>¥</td><td>&amp;yen;</td><td>&amp;#165;</td><td>¦</td><td>&amp;brvbar;</td><td>&amp;#166;</td><td>§</td><td>&amp;sect;</td><td>&amp;#167;</td></tr><tr><td>¨</td><td>&amp;uml;</td><td>&amp;#168;</td><td>©</td><td>&amp;copy;</td><td>&amp;#169;</td><td>ª</td><td>&amp;ordf;</td><td>&amp;#170;</td></tr><tr><td>«</td><td>&amp;laquo;</td><td>&amp;#171;</td><td>¬</td><td>&amp;not;</td><td>&amp;#172;</td><td></td><td>­&amp;shy;</td><td>&amp;#173;</td></tr><tr><td>®</td><td>&amp;reg;</td><td>&amp;#174;</td><td>¯</td><td>&amp;macr;</td><td>&amp;#175;</td><td>°</td><td>&amp;deg;</td><td>&amp;#176;</td></tr><tr><td>±</td><td>&amp;plusmn;</td><td>&amp;#177;</td><td>²</td><td>&amp;sup2;</td><td>&amp;#178;</td><td>³</td><td>&amp;sup3;</td><td>&amp;#179;</td></tr><tr><td>´</td><td>&amp;acute;</td><td>&amp;#180;</td><td>µ</td><td>&amp;micro;</td><td>&amp;#181;</td><td>"</td><td>&amp;quot;</td><td>&amp;#34;</td></tr><tr><td>&lt;</td><td>&amp;lt;</td><td>&amp;#60;</td><td>&gt;</td><td>&amp;gt;</td><td>&amp;#62;</td><td>’</td><td></td><td>&amp;#39;</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230504-Brooks-S&amp;P Emini</title>
      <link href="/2023/05/05/shi-chang-fen-xi/shi-chang-fen-xi-20230504-brooks-s-p-emini/"/>
      <url>/2023/05/05/shi-chang-fen-xi/shi-chang-fen-xi-20230504-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Thursday May 4, 2023</font></p><h1><font color="green">S&amp;P Emini pre-open market analysis</font></h1><h2 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h2><ul><li>The Emini formed a strong bear bar closing on its low yesterday.<ul><li><font color="gray">Emini 昨日收盘于低点形成了一个强大的熊市</font></li></ul></li><li>Bears want break below March 22nd high and test of April 26th low with close below the March 22nd high. This would close the breakout point and end the argument of a measured move from the March 13th low to the March 22nd high.<ul><li><font color="gray">空头希望跌破 3 月 22 日的高点，并测试 4 月 26 日的低点，收盘价低于 3 月 22 日的高点。这将关闭突破点并结束从 3 月 13 日低点到 3 月 22 日高点的谨慎移动的论点</font></li></ul></li><li>The next target for the bears is a test of the 4,000 big round number.<ul><li><font color="gray">空头的下一个目标是测试4,000大轮数</font></li></ul></li><li>The past two trading days increase the probability of the market going slightly lower, reaching the April 26th low.<ul><li><font color="gray">近两个交易日加大大盘小幅走低的概率，触及4月26日低点</font></li></ul></li><li>The bulls want the rally (Tuesday’s low to yesterday’s high) to disappoint the bears enough that the market will form a micro double bottom and rally back to the May 1st high.<ul><li><font color="gray">多头希望反弹（周二的低点到昨天的高点）足以让空头失望，市场将形成微双底并反弹至 5 月 1 日的高点</font></li></ul></li><li>There were bulls who bought the May 1st low and scaled in lower during Tuesday’s selloff. Those bulls were disappointed enough that many used the rally late Tuesday to Wednesday’s high to exit their trade breakeven, or with a small profit after their scale in traders. Most of those bulls probably bought more at the April 26th low.<ul><li><font color="gray">多头买入 5 月 1 日的低点，并在周二的抛售中走低。那些多头非常失望，以至于许多人利用周二晚些时候的反弹至周三的高点退出交易盈亏平衡，或者在交易员规模扩大后获利微薄。这些多头中的大多数可能在 4 月 26 日的低点买入更多</font></li></ul></li><li>There were bears who sold the April 26th low and were disappointed by last week’s rally. Most of those bears sold higher and were happy to buy back shorts at the April 26th low.<ul><li><font color="gray">有些空头卖出了 4 月 26 日的低点，并对上周的反弹感到失望。大多数空头卖得更高，并乐于在 4 月 26 日的低点买回空头</font></li></ul></li><li>The market has been in a tight trading range for over a month and is in breakout mode. While the bears have an argument for a test down below the March 22nd high, they need to get more signs of strength, such as solid bear closes.<ul><li><font color="gray">一个多月以来，市场一直处于窄幅交易区间，并处于突破模式。虽然空头有理由测试低于 3 月 22 日的高点，但他们需要获得更多的力量迹象，例如稳固的熊市收盘</font></li></ul></li><li>The bears are hopeful that the market is forming a double top (April 18th and May 1st) and will break below the neckline (April 26th) and fall for a measured move down, testing the March 24th low.<ul><li><font color="gray">空头希望市场正在形成双顶（4 月 18 日和 5 月 1 日）并将跌破颈线（4 月 26 日）并缓慢下跌，测试 3 月 24 日的低点</font></li></ul></li></ul><h2 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h2><ul><li>Emini is down 20 points in the overnight Globex session.</li><li>The bear have gone sideways for most of the overnight Globex session.<ul><li><font color="gray">在隔夜 Globex 交易时段的大部分时间里，空头都横盘整理</font></li></ul></li><li>After the consecutive bear trend bars on the daily chart, the bulls want today to disappoint the bears and form a trading range bar or a bull bar.<ul><li><font color="gray">在日线图上连续出现熊市趋势柱后，多头希望今天令空头失望并形成交易区间柱或牛市柱</font></li></ul></li><li>Traders should assume the market will have a trading range open and going sideways for the first couple of hours. This means that most traders should consider not trading for the first 6-12 bars unless they are comfortable with limit orders.<ul><li><font color="gray">交易者应该假设市场将在前几个小时内打开交易区间并横盘整理。这意味着大多数交易者应该考虑不要交易前 6-12 根柱线，除非他们对限价订单感到满意</font></li></ul></li><li>Most traders should focus on catching the opening swing trade that typically begins before the end of the second hour.<ul><li><font color="gray">大多数交易者应专注于捕捉通常在第二个小时结束前开始的开盘摆动交易</font></li></ul></li><li>While the odds favor a trading range, if the market begins to form strong trend bars on the open, traders cannot be in denial and must trade the market like a trade.<ul><li><font color="gray">虽然可能性有利于交易区间，但如果市场在开盘时开始形成强劲的趋势柱，交易者不能否认，必须像交易一样交易市场</font></li></ul></li><li>Lastly, traders should pay close attention to yesterday’s low as it will likely be a magnet for most of the day.<ul><li><font color="gray">最后，交易者应密切关注昨天的低点，因为它可能会在一天中的大部分时间成为磁石</font></li></ul></li></ul><h2 id="font-color-red-Emini-intraday-market-update-font"><font color="red">Emini intraday market update</font></h2><ul><li>The Emini gapped down and formed a strong two-bar breakout on bars 2-3.<ul><li><font color="gray">Emini 向下跳空并在 2-3 柱上形成强劲的两柱突破</font></li></ul></li><li>The Bears got a second leg down to bar 12. However, the rally up to bar 20 was strong enough to market the market, likely in a trading range and not a bear trend.<ul><li><font color="gray">空头的第二条腿跌至 12 根柱线。然而，涨至 20 根柱子的涨势足以推销市场，可能处于交易区间而非熊市趋势</font></li></ul></li><li>While the bulls did an excellent job getting a rally up to bar 20 (8:10 AM PT), the selloff during the first hour lowered the probability of a bull trend day. This meant the odds favored a trading range day and mostly a sideways market.<ul><li><font color="gray">虽然多头在 20 号柱（太平洋时间上午 8 点 10 分）上表现出色，但第一个小时的抛售降低了牛市趋势日出现的可能性。这意味着赔率有利于交易区间日和主要是横盘市场</font></li></ul></li><li>The bears got a wedge bottom on bar 32 (9:10 AM PT)  and the bulls got two legs up to bar 44, testing the bar 20 high.<ul><li><font color="gray">空头在 32 号柱（太平洋时间上午 9 点 10 分）出现楔形底部，多头在 44 号柱上有两条腿，测试 20 号柱的高位</font></li></ul></li><li>As of bar 46 (10: 15 AM PT), the market is Always In Long. The bulls want to reach the day’s open and close above today’s open.<ul><li><font color="gray">截至第 46 条柱线（太平洋时间上午 10:15），市场总是多头。多头希望当天的开盘价和收盘价高于今天的开盘价</font></li></ul></li><li>The market will probably reach the open and begin to go sideways for a couple of hours and decide on closing above or below it. Even if the bulls can close above the open, today will likely not be a strong bull trend day. The open of the day is basically the high of the day and so far the day has a big tail below. This means a trading range day is most likely.<ul><li><font color="gray">市场可能会达到开盘价并开始横盘整理几个小时，然后决定收盘价高于或低于它。即使多头能够收于开盘价之上，今天也可能不会是一个强劲的牛市趋势日。当天的开盘价基本上是当天的高点，到目前为止，当天的下方有一个大尾巴。这意味着交易区间日最有可能</font></li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230504-SP500-Emini-5-Min-Buy-Climax-Then-Trading-Range-Then-Bear-Breakout-after-FOMC-768x432.png" alt="Emini 5 Min - Yesterday"></p><h2 id="font-color-green-Summary-of-today’s-S-P-Emini-price-action-font"><font color="green">Summary of today’s S&amp;P Emini price action</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230504-SP500-Emini-5-Min-Trading-Range-Day-after-Double-Top-and-Double-Bottom-768x432.png" alt="Emini 5 Min - Today"></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-https配置</title>
      <link href="/2023/05/05/yun-wei/nginx-https-pei-zhi/"/>
      <url>/2023/05/05/yun-wei/nginx-https-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="环境">环境</h2><p>需要 <code>http_ssl_module</code>，检查是否存在，一般自动装了<br>执行 <code>nginx -V</code> 查看输出的字符串中是否有 <code>--with-http_ssl_module</code></p><h2 id="conf">conf</h2><p>先生成证书: <a href="/2023/05/05/yun-wei/tls-openssl-sheng-cheng-crt-zheng-shu/" title="TLS-openssl生成crt证书">TLS-openssl生成crt证书</a></p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">server</span> <span class="token value attr-value">{</span><span class="token key attr-name">        listen</span> <span class="token value attr-value">      443 ssl;</span><span class="token key attr-name">        server_name</span> <span class="token value attr-value"> 192.168.52.132;</span><span class="token key attr-name">        ssl_certificate</span> <span class="token value attr-value">      /etc/nginx/conf.d/ssl/server.crt;</span><span class="token key attr-name">        ssl_certificate_key</span> <span class="token value attr-value">  /etc/nginx/conf.d/ssl/server_nopass.key;</span>}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，不要在https中去请求http，那样不会被允许，因为会降低安全性。<br>所以，用到了https，就得全升级成https。</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TLS-openssl生成crt证书</title>
      <link href="/2023/05/05/yun-wei/tls-openssl-sheng-cheng-crt-zheng-shu/"/>
      <url>/2023/05/05/yun-wei/tls-openssl-sheng-cheng-crt-zheng-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成 key</span>openssl genrsa <span class="token parameter variable">-des3</span> <span class="token parameter variable">-out</span> server.key <span class="token number">1024</span><span class="token comment"># 生成 csr</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-out</span> server.csr<span class="token comment"># 去除密码</span>openssl rsa <span class="token parameter variable">-in</span> server.key <span class="token parameter variable">-out</span> server_nopass.key<span class="token comment"># 生成证书</span>openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-signkey</span> server_nopass.key <span class="token parameter variable">-out</span> server.crt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TLS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人脸识别-LBPH-MATLAB</title>
      <link href="/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-lbph-matlab/"/>
      <url>/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-lbph-matlab/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>LBPH，Local Binary Patterns Histograms，即LBP特征的统计直方图，LBPH将LBP特征与图像的空间信息结合在一起。这种表示方法由Ahonen等人在论文中提出，他们将LBP特征图像分成m个局部块，并提取每个局部块的直方图，然后将这些直方图依次连接在一起形成LBP特征的统计直方图，即LBPH。</p><p>一幅图像具体的计算LBPH的过程：</p><ol><li>计算图像的LBP特征图像。</li><li>将LBP特征图像进行分块，Opencv中默认将LBP特征图像分成8行8列64块区域</li><li>计算每块区域特征图像的直方图cell_LBPH，将直方图进行归一化，直方图大小为 <code>1*numPatterns</code></li><li>将上面计算的每块区域特征图像的直方图按分块的空间顺序依次排列成一行，形成LBP特征向量，大小为 <code>1*(numPatterns*64)</code></li><li>用机器学习的方法对LBP特征向量进行训练，用来检测和识别目标</li></ol><p>举例说明LBPH的维度：<br>采样点为8个，如果用的是原始的LBP或Extended LBP特征，其LBP特征值的模式为256种，则一幅图像的LBP特征向量维度为：<code>64*256=16384</code>维，而如果使用的UniformPatternLBP特征，其LBP值的模式为59种，其特征向量维度为：<code>64*59=3776</code>维，可以看出，使用等价模式特征，其特征向量的维度大大减少，这意味着使用机器学习方法进行学习的时间将大大减少，而性能上没有受到很大影响。</p><h2 id="MATLAB-源码">MATLAB 源码</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> result <span class="token operator">=</span> <span class="token function">getLBPH</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> numPatterns<span class="token punctuation">,</span> grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">)</span>    <span class="token punctuation">[</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    width <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>cols <span class="token operator">/</span> grid_x<span class="token punctuation">)</span><span class="token punctuation">;</span>    height <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>rows <span class="token operator">/</span> grid_y<span class="token punctuation">)</span><span class="token punctuation">;</span>    result <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>grid_x <span class="token operator">*</span> grid_y<span class="token punctuation">,</span> numPatterns<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>        resultRowIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span>grid_x<span class="token operator">-</span><span class="token number">1</span>        <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span>grid_y<span class="token operator">-</span><span class="token number">1</span>            cell <span class="token operator">=</span> <span class="token function">img</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">*</span>height<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>height<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">*</span>width<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>            hist_cell <span class="token operator">=</span> <span class="token function">getLocalRegionLBPH</span><span class="token punctuation">(</span>cell<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> numPatterns<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> true<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">result</span><span class="token punctuation">(</span>resultRowIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span>numPatterns<span class="token punctuation">)</span> <span class="token operator">=</span> hist_cell<span class="token punctuation">;</span>            resultRowIndex <span class="token operator">=</span> resultRowIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>    result <span class="token operator">=</span> <span class="token function">reshape</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span> grid_x<span class="token operator">*</span>grid_y<span class="token operator">*</span>numPatterns<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token keyword">function</span> result <span class="token operator">=</span> <span class="token function">getLocalRegionLBPH</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> minValue<span class="token punctuation">,</span> maxValue<span class="token punctuation">,</span> normed<span class="token punctuation">)</span>    edges <span class="token operator">=</span> <span class="token punctuation">[</span>minValue minValue<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">:</span>maxValue maxValue<span class="token punctuation">]</span><span class="token punctuation">;</span>    hist <span class="token operator">=</span> <span class="token function">histogram</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> edges<span class="token punctuation">)</span><span class="token punctuation">;</span>    result <span class="token operator">=</span> hist<span class="token punctuation">.</span>Values<span class="token punctuation">;</span>        <span class="token keyword">if</span> normed        result <span class="token operator">=</span> <span class="token function">mapminmax</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>    result <span class="token operator">=</span> <span class="token function">reshape</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> maxValue<span class="token operator">-</span>minValue<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人脸识别-MB-LBP特征-MATLAB</title>
      <link href="/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-mb-lbp-te-zheng-matlab/"/>
      <url>/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-mb-lbp-te-zheng-matlab/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>将图像分成一个个小块（Block），每个小块再分为一个个的小区域（类似于HOG中的cell），小区域内的灰度平均值作为当前小区域的灰度值，与周围小区域灰度进行比较形成LBP特征，生成的特征称为MB-LBP，Block大小为3*3，则小区域的大小为1，就是原始的LBP特征<br><img src="/static/IT/AI-Face/LBP-MB-1.png" alt="MB-LBP"></p><h2 id="MATLAB-源码">MATLAB 源码</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> imglbp <span class="token operator">=</span> <span class="token function">getMultiScaleBlockLBPFeature</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> scale<span class="token punctuation">)</span>    imgSize <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token function">numel</span><span class="token punctuation">(</span>imgSize<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span>        imgG <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        imgG <span class="token operator">=</span> img<span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>imgG<span class="token punctuation">)</span><span class="token punctuation">;</span>    rows<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>    cols<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">;</span>       cellSize <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>scale <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    offset <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>cellSize <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    im <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span><span class="token function">zeros</span><span class="token punctuation">(</span>rows<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>offset<span class="token punctuation">,</span> cols<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>offset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span>offset<span class="token operator">:</span><span class="token punctuation">(</span>rows<span class="token operator">-</span>offset<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span>offset<span class="token operator">:</span><span class="token punctuation">(</span>cols<span class="token operator">-</span>offset<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> m<span class="token operator">=</span><span class="token operator">-</span>offset<span class="token operator">:</span>offset                <span class="token keyword">for</span> n<span class="token operator">=</span><span class="token operator">-</span>offset<span class="token operator">:</span>offset                    temp <span class="token operator">=</span> temp <span class="token operator">+</span> <span class="token function">int16</span><span class="token punctuation">(</span><span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">end</span>            <span class="token keyword">end</span>            temp <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>temp <span class="token operator">/</span> <span class="token punctuation">(</span>cellSize <span class="token operator">*</span> cellSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       temp <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">im</span><span class="token punctuation">(</span><span class="token number">i</span> <span class="token operator">-</span> offset <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">j</span> <span class="token operator">-</span> offset <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>    <span class="token comment">%imshow(im)</span>    imglbp <span class="token operator">=</span> <span class="token function">getOriginLBPFeature</span><span class="token punctuation">(</span>im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果图">效果图</h2><p><img src="/static/IT/AI-Face/LBP-MB-2.jpg" alt="原图"></p><p><img src="/static/IT/AI-Face/LBP-MB-3.png" alt=""></p><p><img src="/static/IT/AI-Face/LBP-MB-4.png" alt="scale = 9 效果图"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人脸识别-Uniform Pattern LBP特征-MATLAB</title>
      <link href="/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-uniform-pattern-lbp-te-zheng-matlab/"/>
      <url>/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-uniform-pattern-lbp-te-zheng-matlab/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>Uniform Pattern，也被称为等价模式或均匀模式，由于一个LBP特征有多种不同的二进制形式，对于半径为R的圆形区域内含有P个采样点的LBP算子将会产生2P种模式。很显然，随着邻域集内采样点数的增加，二进制模式的种类是以指数形式增加的。例如：5×5邻域内20个采样点，有220＝1,048,576种二进制模式。这么多的二进制模式不利于纹理的提取、分类、识别及存取。例如，将LBP算子用于纹理分类或人脸识别时，常采用LBP模式的统计直方图来表达图像的信息，而较多的模式种类将使得数据量过大，且直方图过于稀疏。因此，需要对原始的LBP模式进行降维，使得数据量减少的情况下能最好的表示图像的信息。<br>为了解决二进制模式过多的问题，提高统计性，Ojala提出了采用一种“等价模式”(Uniform Pattern)来对LBP算子的模式种类进行降维。Ojala等认为，在实际图像中，绝大多数LBP模式最多只包含两次从1到0或从0到1的跳变。因此，Ojala将“等价模式”定义为：当某个LBP所对应的循环二进制数从0到1或从1到0最多有两次跳变时，该LBP所对应的二进制就称为一个等价模式类。如00000000(0次跳变)，00000111(只含一次从0到1的跳变)，10001111(先由1跳到0，再由0跳到1，共两次跳变)都是等价模式类。除等价模式类以外的模式都归为另一类，称为混合模式类，例如10010111(共四次跳变)。通过这样的改进，二进制模式的种类大大减少，而不会丢失任何信息。模式数量由原来的2P种减少为 P ( P-1)+2种，其中P表示邻域集内的采样点数。对于3×3邻域内8个采样点来说，二进制模式由原始的256种减少为58种，即：它把值分为59类，58个uniform pattern为一类，其它的所有值为第59类。这样直方图从原来的256维变成59维。这使得特征向量的维数更少，并且可以减少高频噪声带来的影响。<br>具体实现：采样点数目为8个，即LBP特征值有28种，共256个值，正好对应灰度图像的0-255，因此原始的LBP特征图像是一幅正常的灰度图像，而等价模式LBP特征，根据0-1跳变次数，将这256个LBP特征值分为了59类，从跳变次数上划分：跳变0次—2个，跳变1次—0个，跳变2次—56个，跳变3次—0个，跳变4次—140个，跳变5次—0个，跳变6次—56个，跳变7次—0个，跳变8次—2个。共9种跳变情况，将这256个值进行分配，跳变小于2次的为等价模式类，共58个，他们对应的值按照从小到大分别编码为1—58，即它们在LBP特征图像中的灰度值为1—58，而除了等价模式类之外的混合模式类被编码为0，即它们在LBP特征中的灰度值为0，因此等价模式LBP特征图像整体偏暗。</p><h2 id="MATLAB-源码">MATLAB 源码</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> imglbp <span class="token operator">=</span> <span class="token function">getUniformPatternLBPFeature</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> neighbors<span class="token punctuation">)</span>    imgSize <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token function">numel</span><span class="token punctuation">(</span>imgSize<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span>        imgG <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        imgG <span class="token operator">=</span> img<span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>imgG<span class="token punctuation">)</span><span class="token punctuation">;</span>    rows<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>    cols<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">;</span>    imglbp <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span><span class="token function">zeros</span><span class="token punctuation">(</span>rows<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius<span class="token punctuation">,</span> cols<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%     LBP特征值对应图像灰度编码表，直接默认采样点为8位</span>    temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    table <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">255</span>        <span class="token keyword">if</span> <span class="token function">getHoptimes</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">3</span>            <span class="token function">table</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>            temp <span class="token operator">=</span> temp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>       <span class="token keyword">for</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span>neighbors<span class="token operator">-</span><span class="token number">1</span><span class="token comment">%       计算采样点对于中心点坐标的偏移量rx，ry        </span>        rx <span class="token operator">=</span> radius <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> <span class="token keyword">pi</span> <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">;</span>        ry <span class="token operator">=</span> <span class="token operator">-</span>radius <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> <span class="token keyword">pi</span> <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%       对采样点偏移量分别进行上下取整        </span>        x1 <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">;</span>        x2 <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">;</span>        y1 <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">;</span>        y2 <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%       将坐标偏移量映射到0-1之间        </span>        tx <span class="token operator">=</span> rx <span class="token operator">-</span> x1<span class="token punctuation">;</span>        ty <span class="token operator">=</span> ry <span class="token operator">-</span> y1<span class="token punctuation">;</span><span class="token comment">%       根据0-1之间的x，y的权重计算公式计算权重，权重与坐标具体位置无关，与坐标间的差值有关</span>        w1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        w2 <span class="token operator">=</span> tx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> ty<span class="token punctuation">;</span>        w4 <span class="token operator">=</span> tx <span class="token operator">*</span> ty<span class="token punctuation">;</span>               <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span>radius<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>rows<span class="token operator">-</span>radius            <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span>radius<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>cols<span class="token operator">-</span>radius                center <span class="token operator">=</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%               根据双线性插值公式计算第k个采样点的灰度值                </span>                neighbor <span class="token operator">=</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x1<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">*</span>w1 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x1<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y2<span class="token punctuation">)</span><span class="token operator">*</span>w2 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x2<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">*</span>w3 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x2<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y2<span class="token punctuation">)</span><span class="token operator">*</span>w4<span class="token punctuation">;</span><span class="token comment">%               LBP特征图像的每个邻居的LBP值累加，累加通过与操作完成，对应的LBP值通过移位取得</span>                <span class="token keyword">if</span> neighbor <span class="token operator">&gt;</span> center                    flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">end</span>                <span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span><span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">bitshift</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> neighbors<span class="token operator">-</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token keyword">if</span> k <span class="token operator">==</span> neighbors<span class="token operator">-</span><span class="token number">1</span>                    <span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">table</span><span class="token punctuation">(</span><span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">end</span>            <span class="token keyword">end</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">function</span> count <span class="token operator">=</span> <span class="token function">getHoptimes</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    binaryCode <span class="token operator">=</span> <span class="token function">dec2bin</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">7</span>        i2 <span class="token operator">=</span> <span class="token function">mod</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> i2 <span class="token operator">==</span> <span class="token number">0</span>            i2 <span class="token operator">=</span> i2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>               <span class="token keyword">if</span> <span class="token function">binaryCode</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">~=</span> <span class="token function">binaryCode</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span>            count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果图">效果图</h2><p><img src="/static/IT/AI-Face/LBP-U-1.jpg" alt="原图"></p><p><img src="/static/IT/AI-Face/LBP-U-2.png" alt="radius=3, neighbors=8 效果图"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人脸识别-旋转不变LBP特征-MATLAB</title>
      <link href="/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-xuan-zhuan-bu-bian-lbp-te-zheng-matlab/"/>
      <url>/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-xuan-zhuan-bu-bian-lbp-te-zheng-matlab/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>不断的旋转圆形邻域内的LBP特征，根据选择得到一系列的LBP特征值，从这些LBP特征值选择LBP特征值最小的作为中心像素点的LBP特征。</p><p><img src="/static/IT/AI-Face/LBP-R-1.jpg" alt="旋转不变 LBP"></p><h2 id="MATLAB-源码">MATLAB 源码</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> imglbp <span class="token operator">=</span> <span class="token function">getRotationInvariantLBPFeature</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> neighbors<span class="token punctuation">)</span>imgSize <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token function">numel</span><span class="token punctuation">(</span>imgSize<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span>        imgG <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        imgG <span class="token operator">=</span> img<span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>imgG<span class="token punctuation">)</span><span class="token punctuation">;</span>    rows<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>    cols<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">;</span>    imglbp <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span><span class="token function">zeros</span><span class="token punctuation">(</span>rows<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius<span class="token punctuation">,</span> cols<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">for</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span>neighbors<span class="token operator">-</span><span class="token number">1</span><span class="token comment">%       计算采样点对于中心点坐标的偏移量rx，ry        </span>        rx <span class="token operator">=</span> radius <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> <span class="token keyword">pi</span> <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">;</span>        ry <span class="token operator">=</span> <span class="token operator">-</span>radius <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> <span class="token keyword">pi</span> <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%       对采样点偏移量分别进行上下取整        </span>        x1 <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">;</span>        x2 <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">;</span>        y1 <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">;</span>        y2 <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%       将坐标偏移量映射到0-1之间        </span>        tx <span class="token operator">=</span> rx <span class="token operator">-</span> x1<span class="token punctuation">;</span>        ty <span class="token operator">=</span> ry <span class="token operator">-</span> y1<span class="token punctuation">;</span><span class="token comment">%       根据0-1之间的x，y的权重计算公式计算权重，权重与坐标具体位置无关，与坐标间的差值有关</span>        w1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        w2 <span class="token operator">=</span> tx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> ty<span class="token punctuation">;</span>        w4 <span class="token operator">=</span> tx <span class="token operator">*</span> ty<span class="token punctuation">;</span>               <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span>radius<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>rows<span class="token operator">-</span>radius            <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span>radius<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>cols<span class="token operator">-</span>radius                center <span class="token operator">=</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%               根据双线性插值公式计算第k个采样点的灰度值                </span>                neighbor <span class="token operator">=</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x1<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">*</span>w1 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x1<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y2<span class="token punctuation">)</span><span class="token operator">*</span>w2 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x2<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">*</span>w3 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x2<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y2<span class="token punctuation">)</span><span class="token operator">*</span>w4<span class="token punctuation">;</span><span class="token comment">%               LBP特征图像的每个邻居的LBP值累加，累加通过与操作完成，对应的LBP值通过移位取得</span>                <span class="token keyword">if</span> neighbor <span class="token operator">&gt;</span> center                    flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">end</span>                <span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span><span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">bitshift</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> neighbors<span class="token operator">-</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">end</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>       <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>rows<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius        <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>cols<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius            currentValue <span class="token operator">=</span> <span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            minValue <span class="token operator">=</span> currentValue<span class="token punctuation">;</span>            currentValue <span class="token operator">=</span> <span class="token function">dec2bin</span><span class="token punctuation">(</span>currentValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%          循环右移</span>            <span class="token keyword">for</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>neighbors                temp <span class="token operator">=</span> <span class="token function">circshift</span><span class="token punctuation">(</span>currentValue<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>                temp <span class="token operator">=</span> <span class="token function">bin2dec</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token keyword">if</span> temp <span class="token operator">&lt;</span> minValue                    minValue <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token keyword">end</span>            <span class="token keyword">end</span>            <span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> minValue<span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果图">效果图</h2><p><img src="/static/IT/AI-Face/LBP-R-2.jpg" alt="原图"></p><p><img src="/static/IT/AI-Face/LBP-R-3.png" alt="radius=3, neighbors=8 效果图"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人脸识别-圆形LBP特征-MATLAB</title>
      <link href="/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-yuan-xing-lbp-te-zheng-matlab/"/>
      <url>/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-yuan-xing-lbp-te-zheng-matlab/</url>
      
        <content type="html"><![CDATA[<h2 id="原理">原理</h2><p>由于原始LBP特征使用的是固定邻域内的灰度值，因此当图像的尺度发生变化时，LBP 特征的编码将会发生错误，LBP 特征将不能正确的反映像素点周围的纹理信息，因此研究人员对其进行了改进。基本的 LBP 算子的最大缺陷在于它只覆盖了一个固定半径范围内的小区域，这显然不能满足不同尺寸和频率纹理的需要。为了适应不同尺度的纹理特征，并达到灰度和旋转不变性的要求，Ojala 等对 LBP 算子进行了改进，将 <code>3×3</code> 邻域扩展到任意邻域，并用圆形邻域代替了正方形邻域，改进后的 LBP 算子允许在半径为 R 的圆形邻域内有任意多个像素点。从而得到了诸如半径为 R 的圆形区域内含有 P 个采样点的 LBP 算子：</p><p><img src="/static/IT/AI-Face/LBP-C-1.jpg" alt="圆形 LBP"></p><h2 id="MATLAB-源码">MATLAB 源码</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> imglbp <span class="token operator">=</span> <span class="token function">getCircularLBPFeature</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> neighbors<span class="token punctuation">)</span>    imgSize <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token function">numel</span><span class="token punctuation">(</span>imgSize<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span>        imgG <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        imgG <span class="token operator">=</span> img<span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>imgG<span class="token punctuation">)</span><span class="token punctuation">;</span>    rows<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>    cols<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">;</span>    imglbp <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span><span class="token function">zeros</span><span class="token punctuation">(</span>rows<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius<span class="token punctuation">,</span> cols<span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>radius<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">for</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span>neighbors<span class="token operator">-</span><span class="token number">1</span><span class="token comment">%       计算采样点对于中心点坐标的偏移量rx，ry        </span>        rx <span class="token operator">=</span> radius <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> <span class="token keyword">pi</span> <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">;</span>        ry <span class="token operator">=</span> <span class="token operator">-</span>radius <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> <span class="token keyword">pi</span> <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%       对采样点偏移量分别进行上下取整        </span>        x1 <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">;</span>        x2 <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">;</span>        y1 <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">;</span>        y2 <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%       将坐标偏移量映射到0-1之间        </span>        tx <span class="token operator">=</span> rx <span class="token operator">-</span> x1<span class="token punctuation">;</span>        ty <span class="token operator">=</span> ry <span class="token operator">-</span> y1<span class="token punctuation">;</span><span class="token comment">%       根据0-1之间的x，y的权重计算公式计算权重，权重与坐标具体位置无关，与坐标间的差值有关</span>        w1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        w2 <span class="token operator">=</span> tx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> ty<span class="token punctuation">;</span>        w4 <span class="token operator">=</span> tx <span class="token operator">*</span> ty<span class="token punctuation">;</span>               <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span>radius<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>rows<span class="token operator">-</span>radius            <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span>radius<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>cols<span class="token operator">-</span>radius                center <span class="token operator">=</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%               根据双线性插值公式计算第k个采样点的灰度值                </span>                neighbor <span class="token operator">=</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x1<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">*</span>w1 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x1<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y2<span class="token punctuation">)</span><span class="token operator">*</span>w2 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x2<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y1<span class="token punctuation">)</span><span class="token operator">*</span>w3 <span class="token operator">+</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span>x2<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">+</span>y2<span class="token punctuation">)</span><span class="token operator">*</span>w4<span class="token punctuation">;</span><span class="token comment">%               LBP特征图像的每个邻居的LBP值累加，累加通过与操作完成，对应的LBP值通过移位取得</span>                <span class="token keyword">if</span> neighbor <span class="token operator">&gt;</span> center                    flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">else</span>                    flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">end</span>                <span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span><span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>radius<span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span>radius<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">bitshift</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> neighbors<span class="token operator">-</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">end</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果图">效果图</h2><p><img src="/static/IT/AI-Face/LBP-C-2.jpg" alt="原图"></p><p><img src="/static/IT/AI-Face/LBP-C-3.png" alt="radius=3, neighbors=8 效果图"></p><p><img src="/static/IT/AI-Face/LBP-C-4.png" alt="radius=2, neighbors=8 效果图"></p><p><img src="/static/IT/AI-Face/LBP-C-5.png" alt="radius=1, neighbors=8 效果图"></p><p><img src="/static/IT/AI-Face/LBP-C-6.png" alt="radius=2, neighbors=4 效果图"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人脸识别-原始LBP特征计算-MATLAB</title>
      <link href="/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-yuan-shi-lbp-te-zheng-ji-suan-matlab/"/>
      <url>/2023/05/05/ren-lian-shi-bie/ren-lian-shi-bie-yuan-shi-lbp-te-zheng-ji-suan-matlab/</url>
      
        <content type="html"><![CDATA[<h2 id="LBP-原理">LBP 原理</h2><p>原始的 LBP 算子定义在像素 <code>3*3</code> 的邻域内，以邻域中心像素为阈值，相邻的8个像素的灰度值与邻域中心的像素值进行比较，若周围像素大于中心像素值，则该像素点的位置被标记为 1，否则为 0。这样，<code>3*3</code> 邻域内的 8 个点经过比较可产生8位二进制数，将这 8 位二进制数依次排列形成一个二进制数字，这个二进制数字就是中心像素的 LBP 值，LBP 值共有 28 种可能，因此 LBP 值有 256 种。中心像素的 LBP 值反映了该像素周围区域的纹理信息。<br>备注：计算 LBP 特征的图像必须是灰度图，如果是彩色图，需要先转换成灰度图。</p><p><img src="/static/IT/AI-Face/LBP-1.jpg" alt="LBP"></p><h2 id="MATLAB-源码">MATLAB 源码</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token function">OriginLBP</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>    imgSize <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token function">numel</span><span class="token punctuation">(</span>imgSize<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span>        imgG <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        imgG <span class="token operator">=</span> img<span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token punctuation">[</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>imgG<span class="token punctuation">)</span><span class="token punctuation">;</span>    rows<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>    cols<span class="token operator">=</span><span class="token function">int16</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">;</span>    imglbp <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span><span class="token function">zeros</span><span class="token punctuation">(</span>rows<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> cols<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>rows<span class="token operator">-</span><span class="token number">2</span>        <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">2</span><span class="token operator">:</span>cols<span class="token operator">-</span><span class="token number">2</span>            center <span class="token operator">=</span> <span class="token function">imgG</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            lbpCode <span class="token operator">=</span> <span class="token function">bitor</span><span class="token punctuation">(</span>lbpCode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">bitshift</span><span class="token punctuation">(</span><span class="token function">compareCenter</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">imglbp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> lbpCode<span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>     <span class="token function">imshow</span><span class="token punctuation">(</span>imglbp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token keyword">function</span> flag <span class="token operator">=</span> <span class="token function">compareCenter</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> center<span class="token punctuation">,</span> imgG<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token function">imgG</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">&gt;</span> center         flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>           flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果图">效果图</h2><p><img src="/static/IT/AI-Face/LBP-2.jpg" alt="原图"></p><p><img src="/static/IT/AI-Face/LBP-3.png" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-TCP</title>
      <link href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-tcp/"/>
      <url>/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-tcp/</url>
      
        <content type="html"><![CDATA[<h2 id="TCP-最主要的特点">TCP 最主要的特点</h2><ul><li>TCP 是面向连接的运输层协议。</li><li>每一条 TCP 连接只能有两个端点(endpoint)，每一条 TCP 连接只能是点对点的（<strong>一对一</strong>）。</li><li>TCP 提供<strong>可靠交付</strong>的服务。</li><li>TCP 提供<strong>全双工通信</strong>。</li><li><strong>面向字节流</strong>。</li></ul><p>TCP 面向流的概念 ：<br><img src="/static/IT/network/TCP-1.png" alt="TCP 面向流"></p><p>应当注意 ：</p><ul><li>TCP 连接是一条虚连接而不是一条真正的物理连接。</li><li>TCP 对应用进程一次把多长的报文发送到TCP 的缓存中是不关心的。</li><li><strong>TCP 根据对方给出的窗口值和当前网络拥塞的程度来决定一个报文段应包含多少个字节（UDP 发送的报文长度是应用进程给出的）。</strong></li><li>TCP 可把太长的数据块划分短一些再传送。</li><li>TCP 也可等待积累有足够多的字节后再构成报文段发送出去。</li></ul><p>TCP 的连接 ：</p><ul><li>TCP 把连接作为最基本的抽象。</li><li>每一条 TCP 连接有两个端点。</li><li>TCP 连接的端点不是主机，不是主机的IP 地址，不是应用进程，也不是运输层的协议端口。<strong>TCP连接的端点叫做套接字(socket)或插口。</strong></li><li><strong>端口号拼接到(contatenated with) IP 地址即构成了套接字。</strong></li></ul><p>套接字 (socket)  ：<br><strong>套接字 socket = (IP地址: 端口号)</strong><br><strong>每一条 TCP 连接唯一地被通信两端的两个端点（即两个套接字）所确定</strong>。即：<br><strong>TCP 连接 ::= {socket1, socket2} = {(IP1: port1), (IP2: port2)}</strong></p><p><em>同一个名词 socket有多种不同的意思  ：</em></p><ul><li><em>应用编程接口 API 称为 socket API, 简称为 socket。</em></li><li><em>socket API 中使用的一个函数名也叫作 socket。</em></li><li><em>调用socket函数的端点称为 socket。</em></li><li><em>调用socket函数时其返回值称为socket描述符，可简称为socket。</em></li><li><em>在操作系统内核中连网协议的 Berkeley 实现，称为socket 实现。</em></li></ul><hr><h2 id="可靠传输的工作原理">可靠传输的工作原理</h2><h3 id="停止等待协议">停止等待协议</h3><p><img src="/static/IT/network/TCP-2.png" alt="停止等待协议"></p><ul><li>在发送完一个分组后，必须暂时保留已发送的分组的副本。</li><li>分组和确认分组都必须进行编号。</li><li>超时计时器的重传时间应当比数据在分组传输的平均往返时间更长一些。</li></ul><p><strong>确认丢失和确认迟到 ：</strong><br><img src="/static/IT/network/TCP-3.png" alt="确认丢失和确认迟到"></p><p>可靠通信的实现 ：使用上述的确认和重传机制，我们就可以在不可靠的传输网络上实现可靠的通信。 这种可靠传输协议常称为自动重传请求ARQ (Automatic Repeat reQuest)。ARQ 表明重传的请求是自动进行的。接收方不需要请求发送方重传某个出错的分组 。</p><p><strong>停止等待协议的优点是简单，但缺点是信道利用率太低。</strong><br><img src="/static/IT/network/TCP-4.png" alt="信道利用率太低"></p><p>U = T<sub>D</sub> / (T<sub>D</sub> + RTT + T<sub>A</sub>)</p><h3 id="流水线传输">流水线传输</h3><p>发送方可连续发送多个分组，不必每发完一个分组就停顿下来等待对方的确认。 由于信道上一直有数据不间断地传送，这种传输方式可获得很高的信道利用率。<br><img src="/static/IT/network/TCP-5.png" alt="流水线传输"></p><p><strong>连续 ARQ 协议</strong> ：<br><img src="/static/IT/network/TCP-6.png" alt="连续 ARQ 协议"></p><p><strong>累积确认 :</strong><br>接收方一般采用累积确认的方式。即不必对收到的分组逐个发送确认，而是<strong>对按序到达的最后一个分组发送确认</strong>，这样就表示：到这个分组为止的所有分组都已正确收到了。</p><ul><li>优点是：容易实现，即使确认丢失也不必重传。</li><li>缺点是：不能向发送方反映出接收方已经正确收到的所有分组的信息。</li></ul><p>Go-back-N（<strong>回退</strong> N）:<br>如果发送方发送了前 5 个分组，而中间的第 3 个分组丢失了。这时接收方只能对前两个分组发出确认。发送方无法知道后面三个分组的下落，而只好把后面的三个分组都再重传一次。 这就叫做 Go-back-N（回退 N），<strong>表示需要再退回来重传已发送过的 N 个分组。可见当通信线路质量不好时，连续 ARQ 协议会带来负面的影响。</strong></p><p>TCP 可靠通信的具体实现 :</p><ul><li><strong>TCP 连接的每一端都必须设有两个窗口：发送窗口和接收窗口。</strong></li><li>TCP 的可靠传输机制用字节的序号进行控制。<strong>TCP 所有的确认都是基于序号而不是基于报文段。</strong></li><li><strong>TCP 两端的四个窗口经常处于动态变化之中。</strong></li><li>TCP连接的往返时间 <strong>RTT</strong> 也不是固定不变的**。需要使用特定的算法估算**较为合理的重传时间。</li></ul><hr><h2 id="TCP-报文段的首部格式">TCP 报文段的首部格式</h2><p><img src="/static/IT/network/TCP-7.png" alt="TCP 报文段的首部格式"></p><ul><li>源端口和目的端口字段——各占 2 字节。端口是运输层与应用层的服务接口。运输层的复用和分用功能都要通过端口才能实现。</li><li>序号字段——占 4 字节。TCP 连接中传送的<strong>数据流中的每一个字节都编上一个序号</strong>。序号字段的值则指的是<strong>本报文段所发送的数据的第一个字节的序号</strong>。</li><li>确认号字段——占 4 字节，是<strong>期望收到对方的下一报文段的数据的第一个字节的序号。</strong></li><li>数据偏移（即<strong>首部长度</strong>）——占 4 位，它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移”的<strong>单位是 32 位字（以 4 字节为计算单位）。</strong></li><li>保留字段——占 6 位，保留为今后使用，但<strong>目前应置为 0</strong>。</li><li><strong>6个控制位，用来说明本报文段的性质</strong>。<ul><li>紧急 URG —— 当 URG = 1 时，表明紧急指针字段有效。它告诉系统此报文段中有紧急数据，应尽快传送(相当于<strong>高优先级的数据</strong>)。</li><li>确认 ACK —— 只有<strong>当 ACK = 1 时确认号字段才有效。当 ACK = 0 时，确认号无效。</strong></li><li>推送 PSH (PuSH) —— 接收 TCP 收到 PSH = 1 的报文段，就<strong>尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付。</strong></li><li>复位 RST (ReSeT) —— 当 RST = 1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须<strong>释放连接，然后再重新建立运输连接</strong>。</li><li>同步 SYN —— 同步 SYN = 1 表示这是一个<strong>连接请求或连接接受</strong>报文。</li><li>终止 FIN (FINis) —— 用来<strong>释放一个连接</strong>。FIN = 1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接。</li></ul></li><li>窗口字段（<strong>发送方的接收窗口</strong>） —— 占 2 字节，用来<strong>让对方设置发送窗口的依据</strong>，单位为字节。</li><li>检验和 —— 占 2 字节。<strong>检验和字段检验的范围包括首部和数据这两部分</strong>。<strong>在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部。</strong></li><li>紧急指针字段 —— 占 16 位，<strong>指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面，只有URG=1时该项才有意义）。</strong></li><li>选项字段——<strong>长度可变</strong>。<ul><li>最大报文段长度MSS——TCP最初只规定了一种选项，即最大报文段长度MSS(Maximum Segment Size)，<strong>仅指TCP 报文段中的数据字段的最大长度</strong>。</li><li>窗口扩大选项 ——占 3 字节，其中有一个字节表示移位值 S。新的窗口值等于TCP 首部中的<strong>窗口位数增大到(16 + S)</strong>，相当于把窗口值向左移动 S 位后获得实际的窗口大小。</li><li>时间戳选项——占10 字节，其中最主要的字段时间戳值字段（4 字节）和时间戳回送回答字段（4 字节）。 <strong>计算RTT和防止序号绕回</strong>。</li><li>选择确认选项——在后面的<strong>选择确认 SACK</strong>介绍。</li></ul></li><li>填充字段 —— 这是<strong>为了使整个首部长度是 4 字节的整数倍</strong>。</li></ul><hr><h2 id="TCP-可靠传输的实现">TCP 可靠传输的实现</h2><p><strong>以字节为单位的滑动窗口</strong></p><p>A向B发送数据：</p><ul><li><strong>根据 B 给出的窗口值A 构造出自己的发送窗口。<em>TCP 标准强烈不赞成发送窗口前沿向后收缩</em>。</strong><br><img src="/static/IT/network/TCP-8.png" alt=""></li><li>A 发送了 11 个字节的数据<br><img src="/static/IT/network/TCP-9.png" alt=""><ul><li>P3 – P1 = A 的发送窗口（又称为通知窗口）</li><li>P2 – P1 = 已发送但尚未收到确认的字节数</li><li>P3 – P2 = 允许发送但尚未发送的字节数（又称为可用窗口）</li></ul></li><li>A 收到新的确认号，发送窗口向前滑动<br><img src="/static/IT/network/TCP-10.png" alt=""></li><li>A 的发送窗口内的序号都已用完，但还没有再收到确认，必须停止发送。<br><img src="/static/IT/network/TCP-11.png" alt=""></li></ul><p>发送缓存 ：<br><img src="/static/IT/network/TCP-12.png" alt="发送缓存"><br>接收缓存 ：<br><img src="/static/IT/network/TCP-13.png" alt="接收缓存"></p><p>发送缓存与接收缓存的作用 ：</p><ul><li>发送缓存用来暂时存放：<ul><li><strong>发送应用程序传送给发送方 TCP 准备发送的数据；</strong></li><li><strong>TCP 已发送出但尚未收到确认的数据。</strong></li></ul></li><li>接收缓存用来暂时存放：<ul><li><strong>按序到达的、但尚未被接收应用程序读取的数据；</strong></li><li><strong>不按序到达的数据。</strong></li></ul></li></ul><p>需要强调三点 ：</p><ul><li><strong>A 的发送窗口并不总是和 B 的接收窗口一样大</strong>（因为有一定的时间滞后）。</li><li><strong>TCP 标准没有规定对不按序到达的数据应如何处理。通常是先临时存放在接收窗口中，等到字节流中所缺少的字节收到后，再按序交付上层的应用进程。</strong></li><li>TCP 要求<strong>接收方必须有累积确认的功能，这样可以减小传输开销</strong>。</li></ul><hr><h2 id="超时重传时间的选择">超时重传时间的选择</h2><p>重传机制是 TCP 中最重要和最复杂的问题之一。<strong>TCP 每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的重传时间到但还没有收到确认，就要重传这一报文段。</strong></p><h3 id="加权平均往返时间">加权平均往返时间</h3><p>TCP 保留了 RTT 的一个加权平均往返时间 RTT<sub>s</sub>（这又称为平滑的往返时间）。<br><strong>第一次测量到 RTT 样本时，RTT<sub>s</sub> 值就取为所测量到的 RTT 样本值</strong>。以后每测量到一个新的 RTT 样本，就按下式重新计算一次 RTT<sub>s</sub>：<br><strong>新的 RTT<sub>s</sub> = (1 - a) * (旧的 RTT<sub>s</sub>)  + a * (新的 RTT 样本)</strong><br>式中，0 ≤ a &lt; 1。若 <strong>a 很接近于零，表示 RTT 值更新较慢。若选择 a 接近于 1，则表示 RTT 值更新较快。</strong><br>RFC 2988 推荐的 a 值为 <strong>1/8</strong>，即 0.125。</p><h3 id="超时重传时间">超时重传时间</h3><p><strong>超时重传时间 RTO (RetransmissionTime-Out)</strong>: RTO 应略大于上面得出的加权平均往返时间 RTT<sub>s</sub>。 RFC 2988 建议使用下式计算 RTO：<br><strong>RTO = RTT<sub>s</sub> + 4 * RTT<sub>D</sub></strong><br>RTT<sub>D</sub> 是 RTT 的偏差的加权平均值。<br>RFC 2988 建议这样计算 RTT<sub>D</sub>。第一次测量时，<strong>RTT<sub>D</sub> 值取为测量到的 RTT 样本值的一半</strong>。在以后的测量中，则使用下式计算加权平均的 RTT<sub>D</sub>：<br><strong>新的 RTT<sub>D</sub> = (1 - β) * (旧的RTT<sub>D</sub>)  + β * | RTT<sub>S</sub> - 新的 RTT 样本|</strong>          <br>β是个小于 1 的系数，其推荐值是 <strong>1/4</strong>，即 0.25。</p><p>往返时间的测量相当复杂 ：TCP 报文段 1 没有收到确认。重传（即报文段 2）后，收到了确认报文段 ACK。如何判定此确认报文段是对原来的报文段 1 的确认，还是对重传的报文段 2 的确认？<br><img src="/static/IT/network/TCP-14.png" alt="超时重传"></p><h3 id="Karn算法">Karn算法</h3><p>在计算平均往返时间 RTT 时，只要报文段重传了，就不采用其往返时间样本。 这样得出的加权平均往返时间 RTT<sub>S</sub> 和超时重传时间 RTO 就较准确。</p><p>报文段每重传一次，就把 RTO 增大一些：<br>**新的 RTO = γ * (旧的 RTO)       **<br><strong>系数 γ 的典型值是 2 。</strong><br>当不再发生报文段的重传时，才根据报文段的往返时延更新平均往返时延 RTT 和超时重传时间 RTO 的数值。实践证明，这种策略较为合理。</p><h3 id="选择确认">选择确认</h3><p><strong>选择确认 SACK (Selective ACK)</strong>: 接收方收到了和前面的字节流不连续的两个字节块。 如果这些字节的序号都在接收窗口之内，那么接收方就先收下这些数据，但要把这些信息准确地告诉发送方，使发送方不要再重复发送这些已收到的数据。<br>接收到的字节流序号不连续 ：<br><img src="/static/IT/network/TCP-15.png" alt="选择确认"></p><p>和前后字节不连续的每一个字节块都有两个边界： 左边界和右边界。图中用四个指针标记这些边界。<br>第一个字节块的左边界 L1 = 1501，但右边界 R1 = 3001。<br>左边界指出字节块的第一个字节的序号，但右边界减 1 才是 字节块中的最后一个序号。<br>第二个字节块的左边界 L2 = 3501，而右边界 R2 = 4501。</p><p><strong>如果要使用选择确认，那么在建立 TCP 连接时，就要在 TCP 首部的选项中加上“允许 SACK”的选项，而双方必须都事先商定好。 如果使用选择确认，那么原来首部中的“确认号字段“的用法仍然不变。只是以后在 TCP 报文段的首部中都增加了 SACK 选项，以便报告收到的不连续的字节块的边界。 由于首部选项的长度最多只有 40 字节，而指明一个边界就要用掉 4 字节，因此<em>在选项中最多只能指明 4 个字节块的边界信息。</em></strong></p><hr><h2 id="TCP-的流量控制">TCP 的流量控制</h2><p><strong>利用滑动窗口实现流量控制 ：</strong><br>一般说来，我们总是希望数据传输得更快一些。但如果发送方把数据发送得过快，接收方就可能来不及接收，这就会造成数据的丢失。流量控制(flow control)就是<strong>让发送方的发送速率不要太快，既要让接收方来得及接收，也不要使网络发生拥塞</strong>。利用滑动窗口机制可以很方便地在 TCP 连接上实现流量控制。</p><h3 id="流量控制">流量控制</h3><p>流量控制举例: A 向 B 发送数据。在连接建立时， B 告诉 A：“我的接收窗口 rwnd = 400（字节）”<br><img src="/static/IT/network/TCP-16.png" alt="流量控制"><br>B发送零窗口后，若其接收缓存又有空间了，则会？ 比如：B会向A发送一个rwnd=400的报文，重新请求A向自己发送报文。<br><strong>若rwnd=400的报文丢失会出现什么问题？</strong> 使用持续计时器机制。<br><strong>持续计时器 (persistence timer) ：</strong></p><ul><li><strong>TCP 为每一个连接设有一个持续计时器</strong>。</li><li><strong>只要 TCP 连接的一方收到对方的零窗口通知，就启动持续计时器。</strong></li><li><strong>若持续计时器设置的时间到期，就发送一个零窗口探测报文段（仅携带 1 字节的数据），而对方就在确认这个探测报文段时给出了现在的窗口值。</strong></li><li><strong>若窗口仍然是零，则收到这个报文段的一方就重新设置持续计时器。若窗口不是零，则死锁的僵局就可以打破了。</strong></li></ul><h3 id="传输效率">传输效率</h3><p>可以用不同的机制来控制 TCP 报文段的发送时机:</p><ul><li><strong>第一种机制是 TCP 维持一个变量，它等于最大报文段长度 MSS。只要缓存中存放的数据达到 MSS 字节时，就组装成一个 TCP报文段发送出去。</strong></li><li><strong>第二种机制是由发送方的应用进程指明要求发送报文段，即 TCP 支持的推送(push)操作。</strong></li><li><strong>第三种机制是发送方的一个计时器期限到了，这时就把当前已有的缓存数据装入报文段（但长度不能超过 MSS）发送出去。</strong></li><li>Nagle算法（发送方何时发送数据好）<ul><li>当发送应用进程把要发送的数据逐个字节的送到TCP发送缓存时，发送方就把第一个字节发出，把后面到达的数据缓存起来。<strong>直到发送方收到对第一个字节的确认后，再把缓存中的所有数据组成一个报文发送出去。</strong></li><li><strong>适合数据到达快，而网络速率慢的情况，可明显减少网络带宽的使用。</strong></li><li><strong>当到达的数据已达到发送窗口一半或最大报文长度时，就立即发送一个报文段。</strong></li></ul></li><li>糊涂窗口综合症（接收方何时发回确认更好）<ul><li><strong>在接收方缓存已满的情况下，接收方应用进程每次只从接收缓存中取走一个字节。此时若马上发出确认，会使网络效率很低。</strong></li><li><strong>可让接收方等待一段时间，使得接收缓存已有足够空间容纳一个最长报文段或者等到接收缓存已有一半空闲空间时再发出确认。</strong></li></ul></li><li><strong>使得发送方不发送很小报文，接收方也不要在缓存刚刚有了一点小的空间时就急着把这个很小的窗口信息发给发送方。</strong></li></ul><hr><h2 id="TCP的拥塞控制">TCP的拥塞控制</h2><p>拥塞：在某段时间，若对网络中某资源的需求超过了该资源所能提供的可用部分，网络的性能就要变坏——产生拥塞(congestion)。<br>出现资源拥塞的条件： <strong>对资源需求的总和 &gt; 可用资源</strong><br>若网络中有许多资源同时产生拥塞，网络的性能就要明显变坏，整个网络的吞吐量将随输入负荷的增大而下降。</p><p>拥塞控制与流量控制的关系：拥塞控制所要做的都有一个前提，就是网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及到所有的主机、所有的路由器，以及与降低网络传输性能有关的所有因素。 流量控制往往指在给定的发送端和接收端之间的点对点通信量的控制。 <strong>流量控制所要做的就是抑制发送端发送数据的速率，以便使接收端来得及接收。</strong></p><p>拥塞控制所起的作用 ：<br><img src="/static/IT/network/TCP-17.png" alt="拥塞控制"></p><p>拥塞控制的一般原理：拥塞控制是很难设计的，因为它是一个动态的（而不是静态的）问题。 当前网络正朝着高速化的方向发展，这很容易出现缓存不够大而造成分组的丢失。<strong>但分组的丢失是网络发生拥塞的征兆而不是原因</strong>。 在许多情况下，<strong>甚至正是拥塞控制本身成为引起网络性能恶化甚至发生死锁的原因</strong>。这点应特别引起重视。</p><p>开环控制和闭环控制 :</p><ul><li>开环控制方法就是<strong>在设计网络时事先将有关发生拥塞的因素考虑周到，力求网络在工作时不产生拥塞。</strong></li><li>闭环控制是基于<strong>反馈环路</strong>的概念。属于闭环控制的有以下几种措施：<ul><li>监测网络系统以便检测到拥塞在何时、何处发生。</li><li>将拥塞发生的信息传送到可采取行动的地方。</li><li>调整网络系统的运行以解决出现的问题。</li></ul></li></ul><h3 id="慢开始和拥塞避免">慢开始和拥塞避免</h3><p><strong>发送方维持一个叫做拥塞窗口cwnd (congestion window)的状态变量。拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化</strong>。发送方让自己的发送窗口等于拥塞窗口。如再考虑到接收方的接收能力，则<strong>发送窗口还可能小于拥塞窗口</strong>。 发送方控制拥塞窗口的原则是：<strong>只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去。但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。</strong></p><h4 id="慢开始算法">慢开始算法</h4><p>在主机刚刚开始发送报文段时可先设置拥塞窗口 cwnd = 1，即设置为一个最大报文段 MSS 的数值。在<strong>每收到一个对新的报文段的确认后，将拥塞窗口加 1</strong>，即增加一个 MSS 的数值。 用这样的方法逐步增大发送端的拥塞窗口 cwnd，可以使分组注入到网络的速率更加合理。<br>发送方每收到一个对新报文段的确认 （重传的不算在内）就使 cwnd 加 1 倍。<br><img src="/static/IT/network/TCP-18.png" alt="慢开始算法"></p><p><strong>传输轮次</strong> (transmission round) :<br><strong>使用慢开始算法后，<em>每经过一个传输轮次，拥塞窗口 cwnd 就加倍</em>。</strong><br><strong>一个传输轮次所经历的时间其实就是往返时间 RTT</strong>。 <strong>“传输轮次”更加强调：把拥塞窗口 cwnd 所允许发送的报文段都连续发送出去，并收到了对已发送的最后一个字节的确认。</strong><br><strong>例如，拥塞窗口 cwnd = 4，这时的往返时间 RTT 就是发送方连续发送 4 个报文段，并收到这 4 个报文段的确认，总共经历的时间。</strong></p><h4 id="拥塞避免算法">拥塞避免算法</h4><p>**拥塞避免算法的思路是让拥塞窗口 cwnd 缓慢地增大，即每经过一个往返时间 RTT 就把发送方的拥塞窗口 cwnd 加 1，而不是加倍，**使拥塞窗口 cwnd 按线性规律缓慢增长。</p><p>设置<strong>慢开始门限状态变量ssthresh</strong> :</p><h4 id="慢开始门限">慢开始门限</h4><p>慢开始门限 ssthresh 的用法如下</p><ul><li>当 cwnd &lt; ssthresh 时，使用慢开始算法。</li><li>当 cwnd &gt; ssthresh 时，停止使用慢开始算法而改用拥塞避免算法。</li><li>当 cwnd = ssthresh 时，既可使用慢开始算法，也可使用拥塞避免算法。</li></ul><p>当网络出现拥塞时 ：<br>无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断<strong>网络出现拥塞（其根据就是没有按时收到确认</strong>），就要把慢开始门限 <strong>ssthresh 设置为出现拥塞时的发送方窗口值的一半（但不能小于2）。然后把拥塞窗口 cwnd 重新设置为1，执行慢开始算法</strong>。<br>这样做的目的就是要迅速减少主机发送到网络中的分组数，使得发生拥塞的路由器有足够时间把队列中积压的分组处理完毕。</p><h4 id="算法">算法</h4><p>慢开始和拥塞避免算法的实现举例 ：<br><img src="/static/IT/network/TCP-19.png" alt="慢开始和拥塞避免算法"></p><ul><li>当 TCP 连接进行初始化时，将拥塞窗口置为 1。图中的<strong>窗口单位不使用字节而使用报文段</strong>。 慢开始门限的初始值设置为 16 个报文段，即ssthresh = 16。</li><li><strong>发送端的发送窗口不能超过拥塞窗口 cwnd 和接收端窗口 rwnd 中的最小值</strong>。我们假定接收端窗口足够大，因此现在发送窗口的数值等于拥塞窗口的数值。</li><li>在执行慢开始算法时，拥塞窗口 cwnd 的初始值为 1，发送第一个报文段 M0。</li><li>发送端每收到一个确认 ，就把 cwnd 加 1。于是发送端可以接着发送 M1 和 M2 两个报文段。</li><li><strong>接收端共发回两个确认</strong>。<strong>发送端每收到一个对新报文段的确认，就把发送端的 cwnd 加 1</strong>。现在 cwnd 从 2 增大到 4，并可接着发送后面的 4 个报文段。</li><li>发送端每收到一个对新报文段的确认，就把发送端的拥塞窗口加 1，因此<strong>拥塞窗口 cwnd 随着传输轮次按指数规律增长</strong>。</li><li><strong>当拥塞窗口 cwnd 增长到慢开始门限值 ssthresh 时</strong>（即当 cwnd = 16 时），<strong>就改为执行拥塞避免算法，拥塞窗口按线性规律增长</strong>。</li><li>假定拥塞窗口的数值增长到 24 时，网络出现超时，表明<strong>网络拥塞</strong>了。</li><li>更新后的 <strong>ssthresh 值变为 12（即发送窗口数值 24 的一半），拥塞窗口再重新设置为 1，并执行慢开始算法</strong>。</li><li>当 cwnd = 12 时改为执行拥塞避免算法，拥塞窗口按线性规律增长，每经过一个往返时延就增加一个 MSS 的大小。</li></ul><h4 id="原理">原理</h4><ul><li><strong>乘法减小 (multiplicative decrease) ：</strong><ul><li>”乘法减小“是指不论在慢开始阶段还是拥塞避免阶段，<strong>只要出现一次超时（即出现一次网络拥塞），就把慢开始门限值 ssthresh设置为当前的拥塞窗口值乘以0.5</strong>。</li><li>当网络频繁出现拥塞时，ssthresh 值就下降得很快，以大大减少注入到网络中的分组数。</li></ul></li><li><strong>加法增大 (additive increase) ：</strong><ul><li>“加法增大”是指执行拥塞避免算法后，<strong>在收到对所有报文段的确认后（即经过一个往返时间），就把拥塞窗口cwnd增加一个MSS大小</strong>。</li><li>使拥塞窗口缓慢增大，以防止网络过早出现拥塞。</li></ul></li></ul><p><strong>“拥塞避免”并非指完全能够避免了拥塞。利用以上的措施要完全避免网络拥塞还是不可能的</strong>。“拥塞避免”是说在拥塞避免阶段把拥塞窗口控制为按线性规律增长，使网络比较不容易出现拥塞。</p><h3 id="快重传和快恢复">快重传和快恢复</h3><h4 id="快重传">快重传</h4><ul><li><strong>快重传算法首先要求接收方每收到一个失序的报文段后就立即发出重复确认</strong>。这样做可以让发送方及早知道有报文段没有到达接收方。 <strong>发送方只要一连收到三个重复确认就应当立即重传对方尚未收到的报文段</strong>。</li><li>不难看出，**快重传并非取消重传计时器，而是在某些情况下可更早地重传丢失的报文段。**快重传可以避免发送方误认为出现了网络拥塞。可将整个网络的吞吐量提高约20%。</li></ul><p><img src="/static/IT/network/TCP-20.png" alt="快重传"></p><h4 id="快恢复算法">快恢复算法</h4><ul><li><strong>当发送端收到连续三个重复的确认时，就执行“乘法减小”算法，把慢开始门限 ssthresh 减半。但接下去不执行慢开始算法</strong>。</li><li>由于<strong>发送方现在认为网络很可能没有发生拥塞，因此现在不执行慢开始算法，即拥塞窗口 cwnd 现在不设置为 1，而是设置为慢开始门限 ssthresh 减半后的数值，然后开始执行拥塞避免算法（“加法增大”）</strong>，使拥塞窗口缓慢地线性增大。</li></ul><p>从连续收到三个重复的确认转入拥塞避免  ：<br><img src="/static/IT/network/TCP-21.png" alt="快恢复"></p><h3 id="发送窗口的上限值">发送窗口的上限值</h3><p>发送方的发送窗口的上限值应当取为接收方窗口 rwnd 和拥塞窗口 cwnd 这两个变量中较小的一个，<br>即应按以下公式确定：<br><strong>发送窗口的上限值 = Min [rwnd, cwnd]</strong></p><ul><li>当 rwnd &lt; cwnd 时，是接收方的接收能力限制发送窗口的最大值。</li><li>当 cwnd &lt; rwnd 时，则是网络的拥塞限制发送窗口的最大值。</li></ul><h3 id="随机早期检测">随机早期检测</h3><p>随机早期检测 RED (Random Early Detection)<br>TCP拥塞控制和网络层采取的策略有密切联系。<br>路由器缓存队列采用的尾部丢弃策略，可能导致“全局同步”现象。</p><ul><li>使路由器的队列维持两个参数，即队列长度<strong>最小门限 THmin 和最大门限 THmax</strong>。</li><li>RED <strong>对每一个到达的数据报都先计算平均队列长度 LAV</strong>。<ul><li>若平均队列长度小于最小门限THmin，则<strong>将新到达的数据报放入队列进行排队</strong>。</li><li>若平均队列长度超过最大门限THmax，则<strong>将新到达的数据报丢弃</strong>。</li><li>若平均队列长度在最小门限THmin 和最大门限THmax之间，则<strong>按照某一概率 p 将新到达的数据报丢弃</strong>。</li></ul></li></ul><p><strong>RED 将路由器的到达队列划分成为三个区域 ：</strong><br><img src="/static/IT/network/TCP-22.png" alt="到达队列"></p><p>丢弃概率 p 与 THmin 和 Thmax 的关系 ：</p><ul><li>当 LAV &lt; Thmin 时，丢弃概率 p = 0。</li><li>当 LAV &gt; Thmax 时，丢弃概率 p = 1。</li><li>当 THmin &lt; LAV &lt; THmax时， 0 &lt; p &lt; 1 。</li></ul><p>例如，按线性规律变化，从 0 变到 pmax。<br><img src="/static/IT/network/TCP-23.png" alt=""></p><p>瞬时队列长度和平均队列长度的区别  :<br><img src="/static/IT/network/TCP-24.png" alt=""></p><hr><h2 id="TCP-的运输连接管理">TCP 的运输连接管理</h2><p>运输连接就有三个阶段，即：<strong>连接建立、数据传送和连接释放</strong>。运输连接的管理就是使运输连接的建立和释放都能正常地进行。 连接建立过程中要解决以下三个问题：</p><ul><li>要使每一方能够确知对方的存在。</li><li>要允许双方协商一些参数（如最大报文段长度，最大窗口大小，服务质量等）。</li><li>能够对运输实体资源（如缓存大小，连接表中的项目等）进行分配。</li></ul><p>TCP 连接的建立都是采用客户服务器方式。 主动发起连接建立的应用进程叫做客户(client)。    被动等待连接建立的应用进程叫做服务器(server)。</p><h3 id="TCP-的连接">TCP 的连接</h3><p><strong>用三次握手建立 TCP 连接 :</strong><br><img src="/static/IT/network/TCP-28.png" alt="用三次握手建立 TCP 连接"></p><ol><li>A 的 TCP 向 B 发出<strong>连接请求报文段</strong>，其首部中的同步位 <strong>SYN = 1</strong>，并选择序号 <strong>seq =   x</strong>，表明传送数据时的第一个数据字节的序号是 x。</li><li><strong>B</strong> 的 TCP 收到连接请求报文段后，如<strong>同意，则发回确认</strong>。<br>B 在<strong>确认报文段中</strong>应使 <strong>SYN = 1</strong>，使 <strong>ACK = 1</strong>， 其确认号<strong>ack = x + 1</strong>，<strong>自己选择的序号 seq = y</strong>。</li><li><strong>A 收到此报文段后向 B 给出确认</strong>，其 <strong>ACK = 1</strong>，确认号 <strong>ack = y + 1</strong>。 <strong>A 的 TCP 通知上层应用进程，连接已经建立</strong>。</li><li><strong>B 的 TCP 收到主机 A 的确认后，也通知其上层应用进程：TCP 连接已经建立</strong>。</li></ol><p><strong>用四次握手释放 TCP 连接 :</strong><br><img src="/static/IT/network/TCP-26.png" alt="用四次握手释放 TCP 连接"></p><ol><li><strong>数据传输结束后，通信的双方都可释放连接</strong>。  现在 <strong>A 的应用进程先向其 TCP 发出连接释放报文段，并停止再发送数据，主动关闭 TCP连接。</strong><br><strong>A 把连接释放报文段首部的 FIN = 1，其序号 seq = u，等待 B 的确认。</strong></li><li><strong>B 发出确认，确认号 ack = u + 1</strong>，而这个报文段自己的序号 <strong>seq = v</strong>。<br><strong>TCP服务器进程通知高层应用进程</strong>。<strong>从 A 到 B 这个方向的连接就释放了，TCP 连接处于半关闭状态。B 若发送数据，A仍要接收。</strong></li><li><strong>若 B 已经没有要向 A 发送的数据，其应用进程就通知 TCP 释放连接。</strong></li><li>**A 收到连接释放报文段后，必须发出确认。**在确认报文段中 <strong>ACK = 1</strong>，确认号 <strong>ack = w + 1</strong>， 自己的序号 <strong>seq = u + 1</strong>。</li><li><strong>TCP 的连接释放连接必须经过时间 2MSL 后才真正释放掉。</strong><ul><li>第一，<strong>为了保证 A 发送的最后一个 ACK 报文段能够到达 B。</strong></li><li>第二，<strong>防止“已失效的连接请求报文段”出现在本连接中</strong>。A 在发送完最后一个 ACK 报文段后，再<strong>经过时间 2MSL，就可以使本连接持续的时间内所产生的所有报文段，都从网络中消失</strong>。这样就可以使<strong>下一个新的连接中不会出现这种旧的连接请求报文段</strong>。</li><li><strong>MSL ： 最长报文段寿命，RFC793建议设置为2分钟</strong>。TCP允许不同的实现根据具体情况使用更小的MSL值。本例中要经过4分钟才能进入CLOSED状态。</li></ul></li></ol><h3 id="保活计时器（keepalive-timer">保活计时器（keepalive timer)</h3><p>除了等待计时器外，TCP连接中还有保活计时器来应对客户端突然出现故障的情况。通常设为两小时，之后每隔75分钟发送一次，连续发10个探测报文后，若客户端仍无响应，则服务器关闭此连接。</p><p>可根据服务器的这一特点进行洪泛法攻击，用多台服务器通时对一台服务器全功率的不间断的发起不同的TCP链接，因为目标服务器对每个TCP链接都建立一个保活计时器，所以目标服务器不能及时释放这些无用的链接，这些无用的链接会占满目标服务器的资源，严重影响目标服务器的性能，甚至导致崩溃。目前还没有方法能够完美的防御这种攻击。</p><h3 id="TCP-的有限状态机">TCP 的有限状态机</h3><ul><li>TCP 有限状态机的图中每一个方框都是 TCP 可能具有的状态。</li><li>每个方框中的大写英文字符串是 TCP 标准所使用的 TCP 连接状态名。状态之间的箭头表示可能发生的状态变迁。</li><li>箭头旁边的字，表明引起这种变迁的原因，或表明发生状态变迁后又出现什么动作。</li><li>图中有三种不同的箭头。<ul><li>粗实线箭头表示对客户进程的正常变迁。 </li><li>粗虚线箭头表示对服务器进程的正常变迁。</li><li>另一种细线箭头表示异常变迁。</li></ul></li></ul><p><img src="/static/IT/network/TCP-27.png" alt="TCP 的有限状态机"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-信道复用技术</title>
      <link href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xin-dao-fu-yong-ji-zhu/"/>
      <url>/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xin-dao-fu-yong-ji-zhu/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/IT/network/xindaofuyong-1.png" alt="对比"></p><p>复用的类型：</p><ol><li>频分复用、时分复用和统计时分复用</li><li>波分复用 WDM</li><li>码分复用 CDM</li></ol><hr><h2 id="频分复用">频分复用</h2><p><strong>频分复用</strong> FDM (Frequency Division Multiplexing)<br>用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。<strong>频分复用的所有用户在同样的时间占用不同的带宽资源</strong>（请注意，<em>这里的“带宽”是频率带宽而不是数据的发送速率</em>）。</p><h2 id="时分复用">时分复用</h2><p><strong>时分复用</strong> TDM (Time Division Multiplexing)<br>时分复用则是将时间划分为一段段等长的时分复用帧（TDM帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙。 每一个用户所占用的时隙是周期性地出现（<em>其周期就是 TDM  帧的长度</em>）。 TDM 信号也称为<em>等时</em>(isochronous)信号。 <strong>时分复用的所有用户是在不同的时间占用同样的频带宽度</strong>。<br><strong>时分复用可能会造成线路资源的浪费</strong> ：使用时分复用系统传送计算机数据时，由于计算机数据的突发性质，用户对分配到的子信道的利用率一般是不高的。<br><img src="/static/IT/network/xindaofuyong-2.png" alt="时分复用"></p><h2 id="统计时分复用">统计时分复用</h2><p><strong>统计时分复用</strong> STDM (Statistic TDM)<br>统计时分复用是一种改进的时分复用。<br><img src="/static/IT/network/xindaofuyong-3.png" alt="统计时分复用"></p><hr><h2 id="波分复用">波分复用</h2><p><strong>波分复用</strong> WDM (Wavelength Division Multiplexing)<br>波分复用就是<em>光的频分复用</em>。<br><img src="/static/IT/network/xindaofuyong-4.png" alt="波分复用"></p><hr><h2 id="码分复用">码分复用</h2><p><strong>码分复用</strong> CDM (Code Division Multiplexing)<br>常用的名词是<strong>码分多址</strong> CDMA (Code Division Multiple Access)。 <em>各用户使用经过特殊挑选的不同码型</em>，因此彼此不会造成干扰。 这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。  每一个比特时间划分为m个短的间隔，称为<strong>码片</strong>(chip)。</p><p><strong>每个站被指派一个唯一的 m bit 码片序列。</strong></p><ul><li>如发送比特 1，则发送自己的 m bit 码片序列。</li><li>如发送比特 0，则发送该码片序列的二进制反码。</li></ul><p>例如，S 站的 8 bit 码片序列是 00011011。</p><ul><li>发送比特 1 时，就发送序列 00011011，</li><li>发送比特 0 时，就发送序列 11100100。</li></ul><p><em>S 站的码片序列：(–1 –1 –1 +1 +1 –1 +1 +1)</em></p><p>每个站分配的码片序列不仅必须<strong>各不相同</strong>，并且还必须<strong>互相正交</strong>(orthogonal)。在实用的系统中是使用<strong>伪随机码序列</strong>。</p><p><strong>码片序列的正交关系</strong> ：<br>令向量 S 表示站 S 的码片向量，令 T 表示其他任何站的码片向量。两个不同站的码片序列<strong>正交</strong>，就是向量 S 和 T 的<strong>规格化内积</strong>(inner product)都是 0：<br><img src="/static/IT/network/xindaofuyong-5.png" alt=""></p><p>例如：令向量 S 为(–1 –1 –1 +1 +1 –1 +1 +1)，向量 T 为(–1 –1 +1 –1 +1 +1 +1 –1)。  把向量 S 和 T 的各分量值代入上式就可看出这两个码片序列是正交的。</p><p><em>任何一个码片向量和该码片向量自己的规格化内积都是1 。 一个码片向量和该码片反码的向量的规格化内积值是 –1。</em><br><img src="/static/IT/network/xindaofuyong-6.png" alt=""></p><p><strong>CDMA 的工作原理</strong>：<br><img src="/static/IT/network/xindaofuyong-7.png" alt="CDMA"></p><hr><h2 id="例题">例题</h2><p>共有四个站进行码分多址CDMA通信，四个站的码片序列为：<br>A:(-1-1-1+1+1-1+1+1)<br>B:(-1-1+1-1+1+1+1-1)<br>C:(-1+1-1+1+1+1-1-1)<br>D:(-1+1-1- 1- 1-1+1-1)<br>现收到这样的码片序列S：(-1+1-3+1-1-3+1+1)。问哪个站发送数据了？发送数据的站发送的是1还是0？</p><p><strong>S·A</strong> = (+1-1+3+1-1+3+1+1) / 8 = 1 。A发送的是1。<br><strong>S·B</strong> = (+1-1- 3- 1- 1-3+1-1)  / 8 = -1 。B发送的是0。<br><strong>S·C</strong> = (+1+1+3+1- 1-3- 1-1) / 8 = 0 。C无发送。<br><strong>S·D</strong> = (+1+1+3-1+1+3+1-1) / 8 = 1 。D发送的是1。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-信道的编码与调制</title>
      <link href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xin-dao-de-bian-ma-yu-diao-zhi/"/>
      <url>/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xin-dao-de-bian-ma-yu-diao-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="通信">通信</h2><ul><li><strong>单向通信</strong>（单工通信）：只能有一个方向的通信而没有反方向的交互。</li><li><strong>双向交替通信</strong>（半双工通信）：通信的双方都可以发送信息，但不能双方同时发送(当然也就不能同时接收)。</li><li><strong>双向同时通信</strong>（全双工通信）：通信的双方可以同时发送和接收信息。</li></ul><hr><h2 id="信号">信号</h2><p><strong>基带</strong>(baseband)信号和<strong>带通</strong>(band pass)信号：</p><ul><li>基带信号（即基本频带信号）：来自信源的信号。像计算机输出的代表各种文字或图像文件的数据信号都属于基带信号。 基带信号往往包含有较多的低频成分，甚至有直流成分，而许多信道并不能传输这种低频分量或直流分量。<strong>因此必须对基带信号进行调制</strong>(modulation)。这个调制称为基带调制，这种调制是<strong>把数字信号转换为另一种形式的数字信号</strong>，因此这个过程也叫做<strong>编码</strong>。</li><li>带通信号：把基带信号经过<strong>载波调制</strong>后，把信号的频率范围搬移到较高的频段以便在信道中传输 <em>（即仅在一段频率范围内能够通过信道）</em>。这个调制称为带通调制。</li></ul><h2 id="编码">编码</h2><p><strong>几种常用编码方式</strong>（数字信号）：</p><ul><li><strong>不归零制</strong> ：正电平代表1，负电平代表0。</li><li><strong>归零制</strong> ：正脉冲代表1，负脉冲代表0。</li><li><strong>曼彻斯特编码</strong> ：位周期中心的向上跳变代表0，位周期中心的向下跳变代表1。但也可反过来定义。</li><li><strong>差分曼彻斯特编码</strong> ：在每一位的中心处始终都有跳变。位开始边界有跳变代表0，而位开始边界有没有跳变代表1。</li></ul><p><em>曼彻斯特编码有自同步能力，可有从信号波形本身提取信号时钟频率。</em><br><img src="/static/IT/network/xindao-1.png" alt="几种常用编码方式"></p><hr><h2 id="调制">调制</h2><p><strong>几种最基本的调制方法</strong>：</p><ul><li>调幅(AM)：载波的振幅随基带数字信号而变化。</li><li>调频(FM)：载波的频率随基带数字信号而变化。</li><li>调相(PM) ：载波的初始相位随基带数字信号而变化。</li><li>正交振幅调制 QAM (Quadrature Amplitude Modulation)</li></ul><p><img src="/static/IT/network/xindao-2.png" alt="几种最基本的调制方法"></p><p>正交振幅调制（举例）:</p><ul><li>可供选择的相位有 12 种，而对于每一种相位有 1 或 2 种振幅可供选择。</li><li>由于4 bit 编码共有16 种不同的组合，因此这 16 个点中的每个点可对应于一种 4 bit 的编码。</li><li>若每一个码元可表示的比特数越多，则在接收端进行解调时要正确识别每一种状态就越困难。</li></ul><p><img src="/static/IT/network/xindao-3.png" alt="正交振幅调制"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-信噪比/香农公式</title>
      <link href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xin-zao-bi-xiang-nong-gong-shi/"/>
      <url>/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xin-zao-bi-xiang-nong-gong-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="信噪比">信噪比</h2><p><strong>信噪比</strong>就是<strong>信号的平均功率和噪声的平均功率之比</strong>，即：<strong><code>S/N</code></strong>。<br>用分贝<code>(dB)</code>作为度量单位，即：信噪比 (dB)= 10 * log<sub>10</sub>(S/N) (dB)`<br>例如：当S/N=10时，信噪比为10dB；当S/N=1000时，信噪比为30dB。</p><hr><h2 id="香农公式">香农公式</h2><p>香农(Shannon)用信息论的理论推导出了带宽受限且有高斯白噪声干扰的信道的极限、无差错的信息传输速率。<br>信道的<strong>极限信息传输速率 C</strong> 可表达为<br><strong>C = W log<sub>2</sub>(1+S/N) b/s</strong></p><ul><li>W 为信道的带宽（以 Hz 为单位）</li><li>S 为信道内所传信号的平均功率</li><li>N 为信道内部的高斯噪声功率</li></ul><p>信道的带宽或信道中的信噪比越大，则信息的极限传输速率就越高。  只要信息传输速率低于信道的极限信息传输速率，就一定可以找到某种办法来实现无差错的传输。  <em>实际信道上能够达到的信息传输速率要比香农的极限传输速率低不少。</em></p><hr><p>对于频带宽度已确定的信道，如果信噪比不能再提高了，并且码元传输速率也达到了上限值，那么还有办法提高信息的传输速率吗？<br><strong>可用编码的方法，让每一个码元携带更多比特的信息量。</strong></p><hr><h2 id="例题">例题</h2><p>用香农公式计算一下，假定信道带宽为3100Hz，最大信息传输速率为35Kbit/s，那么若想使最大信息传输速率增加60%。问信噪比S/N应增大到多少倍，如果在刚才计算出的基础上将信噪比再增大到10倍，问最大信息速率能否再增加20%？</p><p><strong>C = W log<sub>2</sub>(1+S/N) b/s</strong><br><strong>S/N = 2 <sup>C/W</sup> -  1</strong><br>(S/N)<sub>1</sub> = 2<sup>35000/3100</sup> - 1 = 2504<br>(S/N)<sub>2</sub> = 2<sup>1.6 * 35000/3100</sup> - 1 = 274132<br>(S/N)<sub>2</sub> <strong>/</strong> (S/N)<sub>1</sub> 约等于 100。信噪比要增大到约100倍。<br>C<sub>2</sub>  = W log<sub>2</sub>(1+ (S/N)<sub>2</sub>)<br>C<sub>3</sub> = W log<sub>2</sub>(1 + (S/N)<sub>3</sub>) = W log<sub>2</sub>(1+10 * (S/N)<sub>2</sub>)<br>(C<sub>3</sub> - C<sub>2</sub>) <strong>/</strong> C<sub>2</sub> = 18.5%<br>最大信息速率只能增加18.5%。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-数据链路层帧传输的三个基本问题</title>
      <link href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-shu-ju-lian-lu-ceng-zheng-chuan-shu-de-san-ge-ji-ben-wen-ti/"/>
      <url>/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-shu-ju-lian-lu-ceng-zheng-chuan-shu-de-san-ge-ji-ben-wen-ti/</url>
      
        <content type="html"><![CDATA[<ol><li>封装成帧</li><li>透明传输</li><li>差错控制</li></ol><hr><h2 id="封装成帧">封装成帧</h2><p>封装成帧(framing)就是在一段数据的前后分别添加首部和尾部，然后就构成了一个帧。确定帧的界限。<br><em>用控制字符进行帧定界的方法举例 ：</em><br><img src="/static/IT/network/shujulianluchuanshu-1.png" alt="封装成帧"></p><ul><li>SOH(Start Of Head):0x01</li><li>EOT(End Of Transmission):0x04</li></ul><hr><h2 id="透明传输">透明传输</h2><p><img src="/static/IT/network/shujulianluchuanshu-2.png" alt="透明传输"></p><p>解决透明传输问题：<strong>字节填充</strong>(byte stuffing)或字符填充(character stuffing)<br>发送端的数据链路层在数据中出现的控制字符“SOH”或“EOT”前插入一转义字符“<strong>ESC</strong>”。接收端的数据链路层在将数据送往网络层之前删除插入的转义字符。 <em><strong>ESC:0x1B</strong></em></p><p>如果转义字符也出现数据当中，怎么办？<br><em>在转义字符前面再插入一个转义字符。</em></p><p><img src="/static/IT/network/shujulianluchuanshu-3.png" alt="ESC 转义"></p><hr><h2 id="差错控制">差错控制</h2><p>在传输过程中可能会产生比特差错：1 可能会变成 0 而 0 也可能变成 1。 在一段时间内，传输错误的比特占所传输比特总数的比率称为误码率 BER (Bit Error Rate)。 <em>误码率与 <a href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xin-zao-bi-xiang-nong-gong-shi/" title="计算机网络-信噪比/香农公式">信噪比</a> 有很大的关系</em>。为了保证数据传输的可靠性，在计算机网络传输数据时，必须采用各种差错检测措施。 在数据链路层传送的帧中，广泛使用<strong>循环冗余检验 CRC</strong> 检错技术。</p><p>循环冗余检验的原理：<br>在发送端，先把数据 M 划分为组。假定每组 k 个比特，则需在 M 后面再添加供差错检测用的<strong>n 位冗余码</strong>一起发送。</p><p><strong>n 位冗余码的计算方法</strong>：<br>假设 M 分为一组，即 k = length(M) .</p><ol><li>选定长度为 (n + 1) 位的除数P</li><li>用二进制模 2 运算进行 2n 乘M 的运算，并以此结果为被除数。</li><li>将得到的 (k + n) 位被除数除以除数P，得出商Q ，余数R，余数R即为所求n位冗余码。</li></ol><p><strong>接收端对收到的每一帧进行 CRC 检验</strong></p><ul><li>若得出的余数 R = 0，则判定这个帧没有差错，就接受(accept)。</li><li>若余数 R = 0，则判定这个帧有差错，就丢弃。</li></ul><p><em>但这种检测方法并不能确定究竟是哪一个或哪几个比特出现了差错</em>。 只要经过严格的挑选，并使用位数足够多的除数 P，那么出现检测不到的差错的概率就很小很小。<br><em>仅用循环冗余检验CRC差错检测技术只能做到无差错接受</em>(accept)。“无差错接受”指：“凡是接受的帧（即不包括丢弃的帧），我们都能以非常接近于1的概率认为这些帧在传输过程中没有产生差错”。要做到“可靠传输”（即发送什么就收到什么）就必须再加上<em>确认和重传机制</em>。</p><p><strong>帧检验序列 FCS</strong><br>在数据后面添加上的冗余码称为帧检验序列 FCS (Frame Check Sequence)。<br>CRC、FCS区别 ：</p><ul><li>CRC 是一种常用的检错方法，而 FCS 是添加在数据后面的冗余码。</li><li>FCS 可以用 CRC 这种方法得出，但 CRC 并非用来获得 FCS 的唯一方法。</li></ul><hr><h2 id="例题">例题</h2><p>例1：<br>M = 101001（k = 6） ，设 n = 3, 除数 P = 1101， 被除数是 2nM = 101001000。  模 2 运算的结果是：商 Q = 110101， 余数 R = 001。 把余数 R 作为冗余码添加在数据 M 的后面发送出去。发送的数据是：2nM + R  即：101001001，共 (k + n) 位。<br><img src="/static/IT/network/shujulianluchuanshu-4.png" alt="FCS"></p><p>例2：<br>要发送的数据为1101011011 。采用CRC的生成多项式是P(X) = X<sup>4</sup> + X + 1 。</p><ol><li>试求应添加在数据后面的余数。</li><li>数据在传输过程中最后一个1变成了0，问接收端能否发现？</li><li>数据在传输过程中最后两个1变成了0，问接收端能否发现？</li><li>采用CRC检验后，数据链路层的传输是否就变成了可靠的传输？</li></ol><p>P(X) = X<sup>4</sup> + X + 1 。// 第0、1、4位为1，其余位为0 。<br>P = 10011， n = 4 。// p有5位，所以n = 5 - 1 = 4 。<br>2<sup>4</sup> * 1101011011 = 11010110110000  。<br>11010110110000 / 10011 余数为 1110 。<br>添加的检验序列是1110；2、3均可发现。<br>缺乏重传机制，数据链路层的传输是不可靠的传输。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-PPP</title>
      <link href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ppp/"/>
      <url>/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ppp/</url>
      
        <content type="html"><![CDATA[<h2 id="PPP-简介">PPP 简介</h2><p>1992 年制订了 PPP 协议。经过 1993 年和1994 年的修订，现在的 PPP 协议已成为因特网的正式标准[RFC 1661]。<br>现在全世界使用得最多的数据链路层协议是点对点协议 PPP (Point-to-Point Protocol)。用户使用拨号电话线接入因特网时，一般都是使用 PPP 协议。</p><p>用户到 ISP 的链路使用 PPP 协议<br><img src="/static/IT/network/PPP-1.png" alt="ISP 链路"></p><h3 id="PPP-的特点">PPP 的特点</h3><ul><li>PPP 协议应满足的需求<ul><li>简单：这是首要的要求</li><li>封装成帧</li><li>透明性</li><li>多种网络层协议</li><li>多种类型链路</li><li>差错检测</li><li>检测连接状态</li><li>最大传送单元</li><li>网络层地址协商</li><li>数据压缩协商</li></ul></li><li>PPP 协议不需要的功能<ul><li>纠错</li><li>流量控制</li><li>序号</li><li>多点线路</li><li>半双工或单工链路 （只支持全双工链路）</li></ul></li></ul><h3 id="不提供使用序号和确认的可靠传输">不提供使用序号和确认的可靠传输</h3><p>在数据链路层出现差错的概率不大时，使用比较简单的 PPP 协议较为合理。 在因特网环境下，PPP 的信息字段放入的数据是IP数据报。数据链路层的可靠传输并不能够保证网络层的传输也是可靠的。<strong>帧检验序列 FCS 字段可保证无差错接受</strong>。</p><h3 id="PPP-协议有三个组成部分">PPP 协议有三个组成部分</h3><ul><li>一个将 <strong>IP 数据报</strong>封装到串行链路的方法。</li><li><strong>链路控制协议</strong> LCP (Link Control Protocol)。</li><li><strong>网络控制协议</strong> NCP (Network Control Protocol)。</li></ul><hr><h2 id="PPP-协议的帧格式">PPP 协议的帧格式</h2><p><em>PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节。</em></p><p><img src="/static/IT/network/PPP-2.png" alt="PPP 协议的帧格式"></p><p><strong>PPP 有一个 2 个字节的协议字段</strong>：</p><ol><li>当协议字段为 <strong>0x0021</strong> 时，PPP 帧的信息字段就是<strong>IP 数据报</strong>。</li><li>若为 <strong>0xC021</strong>, 则信息字段是 PPP <strong>链路控制数据</strong>。</li><li>若为 <strong>0x8021</strong>，则表示这是<strong>网络控制数据</strong>。</li></ol><p>透明传输问题 : 当 PPP 用在异步传输时，使用一种特殊的字符填充法。 PPP 用在同步传输链路（SONET/SDH)时，协议规定采用硬件来完成<strong>比特填充</strong>。</p><p><strong>字符填充 :</strong><br>将信息字段中出现的每一个 <strong>0x7E <strong>字节</strong>转变成</strong>为 2 字节序列(<strong>0x7D, 0x5E</strong>)。 若信息字段中出现一个 <strong>0x7D</strong> 的字节, 则将其<strong>转变成</strong>为 2 字节序列(<strong>0x7D, 0x5D</strong>)。 若信息字段中出现 <strong>ASCII 码的控制字符</strong>（即<strong>数值小于 0x20 的字符</strong>），则<strong>在该字符前面要加入一个 0x7D 字节，同时将该字符的编码加以改变</strong>。<em>(例如: <strong>控制字符0x03 变0x7D 0x23</strong>)</em><br>7E -&gt; 7D 5E<br>7D -&gt; 7D 5D<br>a (小于20 ) -&gt; 7D (20 + a)</p><p><strong>零比特填充  :</strong><br>PPP 协议用在 <strong>SONET/SDH 链路</strong>时，使用同步传输（一连串的比特连续传送）。这时 PPP 协议采用零比特填充方法来实现透明传输。 <strong>在发送端，只要发现有 5 个连续 1，则立即填入一个 0。接收端</strong>对帧中的比特流进行扫描。<strong>每当发现 5 个连续1时，就把这 5 个连续 1 后的一个 0 删除。</strong><br><img src="/static/IT/network/PPP-3.png" alt="零比特填充"></p><hr><h2 id="PPP-协议的工作状态">PPP 协议的工作状态</h2><p>当用户拨号接入 ISP 时，路由器的调制解调器对拨号做出确认，并建立一条物理连接。 PC 机向路由器发送一系列的 LCP 分组（封装成多个 PPP 帧）。 这些分组及其响应选择一些 PPP 参数，进行网络层配置，NCP 给新接入的 PC机分配一个临时的 IP 地址，使 PC 机成为因特网上的一个主机。 通信完毕时，NCP 释放网络层连接，收回原来分配出去的 IP 地址。接着，LCP 释放数据链路层连接。最后释放的是物理层的连接。</p><p><img src="/static/IT/network/PPP-4.png" alt="PPP 协议的工作状态"></p><hr><h2 id="例题">例题</h2><p>一个PPP帧的数据部分（用十六进制写出）是 <code>7D 5E FE 27 7D 5D 7D 5D 65 7D 5E</code> 。试问真正的数据是什么（用十六进制写出）？</p><p><code>7D 5E -&gt; 7E</code><br><code>7D 5D -&gt; 7D</code><br><code>7E FE 27 7D 7D 65 7E</code></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-CSMA/CD</title>
      <link href="/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-csma-cd/"/>
      <url>/2023/05/05/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-csma-cd/</url>
      
        <content type="html"><![CDATA[<h2 id="尽最大努力的交付">尽最大努力的交付</h2><p>最初的以太网是将许多计算机都连接到一根总线上。当初认为这样的连接方法既简单又可靠，因为总线上没有有源器件。</p><p><img src="/static/IT/network/CSMACD-1.png" alt="最初的以太网"></p><p>为了通信的简便以太网采取了两种重要的措施：</p><ol><li>采用较为灵活的无连接的工作方式，即<strong>不必先建立连接就可以直接发送数据</strong>。</li><li>以太网对发送的数据帧不进行编号，也不要求对方发回确认。<strong>这样做的理由是局域网信道的质量很好，因信道质量产生差错的概率是很小的。</strong></li></ol><p>以太网提供的服务是不可靠的交付，即<strong>尽最大努力的交付</strong>。 当目的站收到有差错的数据帧时就丢弃此帧，其他什么也不做。<strong>差错的纠正由高层来决定</strong>。 如果高层发现丢失了一些数据而进行重传，但<strong>以太网并不知道这是一个重传的帧，而是当作一个新的数据帧来发送。</strong></p><p><strong>以太网发送的数据都使用曼彻斯特(Manchester)编码</strong>，接收端能很方便的从这种电压转化中把位同步信号提取出来。</p><hr><h2 id="CSMA-CD">CSMA/CD</h2><p><strong>CSMA/CD</strong> <strong>载波监听多点接入/碰撞检测</strong>(Carrier Sense Multiple Access with Collision Detection)</p><ul><li>“<strong>多点接入</strong>”表示许多计算机以多点接入的方式连接在一根总线上。</li><li>“<strong>载波监听</strong>”是指每一个站在发送数据之前先要检测一下总线上是否有其他计算机在发送数据，如果有，则暂时不要发送数据，以免发生碰撞。总线上并没有什么“载波”。因此，“<strong>载波监听”就是用电子技术检测总线上有没有其他计算机发送的数据信号。在发送数据前和发送数据时监听</strong>。</li><li>“<strong>碰撞检测</strong>”就是计算机边发送数据边检测信道上的信号电压大小。 <strong>当几个站同时在总线上发送数据时，总线上的信号电压摆动值将会增大（互相叠加）</strong>。 当一个站检测到的信号电压摆动值超过一定的门限值时，就认为总线上至少有两个站同时在发送数据，表明产生了碰撞。所谓“碰撞”就是发生了冲突。因此“碰撞检测”也称为“<strong>冲突检测</strong>”。</li></ul><p>在发生碰撞时，总线上传输的信号产生了严重的失真，无法从中恢复出有用的信息来。 每一个正在发送数据的站，<strong>一旦发现总线上出现了碰撞，就要立即停止发送</strong>，免得继续浪费网络资源，然后<strong>等待一段随机时间后再次发送</strong>。<em>退避算法</em></p><hr><h2 id="碰撞">碰撞</h2><p>电磁波在总线上的有限传播速率的影响 :<br><strong>当某个站监听到总线是空闲时，也可能总线并非真正是空闲的</strong>。  A 向 B 发出的信息，要经过一定的时间后才能传送到 B。 <strong>B 若在 A 发送的信息到达 B 之前发送自己的帧</strong>(因为这时 B 的载波监听检测不到 A 所发送的信息)，<strong>则必然要在某个时间和 A 发送的帧发生碰撞。碰撞的结果是两个帧都变得无用。</strong></p><p>传播时延对载波监听的影响 :</p><p><img src="/static/IT/network/CSMACD-2.png" alt="碰撞"></p><p><strong>使用 CSMA/CD 协议的以太网不能进行全双工通信而只能进行双向交替通信（<em>半双工通信</em>）。 每个站在发送数据之后的一小段时间内，存在着遭遇碰撞的可能性。这种发送的不确定性使整个<em>以太网的平均通信量远小于以太网的最高数据率</em>。</strong></p><p><strong>争用期</strong> ：最先发送数据帧的站，在发送数据帧后至多经过时间 2t（<strong>两倍的端到端往返时延</strong>）就可知道发送的数据帧是否遭受了碰撞。 以太网的端到端往返时延 2t 称为争用期，或碰撞窗口。 <em>经过争用期这段时间还没有检测到碰撞，才能肯定这次发送不会发生碰撞。</em></p><hr><h2 id="退避算法">退避算法</h2><p><strong>二进制指数类型退避算法</strong> (truncated binary exponential type)</p><p>发生碰撞的站在停止发送数据后，要推迟（退避）一个随机时间才能再发送数据。</p><ol><li>确定基本退避时间，一般是取为争用期 2t。</li><li>定义逻辑重传次数 k ，k ≤ 10，即 k = Min[实际重传次数, 10]</li><li>从整数集合[0,1,…, (2<sup>k</sup> - 1)]中随机地取出一个数，记为 r。重传所需的时延就是 r 倍的基本退避时间。</li><li>当实际重传达 16 次仍不能成功时即丢弃该帧，并向高层报告。</li></ol><p><strong>争用期的长度 :</strong></p><ol start="5"><li>以太网取 <strong>51.2 μs</strong> 为争用期的长度。</li><li>对于 10 Mb/s 以太网，在争用期内可发送512 bit，即 <strong>64 字节</strong>。也可以说是<strong>512比特时间，一比特时间就是发送一比特数据所用的时间。</strong></li><li>以太网在发送数据时，若前 64 字节没有发生冲突，则后续的数据就不会发生冲突。</li></ol><p><strong>最短有效帧长 :</strong><br>当A站向B站发送一个小于64字节的帧时，若A站发送完该帧后发生碰撞，B站会丢弃这个帧，但是A站却不知道这个帧发生了碰撞。因为，A站在争用期内发送完该帧后，就不会在继续监听是否发生碰撞。所以以太网规定了最短有效帧长<strong>64字节</strong>，意思就是<strong>在争用期内不断的发送数据</strong>，保留监听是否发生碰撞的功能。</p><ol start="8"><li>如果发生冲突，就一定是在发送的前 64 字节之内。</li><li>由于一检测到冲突就立即中止发送，这时已经发送出的数据一定小于 64 字节。</li><li>以太网规定了<strong>最短有效帧长为 64 字节，凡长度小于 64 字节的帧都是由于冲突而异常中止的无效帧。</strong></li></ol><p><strong>强化碰撞 ：</strong><br>当发送数据的站一旦发现发生了碰撞时：</p><ol start="11"><li>立即停止发送数据；</li><li>再继续发送若干比特(32b or 48b)的<strong>人为干扰信号</strong>(jamming signal)，以便让所有用户都知道现在已经发生了碰撞。</li></ol><p><img src="/static/IT/network/CSMACD-3.png" alt="强化碰撞"></p><p><strong>B 也能够检测到冲突，并立即停止发送数据帧，接着就发送干扰信号</strong>。<em>这里为了简单起见，只画出 A 发送干扰信号的情况。</em></p><p><strong>算法流程图 ：</strong><br><img src="/static/IT/network/CSMACD-4.png" alt="算法流程图"></p><hr><h2 id="以太网的信道利用率">以太网的信道利用率</h2><p>以太网的信道被占用的情况： 争用期长度为 2t，即端到端传播时延的两倍。检测到碰撞后不发送干扰信号。帧长为 L (bit)，数据发送速率为 C (b/s)，因而<strong>帧的发送时间为 L/C = T<sub>0</sub> (s)。</strong><br>一个帧从开始发送，经可能发生的碰撞后，<strong>到发送成功且信道转为空闲(即再经过时间 t 使得信道上无信号传播)时为止</strong>，是发送一帧所需的平均时间。</p><p><img src="/static/IT/network/CSMACD-5.png" alt="发送一帧所需的平均时间"></p><p><strong>参数 a :</strong><br>在以太网中定义了参数a，它是以太网单程端到端时延 t 与帧的发送时间 T0 之比：<br><strong>a = t / T<sub>0</sub> = t * C / L</strong></p><ul><li>a→0 表示一发生碰撞就立即可以检测出来，并立即停止发送，因而信道利用率很高。</li><li>a 越大，表明争用期所占的比例增大，每发生一次碰撞就浪费许多信道资源，使得信道利用率明显降低。</li></ul><p><strong>要提高以太网的信道利用率，就必须减小 t 与 T<sub>0</sub> 之比。</strong><br>当数据率一定时，以太网的<strong>连线的长度</strong>受到限制，否则 t 的数值会太大。以太网的<strong>帧长不能太短</strong>，否则 T<sub>0</sub> 的值会太小，使 a 值太大。</p><p><strong>信道利用率的最大值 S<sub>max</sub> :</strong><br>理想的情况下，以太网上的各站发送数据都不会产生碰撞（显然已不是 CSMA/CD，需要特殊的调度方法），即总线一旦空闲就有某一个站立即发送数据。 发送一帧占用线路的时间是 T<sub>0</sub> + t ，而帧本身的发送时间是T<sub>0</sub> 。可计算出<strong>理想情况</strong>下的极限信道利用率 S<sub>max</sub>为：</p><p><strong>S<sub>max</sub> = T<sub>0</sub> / (T<sub>0</sub> + t ) = 1 / (1 + a)</strong></p><p><em>据统计，以太网的利用率达到<b>20%</b>就已经处于重载的情况，很多网络容量都被网上的碰撞消耗掉了。</em></p><hr><h2 id="例题">例题</h2><p>假定1km长的CSMA/CD 网络的数据率为1Gbit/s 。设信号在网络上的传播速率为200 000km/s 。求能够使用此协议的最短帧长。<br>争用期为 2 * 1km / (200 000km/s) = 10 μs。<br>最短帧长为 10 * 10<sup>-6</sup> / 10<sup>-9</sup> = 10000 bit = 1250 byte</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Office-安装和激活Office套装</title>
      <link href="/2023/05/05/yun-wei/office-an-zhuang-he-ji-huo-office-tao-zhuang/"/>
      <url>/2023/05/05/yun-wei/office-an-zhuang-he-ji-huo-office-tao-zhuang/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://otp.landian.vip/zh-cn/download.html">下载 Office Tool Plus (包含框架)</a></li><li>解压并运行 <code>Office Tool Plus.exe</code></li><li><code>部署</code>想要的 Office 产品</li><li><code>激活</code>(产品已自动激活, 点击<code>刷新</code>可查看激活状态)<ul><li>如需激活其他安装方式安装的Office, 可用kms方式: <a href="https://www.coolhub.top/tech-articles/kms_list.html">kms列表</a></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SublimeText4-安装插件平台</title>
      <link href="/2023/05/05/yun-wei/sublimetext4-an-zhuang-cha-jian-ping-tai/"/>
      <url>/2023/05/05/yun-wei/sublimetext4-an-zhuang-cha-jian-ping-tai/</url>
      
        <content type="html"><![CDATA[<ol><li><code>Ctrl + Shift + P</code></li><li><code>Install Package Control</code></li><li><code>Package Control: Install Package</code></li></ol><hr><p>中文插件: <code>ChineseLocalizations</code></p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SublimeText4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230503-Brooks-S&amp;P Emini</title>
      <link href="/2023/05/04/shi-chang-fen-xi/shi-chang-fen-xi-20230503-brooks-s-p-emini/"/>
      <url>/2023/05/04/shi-chang-fen-xi/shi-chang-fen-xi-20230503-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Wednesday May 3, 2023</font></p><h1><font color="green">S&amp;P Emini pre-open market analysis</font></h1><h2 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h2><ul><li>The bulls gave up yesterday on the idea of a strong second leg up following last Thursday and Friday’s bull breakout.<ul><li><font color="gray">在上周四和周五的牛市突破之后，多头昨天放弃了强劲的第二回合上涨的想法</font></li></ul></li><li>The Emini is neutral going sideways into FOMC report today.<ul><li><font color="gray">Emini 对今天的 FOMC 报告持中立态度</font></li></ul></li><li>The risk of being long following last week’s breakout was that the market was at the top of a month-long trading range.<ul><li><font color="gray">上周突破后做多的风险在于市场处于一个月交易区间的顶部</font></li></ul></li><li>Some bulls bought the bull breakout last Friday, assuming the market would break out above the April high. However, they likely used a tight stop and were quick to exit when the market hesitated on Monday or yesterday.<ul><li><font color="gray">一些多头在上周五买入牛市突破，假设市场将突破 4 月高点。然而，他们很可能使用了严格的止损，并在周一或昨天市场犹豫时迅速退出</font></li></ul></li><li>The bulls buying at the top of the trading range last Friday bought because the momentum was strong; however, when they sensed the momentum drying up, they would exit quickly.<ul><li><font color="gray">上周五交易区间顶部的多头买入是因为势头强劲；然而，当他们感觉到动力枯竭时，他们会迅速退出</font></li></ul></li><li>Some bears sold the April 2nd high, betting it was a bad signal bar in a tight bear channel and likely sellers above. Those bears bought back shorts back at the April 26th high yesterday.<ul><li><font color="gray">一些空头卖出了 4 月 2 日的高点，押注这是紧缩空头通道中的一个坏信号线，上方可能是卖家。这些空头昨天在 4 月 26 日的高点买回了空头</font></li></ul></li><li>The Bulls knew April 26th was a credible location to buy, and they likely had limit orders there too.<ul><li><font color="gray">多头知道 4 月 26 日是一个可靠的买入地点，他们也可能在那里设置了限价单</font></li></ul></li><li>The odds are the market will return to the May 1st close, allowing the scale in bulls out. However, the Bears may get a second leg down first.<ul><li><font color="gray">很有可能市场将回到 5 月 1 日的收盘价，从而允许多头退出。然而，熊队可能会先倒下第二回合</font></li></ul></li><li>A lot of bulls who bought the May 1st low likely bought more around the April 26th high. Because the selloff had strong momentum down, many of those bulls are sufficiently disappointed enough to be happy to exit breakeven on the entire trade, which is near 4,145.<ul><li><font color="gray">许多在 5 月 1 日低点买入的多头可能在 4 月 26 日高点附近买入更多。由于抛售势头强劲，这些多头中的许多人都非常失望，以至于很高兴退出整个交易的盈亏平衡点，接近 4,145</font></li></ul></li><li>Overall, the market is returning to neutral before the FOMC report at 11:00 AM PT/ 2:00 PM EST.<ul><li><font color="gray">总体而言，市场在美国东部时间上午 11:00/美国东部时间下午 2:00 FOMC 报告之前回归中性</font></li></ul></li><li>The past month has formed an expanding triangle and is in breakout mode, which means traders should be neutral going into the report and assume the probability is 50% for a measured move up or down based on the past month’s range.<ul><li><font color="gray">过去一个月形成了一个扩大的三角形并处于突破模式，这意味着交易者在进入报告时应该保持中立，并假设根据过去一个月的范围向上或向下测量的概率为 50%</font></li></ul></li></ul><h2 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h2><ul><li>Emini is up 8 points in the overnight Globex session.</li><li>The overnight Globex market has gone sideways following yesterday’s strong selloff.<ul><li><font color="gray">在昨天的强劲抛售之后，隔夜 Globex 市场横盘整理</font></li></ul></li><li>The bears see yesterday’s selloff as strong enough to increase the odds of a second leg down.<ul><li><font color="gray">空头认为昨天的抛售力度足以增加第二轮下跌的可能性</font></li></ul></li><li>Traders should be open to a possible test of the lows of yesterday. However, because the pullback from yesterday’s low was so deep, the odds are that any selloff will form a higher low, and the market will continue sideways.<ul><li><font color="gray">交易者应该对昨天低点的可能测试持开放态度。然而，由于从昨日低点的回调幅度如此之大，任何抛售都可能形成更高的低点，市场将继续横盘整理</font></li></ul></li><li>Traders should assume today will have a lot of trading range price action. As I often say, most traders should wait for 6-12 bars before placing a trade unless they are comfortable with limit order trading.<ul><li><font color="gray">交易者应该假设今天会有很多交易区间价格行动。正如我经常说的，大多数交易者应该在下单前等待 6-12 根柱线，除非他们对限价单交易感到满意</font></li></ul></li><li>Most traders should try and catch the opening swing trade, which typically happens after the formation of a double top/bottom or a wedge top/bottom.<ul><li><font color="gray">大多数交易者应该尝试抓住开盘摆动交易，这通常发生在双顶/双底或楔形顶/底形成之后</font></li></ul></li><li>The most important thing is not to deny what the price action is doing. Price is truth, and no matter what your opinion is, if the market is doing the opposite, you must react accordingly.<ul><li><font color="gray">最重要的是不要否认价格行为在做什么。价格是真理，无论你的意见是什么，如果市场走势相反，你必须做出相应的反应</font></li></ul></li><li>Traders should be flat an hour before the FOMC report. Traders should wait for at least 2 bars following the FOMC release.<ul><li><font color="gray">在 FOMC 报告发布前一个小时，交易员应该持平。交易者应在 FOMC 发布后等待至少 2 个柱线</font></li></ul></li><li>Traders should be sure and trade small during the FOMC report as the bars can get very big. In general, most traders should trade a 20% position size.<ul><li><font color="gray">交易者应该确定并在 FOMC 报告期间进行少量交易，因为条柱可能会变得非常大。一般而言，大多数交易者应交易 20% 的头寸规模</font></li></ul></li></ul><h2 id="font-color-red-Emini-intraday-market-update-font"><font color="red">Emini intraday market update</font></h2><ul><li>The Emini has been in a trading range for most of the day.<ul><li><font color="gray">Emini 在一天的大部分时间里一直处于交易区间</font></li></ul></li><li>The bulls got a strong rally up to bar 7; however, the bears took control, and the market sold off down to bar 18.<ul><li><font color="gray">多头强劲反弹至第 7 根柱线；然而，空头控制了局面，市场抛售至 18 根柱线</font></li></ul></li><li>Because of the opening rally, the odds were that any selloff below bar 1 would be a trading range and not lead to a bear trend.<ul><li><font color="gray">由于开盘反弹，低于 1 条的任何抛售很可能是一个交易区间，不会导致熊市趋势</font></li></ul></li><li>Most traders should be flat for at least an hour before going into the report. It is easy to get trapped into a losing trade, using a wide stop and scaling it. This is why it s better to be flat and wait.<ul><li><font color="gray">在进入报告之前，大多数交易者应该保持至少一个小时的平稳状态。很容易陷入亏损的交易，使用广泛的止损并扩展它。这就是为什么最好保持平稳并等待</font></li></ul></li><li>In general, most traders should wait for the 2nd bar after the FOMC to close before trading.<ul><li><font color="gray">一般而言，大多数交易者应等待 FOMC 收盘后的第二根柱线才可交易</font></li></ul></li><li>Since the bars will likely be big, trading small, such as 20% of one’s normal position size, is better.<ul><li><font color="gray">由于条柱可能会很大，因此交易较小，例如正常头寸规模的 20%，会更好</font></li></ul></li><li>Traders should be open to anything going into the report. A big move can happen, however, the odds favor a trading range.  Traders should also assume that any big breakout during the first bar of the report and quickly reverse and go the opposite way.<ul><li><font color="gray">交易员应该对报告中的任何内容持开放态度。可能会发生大动作，但是，赔率有利于交易区间。交易者还应该假设在报告的第一根柱线期间出现任何重大突破，并迅速反转并走相反的路</font></li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230503-SP500-Emini-5-Min-Bear-Trend-from-the-Open-Then-Reversal-Up-768x432.png" alt="Emini 5 Min - Yesterday"></p><h2 id="font-color-green-Summary-of-today’s-S-P-Emini-price-action-font"><font color="green">Summary of today’s S&amp;P Emini price action</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230503-SP500-Emini-5-Min-Buy-Climax-Then-Trading-Range-Then-Bear-Breakout-after-FOMC-768x432.png" alt="Emini 5 Min - Today"></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxychains-windows安装</title>
      <link href="/2023/05/04/yun-wei/proxychains-windows-an-zhuang/"/>
      <url>/2023/05/04/yun-wei/proxychains-windows-an-zhuang/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://github.com/shunf4/proxychains-windows/releases">下载 proxychains-windows</a></li><li>配置环境变量 <code>PROXYCHAINS_CONF_FILE</code>: 值为 <code>proxychains.conf</code> 文件的路径</li><li>修改 <code>proxychains.conf</code> 配置文件代理路径: <code>socks5 localhost 10808</code></li><li>将二进制执行文件重命名为: <code>proxychains.exe</code></li><li>将 <code>proxychains.exe</code> 所在路径配置到环境变量</li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Proxychains </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-把其他远程仓库的代码合并到当前分支</title>
      <link href="/2023/05/04/coding/git-ba-qi-ta-yuan-cheng-cang-ku-de-dai-ma-he-bing-dao-dang-qian-fen-zhi/"/>
      <url>/2023/05/04/coding/git-ba-qi-ta-yuan-cheng-cang-ku-de-dai-ma-he-bing-dao-dang-qian-fen-zhi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看远程仓库</span><span class="token function">git</span> remote<span class="token comment"># 添加新的远程仓库</span><span class="token function">git</span> remote <span class="token function">add</span> RemoteName url<span class="token comment"># 获取新的远程仓库的信息</span><span class="token function">git</span> fetch RemoteName<span class="token comment"># 签出需要合并的分支</span><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> newLocalBranchName RemoteName/xxxxxbranchName<span class="token comment"># 查看所有分支</span><span class="token function">git</span> branch <span class="token parameter variable">-a</span> <span class="token comment"># 签出要操作的分支</span><span class="token function">git</span> checkout dev<span class="token comment"># 分支合并</span><span class="token function">git</span> merge newLocalBranchName<span class="token comment"># 推送到远程仓库</span><span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2RayA-部署</title>
      <link href="/2023/05/04/yun-wei/v2raya-bu-shu/"/>
      <url>/2023/05/04/yun-wei/v2raya-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">v2rayA</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mzz2017/v2raya    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 9999<span class="token punctuation">:</span><span class="token number">2017</span>      <span class="token punctuation">-</span> 20170<span class="token punctuation">-</span>20172<span class="token punctuation">:</span>20170<span class="token punctuation">-</span><span class="token number">20172</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> TZ=Asia/Shanghai      <span class="token punctuation">-</span> V2RAYA_LOG_FILE<span class="token punctuation">:</span>/tmp/v2raya.log    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/etc/v2raya<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> V2Ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引-交易系统的组成部分</title>
      <link href="/2023/05/02/suo-yin/suo-yin-jiao-yi-xi-tong-de-zu-cheng-bu-fen/"/>
      <url>/2023/05/02/suo-yin/suo-yin-jiao-yi-xi-tong-de-zu-cheng-bu-fen/</url>
      
        <content type="html"><![CDATA[<ol><li>交易策略（入市，退出，止损，加仓，标的的选择等策略）</li><li>资金管理（仓位管理）</li><li>风险回报率（包括回测和监控当前系统运行状态，防止过度拟合）</li><li>投资组合（使系统运行更加健壮，分散化市场和系统，降低对特殊行情的依赖性）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 索引 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Trading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230501-Brooks-S&amp;P Emini</title>
      <link href="/2023/05/02/shi-chang-fen-xi/shi-chang-fen-xi-20230501-brooks-s-p-emini/"/>
      <url>/2023/05/02/shi-chang-fen-xi/shi-chang-fen-xi-20230501-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Monday May 1, 2023</font></p><h1><font color="green">S&amp;P Emini pre-open market analysis</font></h1><h2 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h2><ul><li>The Emini formed two strong bull bars last week, reversing the past selloff ending on April 26th. However, the first reversal down likely to fail.<ul><li><font color="gray">Emini 上周形成了两条强劲的牛栏，扭转了过去于 4 月 26 日结束的抛售。然而，第一次反转下跌可能会失败</font></li></ul></li><li>The rally over the past two trading days is strong enough to likely lead to a second leg-up.<ul><li><font color="gray">过去两个交易日的反弹足够强劲，可能导致第二轮上涨</font></li></ul></li><li>Some bears sold the high of April 26th and scaled in higher. After last Thursday’s strong bear close, many of those bears began to exit shorts. However, some bears are still short and will use the first reversal down to buy back shorts at a reduced loss.<ul><li><font color="gray">一些空头卖出了 4 月 26 日的高点并走高。在上周四强势收盘后，许多空头开始退出空头。然而，一些空头仍然做空，并会利用第一次反转向下以减少的损失买回空头</font></li></ul></li><li>There are bulls who are trapped out of a winning trade. The past two trading days were a big enough surprise, and those bulls were unprepared to buy. Since they are trapped out of a winning trade, they will use any pullback to enter a position at a lower price.<ul><li><font color="gray">有些多头被困在获利的交易中。过去的两个交易日已经足够令人吃惊了，那些多头并没有准备好买入。由于他们被困在获利交易之外，他们将利用任何回调以较低的价格入场</font></li></ul></li><li>At the moment, the odds favor a second leg up. This means that the market is Always In Long, and traders will look to buy for any reason betting on higher prices.<ul><li><font color="gray">目前，赔率有利于第二回合。这意味着市场总是多头，交易者会出于任何理由押注更高的价格而寻求买入</font></li></ul></li><li>At a minimum, the market will probably get above the February 2nd high and likely try and test 4,300.<ul><li><font color="gray">至少，市场可能会突破 2 月 2 日的高点，并可能尝试测试 4,300</font></li></ul></li><li>The bulls have done an excellent job over the past two trading days. However, they need to continue to impress traders. The market is still at the top of a trading range, and if the market begins to go sideway at resistance (February 2nd high), more and more traders will exit longs, and bears will start to establish shorts.<ul><li><font color="gray">多头在过去两个交易日表现出色。然而，他们需要继续给交易员留下深刻印象。市场仍处于交易区间的顶部，如果市场开始在阻力位（2 月 2 日高点）横盘整理，越来越多的交易者将退出多头，空头将开始建立空头</font></li></ul></li><li>Overall, the odds are that the market is probably going higher for at least a small second leg. The bears will need to undo the damage caused by the bulls before the bears have a chance at reversing the market.<ul><li><font color="gray">总的来说，市场可能至少在第二回合走高。在空头有机会扭转市场之前，空头需要消除多头造成的损害</font></li></ul></li></ul><h2 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h2><ul><li>Emini is down 8 points in the overnight Globex session.</li><li>The overnight Globex session has been in a tight trading range on the 60-minute chart.<ul><li><font color="gray">隔夜 Globex 交易时段在 60 分钟图表上处于窄幅交易区间</font></li></ul></li><li>The bulls want the rally to continue and today to become another intense bull trend day.<ul><li><font color="gray">多头希望涨势继续，今天将成为另一个激烈的牛市趋势日</font></li></ul></li><li>More likely, today will disappoint the bulls as traders begin to take partial profits.<ul><li><font color="gray">更有可能的是，由于交易员开始了结部分利润，今天会让多头失望</font></li></ul></li><li>This means that traders should be open to today becoming a trading range day or a possible bear trend day.<ul><li><font color="gray">这意味着交易者应该对今天成为交易区间日或可能的熊市趋势日持开放态度</font></li></ul></li><li>Since the daily chart has had an intense two-day bull breakout, traders should be open to the possibility of today forming a weak bear trend (broad bear channel) and the bulls getting an upside breakout late in the day as buyers on the daily chart, try and enter at a lower price.<ul><li><font color="gray">由于日线图已经连续两天出现牛市突破，交易者应该对今天形成弱熊市趋势（宽熊通道）和多头在当天晚些时候作为日线图上的买家向上突破的可能性持开放态度, 尝试以较低的价格进入</font></li></ul></li><li>As I often say, most traders should assume the open will have a lot of trading range price action. This means most traders should consider not trading for the day’s first 6-12 bars.<ul><li><font color="gray">正如我经常说的，大多数交易者应该假设开盘时会有很多交易区间价格行为。这意味着大多数交易者应该考虑不要在当天的前 6-12 个柱线进行交易</font></li></ul></li><li>Most traders should try and catch the opening swing trade that typically begins before the end of the second hour. It often forms after a double top/bottom or a wedge top/bottom.<ul><li><font color="gray">大多数交易者应该尝试抓住通常在第二个小时结束前开始的开盘摆动交易。它通常在双顶/双底或楔形顶/底之后形成</font></li></ul></li></ul><h2 id="font-color-red-Emini-intraday-market-update-font"><font color="red">Emini intraday market update</font></h2><ul><li>The Emini had a small gap down on the open and rallied for two legs up to bar 18 (8:00 AM PT).<ul><li><font color="gray">Emini 在开盘时有一个小缺口，并在 18 号柱（太平洋时间上午 8:00）之前反弹了两条腿</font></li></ul></li><li>The rally up to bar 18 had decent selling pressure, which increased the odds that it would be a complex leg in a trading range.<ul><li><font color="gray">涨至 18 根柱线的反弹产生了相当大的抛售压力，这增加了它成为交易区间复杂腿的可能性</font></li></ul></li><li>The bears got a strong reversal down to bar 23 (8:25 AM PT). The bears got close to the open of the day. However, they failed to reach it. The bulls got an endless pullback after the bear breakout down to bar 23, and the market got a strong breakout with a follow-through on bar 31 (9:05 AM PT).<ul><li><font color="gray">空头在第 23 根柱线（太平洋时间上午 8 点 25 分）处出现强烈逆转。空头接近当天的开盘价。然而，他们未能达到目标。在熊市突破至第 23 根柱线后，多头无休止地回调，市场在第 31 根柱线（太平洋时间上午 9 点 05 分）上获得强劲突破并跟进</font></li></ul></li><li>As of bar 34 (9:15 MA PT), the market is Always In Long and trying to reach the day’s high.<ul><li><font color="gray">截至第 34 条柱线（9:15 MA PT），市场总是多头并试图达到当天的高点</font></li></ul></li><li>Even if the market gets to a new high, it will probably evolve into a trading range, which means there will likely be sellers not far above the bar 19 high of the day.<ul><li><font color="gray">即使市场创出新高，也可能会演变成一个交易区间，这意味着在 19 日高点上方不远的地方可能会有卖家</font></li></ul></li><li>Traders should expect the day to remain a trading range day. The bears will want to close the day below the day’s open. However, they will need to develop more selling pressure first. This means sideways to up is more likely unless the bears can get enough selling pressure to make the market go sideways.<ul><li><font color="gray">交易者应该预计当天仍将是一个交易区间。空头希望收盘价低于当天的开盘价。但是，他们首先需要形成更大的抛售压力。这意味着横盘上涨的可能性更大，除非空头能够获得足够的抛售压力使市场横盘整理</font></li></ul></li></ul><h2 id="font-color-red-Friday’s-Emini-setups-font"><font color="red">Friday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230501-SP500-Emini-5-Min-Bull-Trend-from-the-Open-Broad-Bull-Channel.png" alt="Emini 5 Min - Friday"></p><h2 id="font-color-green-Summary-of-today’s-S-P-Emini-price-action-font"><font color="green">Summary of today’s S&amp;P Emini price action</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230502-SP500-Emini-5-Min-Bull-Trend-from-the-Open-Bar-38-Midday-Reversal-Down-768x432.png" alt="Emini 5 Min - Today"></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海龟交易法-投资组合</title>
      <link href="/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-tou-zi-zu-he/"/>
      <url>/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-tou-zi-zu-he/</url>
      
        <content type="html"><![CDATA[<p>分散化和简化以适应不同的市场状态</p><p>分散化：不同的市场（非关联市场）中使用多个不同的系统<br>简化：减少对特殊市场条件的依赖性</p><hr><ul><li>添加趋势过滤器来防止逆势交易</li><li>选择多个不同的市场，相互之间不能有太高的关联性</li><li>不要选择低流动性市场，低流动性市场更容易受到价格动荡的冲击</li><li>有的市场可能每隔几年才会出现一次趋势，因此5-10年的短期测试并不能充分反映他们的潜力，不能凭此删除掉一个市场</li><li>有的市场虽然利润水平不理想，但却有很大的分散化价值，而且两者权衡利大于弊</li></ul><p>三大市场：</p><ul><li>基本面市场：比如外汇市场和利率产品市场。受宏观影响，流动性强，趋势清晰，最容易被趋势跟踪者把握</li><li>投机者市场：比如股票市场和咖啡，黄金，原油这些期货市场。投机者影响力比较大，较难被趋势跟踪者把握</li><li>综合衍生市场：投机行为是主要动力，最难被趋势跟踪者把握</li></ul><p>无论哪一类市场，同类别中的所有市场都是相同的。只需根据市场的类型和流动性来做出决策。<br>一个市场在过去20年内没有出现大趋势并不代表它不是个好市场，只要一个市场的容量够大，而且不同于你的资产组合中的其他市场，就应该选择这个市场。</p><p>系统分散化：同时使用多个交易系统，特别是彼此差别极大的系统，交易的稳健性会大大提高。</p><p>不要过于依赖特殊市场条件的灵活而又简单的系统。成熟的稳健策略总是在多个不同的市场中使用多个不同的系统，相比高度局限于少数市场的少数系统，这种策略的稳定性要高得多。</p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 海龟交易法 </tag>
            
            <tag> 投资组合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海龟交易法-交易策略</title>
      <link href="/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-jiao-yi-ce-lue/"/>
      <url>/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-jiao-yi-ce-lue/</url>
      
        <content type="html"><![CDATA[<h2 id="入市策略">入市策略</h2><h3 id="20日短期突破买入">20日短期突破买入</h3><ul><li>价格突破20日高点一个最小单位，就做多一单位</li><li>价格跌破20日低点一个最小单位，就做空一单位</li><li>如果上一次突破是盈利性突破，则忽略当前信号<ul><li>如果一次突破被这条法则忽略掉了，那么可以在55日突破点入市</li></ul></li><li>如果上一次突破是亏损性突破，则当前信号有效（与方向无关）</li></ul><p>盈利性突破：上一次实际突破（未交易也算）有盈利效应<br>亏损性突破：在10日突破退出法则之前，发生了2N幅度的不利变动，比如2ATR的下跌</p><h3 id="55日长期突破买入">55日长期突破买入</h3><ul><li>价格突破55日高点一个最小单位，就做多一单位</li><li>价格跌破55日低点一个最小单位，就做空一单位</li><li>所有突破都是有效信号</li></ul><h2 id="加仓策略">加仓策略</h2><ul><li>在突破点建立1单位头寸规模，然后以每 1/2N 的间隔加仓一单位（以上一次实际成交价格为基础）</li><li><code>新头寸规模 = 上一次的单位头寸规模 + 1/2 * N</code>, N 可以用 ATR 代替</li></ul><h2 id="止损策略">止损策略</h2><p>风险程度不得超过2%</p><ul><li>止损标准是 2N (2ATR)</li><li>如果加仓了，那么之前头寸的止损点将相应地调整 1/2N，即整个头寸的止损点将与最新添加的头寸相距2N的距离</li><li>如果跳空高开等原因导致价格变动突然大于 1/2N，那么新头寸的止损应该单独做出调整，即实际价格的2N止损，之前的头寸止损价还按原来的计算方式</li></ul><h3 id="双重损失止损策略">双重损失止损策略</h3><ul><li>止损标准是 1/2N (1/2ATR)</li><li>在价格打掉止损后，如果价格恢复到最初入市价，则重新建立这个单位</li><li>加仓后，不需要调整之前的止损点（因为一个标的最多4个单位，总风险不会超过2%）</li></ul><h2 id="退出策略">退出策略</h2><ul><li>20日短期入市策略采用10日突破退出法则，即跌破10日最低点</li><li>55日长期入市策略采用20日突破退出法则，即跌破20日最低点</li></ul><p>这种退出策略会目睹巨额利润的缩水，需要强大的纪律性；大多数突破都不会引发趋势，所以海龟要用这种策略抓住一波长趋势来实现盈利。</p><h2 id="选择策略（关联市场中买强卖弱）">选择策略（关联市场中买强卖弱）</h2><p>指标：<code>(当前价 - 3月钱价格) / N</code>, N可以用ATR代替<br>值高的就是强市场，低的就是弱市场</p><h3 id="合约滚动">合约滚动</h3><ul><li>在合约到期之前几个星期（大幅萎缩之前）将现有头寸滚向后期新合约，除非现有合约的表现好于后期新合约</li><li>新合约的趋势同样复合要求，否则不要滚动</li></ul>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 海龟交易法 </tag>
            
            <tag> 交易策略 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海龟交易法-资金管理</title>
      <link href="/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-zi-jin-guan-li/"/>
      <url>/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-zi-jin-guan-li/</url>
      
        <content type="html"><![CDATA[<p>基本原则：</p><ol><li><font color="red">衰落幅度最多不能超过你的承受能力上限的1/2</font></li><li>交易的首要目标应该是生存，时间站在你这边，一个<font color="red">期望值为正</font>的系统或方法早晚会给你带来财富</li><li>过于简化的策略和没有<font color="red">根据波动性进行标准化</font>的方法可能导致某些市场上的交易权重过高，令其他市场变得无足轻重。这样，即使是某个市场上的大盈利也未必能补偿另一个市场的小损失</li></ol><h2 id="N系数">N系数</h2><ol><li>1单位头寸规模：<font color="red">1ATR价格变动正好等于账户规模的1%，即总资本的1%除以ATR，保守一点可以设为0.5%</font><ul><li><code>头寸规模 = 账户的1% / 市场的绝对波动幅度</code></li><li><code>市场的绝对波动幅度 = N * 每一点数所代表的美元</code> (用于期货每份合约多少美元，股票的话就是一美元一个点)</li><li>N 就是 TR 的平滑均线值，比如 ATR 指标</li></ul></li><li><font color="red">每一个市场</font>最多只能投入<font color="red">4单位</font></li><li><font color="red">高度相关</font>的多个市场中，多头或空头单位都不能超过<font color="red">6单位</font></li><li>在<font color="red">任何一个方向</font>上的总交易量都不能超过<font color="red">10单位</font>，但对没有相关性的市场来说，可以放宽到12单位</li><li>利率期货市场：在同一时间只持有<font color="red">前两个发出信号的市场</font>的头寸（最迟发出信号的市场上，趋势往往不会延续太久）</li><li>外汇期货市场：在同一时间只持有前两三个发出信号的市场的头寸</li></ol><h2 id="调整交易规模">调整交易规模</h2><p><font color="red">每当损失了初始账户的10%，就将账户规模缩减20%，直到账户净值恢复</font><br>比如100万的账户，净值是100w，亏损了10万（10%），净值是90w，账户缩减20%，即减去20万，即将账户规模调整到80万，直到净值恢复100w</p><hr><p>回顾<font color="red">过去30-50年之内曾经出现过的严重价格动荡</font>，判断出多大的风险可能造成50%的衰落甚至是彻底破产。一旦发生史无前例的灾难，任何一个激进的交易者都很有可能倾家荡产。</p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 海龟交易法 </tag>
            
            <tag> 资金管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海龟交易法-风险回报率</title>
      <link href="/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-feng-xian-hui-bao-lu/"/>
      <url>/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-feng-xian-hui-bao-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="四大系统性风险">四大系统性风险</h2><ol><li><font color="red">衰落</font>：一连串损失使你的账户缩水；<font color="orange">返还一些利润只是游戏的一部分</font></li><li><font color="red">低回报</font>：<font color="orange">挑选净值曲线更加平滑的系统，一个能够稳定创造高回报的系统在未来任何一段时期内都更容易创造理想的回报，表现失常的风险也更低</font></li><li><font color="red">价格动荡</font>：价格的骤然变动，导致无可挽回的重大损失。<font color="orange">系统的历史检测会把衰落风险低估一倍，任何一个想获得高回报的人都要承受同样高的衰落风险</font></li><li><font color="red">系统死亡</font>：市场状态改变，使曾经有效的系统突然失效。<font color="orange">坚持其他人已经厌倦和放弃的方法。当越来越多的资金撤离趋势跟踪策略阵营后，这类策略反而重振雄风</font>。所以<font color="orange">趋势跟踪策略的汇报水平是带有周期性的</font>。如果你在检验一种策略的时候太过贪婪，你更有可能得不到你想要的结果。<font color="orange">未来不等于现在</font>，一种策略现在有1.5的MAR比率并不意味着它能在未来保持这样的水平。</li></ol><h2 id="风险量化">风险量化</h2><ol><li><font color="red">最大衰落</font>：测试期中最高点到随后的最低点的下跌百分比</li><li><font color="red">最长衰落期</font>：从一个顶峰到下一个新顶峰的最长周期。衡量<font color="orange">恢复速度</font>，在一段损失期后需要多长时间才能重新站上新的高点。</li><li><font color="red">回报标准差</font>：衡量<font color="orange">回报率分散状况</font>。低标准差表明大多数时候的回报率都接近平均值。高标准差表明不同月份之间的回报率差异较大。</li><li><font color="red">R平方值</font>：衡量<font color="orange">实际投资回报率与平均复合增长率</font>的吻合程度。如果回报率不稳定，R平方值将小于1.</li></ol><h2 id="回报量化">回报量化</h2><ol><li><font color="red">平均复合增长率</font>：也叫几何平均回报率，指特定投资期间内的平均化复利率，其结果对其中某个回报率特别高的区间很敏感</li><li><font color="red">滚动平均一年期回报率</font>：连续滚动计算一年期的平均回报率，对某个回报率特别高的时期相对不那么敏感</li><li>平均月度回报率：测试期内各个月份回报率的平均值</li><li>净值曲线图</li><li>月度回报柱状图</li></ol><h2 id="风险回报率指标">风险回报率指标</h2><h3 id="CAGR-平均复合增长率">CAGR 平均复合增长率</h3><p>CAGR之所以对测试起止日敏感，是因为他在对数坐标中就等于起点到终点的连线的斜率</p><h3 id="RAR-regressed-annual-return-回归年度回报率">RAR (regressed annual return) 回归年度回报率</h3><p>就是将回报率各点进行线性回归，使之对起止日脱敏</p><h3 id="夏普比率（Sharpe-ratio）">夏普比率（Sharpe ratio）</h3><p>回报-波动性 比率：<br><font color="red">考察期内的超额回报率（月度或年度平均复合增长率(CAGR)减去无风险回报率）除以期间（月度或年度）回报率的标准差</font></p><p>因为<font color="red">风险水平与回报的波动性直接相关</font>，波动性较低的共同基金更不容易偏离它的历史平均回报水平。</p><p>但是，夏普比率是用于比较共同基金的表现而发明的，<font color="red">并不是一个一般性的风险回报率指标</font>。共同基金主要做股票组合的非杠杆投资。因为期货对冲基金等投资基金与共同基金相比有以下风险：</p><ol><li>管理策略风险：会使用短期策略</li><li>分散化策略风险：达不到传统投资基金那样高的水平</li><li>潜在风险：杠杆水平高</li><li>信心风险：期货基金经理没有太详细的历史履历</li><li><font color="red">稳定性并不等于低风险（夏普陷阱）：</font>风险很高的策略也有可能在有限的时期内创造稳定的回报。在很多情况下，回报的稳定性越高，实际风险水平就越大。比如LTCM策略（高杠杆，但夏普比率表现很好）。</li></ol><h3 id="稳健夏普比率（夏普比率改进版）">稳健夏普比率（夏普比率改进版）</h3><p><code>S = RAR / 月度回报标准差</code></p><p>对数据变化的敏感度较低</p><h3 id="MAR-比率">MAR 比率</h3><p><font color="red">年度回报率(CAGR)除以最大衰落幅度（最高点到最低点的跌幅）</font><br>用它来剔除表现不佳的策略。</p><h3 id="R立方（MAR-改进版）">R立方（MAR 改进版）</h3><p><code>R = RAR / (5次平均最大衰落) * (5次平均最大衰落天数 / 365)</code></p><p>从程度和时间两个角度考虑了风险问题，对测试起止日的变化不敏感，因此比MAR更稳健</p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 海龟交易法 </tag>
            
            <tag> 风险回报率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海龟交易法-优势率(E-比率)</title>
      <link href="/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-you-shi-lu-e-bi-lu/"/>
      <url>/2023/05/02/jiao-yi-xue-xi-bi-ji/hai-gui-jiao-yi-fa-you-shi-lu-e-bi-lu/</url>
      
        <content type="html"><![CDATA[<p>入市信号发出后，好方向的最大价格变动称为MFE，坏方向的最大价格变动称为MAE</p><p>E-比率计算方法：</p><ol><li>为每一个入市信号计算指定时间段内的MFE和MAE，比如E10就是10天内的MFE和MAE，E50就是50天内的，包括入市的那一天</li><li>标准化：将MFE和MAE分别除以入市时的ATR</li><li>平均化：将标准化的MFE和MAE分别求和，再除以入市信号的总次数</li><li>E-比率：调整后的MFE除以调整后的MAE</li></ol><p>寻找出结果大于1的E-比率，那么这个入市策略在E-比率对应的时间段内就是具有优势的</p><p>可以添加适合的过滤器，过滤掉一些违背当前趋势的入市信号，来优化E-比率，并且让它更加平滑</p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 海龟交易法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Capital-模型预测服务整体架构图</title>
      <link href="/2023/04/28/capital/capital-mo-xing-yu-ce-jia-gou-tu/"/>
      <url>/2023/04/28/capital/capital-mo-xing-yu-ce-jia-gou-tu/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/capital/tensorflow.png" alt="模型预测服务架构图"></p><hr><p>数据清洗是整个架构的核心，主要有五个任务:</p><ol><li>数据初始化，形成参考指标</li><li>数据切片并归一化，形成样本集</li><li>形态识别，针对模型要进行识别的形态进行筛选</li><li>数据标记，标记形态类型及买卖信号，标记是否达到预期盈利，是否被打掉止损<ul><li>依赖已经定制好的预置买卖策略（目的是尽量降低市场随机性的影响）</li><li>让模型依据价格行为给出合理的推测</li></ul></li><li>参考后续行情，标记后续价格行为的变化<ul><li>目的是让模型针对已经发生的（意外）情况，推出可能发生的后续行情</li><li>市场没有意外，这里只是站在程序设计角度是意外情况</li></ul></li></ol><p>所以数据清洗服务本质也是一个庞大的框架</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Capital </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>突破形态-VCP(Volatility Contraction Pattern)</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/tu-po-xing-tai-vcp-volatility-contraction-pattern/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/tu-po-xing-tai-vcp-volatility-contraction-pattern/</url>
      
        <content type="html"><![CDATA[<p>波动收缩形态</p><ol><li>回撤走势底部低点抬升但无法超越颈线，同时成交量不断下降，股价波动不断收缩</li><li>突然爆量突破颈线</li></ol><p>反之亦然</p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 突破形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反转形态-OOPS</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/fan-zhuan-xing-tai-oops/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/fan-zhuan-xing-tai-oops/</url>
      
        <content type="html"><![CDATA[<p>OOPS后一般会有一波反转行情</p><p>下跌趋势中</p><ol><li>开盘跳空</li><li>迅速反弹突破上一根K线的最低点，则可作为入场点</li></ol><p>上升趋势中</p><ol><li>开盘跳空</li><li>迅速回撤跌破上一根K线的最高点，则可作为入场点</li></ol><hr><p>条件:</p><ol><li>两根K线不能是小K线</li><li>跳空缺口不能太小</li><li>反弹要迅速</li></ol><hr><p>在高潮中出现可以做逆势，在回撤中出现做顺大逆小</p><p>如果是做多，可以将止损点设在K线下方或者盈亏平衡点，因为如果股价日内再次跌破前日最低点，那么证明这次反转力度不强，且这次反弹是假突破<br>反之亦然</p><p>个人建议设在盈亏平衡点处，OOPS虽然胜率较高，但是毕竟是逆势反转的第一次信号，往往二次入场点更加可靠</p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反转形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反转形态-2B(2 Breakout)</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/fan-zhuan-xing-tai-2b-2-breakout/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/fan-zhuan-xing-tai-2b-2-breakout/</url>
      
        <content type="html"><![CDATA[<p>2B(2 Breakout) 意思是两次突破（假突破），标志着趋势的衰竭:</p><p>上升趋势中:</p><ol><li>突破前高</li><li>迅速跌破前高</li></ol><p>下降趋势中:</p><ol><li>跌破前低</li><li>迅速突破前低</li></ol><p>2B 形态可以作为激进的逆势入场点</p><hr><p>可以结合123法则提高胜率(<a href="/2023/04/27/jiao-yi-xue-xi-bi-ji/fan-zhuan-xing-tai-123-fa-ze/" title="反转形态-123法则">反转形态-123法则</a>)，但同时也会牺牲掉一定的盈亏比:<br>如果在上升趋势中后续跌破前低并跌破趋势线，则可做为逆势入场点<br>如果在下降趋势中后续突破前高并突破趋势线，则可做为逆势入场点</p><p>注意：<font color="red">尽量顺大逆小</font></p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反转形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反转形态-123法则</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/fan-zhuan-xing-tai-123-fa-ze/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/fan-zhuan-xing-tai-123-fa-ze/</url>
      
        <content type="html"><![CDATA[<p>可以预警一段趋势的终结</p><hr><p>上升趋势中:</p><ol><li>突破趋势线</li><li>回测前高无法创出新高</li><li>跌破前低</li></ol><p>下降趋势中:</p><ol><li>突破趋势线</li><li>回测前低无法创出新低</li><li>突破前高</li></ol><hr><p><font color="orange">123的顺序不重要，都能出现就可作为逆势入场点</font><br>注意：<font color="red">尽量顺大逆小</font></p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反转形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>均线系统-顾比均线-GMMA(Guppy Multiple Moving Average)</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/jun-xian-xi-tong-gu-bi-jun-xian-gmma-guppy-multiple-moving-average/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/jun-xian-xi-tong-gu-bi-jun-xian-gmma-guppy-multiple-moving-average/</url>
      
        <content type="html"><![CDATA[<h2 id="算法原理">算法原理</h2><p>短期均线组: <code>EMA 3 5 8 10 12 15</code><br>中期均线组: <code>EMA 30 35 40 45 50 60</code></p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 均线系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>均线系统-Vegas双隧道</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/jun-xian-xi-tong-vegas-shuang-sui-dao/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/jun-xian-xi-tong-vegas-shuang-sui-dao/</url>
      
        <content type="html"><![CDATA[<h2 id="算法原理">算法原理</h2><p>引导均线: EMA12<br>中期均线组: EMA144, EMA169<br>长期均线组: EMA576, EMA676</p><p>144 是 12 的整数平方根，同时也是斐波那契数<br>长期均线是中期均线的4倍</p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 均线系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能量指标-OBV(On Balance Volume)</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/neng-liang-zhi-biao-obv-on-balance-volume/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/neng-liang-zhi-biao-obv-on-balance-volume/</url>
      
        <content type="html"><![CDATA[<h2 id="算法流程">算法流程</h2><ol><li>如果今天涨了，就加上今天的成交量</li><li>如果今天跌了，就减去今天的成交量</li><li>将此值累加</li></ol><h2 id="pine-源码">pine 源码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">indicator<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"On Balance Volume"</span><span class="token punctuation">,</span> shorttitle<span class="token operator">=</span><span class="token string">"OBV"</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token builtin">format</span><span class="token punctuation">.</span>volume<span class="token punctuation">,</span> timeframe<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">,</span> timeframe_gaps<span class="token operator">=</span>true<span class="token punctuation">)</span>var cumVol <span class="token operator">=</span> <span class="token number">0.</span>cumVol <span class="token operator">+=</span> nz<span class="token punctuation">(</span>volume<span class="token punctuation">)</span><span class="token keyword">if</span> barstate<span class="token punctuation">.</span>islast <span class="token keyword">and</span> cumVol <span class="token operator">==</span> <span class="token number">0</span>    runtime<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">"No volume is provided by the data vendor."</span><span class="token punctuation">)</span>src <span class="token operator">=</span> closeobv <span class="token operator">=</span> ta<span class="token punctuation">.</span>cum<span class="token punctuation">(</span>math<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>ta<span class="token punctuation">.</span>change<span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> volume<span class="token punctuation">)</span>plot<span class="token punctuation">(</span>obv<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token comment">#2962FF, title="OnBalanceVolume")</span>ma<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>    switch <span class="token builtin">type</span>        <span class="token string">"SMA"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> ta<span class="token punctuation">.</span>sma<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">)</span>        <span class="token string">"EMA"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> ta<span class="token punctuation">.</span>ema<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">)</span>        <span class="token string">"SMMA (RMA)"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> ta<span class="token punctuation">.</span>rma<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">)</span>        <span class="token string">"WMA"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> ta<span class="token punctuation">.</span>wma<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">)</span>        <span class="token string">"VWMA"</span> <span class="token operator">=</span><span class="token operator">&gt;</span> ta<span class="token punctuation">.</span>vwma<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">)</span>typeMA <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">.</span>string<span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Method"</span><span class="token punctuation">,</span> defval <span class="token operator">=</span> <span class="token string">"SMA"</span><span class="token punctuation">,</span> options<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"SMA"</span><span class="token punctuation">,</span> <span class="token string">"EMA"</span><span class="token punctuation">,</span> <span class="token string">"SMMA (RMA)"</span><span class="token punctuation">,</span> <span class="token string">"WMA"</span><span class="token punctuation">,</span> <span class="token string">"VWMA"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> group<span class="token operator">=</span><span class="token string">"Smoothing"</span><span class="token punctuation">)</span>smoothingLength <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">.</span><span class="token builtin">int</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">"Length"</span><span class="token punctuation">,</span> defval <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> minval <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> maxval <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> group<span class="token operator">=</span><span class="token string">"Smoothing"</span><span class="token punctuation">)</span>smoothingLine <span class="token operator">=</span> ma<span class="token punctuation">(</span>obv<span class="token punctuation">,</span> smoothingLength<span class="token punctuation">,</span> typeMA<span class="token punctuation">)</span>plot<span class="token punctuation">(</span>smoothingLine<span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Smoothing Line"</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token comment">#f37f20, display=display.none)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 能量指标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动量指标-SMI(Squeeze Momentum Indicator)</title>
      <link href="/2023/04/27/jiao-yi-xue-xi-bi-ji/dong-liang-zhi-biao-smi-squeeze-momentum-indicator/"/>
      <url>/2023/04/27/jiao-yi-xue-xi-bi-ji/dong-liang-zhi-biao-smi-squeeze-momentum-indicator/</url>
      
        <content type="html"><![CDATA[<h2 id="算法流程">算法流程</h2><ol><li>动量：对连续几日的最高最低值取平均值，然后与 sma 取平均值</li><li>取离合程度：用 close 减去这个值</li><li>拟合这个值：取线性回归（或ma）</li></ol><h2 id="pine-源码">pine 源码</h2><p>最后取线性回归</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">study<span class="token punctuation">(</span>shorttitle <span class="token operator">=</span> <span class="token string">"SQZMOM_LB"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Squeeze Momentum Indicator"</span><span class="token punctuation">,</span> overlay<span class="token operator">=</span>false<span class="token punctuation">)</span>length <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"BB Length"</span><span class="token punctuation">)</span>mult <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span>title<span class="token operator">=</span><span class="token string">"BB MultFactor"</span><span class="token punctuation">)</span>lengthKC<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"KC Length"</span><span class="token punctuation">)</span>multKC <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"KC MultFactor"</span><span class="token punctuation">)</span>useTrueRange <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>true<span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">"Use TrueRange (KC)"</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token operator">//</span> Calculate BBsource <span class="token operator">=</span> closebasis <span class="token operator">=</span> sma<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">)</span>dev <span class="token operator">=</span> multKC <span class="token operator">*</span> stdev<span class="token punctuation">(</span>source<span class="token punctuation">,</span> length<span class="token punctuation">)</span>upperBB <span class="token operator">=</span> basis <span class="token operator">+</span> devlowerBB <span class="token operator">=</span> basis <span class="token operator">-</span> dev<span class="token operator">//</span> Calculate KCma <span class="token operator">=</span> sma<span class="token punctuation">(</span>source<span class="token punctuation">,</span> lengthKC<span class="token punctuation">)</span><span class="token builtin">range</span> <span class="token operator">=</span> useTrueRange ? tr <span class="token punctuation">:</span> <span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span>rangema <span class="token operator">=</span> sma<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">,</span> lengthKC<span class="token punctuation">)</span>upperKC <span class="token operator">=</span> ma <span class="token operator">+</span> rangema <span class="token operator">*</span> multKClowerKC <span class="token operator">=</span> ma <span class="token operator">-</span> rangema <span class="token operator">*</span> multKCsqzOn  <span class="token operator">=</span> <span class="token punctuation">(</span>lowerBB <span class="token operator">&gt;</span> lowerKC<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>upperBB <span class="token operator">&lt;</span> upperKC<span class="token punctuation">)</span>sqzOff <span class="token operator">=</span> <span class="token punctuation">(</span>lowerBB <span class="token operator">&lt;</span> lowerKC<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>upperBB <span class="token operator">&gt;</span> upperKC<span class="token punctuation">)</span>noSqz  <span class="token operator">=</span> <span class="token punctuation">(</span>sqzOn <span class="token operator">==</span> false<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>sqzOff <span class="token operator">==</span> false<span class="token punctuation">)</span>val <span class="token operator">=</span> linreg<span class="token punctuation">(</span>source  <span class="token operator">-</span>  avg<span class="token punctuation">(</span>avg<span class="token punctuation">(</span>highest<span class="token punctuation">(</span>high<span class="token punctuation">,</span> lengthKC<span class="token punctuation">)</span><span class="token punctuation">,</span> lowest<span class="token punctuation">(</span>low<span class="token punctuation">,</span> lengthKC<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sma<span class="token punctuation">(</span>close<span class="token punctuation">,</span>lengthKC<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             lengthKC<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>bcolor <span class="token operator">=</span> iff<span class="token punctuation">(</span> val <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span>             iff<span class="token punctuation">(</span> val <span class="token operator">&gt;</span> nz<span class="token punctuation">(</span>val<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lime<span class="token punctuation">,</span> green<span class="token punctuation">)</span><span class="token punctuation">,</span>            iff<span class="token punctuation">(</span> val <span class="token operator">&lt;</span> nz<span class="token punctuation">(</span>val<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> red<span class="token punctuation">,</span> maroon<span class="token punctuation">)</span><span class="token punctuation">)</span>scolor <span class="token operator">=</span> noSqz ? blue <span class="token punctuation">:</span> sqzOn ? black <span class="token punctuation">:</span> gray plot<span class="token punctuation">(</span>val<span class="token punctuation">,</span> color<span class="token operator">=</span>bcolor<span class="token punctuation">,</span> style<span class="token operator">=</span>histogram<span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> color<span class="token operator">=</span>scolor<span class="token punctuation">,</span> style<span class="token operator">=</span>cross<span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="python-源码">python 源码</h2><p>最后取 sma</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SqueezeMomentumIndicator</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    _length <span class="token operator">=</span> <span class="token number">20</span>    _mult <span class="token operator">=</span> <span class="token number">2.0</span>    _lengthKC <span class="token operator">=</span> <span class="token number">20</span>    _lengthVal <span class="token operator">=</span> <span class="token number">3</span>    _multKC <span class="token operator">=</span> <span class="token number">1.5</span>    _useTrueRange <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> length<span class="token punctuation">,</span> mult<span class="token punctuation">,</span> lengthKC<span class="token punctuation">,</span> lengthVal<span class="token punctuation">,</span> multKC<span class="token punctuation">,</span> useTrueRange<span class="token punctuation">,</span> df<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>_length <span class="token operator">=</span> length        self<span class="token punctuation">.</span>_mult <span class="token operator">=</span> mult        self<span class="token punctuation">.</span>_lengthKC <span class="token operator">=</span> lengthKC        self<span class="token punctuation">.</span>_lengthVal <span class="token operator">=</span> lengthVal        self<span class="token punctuation">.</span>_multKC <span class="token operator">=</span> multKC        self<span class="token punctuation">.</span>_useTrueRange <span class="token operator">=</span> useTrueRange        self<span class="token punctuation">.</span>_df <span class="token operator">=</span> df    <span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        df <span class="token operator">=</span> self<span class="token punctuation">.</span>_df<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'Close'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'sma'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_length<span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'basis'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'sma'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'stdev'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_length<span class="token punctuation">)</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'dev'</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>_multKC <span class="token operator">*</span> df<span class="token punctuation">[</span><span class="token string">'stdev'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'upperBB'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'basis'</span><span class="token punctuation">]</span> <span class="token operator">+</span> df<span class="token punctuation">[</span><span class="token string">'dev'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'lowerBB'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'basis'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'dev'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'ma'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_lengthKC<span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'DailyRange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'High'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'Low'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'HC'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'High'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'Close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'CL'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'Close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'Low'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'HC'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'HC'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'CL'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'CL'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'tr'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'DailyRange'</span><span class="token punctuation">,</span> <span class="token string">'HC'</span><span class="token punctuation">,</span> <span class="token string">'CL'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'range'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'tr'</span><span class="token punctuation">]</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>_useTrueRange <span class="token keyword">else</span> df<span class="token punctuation">[</span><span class="token string">'DailyRange'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'rangema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'range'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_lengthKC<span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'upperKC'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'ma'</span><span class="token punctuation">]</span> <span class="token operator">+</span> df<span class="token punctuation">[</span><span class="token string">'rangema'</span><span class="token punctuation">]</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>_multKC        df<span class="token punctuation">[</span><span class="token string">'lowerKC'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'ma'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'rangema'</span><span class="token punctuation">]</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>_multKC        df<span class="token punctuation">[</span><span class="token string">'sqzOn'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>            <span class="token keyword">lambda</span> item<span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token string">"lowerBB"</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> item<span class="token punctuation">[</span><span class="token string">"lowerKC"</span><span class="token punctuation">]</span> <span class="token keyword">and</span> item<span class="token punctuation">[</span><span class="token string">"upperBB"</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> item<span class="token punctuation">[</span><span class="token string">"upperKC"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'sqzOff'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>            <span class="token keyword">lambda</span> item<span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token string">"lowerBB"</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> item<span class="token punctuation">[</span><span class="token string">"lowerKC"</span><span class="token punctuation">]</span> <span class="token keyword">and</span> item<span class="token punctuation">[</span><span class="token string">"upperBB"</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> item<span class="token punctuation">[</span><span class="token string">"upperKC"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'highest'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'High'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_lengthKC<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'lowest'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'Low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_lengthKC<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'avg_hl'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> item<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'highest'</span><span class="token punctuation">]</span> <span class="token operator">+</span> item<span class="token punctuation">[</span><span class="token string">'lowest'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'sma_kc'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'Close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_lengthKC<span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'avg_hl_c'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> item<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'avg_hl'</span><span class="token punctuation">]</span> <span class="token operator">+</span> item<span class="token punctuation">[</span><span class="token string">'sma_kc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'s_avg_hl_c'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'avg_hl_c'</span><span class="token punctuation">]</span>        df<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'s_avg_hl_c'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span>self<span class="token punctuation">.</span>_lengthVal<span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'val_1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'val_1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'val_1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        df<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> item<span class="token punctuation">:</span> <span class="token string">'lime'</span> <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">and</span> item<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> item<span class="token punctuation">[</span><span class="token string">'val_1'</span><span class="token punctuation">]</span>        <span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token string">'green'</span> <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token string">'red'</span> <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> item<span class="token punctuation">[</span><span class="token string">'val_1'</span><span class="token punctuation">]</span> <span class="token keyword">else</span> <span class="token string">'maroon'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_df<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'val'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>_df<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_df<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动量指标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230426-Brooks-S&amp;P Emini</title>
      <link href="/2023/04/27/shi-chang-fen-xi/shi-chang-fen-xi-20230426-brooks-s-p-emini/"/>
      <url>/2023/04/27/shi-chang-fen-xi/shi-chang-fen-xi-20230426-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Thursday April 26, 2023</font></p><h1><font color="green">S&amp;P Emini pre-open market analysis</font></h1><h2 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h2><ul><li>The Emini sold off yesterday, closing below the past 17 bars. Yesterday’s bear breakout is a big enough surprise to lead to a 2nd leg down, probably.<ul><li><font color="gray">Emini 昨天抛售，收于过去的 17 个柱线下方。昨天的空头突破是一个足够大的惊喜，可能会导致第二轮下跌。</font></li></ul></li><li>The bears want follow-through today, and the bulls want to prevent the bears from getting follow-through.<ul><li><font color="gray">空头今天想跟进，多头想阻止空头跟进。</font></li></ul></li><li>If the bears get a follow-through bar today similar to yesterday’s close, the market could sell off quickly back to 4,000.<ul><li><font color="gray">如果空头今天获得类似于昨天收盘价的跟进柱线，市场可能会迅速抛售回 4,000 点。</font></li></ul></li><li>While yesterday’s bar may be a bear trap, forcing bears to sell low in what will become a trading range, the first reversal up is probably limited.<ul><li><font color="gray">虽然昨天的柱线可能是一个空头陷阱，迫使空头在将成为交易区间的低位卖出，但第一个反转上涨可能是有限的。</font></li></ul></li><li>The first target for the bears is March 22nd high. The bears want to get a close below the March 22nd high.<ul><li><font color="gray">空头的第一个目标是 3 月 22 日的高点。空头希望收盘价低于 3 月 22 日的高点。</font></li></ul></li><li>The bulls will try and defend the March 22nd breakout point high. They want the gap (March 22nd high) to stay open and for the market to lead to a measured move up from the March 13th high to the March 22nd high, which projects up to 4,300.<ul><li><font color="gray">多头将努力捍卫 3 月 22 日的突破点高点。他们希望缺口（3 月 22 日的高点）保持开放，并让市场从 3 月 13 日的高点有节制地上涨至 3 月 22 日的高点，预计最高可达 4,300 点。</font></li></ul></li><li>At the moment, the upside is probably limited, and the market will probably get at least a small 2nd leg down. Traders will pay close attention to the follow-through today to see how eager the bears will be to sell after yesterday’s bear breakout.<ul><li><font color="gray">目前，上行空间可能有限，市场可能至少会出现第二小段下跌。交易者将密切关注今天的后续行动，以了解在昨天的熊市突破后空头的卖出意愿有多大。</font></li></ul></li></ul><h2 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h2><ul><li>Emini is down 2 points in the overnight Globex session.</li><li>The Globex market has gone sideways during the overnight hours; the U.S. session will probably have little to no gap on the open.<ul><li>Globex 市场在隔夜时间横盘整理；美国时段开盘可能几乎没有跳空。</li></ul></li><li>As I often say, traders should expect a trading range on the open and wait for 6-12 bars.<ul><li>正如我经常说的，交易者应该在开盘时预期交易区间并等待 6-12 根柱线。</li></ul></li><li>Most traders should wait for the opening swing to develop, which typically happens after the formation of a double top/bottom or a wedge top/bottom and begins before the end of the second hour.<ul><li>大多数交易者应该等待开盘摆动的发展，这通常发生在双顶/双底或楔形顶/底形成之后，并在第二个小时结束之前开始。</li></ul></li><li>Because of yesterday’s strong bear breakout, traders should expect today to disappoint the bears. However, traders should also be open to the possibility of a bear trend, and if the bear begins to get strong consecutive bear trend bars on the open, they cannot be in denial.<ul><li>由于昨天的空头突破强劲，交易员应该预料到今天会让空头失望。然而，交易者也应该对熊市趋势的可能性持开放态度，如果熊市在开盘时开始出现强劲的连续熊市趋势线，他们就不能否认。</li></ul></li></ul><h2 id="font-color-red-Emini-intraday-market-update-font"><font color="red">Emini intraday market update</font></h2><ul><li>The Emini sold off after going sideways for the first 8 bars on the open.<ul><li>Emini 在开盘前 8 根柱线横盘整理后被抛售。</li></ul></li><li>While the selloff down to bar 12 was strong, it was a lower low major trend reversal (final flag).<ul><li>虽然跌至 12 根柱线的抛售很强劲，但这是一个较低的低点主要趋势反转（最终旗形）。</li></ul></li><li>The rally up to 9:10 AM PT was substantial; however, it was the first major trendline break of yesterday’s strong bear trend day. This increased the odds of a deep pullback and formation of a trading range, which is what happened.<ul><li>太平洋时间上午 9 点 10 分之前的涨势相当可观；然而，这是昨天强劲熊市趋势日的第一个主要趋势线突破。这增加了深度回调和交易区间形成的可能性，这就是发生的事情。</li></ul></li><li>As of 10:40 AM PT, the bears want the selloff to reach the low of the day. However, this is unlikely. More likely, the market is going to bounce and go sideways.<ul><li>截至太平洋时间上午 10:40，空头希望抛售达到当天的低点。然而，这不太可能。更有可能的是，市场将反弹并横盘整理。</li></ul></li><li>Traders should pay attention to the open of the day as it will likely remain a magnet for the rest of the day.<ul><li>交易者应注意当天的开盘，因为它可能会在一天的剩余时间内保持吸引力。</li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230426-SP500-Emini-5-Min-Bear-Trend-From-the-Open-Failed-Wedge-Bottom-768x432.png" alt="Emini 5 Min"></p><hr><p><a href="https://www.brookstradingcourse.com/analysis/emini-bears-want-follow-through-today/">原文链接-Brooks</a></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter-安装[Docker]</title>
      <link href="/2023/04/27/yun-wei/jupyter-an-zhuang-docker/"/>
      <url>/2023/04/27/yun-wei/jupyter-an-zhuang-docker/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">base-notebook</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> jupyter/base<span class="token punctuation">-</span>notebook    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8888<span class="token punctuation">:</span><span class="token number">8888</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> ./book<span class="token punctuation">:</span>/home/jovyan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置密码: <code>docker exec -it jupyter-base-notebook-1 jupyter notebook password</code><br>重启容器后就可以使用密码登录了</p><hr><p><a href="https://hub.docker.com/u/jupyter">其他类型的Notebook</a>也是同样的安装方法</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Jupyter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ActiveMQ-单机部署</title>
      <link href="/2023/04/27/yun-wei/activemq-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/activemq-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">activemq-master</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> webcenter/activemq    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 61616<span class="token punctuation">:</span><span class="token number">61616</span>      <span class="token punctuation">-</span> 8161<span class="token punctuation">:</span><span class="token number">8161</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/data/activemq      <span class="token punctuation">-</span> ./log<span class="token punctuation">:</span>/var/log/activemq    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ACTIVEMQ_ADMIN_LOGIN=admin      <span class="token punctuation">-</span> ACTIVEMQ_ADMIN_PASSWORD=admin      <span class="token punctuation">-</span> ACTIVEMQ_CONFIG_MINMEMORY=512      <span class="token punctuation">-</span> ACTIVEMQ_CONFIG_MAXMEMORY=2048      <span class="token punctuation">-</span> TZ=Asia/Shanghai    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> ActiveMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nextcloud-单机部署</title>
      <link href="/2023/04/27/yun-wei/nextcloud-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/nextcloud-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>   <span class="token key atrule">mariadb</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mariadb    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./mariadb<span class="token punctuation">:</span>/var/lib/mysql    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MARIADB_ROOT_PASSWORD=nextcloud      <span class="token punctuation">-</span> MARIADB_DATABASE=nextcloud      <span class="token punctuation">-</span> MARIADB_USER=nextcloud      <span class="token punctuation">-</span> MARIADB_PASSWORD=nextcloud  <span class="token key atrule">nextcloud</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nextcloud    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8181<span class="token punctuation">:</span><span class="token number">80</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> mariadb    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MYSQL_HOST=mariadb      <span class="token punctuation">-</span> MYSQL_DATABASE=nextcloud      <span class="token punctuation">-</span> MYSQL_USER=nextcloud      <span class="token punctuation">-</span> MYSQL_PASSWORD=nextcloud    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./nextcloud<span class="token punctuation">:</span>/var/www/html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Nextcloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MariaDB-单机部署</title>
      <link href="/2023/04/27/yun-wei/mariadb-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/mariadb-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>   <span class="token key atrule">mariadb</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mariadb    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai      <span class="token key atrule">MARIADB_ROOT_PASSWORD</span><span class="token punctuation">:</span> mariadb      <span class="token key atrule">MARIADB_DATABASE</span><span class="token punctuation">:</span> mariadb      <span class="token key atrule">MARIADB_USER</span><span class="token punctuation">:</span> mariadb      <span class="token key atrule">MARIADB_PASSWORD</span><span class="token punctuation">:</span> mariadb    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/lib/mysql      <span class="token comment"># - ./mariadb.cnf:/etc/mysql/mariadb.cnf</span>      <span class="token comment"># - ./my.cnf:/etc/mysql/my.cnf</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> MariaDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos-单机部署</title>
      <link href="/2023/04/27/yun-wei/nacos-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/nacos-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.8"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nacos</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nacos/nacos<span class="token punctuation">-</span>server    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PREFER_HOST_MODE=hostname      <span class="token punctuation">-</span> MODE=standalone      <span class="token punctuation">-</span> NACOS_AUTH_IDENTITY_KEY=serverIdentity      <span class="token punctuation">-</span> NACOS_AUTH_IDENTITY_VALUE=security      <span class="token punctuation">-</span> NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./standalone<span class="token punctuation">-</span>logs/<span class="token punctuation">:</span>/home/nacos/logs    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8848:8848"</span>      <span class="token punctuation">-</span> <span class="token string">"9848:9848"</span>  <span class="token key atrule">prometheus</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> prom/prometheus<span class="token punctuation">:</span>latest    <span class="token key atrule">restart</span><span class="token punctuation">:</span> on<span class="token punctuation">-</span>failure    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./prometheus<span class="token punctuation">-</span>standalone.yaml<span class="token punctuation">:</span>/etc/prometheus/prometheus.yml    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"9090:9090"</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> nacos  <span class="token key atrule">grafana</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> grafana/grafana<span class="token punctuation">:</span>latest    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3000<span class="token punctuation">:</span><span class="token number">3000</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> on<span class="token punctuation">-</span>failure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="prometheus-standalone-yaml">prometheus-standalone.yaml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># my global config</span><span class="token key atrule">global</span><span class="token punctuation">:</span>  <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span>     15s <span class="token comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span>  <span class="token key atrule">evaluation_interval</span><span class="token punctuation">:</span> 15s <span class="token comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span>  <span class="token comment"># scrape_timeout is set to the global default (10s).</span><span class="token comment"># Alertmanager configuration</span><span class="token key atrule">alerting</span><span class="token punctuation">:</span>  <span class="token key atrule">alertmanagers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>          <span class="token comment"># - alertmanager:9093</span><span class="token comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span><span class="token key atrule">rule_files</span><span class="token punctuation">:</span><span class="token comment"># - "first_rules.yml"</span><span class="token comment"># - "second_rules.yml"</span><span class="token comment"># A scrape configuration containing exactly one endpoint to scrape:</span><span class="token comment"># Here it's Prometheus itself.</span><span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span>  <span class="token comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span>  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'prometheus'</span>    <span class="token comment"># metrics_path defaults to '/metrics'</span>    <span class="token comment"># scheme defaults to 'http'.</span>    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'localhost:9090'</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'nacos'</span>    <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> <span class="token string">'/nacos/actuator/prometheus'</span>    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'nacos:8848'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>访问Nacos管理界面: <code>localhost:8848/nacos</code></p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-清理</title>
      <link href="/2023/04/27/yun-wei/docker-qing-li/"/>
      <url>/2023/04/27/yun-wei/docker-qing-li/</url>
      
        <content type="html"><![CDATA[<ul><li>容器清理: <code>docker container prune</code></li><li>镜像清理: <code>docker image prune</code></li><li>数据卷清理: <code>docker volume prune</code></li><li>缓存清理: <code>docker builder prune</code></li><li>一键清理: <code>docker system prune</code></li><li>深度清理: <code>docker system prune -a</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitlab-单机部署</title>
      <link href="/2023/04/27/yun-wei/gitlab-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/gitlab-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">gitlab</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'gitlab/gitlab-ce:latest'</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'82:80'</span>      <span class="token punctuation">-</span> <span class="token string">'10443:443'</span>      <span class="token punctuation">-</span> <span class="token string">'11022:22'</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./config:/etc/gitlab'</span>      <span class="token punctuation">-</span> <span class="token string">'./logs:/var/log/gitlab'</span>      <span class="token punctuation">-</span> <span class="token string">'./data:/var/opt/gitlab'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>GitLab 默认创建 root 用户和密码, root 用户密码查询:<br><code>docker exec -it gitlab grep 'Password:' /etc/gitlab/initial_root_password</code></p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nexus3-单机部署</title>
      <link href="/2023/04/27/yun-wei/nexus3-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/nexus3-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nexus</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'sonatype/nexus3'</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> TZ=Asia/Shanghai    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'8288:8081'</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./nexus-data:/nexus-data'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Nexus3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-容器启动时提示内存太小</title>
      <link href="/2023/04/27/yun-wei/docker-rong-qi-qi-dong-shi-ti-shi-nei-cun-tai-xiao/"/>
      <url>/2023/04/27/yun-wei/docker-rong-qi-qi-dong-shi-ti-shi-nei-cun-tai-xiao/</url>
      
        <content type="html"><![CDATA[<p>比如提示: <code>Maximum number of memory map areas per process (vm.max_map_count) 262144 is too low, recommended value: 1048575, you can change it with sysctl.</code> 之类的信息</p><p>可以使用这个命令解决 (提示应该设置多少就设置多少):<br><code>sysctl -w vm.max_map_count=1048575</code></p><p>如果是在win下的wsl中的docker desktop中运行的容器则使用这个命令:<br><code>wsl -d docker-desktop sh -c "sysctl -w vm.max_map_count=1048575"</code></p><p>然后重启docker服务即可</p>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cassandra-集群部署</title>
      <link href="/2023/04/27/yun-wei/cassandra-ji-qun-bu-shu/"/>
      <url>/2023/04/27/yun-wei/cassandra-ji-qun-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">cassandra-1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> cassandra<span class="token punctuation">:</span>latest    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"7000:7000"</span>      <span class="token punctuation">-</span> <span class="token string">"9042:9042"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token comment"># - /opt/module/docker-compose/cassandra.yaml:/opt/cassandra/conf/cassandra.yaml 配置文件</span>      <span class="token punctuation">-</span> ./cassandra<span class="token punctuation">-</span>1/cassandra<span class="token punctuation">:</span>/var/lib/cassandra    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CASSANDRA_BROADCAST_ADDRESS=cassandra<span class="token punctuation">-</span><span class="token number">1</span>  <span class="token key atrule">cassandra-2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> cassandra<span class="token punctuation">:</span>latest    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"7001:7000"</span>      <span class="token punctuation">-</span> <span class="token string">"9043:9042"</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> cassandra<span class="token punctuation">-</span><span class="token number">1</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token comment"># - /opt/module/docker-compose/cassandra.yaml:/opt/cassandra/conf/cassandra.yaml</span>      <span class="token punctuation">-</span> ./cassandra<span class="token punctuation">-</span>2/cassandra<span class="token punctuation">:</span>/var/lib/cassandra    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CASSANDRA_BROADCAST_ADDRESS=cassandra<span class="token punctuation">-</span><span class="token number">2</span>      <span class="token punctuation">-</span> CASSANDRA_SEEDS=cassandra<span class="token punctuation">-</span><span class="token number">1</span>  <span class="token key atrule">cassandra-3</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> cassandra<span class="token punctuation">:</span>latest    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"7002:7000"</span>      <span class="token punctuation">-</span> <span class="token string">"9044:9042"</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> cassandra<span class="token punctuation">-</span><span class="token number">2</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token comment"># - /opt/module/docker-compose/cassandra.yaml:/opt/cassandra/conf/cassandra.yaml</span>      <span class="token punctuation">-</span> ./cassandra<span class="token punctuation">-</span>3/cassandra<span class="token punctuation">:</span>/var/lib/cassandra    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CASSANDRA_BROADCAST_ADDRESS=cassandra<span class="token punctuation">-</span><span class="token number">3</span>      <span class="token punctuation">-</span> CASSANDRA_SEEDS=cassandra<span class="token punctuation">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>如果win下提示: <code>Maximum number of memory map areas per process (vm.max_map_count) 262144 is too low, recommended value: 1048575, you can change it with sysctl.</code>:  <code>wsl -d docker-desktop sh -c "sysctl -w vm.max_map_count=262144"</code></p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Cassandra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cassandra-单机部署</title>
      <link href="/2023/04/27/yun-wei/cassandra-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/cassandra-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.8"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">cassandra</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> cassandra<span class="token punctuation">:</span>latest    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 7000<span class="token punctuation">:</span><span class="token number">7000</span>      <span class="token punctuation">-</span> 7001<span class="token punctuation">:</span><span class="token number">7001</span>      <span class="token punctuation">-</span> 9042<span class="token punctuation">:</span><span class="token number">9042</span>      <span class="token punctuation">-</span> 9160<span class="token punctuation">:</span><span class="token number">9160</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./commitlog<span class="token punctuation">:</span>/var/lib/cassandra/commitlog      <span class="token punctuation">-</span> ./hints<span class="token punctuation">:</span>/var/lib/cassandra/hints      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/lib/cassandra/data      <span class="token punctuation">-</span> ./saved_caches<span class="token punctuation">:</span>/var/lib/cassandra/saved_caches      <span class="token punctuation">-</span> ./logs<span class="token punctuation">:</span>/var/log/cassandra<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Cassandra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ-单机部署</title>
      <link href="/2023/04/27/yun-wei/rocketmq-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/rocketmq-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">rmqnamesrv</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> rocketmqinc/rocketmq    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 9876<span class="token punctuation">:</span><span class="token number">9876</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">JAVA_OPT_EXT</span><span class="token punctuation">:</span> <span class="token string">"-server -Xms1g -Xmx1g"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./logs<span class="token punctuation">:</span>/root/logs    <span class="token key atrule">command</span><span class="token punctuation">:</span> sh mqnamesrv    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token key atrule">rmq</span><span class="token punctuation">:</span>        <span class="token key atrule">aliases</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> rmqnamesrv            <span class="token key atrule">rmqbroker</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> rocketmqinc/rocketmq    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> rmqnamesrv    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 10909<span class="token punctuation">:</span><span class="token number">10909</span>      <span class="token punctuation">-</span> 10911<span class="token punctuation">:</span><span class="token number">10911</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./logs<span class="token punctuation">:</span>/root/logs      <span class="token punctuation">-</span> ./store<span class="token punctuation">:</span>/root/store      <span class="token punctuation">-</span> ./broker.conf<span class="token punctuation">:</span>/opt/rocketmq<span class="token punctuation">-</span>4.4.0/conf/broker.conf    <span class="token key atrule">command</span><span class="token punctuation">:</span> sh mqbroker  <span class="token punctuation">-</span>c /opt/rocketmq<span class="token punctuation">-</span>4.4.0/conf/broker.conf    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">NAMESRV_ADDR</span><span class="token punctuation">:</span> <span class="token string">"rmqnamesrv:9876"</span>      <span class="token key atrule">JAVA_OPT_EXT</span><span class="token punctuation">:</span> <span class="token string">"-server -Xms1g -Xmx1g -Xmn1g"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token key atrule">rmq</span><span class="token punctuation">:</span>        <span class="token key atrule">aliases</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> rmqbroker            <span class="token key atrule">rmqconsole</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> styletang/rocketmq<span class="token punctuation">-</span>console<span class="token punctuation">-</span>ng    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> rmqnamesrv    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /home/rocketmq/console/logs<span class="token punctuation">:</span>/root/logs    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">JAVA_OPTS</span><span class="token punctuation">:</span> <span class="token string">"-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token key atrule">rmq</span><span class="token punctuation">:</span>        <span class="token key atrule">aliases</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> rmqconsole          <span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">rmq</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> rmq    <span class="token key atrule">driver</span><span class="token punctuation">:</span> bridge<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="broker-conf">broker.conf</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">brokerName</span> <span class="token punctuation">=</span> <span class="token value attr-value">broker-a  </span><span class="token key attr-name">brokerId</span> <span class="token punctuation">=</span> <span class="token value attr-value">0  </span><span class="token key attr-name">deleteWhen</span> <span class="token punctuation">=</span> <span class="token value attr-value">04  </span><span class="token key attr-name">fileReservedTime</span> <span class="token punctuation">=</span> <span class="token value attr-value">48  </span><span class="token key attr-name">brokerRole</span> <span class="token punctuation">=</span> <span class="token value attr-value">ASYNC_MASTER  </span><span class="token key attr-name">flushDiskType</span> <span class="token punctuation">=</span> <span class="token value attr-value">ASYNC_FLUSH  </span><span class="token comment"># 如果是本地程序调用云主机 mq，这个需要设置成 云主机 IP</span><span class="token comment"># brokerIP1=192.168.72.78</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ-单机部署</title>
      <link href="/2023/04/27/yun-wei/rabbitmq-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/rabbitmq-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> rabbitmq<span class="token punctuation">:</span>management    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 5672<span class="token punctuation">:</span><span class="token number">5672</span>      <span class="token punctuation">-</span> 15672<span class="token punctuation">:</span><span class="token number">15672</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai      <span class="token key atrule">RABBITMQ_DEFAULT_USER</span><span class="token punctuation">:</span> rabbit      <span class="token key atrule">RABBITMQ_DEFAULT_PASS</span><span class="token punctuation">:</span> <span class="token number">123456</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/lib/rabbitmq<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAProxy-TCP端口代理</title>
      <link href="/2023/04/27/coding/haproxy-tcp-duan-kou-dai-li/"/>
      <url>/2023/04/27/coding/haproxy-tcp-duan-kou-dai-li/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>   <span class="token key atrule">haproxy</span><span class="token punctuation">:</span>     <span class="token key atrule">image</span><span class="token punctuation">:</span> haproxy<span class="token punctuation">:</span>lts<span class="token punctuation">-</span>alpine    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 1080<span class="token punctuation">:</span><span class="token number">1080</span>      <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> ./haproxy.cfg<span class="token punctuation">:</span>/usr/local/etc/haproxy/haproxy.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="haproxy-cfg">haproxy.cfg</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties">defaults<span class="token key attr-name">    mode</span> <span class="token value attr-value">           tcp</span><span class="token key attr-name">    log</span> <span class="token value attr-value">            global</span><span class="token key attr-name">    option</span> <span class="token value attr-value">         tcplog</span><span class="token key attr-name">    option</span> <span class="token value attr-value">         dontlognull</span><span class="token key attr-name">    option</span> <span class="token value attr-value">http-server-close</span><span class="token key attr-name">    option</span> <span class="token value attr-value">         redispatch</span><span class="token key attr-name">    retries</span> <span class="token value attr-value">        3</span><span class="token key attr-name">    timeout</span> <span class="token value attr-value">http-request 10s</span><span class="token key attr-name">    timeout</span> <span class="token value attr-value">queue   1m</span><span class="token key attr-name">    timeout</span> <span class="token value attr-value">connect 10s</span><span class="token key attr-name">    timeout</span> <span class="token value attr-value">client  1m</span><span class="token key attr-name">    timeout</span> <span class="token value attr-value">server  1m</span><span class="token key attr-name">    timeout</span> <span class="token value attr-value">http-keep-alive 10s</span><span class="token key attr-name">    timeout</span> <span class="token value attr-value">check   10s</span><span class="token key attr-name">    maxconn</span> <span class="token value attr-value">        3000</span><span class="token key attr-name">frontend</span> <span class="token value attr-value">   mysql</span><span class="token key attr-name">    bind</span> <span class="token value attr-value">       0.0.0.0:3306</span><span class="token key attr-name">    mode</span> <span class="token value attr-value">       tcp</span><span class="token key attr-name">    log</span> <span class="token value attr-value">        global</span><span class="token key attr-name">    default_backend</span> <span class="token value attr-value">mysql_server</span><span class="token key attr-name">backend</span> <span class="token value attr-value">    mysql_server</span><span class="token key attr-name">    balance</span> <span class="token value attr-value">roundrobin</span><span class="token key attr-name">    server</span> <span class="token value attr-value">capital_mysql qbh.jiangxicheng.xyz:3306 check inter 5s rise 2 fall 3</span><span class="token key attr-name">listen</span> <span class="token value attr-value">stats</span><span class="token key attr-name">    mode</span> <span class="token value attr-value">   http</span><span class="token key attr-name">    bind</span> <span class="token value attr-value">   0.0.0.0:1080</span><span class="token key attr-name">    stats</span> <span class="token value attr-value">  enable</span><span class="token key attr-name">    stats</span> <span class="token value attr-value">  hide-version</span><span class="token key attr-name">    stats</span> <span class="token value attr-value">uri /haproxyamdin?stats</span><span class="token key attr-name">    stats</span> <span class="token value attr-value">realm Haproxy\ Statistics</span><span class="token key attr-name">    stats</span> <span class="token value attr-value">auth admin:admin</span><span class="token key attr-name">    stats</span> <span class="token value attr-value">admin if TRUE</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HAProxy </tag>
            
            <tag> docker-compose.yml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Memcached-单机部署</title>
      <link href="/2023/04/27/yun-wei/memcached-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/memcached-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.8"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">memcached</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> memcached    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 11211<span class="token punctuation">:</span><span class="token number">11211</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Memcached </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB-单机部署</title>
      <link href="/2023/04/27/yun-wei/mongodb-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/mongodb-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.8"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">mongodb</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 27017<span class="token punctuation">:</span><span class="token number">27017</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./database<span class="token punctuation">:</span>/data/db    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MONGO_INITDB_ROOT_USERNAME=admin      <span class="token punctuation">-</span> MONGO_INITDB_ROOT_PASSWORD=admin  <span class="token key atrule">mongo-express</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mongo<span class="token punctuation">-</span>express    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8081<span class="token punctuation">:</span><span class="token number">8081</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ME_CONFIG_MONGODB_ADMINUSERNAME=admin      <span class="token punctuation">-</span> ME_CONFIG_MONGODB_ADMINPASSWORD=admin      <span class="token punctuation">-</span> ME_CONFIG_MONGODB_SERVER=mongodb<span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> mongodb_network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis-单机部署</title>
      <link href="/2023/04/27/yun-wei/redis-dan-ji-bu-shu/"/>
      <url>/2023/04/27/yun-wei/redis-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>   <span class="token key atrule">redis</span><span class="token punctuation">:</span>     <span class="token key atrule">image</span><span class="token punctuation">:</span> redis<span class="token punctuation">:</span>latest     <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped     <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>     <span class="token key atrule">ports</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> <span class="token string">"6379:6379"</span>       <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> ./redis.conf<span class="token punctuation">:</span>/etc/redis/redis.conf        <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/data         <span class="token key atrule">command</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>server /etc/redis/redis.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="redis-conf">redis.conf</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">bind</span> <span class="token value attr-value">0.0.0.0</span><span class="token key attr-name">protected-mode</span> <span class="token value attr-value">yes</span><span class="token key attr-name">port</span> <span class="token value attr-value">6379</span><span class="token key attr-name">tcp-backlog</span> <span class="token value attr-value">511</span><span class="token key attr-name">daemonize</span> <span class="token value attr-value">no</span><span class="token key attr-name">supervised</span> <span class="token value attr-value">no</span><span class="token key attr-name">pidfile</span> <span class="token value attr-value">/var/run/redis_6379.pid</span><span class="token key attr-name">loglevel</span> <span class="token value attr-value">notice</span><span class="token key attr-name">logfile</span> <span class="token value attr-value">""</span><span class="token key attr-name">databases</span> <span class="token value attr-value">16</span><span class="token key attr-name">always-show-logo</span> <span class="token value attr-value">yes</span><span class="token key attr-name">save</span> <span class="token value attr-value">900 1</span><span class="token key attr-name">save</span> <span class="token value attr-value">300 10</span><span class="token key attr-name">save</span> <span class="token value attr-value">60 10000</span><span class="token key attr-name">stop-writes-on-bgsave-error</span> <span class="token value attr-value">yes</span><span class="token key attr-name">rdbcompression</span> <span class="token value attr-value">yes</span><span class="token key attr-name">rdbchecksum</span> <span class="token value attr-value">yes</span><span class="token key attr-name">dbfilename</span> <span class="token value attr-value">dump.rdb</span><span class="token key attr-name">replica-serve-stale-data</span> <span class="token value attr-value">yes</span><span class="token key attr-name">repl-diskless-sync</span> <span class="token value attr-value">no</span><span class="token key attr-name">repl-diskless-sync-delay</span> <span class="token value attr-value">5</span><span class="token key attr-name">repl-diskless-load</span> <span class="token value attr-value">disabled</span><span class="token key attr-name">repl-disable-tcp-nodelay</span> <span class="token value attr-value">no</span><span class="token key attr-name">replica-priority</span> <span class="token value attr-value">100</span><span class="token key attr-name">acllog-max-len</span> <span class="token value attr-value">128</span><span class="token key attr-name">lazyfree-lazy-eviction</span> <span class="token value attr-value">no</span><span class="token key attr-name">lazyfree-lazy-expire</span> <span class="token value attr-value">no</span><span class="token key attr-name">lazyfree-lazy-server-del</span> <span class="token value attr-value">no</span><span class="token key attr-name">replica-lazy-flush</span> <span class="token value attr-value">no</span><span class="token key attr-name">lazyfree-lazy-user-del</span> <span class="token value attr-value">no</span><span class="token key attr-name">oom-score-adj</span> <span class="token value attr-value">no</span><span class="token key attr-name">oom-score-adj-values</span> <span class="token value attr-value">0 200 800</span><span class="token key attr-name">appendonly</span> <span class="token value attr-value">no</span><span class="token key attr-name">appendfilename</span> <span class="token value attr-value">"appendonly.aof"</span><span class="token key attr-name">appendfsync</span> <span class="token value attr-value">everysec</span><span class="token key attr-name">no-appendfsync-on-rewrite</span> <span class="token value attr-value">no</span><span class="token key attr-name">auto-aof-rewrite-percentage</span> <span class="token value attr-value">100</span><span class="token key attr-name">auto-aof-rewrite-min-size</span> <span class="token value attr-value">64mb</span><span class="token key attr-name">aof-load-truncated</span> <span class="token value attr-value">yes</span><span class="token key attr-name">aof-use-rdb-preamble</span> <span class="token value attr-value">yes</span><span class="token key attr-name">lua-time-limit</span> <span class="token value attr-value">5000</span><span class="token key attr-name">slowlog-log-slower-than</span> <span class="token value attr-value">10000</span><span class="token key attr-name">slowlog-max-len</span> <span class="token value attr-value">128</span><span class="token key attr-name">latency-monitor-threshold</span> <span class="token value attr-value">0</span><span class="token key attr-name">notify-keyspace-events</span> <span class="token value attr-value">""</span><span class="token key attr-name">hash-max-ziplist-entries</span> <span class="token value attr-value">512</span><span class="token key attr-name">hash-max-ziplist-value</span> <span class="token value attr-value">64</span><span class="token key attr-name">list-max-ziplist-size</span> <span class="token value attr-value">-2</span><span class="token key attr-name">list-compress-depth</span> <span class="token value attr-value">0</span><span class="token key attr-name">set-max-intset-entries</span> <span class="token value attr-value">512</span><span class="token key attr-name">zset-max-ziplist-entries</span> <span class="token value attr-value">128</span><span class="token key attr-name">zset-max-ziplist-value</span> <span class="token value attr-value">64</span><span class="token key attr-name">hll-sparse-max-bytes</span> <span class="token value attr-value">3000</span><span class="token key attr-name">stream-node-max-bytes</span> <span class="token value attr-value">4096</span><span class="token key attr-name">stream-node-max-entries</span> <span class="token value attr-value">100</span><span class="token key attr-name">activerehashing</span> <span class="token value attr-value">yes</span><span class="token key attr-name">client-output-buffer-limit</span> <span class="token value attr-value">normal 0 0 0</span><span class="token key attr-name">client-output-buffer-limit</span> <span class="token value attr-value">replica 256mb 64mb 60</span><span class="token key attr-name">client-output-buffer-limit</span> <span class="token value attr-value">pubsub 32mb 8mb 60</span><span class="token key attr-name">hz</span> <span class="token value attr-value">10</span><span class="token key attr-name">dynamic-hz</span> <span class="token value attr-value">yes</span><span class="token key attr-name">aof-rewrite-incremental-fsync</span> <span class="token value attr-value">yes</span><span class="token key attr-name">rdb-save-incremental-fsync</span> <span class="token value attr-value">yes</span><span class="token key attr-name">jemalloc-bg-thread</span> <span class="token value attr-value">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230426-手动回测指标而非使用算法</title>
      <link href="/2023/04/26/ri-ji/ri-ji-20230426-shou-dong-hui-ce-zhi-biao-er-fei-shi-yong-suan-fa/"/>
      <url>/2023/04/26/ri-ji/ri-ji-20230426-shou-dong-hui-ce-zhi-biao-er-fei-shi-yong-suan-fa/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="3cc5e9f86b587fbfd62bba76ba0204d34732f20901b94b736c2a25b09a68666c">775986d9acbb0b15ae59994c4d3eed1040adafec290ee364670e45ce83de0310d4762a6342b4b86bafb7f394aa4643ed7742a1570a3ec562e59a95d2e628c05c25b3c2e223675d4694f6061bb2ba6c69bb44e98683f8458ae7b2c5d34e8c3993add6e9abcd305a5bd6cce19842c12cb03ba2655fe11d362c18166f125eea945f61ac9e121a88c0be8bc5b853ed3f3e405e380f9ac7633bd36106512a2009e38508c577848e74443e56580e2cb902dd5cf547d7705a3f3b761adeb6e45e18c38cb2353cd446d6fe827bdfc7a7632a670705649e6e503dcf3cf62198c60e64c5f4f9d66b795d025cb7cb2de4a55819ab611ad7c207ec3f28dad59dd3c2e2371d477b4b64b2005a174b71ded6320f2169cebac36e5c2c5f2c02c95f6c86975de4f372e0298fb401b5824a5718fda16d21e5485041c1fc98a0bc96e9574b2446fc6b0dbb97da1de955462c026d07c6ec66d09725e58637cd91f5514092c53b6b255cd8e3d1999caaf18d34c5a601590da46b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elasticsearch-集群部署</title>
      <link href="/2023/04/26/yun-wei/elasticsearch-ji-qun-bu-shu/"/>
      <url>/2023/04/26/yun-wei/elasticsearch-ji-qun-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="env">.env</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment"># elastic账号的密码 (至少六个字符)</span><span class="token key attr-name">ELASTIC_PASSWORD</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span><span class="token comment"># kibana_system账号的密码 (至少六个字符)，该账号仅用于一些kibana的内部设置，不能用来查询es</span><span class="token key attr-name">KIBANA_PASSWORD</span><span class="token punctuation">=</span><span class="token value attr-value">abcdef</span><span class="token comment"># es和kibana的版本</span><span class="token comment"># STACK_VERSION=8.2.2</span><span class="token key attr-name">STACK_VERSION</span><span class="token punctuation">=</span><span class="token value attr-value">8.7.0</span><span class="token comment"># 集群名字</span><span class="token key attr-name">CLUSTER_NAME</span><span class="token punctuation">=</span><span class="token value attr-value">es-cluster</span><span class="token comment"># x-pack安全设置，这里选择basic，基础设置，如果选择了trail，则会在30天后到期</span><span class="token key attr-name">LICENSE</span><span class="token punctuation">=</span><span class="token value attr-value">basic</span><span class="token comment">#LICENSE=trial</span><span class="token comment"># es映射到宿主机的的端口</span><span class="token key attr-name">ES_PORT</span><span class="token punctuation">=</span><span class="token value attr-value">9200</span><span class="token comment"># kibana映射到宿主机的的端口</span><span class="token key attr-name">KIBANA_PORT</span><span class="token punctuation">=</span><span class="token value attr-value">5601</span><span class="token comment"># es容器的内存大小，请根据自己硬件情况调整</span><span class="token key attr-name">MEM_LIMIT</span><span class="token punctuation">=</span><span class="token value attr-value">1073741824</span><span class="token comment"># 命名空间，会体现在容器名的前缀上</span><span class="token key attr-name">COMPOSE_PROJECT_NAME</span><span class="token punctuation">=</span><span class="token value attr-value">es</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"2.2"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">setup</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> elasticsearch<span class="token punctuation">:</span>$<span class="token punctuation">{</span>STACK_VERSION<span class="token punctuation">}</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> certs<span class="token punctuation">:</span>/usr/share/elasticsearch/config/certs    <span class="token key atrule">user</span><span class="token punctuation">:</span> <span class="token string">"0"</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token scalar string">      bash -c '        if [ x${ELASTIC_PASSWORD} == x ]; then          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";          exit 1;        elif [ x${KIBANA_PASSWORD} == x ]; then          echo "Set the KIBANA_PASSWORD environment variable in the .env file";          exit 1;        fi;        if [ ! -f config/certs/ca.zip ]; then          echo "Creating CA";          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;          unzip config/certs/ca.zip -d config/certs;        fi;        if [ ! -f config/certs/certs.zip ]; then          echo "Creating certs";          echo -ne \          "instances:\n"\          "  - name: es01\n"\          "    dns:\n"\          "      - es01\n"\          "      - localhost\n"\          "    ip:\n"\          "      - 127.0.0.1\n"\          "  - name: es02\n"\          "    dns:\n"\          "      - es02\n"\          "      - localhost\n"\          "    ip:\n"\          "      - 127.0.0.1\n"\          "  - name: es03\n"\          "    dns:\n"\          "      - es03\n"\          "      - localhost\n"\          "    ip:\n"\          "      - 127.0.0.1\n"\          &gt; config/certs/instances.yml;          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;          unzip config/certs/certs.zip -d config/certs;        fi;        echo "Setting file permissions"        chown -R root:root config/certs;        find . -type d -exec chmod 750 \{\} \;;        find . -type f -exec chmod 640 \{\} \;;        echo "Waiting for Elasticsearch availability";        until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;        echo "Setting kibana_system password";        until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:${ELASTIC_PASSWORD} -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;        echo "All done!";      '</span>    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>      <span class="token key atrule">test</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"CMD-SHELL"</span><span class="token punctuation">,</span> <span class="token string">"[ -f config/certs/es01/es01.crt ]"</span><span class="token punctuation">]</span>      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 1s      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 5s      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">120</span>  <span class="token key atrule">es01</span><span class="token punctuation">:</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token key atrule">setup</span><span class="token punctuation">:</span>        <span class="token key atrule">condition</span><span class="token punctuation">:</span> service_healthy    <span class="token key atrule">image</span><span class="token punctuation">:</span> elasticsearch<span class="token punctuation">:</span>$<span class="token punctuation">{</span>STACK_VERSION<span class="token punctuation">}</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> certs<span class="token punctuation">:</span>/usr/share/elasticsearch/config/certs      <span class="token punctuation">-</span> esdata01<span class="token punctuation">:</span>/usr/share/elasticsearch/data    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> $<span class="token punctuation">{</span>ES_PORT<span class="token punctuation">}</span><span class="token punctuation">:</span><span class="token number">9200</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> node.name=es01      <span class="token punctuation">-</span> cluster.name=$<span class="token punctuation">{</span>CLUSTER_NAME<span class="token punctuation">}</span>      <span class="token punctuation">-</span> cluster.initial_master_nodes=es01<span class="token punctuation">,</span>es02<span class="token punctuation">,</span>es03      <span class="token punctuation">-</span> discovery.seed_hosts=es02<span class="token punctuation">,</span>es03      <span class="token punctuation">-</span> ELASTIC_PASSWORD=$<span class="token punctuation">{</span>ELASTIC_PASSWORD<span class="token punctuation">}</span>      <span class="token punctuation">-</span> bootstrap.memory_lock=true      <span class="token punctuation">-</span> xpack.security.enabled=true      <span class="token punctuation">-</span> xpack.security.http.ssl.enabled=true      <span class="token punctuation">-</span> xpack.security.http.ssl.key=certs/es01/es01.key      <span class="token punctuation">-</span> xpack.security.http.ssl.certificate=certs/es01/es01.crt      <span class="token punctuation">-</span> xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt      <span class="token punctuation">-</span> xpack.security.http.ssl.verification_mode=certificate      <span class="token punctuation">-</span> xpack.security.transport.ssl.enabled=true      <span class="token punctuation">-</span> xpack.security.transport.ssl.key=certs/es01/es01.key      <span class="token punctuation">-</span> xpack.security.transport.ssl.certificate=certs/es01/es01.crt      <span class="token punctuation">-</span> xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt      <span class="token punctuation">-</span> xpack.security.transport.ssl.verification_mode=certificate      <span class="token punctuation">-</span> xpack.license.self_generated.type=$<span class="token punctuation">{</span>LICENSE<span class="token punctuation">}</span>    <span class="token key atrule">mem_limit</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>MEM_LIMIT<span class="token punctuation">}</span>    <span class="token key atrule">ulimits</span><span class="token punctuation">:</span>      <span class="token key atrule">memlock</span><span class="token punctuation">:</span>        <span class="token key atrule">soft</span><span class="token punctuation">:</span> <span class="token number">-1</span>        <span class="token key atrule">hard</span><span class="token punctuation">:</span> <span class="token number">-1</span>    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>      <span class="token key atrule">test</span><span class="token punctuation">:</span>        <span class="token punctuation">[</span>          <span class="token string">"CMD-SHELL"</span><span class="token punctuation">,</span>          <span class="token string">"curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">120</span>  <span class="token key atrule">es02</span><span class="token punctuation">:</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> es01    <span class="token key atrule">image</span><span class="token punctuation">:</span> elasticsearch<span class="token punctuation">:</span>$<span class="token punctuation">{</span>STACK_VERSION<span class="token punctuation">}</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> certs<span class="token punctuation">:</span>/usr/share/elasticsearch/config/certs      <span class="token punctuation">-</span> esdata02<span class="token punctuation">:</span>/usr/share/elasticsearch/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> node.name=es02      <span class="token punctuation">-</span> cluster.name=$<span class="token punctuation">{</span>CLUSTER_NAME<span class="token punctuation">}</span>      <span class="token punctuation">-</span> cluster.initial_master_nodes=es01<span class="token punctuation">,</span>es02<span class="token punctuation">,</span>es03      <span class="token punctuation">-</span> discovery.seed_hosts=es01<span class="token punctuation">,</span>es03      <span class="token punctuation">-</span> bootstrap.memory_lock=true      <span class="token punctuation">-</span> xpack.security.enabled=true      <span class="token punctuation">-</span> xpack.security.http.ssl.enabled=true      <span class="token punctuation">-</span> xpack.security.http.ssl.key=certs/es02/es02.key      <span class="token punctuation">-</span> xpack.security.http.ssl.certificate=certs/es02/es02.crt      <span class="token punctuation">-</span> xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt      <span class="token punctuation">-</span> xpack.security.http.ssl.verification_mode=certificate      <span class="token punctuation">-</span> xpack.security.transport.ssl.enabled=true      <span class="token punctuation">-</span> xpack.security.transport.ssl.key=certs/es02/es02.key      <span class="token punctuation">-</span> xpack.security.transport.ssl.certificate=certs/es02/es02.crt      <span class="token punctuation">-</span> xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt      <span class="token punctuation">-</span> xpack.security.transport.ssl.verification_mode=certificate      <span class="token punctuation">-</span> xpack.license.self_generated.type=$<span class="token punctuation">{</span>LICENSE<span class="token punctuation">}</span>    <span class="token key atrule">mem_limit</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>MEM_LIMIT<span class="token punctuation">}</span>    <span class="token key atrule">ulimits</span><span class="token punctuation">:</span>      <span class="token key atrule">memlock</span><span class="token punctuation">:</span>        <span class="token key atrule">soft</span><span class="token punctuation">:</span> <span class="token number">-1</span>        <span class="token key atrule">hard</span><span class="token punctuation">:</span> <span class="token number">-1</span>    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>      <span class="token key atrule">test</span><span class="token punctuation">:</span>        <span class="token punctuation">[</span>          <span class="token string">"CMD-SHELL"</span><span class="token punctuation">,</span>          <span class="token string">"curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">120</span>  <span class="token key atrule">es03</span><span class="token punctuation">:</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> es02    <span class="token key atrule">image</span><span class="token punctuation">:</span> elasticsearch<span class="token punctuation">:</span>$<span class="token punctuation">{</span>STACK_VERSION<span class="token punctuation">}</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> certs<span class="token punctuation">:</span>/usr/share/elasticsearch/config/certs      <span class="token punctuation">-</span> esdata03<span class="token punctuation">:</span>/usr/share/elasticsearch/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> node.name=es03      <span class="token punctuation">-</span> cluster.name=$<span class="token punctuation">{</span>CLUSTER_NAME<span class="token punctuation">}</span>      <span class="token punctuation">-</span> cluster.initial_master_nodes=es01<span class="token punctuation">,</span>es02<span class="token punctuation">,</span>es03      <span class="token punctuation">-</span> discovery.seed_hosts=es01<span class="token punctuation">,</span>es02      <span class="token punctuation">-</span> bootstrap.memory_lock=true      <span class="token punctuation">-</span> xpack.security.enabled=true      <span class="token punctuation">-</span> xpack.security.http.ssl.enabled=true      <span class="token punctuation">-</span> xpack.security.http.ssl.key=certs/es03/es03.key      <span class="token punctuation">-</span> xpack.security.http.ssl.certificate=certs/es03/es03.crt      <span class="token punctuation">-</span> xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt      <span class="token punctuation">-</span> xpack.security.http.ssl.verification_mode=certificate      <span class="token punctuation">-</span> xpack.security.transport.ssl.enabled=true      <span class="token punctuation">-</span> xpack.security.transport.ssl.key=certs/es03/es03.key      <span class="token punctuation">-</span> xpack.security.transport.ssl.certificate=certs/es03/es03.crt      <span class="token punctuation">-</span> xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt      <span class="token punctuation">-</span> xpack.security.transport.ssl.verification_mode=certificate      <span class="token punctuation">-</span> xpack.license.self_generated.type=$<span class="token punctuation">{</span>LICENSE<span class="token punctuation">}</span>    <span class="token key atrule">mem_limit</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>MEM_LIMIT<span class="token punctuation">}</span>    <span class="token key atrule">ulimits</span><span class="token punctuation">:</span>      <span class="token key atrule">memlock</span><span class="token punctuation">:</span>        <span class="token key atrule">soft</span><span class="token punctuation">:</span> <span class="token number">-1</span>        <span class="token key atrule">hard</span><span class="token punctuation">:</span> <span class="token number">-1</span>    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>      <span class="token key atrule">test</span><span class="token punctuation">:</span>        <span class="token punctuation">[</span>          <span class="token string">"CMD-SHELL"</span><span class="token punctuation">,</span>          <span class="token string">"curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">120</span>  <span class="token key atrule">kibana</span><span class="token punctuation">:</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token key atrule">es01</span><span class="token punctuation">:</span>        <span class="token key atrule">condition</span><span class="token punctuation">:</span> service_healthy      <span class="token key atrule">es02</span><span class="token punctuation">:</span>        <span class="token key atrule">condition</span><span class="token punctuation">:</span> service_healthy      <span class="token key atrule">es03</span><span class="token punctuation">:</span>        <span class="token key atrule">condition</span><span class="token punctuation">:</span> service_healthy    <span class="token key atrule">image</span><span class="token punctuation">:</span> kibana<span class="token punctuation">:</span>$<span class="token punctuation">{</span>STACK_VERSION<span class="token punctuation">}</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> certs<span class="token punctuation">:</span>/usr/share/kibana/config/certs      <span class="token punctuation">-</span> kibanadata<span class="token punctuation">:</span>/usr/share/kibana/data    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> $<span class="token punctuation">{</span>KIBANA_PORT<span class="token punctuation">}</span><span class="token punctuation">:</span><span class="token number">5601</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> SERVERNAME=kibana      <span class="token punctuation">-</span> ELASTICSEARCH_HOSTS=https<span class="token punctuation">:</span>//es01<span class="token punctuation">:</span><span class="token number">9200</span>      <span class="token punctuation">-</span> ELASTICSEARCH_USERNAME=kibana_system      <span class="token punctuation">-</span> ELASTICSEARCH_PASSWORD=$<span class="token punctuation">{</span>KIBANA_PASSWORD<span class="token punctuation">}</span>      <span class="token punctuation">-</span> ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt    <span class="token key atrule">mem_limit</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>MEM_LIMIT<span class="token punctuation">}</span>    <span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>      <span class="token key atrule">test</span><span class="token punctuation">:</span>        <span class="token punctuation">[</span>          <span class="token string">"CMD-SHELL"</span><span class="token punctuation">,</span>          <span class="token string">"curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 10s      <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">certs</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local  <span class="token key atrule">esdata01</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local  <span class="token key atrule">esdata02</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local  <span class="token key atrule">esdata03</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local  <span class="token key atrule">kibanadata</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>验证:</p><ul><li><a href="https://localhost:9200/">https://localhost:9200/</a></li><li><a href="http://localhost:5601/">http://localhost:5601/</a></li></ul><p>setup command 中已经配置了:</p><ul><li>用户名: elastic</li><li>密码: 123456</li></ul><hr><p>如果win下提示: <code>max virtual memory areas vm.max_map_count [65530] is too low</code>:<br><code>wsl -d docker-desktop sh -c "sysctl -w vm.max_map_count=262144"</code></p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keycloak-单机部署</title>
      <link href="/2023/04/26/yun-wei/keycloak-dan-ji-bu-shu/"/>
      <url>/2023/04/26/yun-wei/keycloak-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">postgresql</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 5433<span class="token punctuation">:</span><span class="token number">5432</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_USER=keycloak      <span class="token punctuation">-</span> POSTGRES_DB=keycloak      <span class="token punctuation">-</span> POSTGRES_PASSWORD=keycloak    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> postgresql_data<span class="token punctuation">:</span>/bitnami/postgresql  <span class="token key atrule">keycloak</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/bitnami/keycloak<span class="token punctuation">:</span>latest    <span class="token comment"># restart: unless-stopped</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8088:8080"</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> KEYCLOAK_CREATE_ADMIN_USER=true      <span class="token punctuation">-</span> KEYCLOAK_ADMIN_USER=user      <span class="token punctuation">-</span> KEYCLOAK_ADMIN_PASSWORD=password      <span class="token punctuation">-</span> KEYCLOAK_MANAGEMENT_USER=manager      <span class="token punctuation">-</span> KEYCLOAK_MANAGEMENT_PASSWORD=password      <span class="token punctuation">-</span> KEYCLOAK_DATABASE_HOST=postgresql      <span class="token punctuation">-</span> KEYCLOAK_DATABASE_PORT=5432      <span class="token punctuation">-</span> KEYCLOAK_DATABASE_NAME=keycloak      <span class="token punctuation">-</span> KEYCLOAK_DATABASE_USER=keycloak      <span class="token punctuation">-</span> KEYCLOAK_DATABASE_SCHEMA=public      <span class="token punctuation">-</span> KEYCLOAK_DATABASE_PASSWORD=keycloak    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> postgresql    <span class="token key atrule">links</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> postgresql    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> keycloak_data<span class="token punctuation">:</span>/opt/bitnami/keycloak<span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">postgresql_data</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local  <span class="token key atrule">keycloak_data</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Keycloak </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Storm-单机部署</title>
      <link href="/2023/04/26/yun-wei/storm-dan-ji-bu-shu/"/>
      <url>/2023/04/26/yun-wei/storm-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped  <span class="token key atrule">nimbus</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> storm    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> zookeeper    <span class="token key atrule">links</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> zookeeper    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 6627<span class="token punctuation">:</span><span class="token number">6627</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> storm nimbus  <span class="token key atrule">supervisor</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> storm    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> nimbus      <span class="token punctuation">-</span> zookeeper    <span class="token key atrule">links</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> nimbus      <span class="token punctuation">-</span> zookeeper    <span class="token key atrule">command</span><span class="token punctuation">:</span> storm supervisor      <span class="token key atrule">ui</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> storm    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> nimbus    <span class="token key atrule">links</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> nimbus    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8082<span class="token punctuation">:</span><span class="token number">8080</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> storm ui<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Storm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink-单机部署</title>
      <link href="/2023/04/26/yun-wei/flink-dan-ji-bu-shu/"/>
      <url>/2023/04/26/yun-wei/flink-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.8"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">jobmanager</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> flink    <span class="token key atrule">expose</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"6123"</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8081:8081"</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> JOB_MANAGER_RPC_ADDRESS=jobmanager    <span class="token key atrule">command</span><span class="token punctuation">:</span> jobmanager  <span class="token key atrule">taskmanager</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> flink    <span class="token key atrule">expose</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"6121"</span>      <span class="token punctuation">-</span> <span class="token string">"6122"</span>    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> jobmanager    <span class="token key atrule">links</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"jobmanager:jobmanager"</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> JOB_MANAGER_RPC_ADDRESS=jobmanager    <span class="token key atrule">command</span><span class="token punctuation">:</span> taskmanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark-集群部署[DockerSwarm]</title>
      <link href="/2023/04/26/yun-wei/spark-ji-qun-bu-shu-dockerswarm/"/>
      <url>/2023/04/26/yun-wei/spark-ji-qun-bu-shu-dockerswarm/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">master</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bitnami/spark    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> SPARK_MODE=master      <span class="token punctuation">-</span> SPARK_RPC_AUTHENTICATION_ENABLED=no      <span class="token punctuation">-</span> SPARK_RPC_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_SSL_ENABLED=no    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'8080:8080'</span>      <span class="token punctuation">-</span> <span class="token string">'7077:7077'</span>  <span class="token key atrule">worker1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bitnami/spark    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> SPARK_MODE=worker      <span class="token punctuation">-</span> SPARK_MASTER_URL=spark<span class="token punctuation">:</span>//master<span class="token punctuation">:</span><span class="token number">7077</span>      <span class="token punctuation">-</span> SPARK_WORKER_MEMORY=1G      <span class="token punctuation">-</span> SPARK_WORKER_CORES=1      <span class="token punctuation">-</span> SPARK_RPC_AUTHENTICATION_ENABLED=no      <span class="token punctuation">-</span> SPARK_RPC_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_SSL_ENABLED=no  <span class="token key atrule">worker2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bitnami/spark    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> SPARK_MODE=worker      <span class="token punctuation">-</span> SPARK_MASTER_URL=spark<span class="token punctuation">:</span>//master<span class="token punctuation">:</span><span class="token number">7077</span>      <span class="token punctuation">-</span> SPARK_WORKER_MEMORY=1G      <span class="token punctuation">-</span> SPARK_WORKER_CORES=1      <span class="token punctuation">-</span> SPARK_RPC_AUTHENTICATION_ENABLED=no      <span class="token punctuation">-</span> SPARK_RPC_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_SSL_ENABLED=no  <span class="token key atrule">worker3</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bitnami/spark    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> SPARK_MODE=worker      <span class="token punctuation">-</span> SPARK_MASTER_URL=spark<span class="token punctuation">:</span>//master<span class="token punctuation">:</span><span class="token number">7077</span>      <span class="token punctuation">-</span> SPARK_WORKER_MEMORY=1G      <span class="token punctuation">-</span> SPARK_WORKER_CORES=1      <span class="token punctuation">-</span> SPARK_RPC_AUTHENTICATION_ENABLED=no      <span class="token punctuation">-</span> SPARK_RPC_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_SSL_ENABLED=no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark-单机部署</title>
      <link href="/2023/04/26/yun-wei/spark-dan-ji-bu-shu/"/>
      <url>/2023/04/26/yun-wei/spark-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">master</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bitnami/spark    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> SPARK_MODE=master      <span class="token punctuation">-</span> SPARK_RPC_AUTHENTICATION_ENABLED=no      <span class="token punctuation">-</span> SPARK_RPC_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_SSL_ENABLED=no    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'8080:8080'</span>      <span class="token punctuation">-</span> <span class="token string">'7077:7077'</span>  <span class="token key atrule">worker1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bitnami/spark    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> SPARK_MODE=worker      <span class="token punctuation">-</span> SPARK_MASTER_URL=spark<span class="token punctuation">:</span>//master<span class="token punctuation">:</span><span class="token number">7077</span>      <span class="token punctuation">-</span> SPARK_WORKER_MEMORY=1G      <span class="token punctuation">-</span> SPARK_WORKER_CORES=1      <span class="token punctuation">-</span> SPARK_RPC_AUTHENTICATION_ENABLED=no      <span class="token punctuation">-</span> SPARK_RPC_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no      <span class="token punctuation">-</span> SPARK_SSL_ENABLED=no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引-软件</title>
      <link href="/2023/04/26/suo-yin/suo-yin-ruan-jian/"/>
      <url>/2023/04/26/suo-yin/suo-yin-ruan-jian/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>功能</th><th>软件</th><th>备注</th></tr></thead><tbody><tr><td>视频生成字幕</td><td><a href="https://github.com/chidiwilliams/buzz/releases">Buzz</a></td><td></td></tr><tr><td>视频声音提取</td><td><a href="https://github.com/Anjok07/ultimatevocalremovergui/releases">UVR GUI</a></td><td></td></tr><tr><td>分应用代理</td><td><a href="https://www.proxifier.com/download/">Proxifier</a></td><td><a href="/2023/03/25/coding/proxifier-zhu-ce-ma/" title="proxifier-注册码">proxifier-注册码</a></td></tr><tr><td>代理软件</td><td><a href="https://github.com/2dust/v2rayN/releases">v2rayN</a></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 索引 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230424-Brooks-S&amp;P Emini</title>
      <link href="/2023/04/26/shi-chang-fen-xi/shi-chang-fen-xi-20230424-brooks-s-p-emini/"/>
      <url>/2023/04/26/shi-chang-fen-xi/shi-chang-fen-xi-20230424-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Thursday April 24, 2023</font></p><h1><font color="green">S&amp;P Emini pre-open market analysis</font></h1><h2 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230424-Emini-Daily-Chart-Tight-Trading-Range-at-4150-768x432.jpg" alt="Emini daily chart"></p><ul><li>The Emini sold off, testing last Friday’s low, and rallied above the open, creating a bull reversal bar. Bulls upside breakout wanted above April 18th high.<ul><li><font color="gray">Emini 抛售，测试上周五的低点，并在开盘价上方反弹，形成牛市反转柱。多头希望突破 4 月 18 日的高点。</font></li></ul></li><li>At the moment, the odds slightly favor the upside breakout and test of the February 2nd high; however, if the probability truly favored the bulls, we would not be going sideways here.<ul><li><font color="gray">目前，上行突破和测试 2 月 2 日高点的可能性略大；然而，如果概率真的有利于多头，我们就不会在这里横盘整理。</font></li></ul></li><li>The market continues to find support near the moving average (blue line) and 4,150.<ul><li><font color="gray">市场继续在移动平均线（蓝线）和 4,150 附近找到支撑。</font></li></ul></li><li>There are two important targets above and below. They are the 4,000 big round number and 4,300, the measured move projection from the March 13th low to the March 22nd high.<ul><li><font color="gray">上面和下面有两个重要的目标。它们是 4,000 大整数和 4,300，即从 3 月 13 日低点到 3 月 22 日高点的测量移动预测。</font></li></ul></li><li>It is common for the market to go sideways in the middle of an important support and resistance level. Looking at the chart, 4,150 is right in between the two important magnets mentioned above, which increases the odds more sideways trading around 4,150.<ul><li><font color="gray">市场在重要的支撑位和阻力位中间横盘整理是很常见的。从图表上看，4,150 恰好位于上述两个重要磁铁之间，这增加了在 4,150 附近横向交易的可能性。</font></li></ul></li><li>Since the market has been sideways for more than 12 bars, it is in breakout mode, which means the probability is close to 50% for a breakout up or down.<ul><li><font color="gray">由于市场横盘超过 12 根柱线，它处于突破模式，这意味着向上或向下突破的可能性接近 50%。</font></li></ul></li><li>Also, the market has been above the moving average for 18 bars, another sign of strength by the bulls.<ul><li><font color="gray">此外，市场已经超过移动平均线 18 根柱线，这是多头力量的另一个迹象。</font></li></ul></li><li>Overall, most traders should wait for a breakout up or down. If the bulls or bears start to get consecutive strong trend bars, the probability will increase for a successful breakout.<ul><li><font color="gray">总的来说，大多数交易者应该等待向上或向下的突破。如果多头或空头开始出现连续的强趋势条，成功突破的可能性就会增加。</font></li></ul></li></ul><h2 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h2><ul><li>Emini is down 18 points in the overnight Globex session.</li><li>The overnight Globex session sold off but failed to break below the April 24th low.<ul><li><font color="gray">隔夜 Globex 交易时段出现抛售，但未能跌破 4 月 24 日的低点。</font></li></ul></li><li>The bulls see the early selloff below the April 24th low as a 2nd leg trap following yesterday’s late selloff after the U.S. Session closed.<ul><li><font color="gray">多头将 4 月 24 日低点下方的早盘抛售视为继昨天美国时段收盘后的尾盘抛售之后的第二条腿陷阱。</font></li></ul></li><li>On the 60-minute chart, the Globex market is in a broad bear channel for several bars with lots of decent buying pressure. This increases the odds of an upside breakout soon and a test of the most recent lower high (April 24th high).<ul><li><font color="gray">在 60 分钟图上，Globex 市场处于宽阔的熊市通道中，有几个柱线，买盘压力很大。这增加了很快向上突破和测试最近较低高点（4 月 24 日高点）的可能性。</font></li></ul></li><li>Since the Globex market on the 60-minute chart is trying to form a wedge bottom, this will increase the odds of a possible rally on the open today.<ul><li><font color="gray">由于 60 分钟图表上的 Globex 市场正试图形成楔形底部，这将增加今天开盘可能反弹的可能性。</font></li></ul></li><li>As I often say, traders should assume that the open will have a lot of trading range trading. Most traders should wait for 6-12 bars before placing a trader unless they are quick to make decisions and can trade with limited orders.<ul><li><font color="gray">正如我经常说的，交易者应该假设开盘会有很多交易区间交易。大多数交易者在下单之前应该等待 6-12 根柱线，除非他们能够快速做出决定并且可以使用有限的订单进行交易。</font></li></ul></li><li>There is more than an 80% chance of a swing trader on the open, beginning before the end of the second hour. The swing trade typically starts after the formation of a double top/bottom or a wedge top/bottom.<ul><li><font color="gray">在第二个小时结束之前开始，波段交易者有超过 80% 的机会开盘。波段交易通常在双顶/双底或楔形顶/底形成后开始。</font></li></ul></li><li>The most essential thing on the open is to be patient. There are 81 bars on a 5-minute chart, and by waiting for 6 bars, a trader will gain more clarity on the likely structure of the day.<ul><li><font color="gray">开场最重要的是要有耐心。 5 分钟图表上有 81 个柱线，通过等待 6 个柱线，交易者将更清楚地了解当天可能的结构。</font></li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230424-SP500-Emini-5-Min-Wedge-Top-Spike-and-Channel-Bear-Trend.png" alt="Emini 5 Min"></p><hr><p><a href="https://www.brookstradingcourse.com/analysis/emini-bulls-upside-breakout-wanted/">原文链接-Brooks</a></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-添加Swap交换空间</title>
      <link href="/2023/04/26/coding/linux-tian-jia-swap-jiao-huan-kong-jian/"/>
      <url>/2023/04/26/coding/linux-tian-jia-swap-jiao-huan-kong-jian/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /swapfallocate <span class="token parameter variable">-l</span> 2G /swap/swapfile1<span class="token comment"># 或者使用 dd 命令</span><span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/dev/zero <span class="token assign-left variable">of</span><span class="token operator">=</span>/swap/swapfile1 <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">1024</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">2097152</span><span class="token function">chmod</span> <span class="token number">600</span> /swap/swapfile1<span class="token function">mkswap</span> /swap/swapfile1<span class="token function">swapon</span> /swap/swapfile1<span class="token builtin class-name">echo</span> <span class="token string">"/swap/swapfile1 swap swap defaults 0 0"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token parameter variable">-a</span> /etc/fstab<span class="token function">swapon</span> <span class="token parameter variable">--show</span><span class="token function">free</span> <span class="token parameter variable">-h</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>删除交换空间</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">swapoff <span class="token parameter variable">-v</span> /swap/swapfile1<span class="token comment"># 删除挂载交换空间的配置</span><span class="token function">vi</span> /etc/fstab<span class="token function">rm</span> /swap/swapfile1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins-Ubuntu安装Jenkins</title>
      <link href="/2023/04/26/yun-wei/jenkins-ubuntu-an-zhuang-jenkins/"/>
      <url>/2023/04/26/yun-wei/jenkins-ubuntu-an-zhuang-jenkins/</url>
      
        <content type="html"><![CDATA[<p>不建议使用 Docker 运行 Jenkins</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装 Java</span><span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> openjdk-11-jdk<span class="token function">java</span> <span class="token parameter variable">--version</span><span class="token comment"># 安装 Jenkins</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token punctuation">\</span>  /usr/share/keyrings/jenkins-keyring.asc <span class="token operator">&gt;</span> /dev/null<span class="token builtin class-name">echo</span> deb <span class="token punctuation">[</span>signed-by<span class="token operator">=</span>/usr/share/keyrings/jenkins-keyring.asc<span class="token punctuation">]</span> <span class="token punctuation">\</span>  https://pkg.jenkins.io/debian-stable binary/ <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token punctuation">\</span>  /etc/apt/sources.list.d/jenkins.list <span class="token operator">&gt;</span> /dev/null<span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> jenkins<span class="token comment"># 启动 Jenkins, 访问 8080 端口</span>systemctl start jenkinssystemctl status jenkins<span class="token comment"># 初始密码</span><span class="token function">cat</span> /var/lib/jenkins/secrets/initialAdminPassword<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>如果启动超时:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置超时时间 TimeoutStartSec=1000</span><span class="token function">vi</span> /lib/systemd/system/jenkins.servicesystemctl daemon-reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引-IT-互联网高可用分布式微服务架构</title>
      <link href="/2023/04/25/suo-yin/suo-yin-it-hu-lian-wang-gao-ke-yong-fen-bu-shi-wei-fu-wu-jia-gou/"/>
      <url>/2023/04/25/suo-yin/suo-yin-it-hu-lian-wang-gao-ke-yong-fen-bu-shi-wei-fu-wu-jia-gou/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/Index/%E4%BA%92%E8%81%94%E7%BD%91%E9%AB%98%E5%8F%AF%E7%94%A8%20%E5%88%86%E5%B8%83%E5%BC%8F%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.png" alt="互联网高可用分布式微服务架构"></p>]]></content>
      
      
      <categories>
          
          <category> 索引 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO-单机部署</title>
      <link href="/2023/04/24/yun-wei/minio-dan-ji-bu-shu/"/>
      <url>/2023/04/24/yun-wei/minio-dan-ji-bu-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">minio</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'minio/minio:latest'</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'9000:9000'</span>      <span class="token punctuation">-</span> <span class="token string">'9001:9001'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> MINIO_ROOT_USER=root      <span class="token punctuation">-</span> MINIO_ROOT_PASSWORD=minio123456789    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'./data:/data'</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'server'</span><span class="token punctuation">,</span> <span class="token string">'--console-address'</span><span class="token punctuation">,</span> <span class="token string">':9001'</span><span class="token punctuation">,</span> <span class="token string">'/data'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>密码和KEY至少8位数</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastDFS-单机安装</title>
      <link href="/2023/04/24/coding/fastdfs-dan-ji-an-zhuang/"/>
      <url>/2023/04/24/coding/fastdfs-dan-ji-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="安装软件">安装软件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># libfastcommon</span><span class="token function">wget</span> https://github.com/happyfish100/libfastcommon/archive/refs/tags/V1.0.66.zip<span class="token function">unzip</span> V1.0.66.zip./make.sh <span class="token operator">&amp;&amp;</span> ./make.sh <span class="token function">install</span><span class="token comment"># libserverframe</span><span class="token function">wget</span> https://github.com/happyfish100/libserverframe/archive/refs/tags/V1.1.25.zip<span class="token function">unzip</span> V1.1.25.zip./make.sh <span class="token operator">&amp;&amp;</span> ./make.sh <span class="token function">install</span><span class="token comment"># FastDFS</span><span class="token function">wget</span> https://github.com/happyfish100/fastdfs/archive/refs/tags/V6.9.4.zip<span class="token function">unzip</span> V6.9.4.zip./make.sh <span class="token operator">&amp;&amp;</span> ./make.sh <span class="token function">install</span><span class="token comment"># Nginx</span><span class="token function">wget</span> https://github.com/happyfish100/fastdfs-nginx-module/archive/refs/tags/V1.23.zip<span class="token function">wget</span> https://nginx.org/download/nginx-1.24.0.tar.gz<span class="token function">unzip</span> V1.23.zip<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nginx-1.24.0.zip    <span class="token comment"># debian</span><span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> libpcre3 libpcre3-dev zlib1g-dev openssl libssl-dev    <span class="token comment"># centos</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> zlib zlib-devel openssl openssl-devel pcre pcre-devel gcc./configure --add-module<span class="token operator">=</span><span class="token punctuation">..</span>/fastdfs-nginx-module-1.23/src/<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-V</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置文件">配置文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># tracker: 配置 base_path 和 http.server_port</span><span class="token function">vi</span> /etc/fdfs/tracker.conf    <span class="token comment"># 配置 PIDFile: 路径为 tracker.conf 里的 base_path </span><span class="token function">vi</span> /usr/lib/systemd/system/fdfs_trackerd.service<span class="token comment"># storage: 配置 base_path, tracker_server, http.server.port=80 并且注释掉 store_path0</span><span class="token function">vi</span> /etc/fdfs/storage.conf    <span class="token comment"># 配置 PIDFile: 路径为 storage.conf 里的 base_path </span><span class="token function">vi</span> /usr/lib/systemd/system/fdfs_storaged.service<span class="token comment"># client: 配置 base_path, tracker_server, http.tracker_server_port</span><span class="token function">vi</span> /etc/fdfs/client.conf<span class="token comment"># nginx</span><span class="token builtin class-name">cd</span> /opt/fastdfs-6.9.4/conf<span class="token function">cp</span> anti-steal.jpg http.conf mime.types /etc/fdfs<span class="token function">cp</span> /opt/fastdfs-nginx-module-1.23/src/mod_fastdfs.conf /etc/fdfs/    <span class="token comment"># 配置 connect_timeout=10, tracker_server, url_have_group_name=true 并且注释掉 store_path0</span><span class="token function">vi</span> /etc/fdfs/mod_fastdfs.conf    <span class="token comment"># listen port 与 /etc/fdfs/storage.conf http.server.port 保持一致</span>    <span class="token comment"># 添加:</span>    <span class="token comment"># location /group0/M00/00/00 {</span>    <span class="token comment">#   alias /home/yuqing/fastdfs/storage/data;</span>    <span class="token comment">#   ngx_fastdfs_module;   </span>    <span class="token comment"># }</span><span class="token function">vi</span> /usr/local/nginx/conf/nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="启动">启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf start <span class="token punctuation">(</span>systemctl start fdfs_trackerd<span class="token punctuation">)</span>/usr/bin/fdfs_storaged /etc/fdfs/storage.conf start <span class="token punctuation">(</span>systemctl start fdfs_storaged<span class="token punctuation">)</span><span class="token function">netstat</span> <span class="token parameter variable">-unltp</span> <span class="token operator">|</span> <span class="token function">grep</span> fdfs/usr/bin/fdfs_monitor /etc/fdfs/storage.conf/usr/local/nginx/sbin/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用web访问返回的文件名</span>/usr/bin/fdfs_upload_file /etc/fdfs/client.conf /path/to/file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>TODO: nginx 调试未成功, 实在不行就用docker部署了</p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Debian 11 (bullseye) 国内软件源</title>
      <link href="/2023/04/24/coding/linux-debian-11-bullseye-guo-nei-ruan-jian-yuan/"/>
      <url>/2023/04/24/coding/linux-debian-11-bullseye-guo-nei-ruan-jian-yuan/</url>
      
        <content type="html"><![CDATA[<p>修改: <code>vi /etc/apt/sources.list</code><br>更新: <code>apt update</code></p><h2 id="阿里">阿里</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="腾讯">腾讯</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tencent.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tencent.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tencent.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tencent.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tencent.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tencent.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tencent.com/debian/ bullseye-backports main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tencent.com/debian/ bullseye-backports main non-free contrib</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="网易">网易</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.163.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.163.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.163.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.163.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.163.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.163.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.163.com/debian/ bullseye-backports main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.163.com/debian/ bullseye-backports main non-free contrib</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="华为">华为</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian/ bullseye main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian-security/ bullseye-security main</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian/ bullseye-updates main non-free contrib</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian/ bullseye-backports main non-free contrib</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.huaweicloud.com/debian/ bullseye-backports main non-free contrib</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="清华">清华</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中科大">中科大</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span><span class="token key attr-name">deb</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span><span class="token key attr-name">deb-src</span> <span class="token value attr-value">https://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a href="https://www.debian.org/mirror/list">Debian 全球镜像站列表</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-SSH-允许root用户远程密码登录</title>
      <link href="/2023/04/24/coding/linux-ssh-yun-xu-root-yong-hu-yuan-cheng-mi-ma-deng-lu/"/>
      <url>/2023/04/24/coding/linux-ssh-yun-xu-root-yong-hu-yuan-cheng-mi-ma-deng-lu/</url>
      
        <content type="html"><![CDATA[<ol><li>修改配置文件: <code>vi /etc/ssh/sshd_config</code> <pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">PermitRootLogin</span> <span class="token value attr-value">yes</span><span class="token key attr-name">PasswordAuthentication</span> <span class="token value attr-value">yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>重启服务: <code>/etc/init.d/ssh restart</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-SSH-免密钥登陆</title>
      <link href="/2023/04/24/coding/linux-ssh-mian-mi-yao-deng-lu/"/>
      <url>/2023/04/24/coding/linux-ssh-mian-mi-yao-deng-lu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsassh-copy-id debian02<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><a href="/2023/04/24/coding/linux-ssh-yun-xu-root-yong-hu-yuan-cheng-mi-ma-deng-lu/" title="Linux-SSH-允许root用户远程密码登录">Linux-SSH-允许root用户远程密码登录</a>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastDFS-特点</title>
      <link href="/2023/04/24/it/fastdfs-te-dian/"/>
      <url>/2023/04/24/it/fastdfs-te-dian/</url>
      
        <content type="html"><![CDATA[<p>FastDFS 是一个开源的高性能分布式文件系统（DFS）。 它的主要功能包括：<strong>文件存储，文件同步和文件访问，以及高容量和负载平衡</strong>。主要解决了海量数据存储问题，特别适合以<strong>中小文件</strong>（建议范围：<code>4KB &lt; file_size &lt; 500MB</code>）为载体的在线服务。<br>FastDFS 系统有三个角色：跟踪服务器(Tracker Server)、存储服务器(Storage Server)和客户端(Client)。</p><ul><li><code>Tracker Server</code>：<strong>跟踪服务器</strong>，主要做调度工作，起到均衡的作用；负责管理所有的 storage server 和 group，每个 storage 在启动后会连接 Tracker，告知自己所属 group 等信息，并保持周期性心跳。</li><li><code>Storage Server</code>：<strong>存储服务器</strong>，主要提供容量和备份服务；以 group 为单位，每个 group 内可以有多台 storage server，数据互为备份。</li><li><code>Client</code>：客户端，上传下载数据的服务器，也就是我们自己的项目所部署在的服务器。</li></ul><p>为了支持大容量，存储节点（服务器）采用了分卷（或分组）的组织方式。存储系统由一个或多个卷组成，卷与卷之间的文件是相互独立的，所有卷的文件容量累加就是整个存储系统中的文件容量。一个卷可以由一台或多台存储服务器组成，<strong>一个卷下的存储服务器中的文件都是相同的</strong>，卷中的多台存储服务器起到了<strong>冗余备份和负载均衡</strong>的作用。<strong>在卷中增加服务器时，同步已有的文件由系统自动完成</strong>，同步完成后，系统自动将新增服务器切换到线上提供服务。当存储空间不足或即将耗尽时，<strong>可以动态添加卷</strong>。只需要增加一台或多台服务器，并将它们配置为一个新的卷，这样就扩大了存储系统的容量。</p><h2 id="架构">架构</h2><p><img src="/static/IT/FastDFS/FastDFS.png" alt="FastDFS"></p><h2 id="上传文件">上传文件</h2><p><img src="/static/IT/FastDFS/FastDFS-up.png" alt="FastDFS 上传文件"></p><p>FastDFS向使用者提供基本文件访问接口，比如 upload、download、append、delete 等，以客户端库的方式提供给用户使用。Storage Server 会定期的向 Tracker Server 发送自己的存储信息。 当 Tracker Server Cluster 中的 Tracker Server 不止一个时，各个 Tracker 之间的关系是对等的，所以<strong>客户端上传时可以选择任意一个 Tracker</strong>。<br>当 Tracker 收到客户端上传文件的请求时，会为该文件分配一个可以存储文件的 <strong>group</strong>，当选定了 group 后就要决定给客户端分配 group 中的哪一个 <strong>storage server</strong>。当分配好 storage server 后，客户端<strong>向 storage 发送写文件请求</strong>，storage 将会为文件分配一个<strong>数据存储目录</strong>。然后为文件分配一个 <strong>fileid</strong>，最后<strong>根据以上的信息生成文件名</strong>存储文件。</p><h2 id="下载文件">下载文件</h2><p><img src="/static/IT/FastDFS/FastDFS-down.png" alt="FastDFS 下载文件"></p><p>客户端 uploadfile 成功后，会拿到一个 storage 生成的文件名，接下来客户端根据这个文件名即可访问到该文件。跟 uploadfile 一样，在 downloadfile 时客户端可以选择任意 tracker server。发送 download 请求给某个 tracker，必须带上文件名信息，<strong>tracke 从文件名中解析出文件的 group、大小、创建时间等信息</strong>，然后为该请求选择一个 storage 用来服务读请求。</p><h2 id="Nginx-下载文件">Nginx 下载文件</h2><p>Nginx 安装 <strong>FastDFS 插件</strong>后，可由客户端直接使用文件链接访问文件资源，绕开 tracker server，<strong>提高访问效率。Nginx 会负载均衡到其中一台 storage，如果没有就去 tracker server 查找原 storage 在哪台机器，然后读取原 storage 的原文件。</strong></p><h2 id="文件同步">文件同步</h2><p>写文件时，客户端将文件写至 group 内一个 storage server 即认为写文件成功，<strong>storage server 写完文件后，会由后台线程将文件同步至同 group 内其他的 storage server</strong>。每个 storage 写文件后，同时会写一份 <strong>binlog</strong>，binlog 里不包含文件数据，只包含文件名等元信息，这份 binlog 用于后台同步，storage 会记录向 group 内其他 storage 同步的进度，以便重启后能接上次的进度继续同步；<strong>进度以时间戳的方式进行记录</strong>，所以最好能保证集群内所有 server 的时钟保持同步。<strong>storage 的同步进度会作为元数据的一部分汇报到 tracker 上</strong>，tracke 在选择读 storage 的时候会以同步进度作为参考。</p><p><strong>文件名中包含时间戳，storage 会记录所有其他 storage 最后一次向本机同步的时间，所有同步时间中的最小值，即 storage_sync = MIN(date list) 之前的文件（文件名中包含时间戳），该机器上都有，同理所有 storage 中的最小时间，即 sync = MIN(storage_sync list) 之前的文件，该卷中所有 storage 上都有</strong></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastDFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Diskpart-永久固定USB盘符</title>
      <link href="/2023/04/24/coding/diskpart-yong-jiu-gu-ding-usb-pan-fu/"/>
      <url>/2023/04/24/coding/diskpart-yong-jiu-gu-ding-usb-pan-fu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">list volume<span class="token keyword">select</span> volume <span class="token number">6</span>assign <span class="token assign-left variable">letter</span><span class="token operator">=</span>U<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diskpart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Diskpart-查看硬盘接口类型</title>
      <link href="/2023/04/23/coding/diskpart-cha-kan-ying-pan-jie-kou-lei-xing/"/>
      <url>/2023/04/23/coding/diskpart-cha-kan-ying-pan-jie-kou-lei-xing/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">list disk<span class="token keyword">select</span> disk <span class="token number">0</span>detail disk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diskpart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-Sqoop-导入数据到HBase</title>
      <link href="/2023/04/23/coding/hadoop-sqoop-dao-ru-shu-ju-dao-hbase/"/>
      <url>/2023/04/23/coding/hadoop-sqoop-dao-ru-shu-ju-dao-hbase/</url>
      
        <content type="html"><![CDATA[<ol><li>创建 HBase 表: <code>create 'hbase_person','info'</code></li><li>导入数据到 HBase <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqoop <span class="token function">import</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--connect</span> jdbc:mysql://192.168.244.100:3306/sqooptest <span class="token punctuation">\</span>    <span class="token parameter variable">--username</span> root <span class="token punctuation">\</span>    <span class="token parameter variable">--password</span> root1234% <span class="token punctuation">\</span>    <span class="token parameter variable">--table</span> person <span class="token punctuation">\</span>    <span class="token parameter variable">--columns</span> <span class="token string">"pid,name,sex"</span> <span class="token punctuation">\</span>    --column-family <span class="token string">"info"</span> <span class="token punctuation">\</span>    --hbase-create-table <span class="token punctuation">\</span>    --hbase-row-key <span class="token string">"pid"</span> <span class="token punctuation">\</span>    --hbase-table <span class="token string">"hbase_person"</span> <span class="token punctuation">\</span>    --num-mappers <span class="token number">1</span> <span class="token punctuation">\</span>    --split-by pid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>scan 'hbase_person'</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> HBase </tag>
            
            <tag> Sqoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-Sqoop-Hive与Mysql互导</title>
      <link href="/2023/04/23/coding/hadoop-sqoop-hive-yu-mysql-hu-dao/"/>
      <url>/2023/04/23/coding/hadoop-sqoop-hive-yu-mysql-hu-dao/</url>
      
        <content type="html"><![CDATA[<ul><li>导入数据到 HIVE  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqoop <span class="token function">import</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--connect</span> jdbc:mysql://192.168.244.100:3306/sqooptest <span class="token punctuation">\</span>    <span class="token parameter variable">--username</span> root <span class="token punctuation">\</span>    <span class="token parameter variable">--password</span> root1234% <span class="token punctuation">\</span>    <span class="token parameter variable">--table</span> person <span class="token punctuation">\</span>    --num-mappers <span class="token number">1</span> <span class="token punctuation">\</span>    --hive-import <span class="token punctuation">\</span>    --fields-terminated-by <span class="token string">","</span> <span class="token punctuation">\</span>    --hive-overwrite <span class="token punctuation">\</span>    --hive-table person_hive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>hive/hdfs 导入数据到 mysql  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqoop <span class="token builtin class-name">export</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--connect</span> jdbc:mysql://192.168.244.100:3306/sqooptest <span class="token punctuation">\</span>    <span class="token parameter variable">--username</span> root <span class="token punctuation">\</span>    <span class="token parameter variable">--password</span> root1234% <span class="token punctuation">\</span>    <span class="token parameter variable">--table</span> person2 <span class="token punctuation">\</span>    --export-dir /user/hive/warehouse/person_hive <span class="token punctuation">\</span>    <span class="token parameter variable">--m</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Sqoop </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-Sqoop-Mysql导入HDFS</title>
      <link href="/2023/04/23/coding/hadoop-sqoop-mysql-dao-ru-hdfs/"/>
      <url>/2023/04/23/coding/hadoop-sqoop-mysql-dao-ru-hdfs/</url>
      
        <content type="html"><![CDATA[<ol><li>Mysql 测试数据 <pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> sqooptest<span class="token punctuation">;</span><span class="token keyword">Use</span> sqooptest<span class="token keyword">create</span> <span class="token keyword">table</span> person<span class="token punctuation">(</span>pid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span> name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> person<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'james'</span><span class="token punctuation">,</span> <span class="token string">'Male'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> person<span class="token punctuation">(</span>name<span class="token punctuation">,</span> sex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'lison'</span><span class="token punctuation">,</span> <span class="token string">'Female'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>全量导入 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqoop <span class="token function">import</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--connect</span> jdbc:mysql://192.168.244.100:3306/sqooptest <span class="token punctuation">\</span>    <span class="token parameter variable">--username</span> root <span class="token punctuation">\</span>    <span class="token parameter variable">--password</span> root1234% <span class="token punctuation">\</span>    <span class="token parameter variable">--table</span> person <span class="token punctuation">\</span>    --target-dir /user/person <span class="token punctuation">\</span>    --delete-target-dir <span class="token punctuation">\</span>    --num-mappers <span class="token number">1</span> <span class="token punctuation">\</span>    --fields-terminated-by <span class="token string">","</span>hadoop fs <span class="token parameter variable">-cat</span> /user/person/part-m-00000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>带查询条件导入: <code>$CONDITIONS</code> 不能省略, 要链接 sqoop 默认的条件 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqoop <span class="token function">import</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--connect</span> jdbc:mysql://192.168.244.100:3306/sqooptest <span class="token punctuation">\</span>    <span class="token parameter variable">--username</span> root <span class="token punctuation">\</span>    <span class="token parameter variable">--password</span> root1234% <span class="token punctuation">\</span>    --target-dir /user/person <span class="token punctuation">\</span>    --delete-target-dir <span class="token punctuation">\</span>    --num-mappers <span class="token number">1</span> <span class="token punctuation">\</span>    --fields-terminated-by <span class="token string">","</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--query</span> <span class="token string">'select name,sex from person where pid &lt;=1 and $CONDITIONS;'</span>hadoop fs <span class="token parameter variable">-cat</span> /user/person/part-m-00000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>导入特定列 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqoop <span class="token function">import</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--connect</span> jdbc:mysql://192.168.244.100:3306/sqooptest <span class="token punctuation">\</span>    <span class="token parameter variable">--username</span> root <span class="token punctuation">\</span>    <span class="token parameter variable">--password</span> root1234% <span class="token punctuation">\</span>    --target-dir /user/person <span class="token punctuation">\</span>    --delete-target-dir <span class="token punctuation">\</span>    --num-mappers <span class="token number">1</span> <span class="token punctuation">\</span>    --fields-terminated-by <span class="token string">","</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--columns</span> pid,sex <span class="token punctuation">\</span>    <span class="token parameter variable">--table</span> person<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Sqoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-Sqoop-安装</title>
      <link href="/2023/04/23/yun-wei/hadoop-sqoop-an-zhuang/"/>
      <url>/2023/04/23/yun-wei/hadoop-sqoop-an-zhuang/</url>
      
        <content type="html"><![CDATA[<ol><li><code>tar -zxvf</code> 解压</li><li><code>sqoop-env.sh</code> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_COMMON_HOME</span><span class="token operator">=</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_MAPRED_HOME</span><span class="token operator">=</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_HOME</span><span class="token operator">=</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">ZOOKEEPER_HOME</span><span class="token operator">=</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">HBASE_HOME</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>把相关 jdbc 驱动 jar 包拷贝到 <code>sqoop/lib</code> 目录中</li><li>添加环境变量</li><li>测试是否安装成功: <code>sqoop -version</code> | <code>sqoop help</code></li><li>测试数据库链接: <code>sqoop list-databases --connect jdbc:mysql://127.0.0.1:3306/ --username root --password pw</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Sqoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-14.Sqoop-特点</title>
      <link href="/2023/04/23/hadoop/hadoop-14-sqoop-te-dian/"/>
      <url>/2023/04/23/hadoop/hadoop-14-sqoop-te-dian/</url>
      
        <content type="html"><![CDATA[<h2 id="Sqoop-简介">Sqoop 简介</h2><p>Sqoop 是 apache 旗下的工具，用于实现结构型数据（如关系数据库）和 Hadoop 之间进行数据迁移的工具, 可以讲关系型数据库中的数据导入到 Hadoop 的 HDFS 中，同样也完全可以把 HDFS 的数据导入到关系型数据库里面</p><ul><li>导入数据：MySQL, Oracle 导入数据到 Hadoop 的 HDFS, HIVE, HBASE 等数据存储系统</li><li>导出数据：从 Hadoop 的文件系统中导出数据到关系数据库</li></ul><p><img src="/static/IT/Hadoop/sqoop.png" alt="Sqoop"></p><h2 id="Sqoop-原理">Sqoop 原理</h2><p>Sqoop 把导入或导出命令翻译成 <code>mapreduce</code> 代码来实现, 在翻译出的 <code>mapreduce</code> 中，其实只是对 <code>inputformat</code> 和 <code>outputformat</code> 进行了定制</p><hr><p><font color="red">该项目已于 2021-06 终止, 并移入 Apache Attic</font></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Sqoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBase-优化</title>
      <link href="/2023/04/23/coding/hbase-you-hua/"/>
      <url>/2023/04/23/coding/hbase-you-hua/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="/2023/04/23/coding/hbase-rowkey-she-ji-you-hua/" title="HBase-rowkey设计优化">HBase-rowkey设计优化</a></li><li>代码优化<ul><li>创建表的时候，可以通过 <code>HColumnDescriptor.setInMemory(true)</code> 将表放到 RegionServer 的缓存中，<strong>保证在读取的时候被 cache 命中</strong></li><li>创建表的时候，可以通过 <code>HColumnDescriptor.setMaxVersions(int maxVersions)</code> <strong>设置表中数据的最大版本</strong>，如果只需要保存最新版本的数据，那么可以设置 <code>setMaxVersions(1)</code></li><li>创建表的时候，可以通过 <code>HColumnDescriptor.setTimeToLive(int timeToLive)</code> <strong>设置表中数据的存储生命期，过期数据将自动被删除</strong>，例如如果只需要存储最近两天的数据，那么可以设置 <code>setTimeToLive(2 * 24 * 60 * 60)</code></li></ul></li><li><code>hdfs-site.xml</code>: <strong>HDFS 副本数的调整</strong><ul><li><code>dfs.replication</code>: 如果数据量巨大，且不是非常之重要，可以调整为2~3，如果数据非常之重要，可以调整为3~5</li><li><code>dfs.datanode.max.transfer.threads</code>: HBase 一般都会同一时间操作大量的文件，根据集群的数量和规模以及数据动作，设置为 4096 或者更高。默认值：4096</li></ul></li><li><code>mapred-site.xml</code>: <strong>优化数据的写入效率, 减少写入时间 (压缩)</strong><ul><li><code>mapreduce.map.output.compress</code>: 修改为 <code>true</code></li><li><code>mapreduce.map.output.compress.codec</code>: 修改为 <code>org.apache.hadoop.io.compress.GzipCodec</code> 或者其他压缩方式</li></ul></li><li><code>hbase-site.xml</code><ul><li><code>hbase.regionserver.handler.count</code>: 默认值为 30，用于指定 <strong>RPC 监听的数量</strong>，可以根据客户端的请求数进行调整，读写请求较多时，增加此值</li><li><code>hbase.hregion.max.filesize</code>: 默认值10737418240(10GB)，如果需要运行 HBase 的 MR 任务，可以减小此值，因为<strong>一个 region 对应一个 map 任务</strong>，如果单个 region 过大，会导致 map 任务执行时间过长。该值的意思就是，如果 HFile 的大小达到这个数值，则这个 region 会被切分为两个 Hfile</li><li><code>hbase.client.write.buffer</code>: 用于指定 HBase 客户端缓存，<strong>增大该值可以减少 RPC 调用次数，但是会消耗更多内存</strong>。一般我们需要设定一定的缓存大小，以达到减少 RPC 次数的目的</li><li><code>hbase.client.scanner.caching</code>: 用于指定 <code>scan.next</code> 方法<strong>获取的默认行数，值越大，消耗内存越大</strong></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBase-rowkey设计优化</title>
      <link href="/2023/04/23/coding/hbase-rowkey-she-ji-you-hua/"/>
      <url>/2023/04/23/coding/hbase-rowkey-she-ji-you-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="性能上考虑">性能上考虑</h2><p>一条数据的唯一标识就是 rowkey，而这行数据最终存储到哪一个分区里面，取决于分区(<a href="/2023/04/23/coding/hbase-yu-fen-qu/" title="HBase-预分区">HBase-预分区</a>)，如果从性能上考虑 rowkey 优化，应该考虑的是让数据均匀的分布在所有的 region 中，<strong>防止数据的倾斜</strong>。</p><p>设计方案:</p><ol><li>使用<strong>随机数</strong>, <strong>hash</strong> 等</li><li><strong>字符串反转</strong> 10001, 10002 反转成为 10001, 20001</li><li><strong>拼接字符串</strong> XX0001 -&gt; 1000XX0001</li></ol><h2 id="业务上考虑">业务上考虑</h2><h3 id="列族数目">列族数目</h3><p>一个列族和一个 Store 对于，如果经常需要跨列族查询，对应就是需要从多个 Store 中取数据，这样对性能开销挺大，建议<strong>创建表的时候不要太多列族，一般 2-3 个为主</strong>。<strong>基本信息</strong>放到一个列族，<strong>扩展信息</strong>放到一个列族，如果还有另外的<strong>不常用的附件信息</strong>放到第三个列族。</p><h3 id="行键设置">行键设置</h3><p><strong>根据查询要求设置 key</strong>:</p><ul><li>手机号-日期:<ul><li><code>18229955555-20190919</code></li><li><code>18229955555-20190920</code></li></ul></li><li>日期-姓名缩写-类别: 姓名缩写长度需要保持一致 (填充和截断)<ul><li><code>20150230-lisi-category</code></li><li><code>20150230-zs__-category</code></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBase-预分区</title>
      <link href="/2023/04/23/coding/hbase-yu-fen-qu/"/>
      <url>/2023/04/23/coding/hbase-yu-fen-qu/</url>
      
        <content type="html"><![CDATA[<p>在默认情况下，在使用 hbase 创建表的时候会自动创建一个 region 分区，所有 hbase 的客户端的数据都写到这个 region 分区里面，一直到 region 足够大的时候才进行切分。每一个 region 维护着 startRow 与 endRowKey，如果加入的数据符合某个 region 维护的 rowKey范围，则该数据交给这个 region 维护, 根据这个特性，我们可以根据以后要插入 hbase 的数据进行一个预估，<strong>将数据大致估算好，提前进行分区，用于提升 hbase 的性能</strong>。</p><p>可以在 <code>http://hadoop01:16010/</code>(主节点) 查看分区情况</p><h2 id="预分区">预分区</h2><ul><li>手动预分区: <code>create 'p1','info','partition1',SPLITS =&gt; ['1000','2000','3000','4000']</code></li><li>16进制分区: <code>create 'p2','info','partition2',{NUMREGIONS =&gt; 15, SPLITALGO =&gt; 'HexStringSplit'}</code></li><li>代码分区: 创建表的时候指定分区  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SplitReginTest</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Before</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        conf <span class="token operator">=</span> <span class="token class-name">HBaseConfiguration</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"hbase.zookeeper.quorum"</span><span class="token punctuation">,</span><span class="token string">"hadoop01:2181,hadoop02:2182,hadoop03:2183"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conn <span class="token operator">=</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCreateTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Admin</span> admin <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HTableDescriptor</span> htd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HTableDescriptor</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"split_p"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HColumnDescriptor</span> hcd1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HColumnDescriptor</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        htd<span class="token punctuation">.</span><span class="token function">addFamily</span><span class="token punctuation">(</span>hcd1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> splitKeys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        splitKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"1000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        splitKeys<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"2000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        splitKeys<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"3000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        splitKeys<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"4000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        admin<span class="token punctuation">.</span><span class="token function">createTable</span><span class="token punctuation">(</span>htd<span class="token punctuation">,</span>splitKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>        admin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-HBase-Hive-集成</title>
      <link href="/2023/04/23/yun-wei/hadoop-hbase-hive-ji-cheng/"/>
      <url>/2023/04/23/yun-wei/hadoop-hbase-hive-ji-cheng/</url>
      
        <content type="html"><![CDATA[<p>HBase 提供的查询主要还是通过 key 的方式进行的，相比 hive，hbase 的查询要薄弱很多。Hive 整合 HBase 后的使用场景:</p><ul><li><strong>通过 Hive 把数据加载到 HBase 中</strong>，数据源可以是文件也可以是 Hive 中的表</li><li>通过整合，让 HBase 支持 <strong>JOIN, GROUP</strong> 等 SQL 查询语法</li><li>通过整合，不仅可完成 HBase 的数据实时查询，也可以使用 Hive 查询 HBase 中的数据完成<strong>复杂的数据分析</strong></li></ul><h2 id="集成">集成</h2><ol><li>把 hbase 相关 jar 包拷贝到 hive lib 目录下<ul><li><code>hbase-common-2.5.3.jar</code></li><li><code>hbase-server-2.5.3.jar</code></li><li><code>hbase-client-2.5.3.jar</code></li><li><code>hbase-protocol-2.5.3.jar</code></li><li><code>hbase-it-2.5.3.jar</code></li><li><code>hbase-hadoop-compat-2.5.3.jar</code></li><li><code>hbase-hadoop2-compat-2.5.3.jar</code></li></ul></li><li><code>hive-site.xml</code> <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hive.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hadoop01,hadoop02,hadoop03<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hive.zookeeper.client.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>JDK版本保持一致, 推荐1.8</li></ol><h2 id="测试">测试</h2><ol><li>hive 里面建表: <pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> hive_hbase_person_table<span class="token punctuation">(</span>empno <span class="token keyword">int</span><span class="token punctuation">,</span>ename string<span class="token punctuation">,</span>age <span class="token keyword">int</span><span class="token punctuation">)</span>STORED <span class="token keyword">BY</span> <span class="token string">'org.apache.hadoop.hive.hbase.HBaseStorageHandler'</span><span class="token keyword">WITH</span> SERDEPROPERTIES <span class="token punctuation">(</span><span class="token string">"hbase.columns.mapping"</span> <span class="token operator">=</span> <span class="token string">":key,info:ename,info:age"</span><span class="token punctuation">)</span>TBLPROPERTIES <span class="token punctuation">(</span><span class="token string">"hbase.table.name"</span> <span class="token operator">=</span> <span class="token string">"hbase_person_table"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person<span class="token punctuation">(</span>empno <span class="token keyword">int</span><span class="token punctuation">,</span>ename string<span class="token punctuation">,</span>age <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">row</span> format delimited <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>hive 导入数据:<ol><li><code>load data local inpath '/testdata/hbasedata' into table person;</code></li><li><code>insert into table hive_hbase_person_table select * from person;</code></li></ol></li><li>hbase 查询数据: <code>scan 'hbase_person_table'</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> HBase </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBase-Java api 常用操作Demo</title>
      <link href="/2023/04/23/coding/hbase-java-api-chang-yong-cao-zuo-demo/"/>
      <url>/2023/04/23/coding/hbase-java-api-chang-yong-cao-zuo-demo/</url>
      
        <content type="html"><![CDATA[<h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hbase-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.5.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hbase-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.5.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获得连接">获得连接</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Before</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        conf <span class="token operator">=</span> <span class="token class-name">HBaseConfiguration</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conf<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"hbase.zookeeper.quorum"</span><span class="token punctuation">,</span> <span class="token string">"hadoop01:2181,hadoop02:2182,hadoop03:2183"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        conn <span class="token operator">=</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="建表">建表</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCreateTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token comment">// 获取一个表管理器</span>    <span class="token class-name">Admin</span> admin <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 构造一个表描述器，并指定表名</span>    <span class="token class-name">HTableDescriptor</span> htd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HTableDescriptor</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 构造一个列族描述器，并指定列族名</span>    <span class="token class-name">HColumnDescriptor</span> hcd1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HColumnDescriptor</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 构造第二个列族描述器，并指定列族名</span>    <span class="token class-name">HColumnDescriptor</span> hcd2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HColumnDescriptor</span><span class="token punctuation">(</span><span class="token string">"extra_info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 将列族描述器添加到表描述器中</span>    htd<span class="token punctuation">.</span><span class="token function">addFamily</span><span class="token punctuation">(</span>hcd1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addFamily</span><span class="token punctuation">(</span>hcd2<span class="token punctuation">)</span><span class="token punctuation">;</span>    admin<span class="token punctuation">.</span><span class="token function">createTable</span><span class="token punctuation">(</span>htd<span class="token punctuation">)</span><span class="token punctuation">;</span>    admin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除表">删除表</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Admin</span> admin <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    admin<span class="token punctuation">.</span><span class="token function">disableTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    admin<span class="token punctuation">.</span><span class="token function">deleteTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    admin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改表结构">修改表结构</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testModify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Admin</span> admin <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 修改已有的ColumnFamily</span>    <span class="token class-name">HTableDescriptor</span> table <span class="token operator">=</span> admin<span class="token punctuation">.</span><span class="token function">getTableDescriptor</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 添加新的ColumnFamily</span>    table<span class="token punctuation">.</span><span class="token function">addFamily</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HColumnDescriptor</span><span class="token punctuation">(</span><span class="token string">"other_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    admin<span class="token punctuation">.</span><span class="token function">modifyTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">;</span>    admin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="插入-修改数据">插入/修改数据</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Table</span> table <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Put</span><span class="token punctuation">&gt;</span></span> puts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Put</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 构建一个put 对象（kv），指定其行键</span>    <span class="token class-name">Put</span> put01 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"user001"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put01<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Put</span> put02 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token string">"user001"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put02<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Put</span> put03 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token string">"user002"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put03<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"lisi"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put03<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"extra_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Put</span> put04 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token string">"zhang_sh_01"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put04<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"zhang01"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put04<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"extra_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Put</span> put05 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token string">"zhang_sh_02"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put05<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"zhang02"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put05<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"extra_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Put</span> put06 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token string">"liu_sh_01"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put06<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"liu01"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put06<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"extra_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Put</span> put07 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token string">"zhang_bj_01"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put07<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"zhang03"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put07<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"extra_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Put</span> put08 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Put</span><span class="token punctuation">(</span><span class="token string">"zhang_bj_01"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put08<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"zhang04"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    put08<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"extra_info"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"married"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put01<span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put02<span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put03<span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put04<span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put05<span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put06<span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put07<span class="token punctuation">)</span><span class="token punctuation">;</span>    puts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>put08<span class="token punctuation">)</span><span class="token punctuation">;</span>    table<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>puts<span class="token punctuation">)</span><span class="token punctuation">;</span>    table<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="get-查询">get 查询</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Table</span> table <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 构造一个get 查询参数对象，指定要get 的是哪一行</span>    <span class="token class-name">Get</span> get <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Get</span><span class="token punctuation">(</span><span class="token string">"user001"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Result</span> result <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>get<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">CellScanner</span> cellScanner <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">cellScanner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cellScanner<span class="token punctuation">.</span><span class="token function">advance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Cell</span> current <span class="token operator">=</span> cellScanner<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> familyArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getFamilyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> qualifierArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getQualifierArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> valueArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getValueArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>familyArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getFamilyOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getFamilyLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">":"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>qualifierArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getQualifierOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getQualifierLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>valueArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getValueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getValueLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    table<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除表中数据">删除表中数据</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Table</span> t_person_info <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Delete</span> delete <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Delete</span><span class="token punctuation">(</span><span class="token string">"user001"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    delete<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    t_person_info<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>delete<span class="token punctuation">)</span><span class="token punctuation">;</span>    t_person_info<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="scan-查询">scan 查询</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testScan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Table</span> t_person_info <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Scan</span> scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scan</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"liu_sh_01"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"zhang_bj_01"</span> <span class="token operator">+</span> <span class="token string">"\000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ResultScanner</span> scanner <span class="token operator">=</span> t_person_info<span class="token punctuation">.</span><span class="token function">getScanner</span><span class="token punctuation">(</span>scan<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> iter <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Result</span> result <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CellScanner</span> cellScanner <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">cellScanner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>cellScanner<span class="token punctuation">.</span><span class="token function">advance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Cell</span> current <span class="token operator">=</span> cellScanner<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> familyArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getFamilyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> valueArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getValueArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> qualifierArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getQualifierArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rowArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getRowArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>rowArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getRowOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getRowLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>familyArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getFamilyOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getFamilyLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">":"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>qualifierArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getQualifierOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getQualifierLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>valueArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getValueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getValueLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="过滤查询">过滤查询</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token comment">// 针对行键的前缀过滤器</span>    <span class="token class-name">Filter</span> pf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrefixFilter</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"liu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>pf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 行过滤器</span>    <span class="token class-name">RowFilter</span> rf1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowFilter</span><span class="token punctuation">(</span><span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">LESS</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryComparator</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"user002"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">RowFilter</span> rf2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RowFilter</span><span class="token punctuation">(</span><span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SubstringComparator</span><span class="token punctuation">(</span><span class="token string">"00"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>rf1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"**********"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>rf2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 针对指定一个列的 value 来过滤</span>    <span class="token class-name">SingleColumnValueFilter</span> scvf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingleColumnValueFilter</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"password"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    scvf<span class="token punctuation">.</span><span class="token function">setFilterIfMissing</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果指定的列缺失，则也过滤掉</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>scvf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ByteArrayComparable</span> comparator1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegexStringComparator</span><span class="token punctuation">(</span><span class="token string">"^zhang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ByteArrayComparable</span> comparator2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubstringComparator</span><span class="token punctuation">(</span><span class="token string">"ang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SingleColumnValueFilter</span> scvf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingleColumnValueFilter</span><span class="token punctuation">(</span><span class="token string">"base_info"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"username"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> comparator2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>scvf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 针对列族名的过滤器返回结果中只会包含满足条件的列族中的数据</span>    <span class="token class-name">FamilyFilter</span> ff1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FamilyFilter</span><span class="token punctuation">(</span><span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryComparator</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"inf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">FamilyFilter</span> ff2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FamilyFilter</span><span class="token punctuation">(</span><span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryPrefixComparator</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>ff1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 针对列名的过滤器返回结果中只会包含满足条件的列的数据</span>    <span class="token class-name">QualifierFilter</span> qf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QualifierFilter</span><span class="token punctuation">(</span><span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryComparator</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">QualifierFilter</span> qf2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QualifierFilter</span><span class="token punctuation">(</span><span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryPrefixComparator</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"us"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>qf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 跟 SingleColumnValueFilter 结果不同，只返回符合条件的该column</span>    <span class="token class-name">ColumnPrefixFilter</span> cf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColumnPrefixFilter</span><span class="token punctuation">(</span><span class="token string">"passw"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>cf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prefixes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token class-name">MultipleColumnPrefixFilter</span> mcf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultipleColumnPrefixFilter</span><span class="token punctuation">(</span>prefixes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>mcf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">FamilyFilter</span> ff2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FamilyFilter</span><span class="token punctuation">(</span><span class="token class-name">CompareOp</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BinaryPrefixComparator</span><span class="token punctuation">(</span><span class="token class-name">Bytes</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">"base"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ColumnPrefixFilter</span> cf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColumnPrefixFilter</span><span class="token punctuation">(</span><span class="token string">"passw"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">FilterList</span> filterList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterList</span><span class="token punctuation">(</span><span class="token class-name">Operator</span><span class="token punctuation">.</span><span class="token constant">MUST_PASS_ALL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    filterList<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span>ff2<span class="token punctuation">)</span><span class="token punctuation">;</span>    filterList<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span>cf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testScan</span><span class="token punctuation">(</span>filterList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">testScan</span><span class="token punctuation">(</span><span class="token class-name">Filter</span> filter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Table</span> t_person_info <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">getTable</span><span class="token punctuation">(</span><span class="token class-name">TableName</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"t_person_info"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Scan</span> scan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    scan<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ResultScanner</span> scanner <span class="token operator">=</span> t_person_info<span class="token punctuation">.</span><span class="token function">getScanner</span><span class="token punctuation">(</span>scan<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> iter <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Result</span> result <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CellScanner</span> cellScanner <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">cellScanner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>cellScanner<span class="token punctuation">.</span><span class="token function">advance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Cell</span> current <span class="token operator">=</span> cellScanner<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> familyArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getFamilyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> valueArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getValueArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> qualifierArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getQualifierArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rowArray <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getRowArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>rowArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getRowOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getRowLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>familyArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getFamilyOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getFamilyLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">":"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>qualifierArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getQualifierOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getQualifierLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">" "</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>valueArray<span class="token punctuation">,</span> current<span class="token punctuation">.</span><span class="token function">getValueOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current<span class="token punctuation">.</span><span class="token function">getValueLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBase-stop-hbase.sh: no hbase master found</title>
      <link href="/2023/04/23/coding/hbase-stop-hbase-sh-no-hbase-master-found/"/>
      <url>/2023/04/23/coding/hbase-stop-hbase-sh-no-hbase-master-found/</url>
      
        <content type="html"><![CDATA[<ol><li><code>hbase-env.sh</code> 中添加: <code>export HBASE_PID_DIR=/var/hbase/pids</code></li><li><code>jps</code> 查看 hbase 相关的 pid, 然后 <code>kill -9</code> 结束进程</li><li><code>start-hbase.sh</code> 启动 hbase</li></ol>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBase-ServerNotRunningYetException: Server is not running yet</title>
      <link href="/2023/04/23/coding/hbase-servernotrunningyetexception-server-is-not-running-yet/"/>
      <url>/2023/04/23/coding/hbase-servernotrunningyetexception-server-is-not-running-yet/</url>
      
        <content type="html"><![CDATA[<p><code>hbase-site.xml</code> 中添加:</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hbase.wal.provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>filesystem<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>重启 HBase 即可</p>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBase-常用命令</title>
      <link href="/2023/04/23/coding/hbase-chang-yong-ming-ling/"/>
      <url>/2023/04/23/coding/hbase-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<p><code>hbase shell</code> 进入shell<br><code>help</code> 命令查看帮助文档<br><code>list</code> 命令查看数据库中的表</p><h2 id="创建表">创建表</h2><p>创建 person 表，包含 info, data 两个列族<br>然后查看表结构</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token keyword">describe</span> <span class="token string">'person'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="插入数据">插入数据</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 向person 表中插入信息，row key 为rk0001，列族info 中添加name 列标示符，值为zhangsan</span>put <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info:name'</span><span class="token punctuation">,</span> <span class="token string">'zhangsan'</span><span class="token comment">-- 向person 表中插入信息，row key 为rk0001，列族info 中添加gender 列标示符，值为female</span>put <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info:gender'</span><span class="token punctuation">,</span> <span class="token string">'female'</span><span class="token comment">-- 向person 表中插入信息，row key 为rk0001，列族info 中添加age 列标示符，值为20</span>put <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info:age'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token comment">-- 向person 表中插入信息，row key 为rk0001，列族data 中添加pic 列标示符，值为picture</span>put <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'data:pic'</span><span class="token punctuation">,</span> <span class="token string">'picture'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查询数据">查询数据</h2><p><code>get</code> 适用于获取单个记录或少量记录的场景，<code>scan</code> 适用于获取大量记录的场景</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 获取person 表中row key 为rk0001 的所有信息</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token comment">-- 获取person 表中row key 为rk0001，info 列族的所有信息</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info'</span><span class="token comment">-- 获取person 表中row key 为rk0001，info 列族的name、age 列标示符的信息</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info:name'</span><span class="token punctuation">,</span> <span class="token string">'info:age'</span><span class="token comment">-- 获取person 表中row key 为rk0001，info、data 列族的信息</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'data'</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMN</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token punctuation">]</span>}get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMN</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">'info:name'</span><span class="token punctuation">,</span> <span class="token string">'data:pic'</span><span class="token punctuation">]</span>}<span class="token comment">-- 获取person 表中row key 为rk0001，列族为info，版本号最新5 个的信息</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMN</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info'</span><span class="token punctuation">,</span> VERSIONS <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">5</span>}get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMN</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info:name'</span><span class="token punctuation">,</span> VERSIONS <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">5</span>}get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMN</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info:name'</span><span class="token punctuation">,</span> VERSIONS <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">,</span> TIMERANGE <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1567491377530</span><span class="token punctuation">,</span><span class="token number">1567491377590</span><span class="token punctuation">]</span>}<span class="token comment">-- 获取person 表中row key 为rk0001，cell 的值为zhangsan 的信息</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> {FILTER <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">"ValueFilter(=, 'binary:zhangsan')"</span>}<span class="token comment">-- 获取person 表中row key 为rk0001，列标示符中含有a 的信息</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> {FILTER <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">"(QualifierFilter(=,'substring:a'))"</span>}put <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0002'</span><span class="token punctuation">,</span> <span class="token string">'info:name'</span><span class="token punctuation">,</span> <span class="token string">'fanbingbing'</span>put <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0002'</span><span class="token punctuation">,</span> <span class="token string">'info:gender'</span><span class="token punctuation">,</span> <span class="token string">'female'</span>put <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0002'</span><span class="token punctuation">,</span> <span class="token string">'info:nationality'</span><span class="token punctuation">,</span> <span class="token string">'中国'</span>get <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0002'</span><span class="token punctuation">,</span> {FILTER <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">"ValueFilter(=, 'binary:中国')"</span>}<span class="token comment">-- 查询person 表中的所有信息</span>scan <span class="token string">'person'</span><span class="token comment">-- 查询person 表中列族为info 的信息</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMNS</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info'</span>}<span class="token comment">-- 查询person 表中列族为info 和data 的信息</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMNS</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token punctuation">]</span>}scan <span class="token string">'person'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMNS</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">'info:name'</span><span class="token punctuation">,</span> <span class="token string">'data:pic'</span><span class="token punctuation">]</span>}<span class="token comment">-- 查询person 表中列族为info、列标示符为name 的信息</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMNS</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info:name'</span>}<span class="token comment">-- 查询person 表中列族为info、列标示符为name 的信息,并且版本最新的5 个</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMNS</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info:name'</span><span class="token punctuation">,</span> VERSIONS <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">5</span>}<span class="token comment">-- 查询person 表中列族为info 和data 且列标示符中含有a 字符的信息</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMNS</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> FILTER <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">"(QualifierFilter(=,'substring:a'))"</span>}<span class="token comment">-- 查询person 表中列族为info，rk 范围是[rk0001, rk0003)的数据</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span> {<span class="token keyword">COLUMNS</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info'</span><span class="token punctuation">,</span> STARTROW <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> ENDROW <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'rk0003'</span>}<span class="token comment">-- 查询person 表中row key 以rk 字符开头的</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span>{FILTER<span class="token operator">=</span><span class="token operator">&gt;</span><span class="token string">"PrefixFilter('rk')"</span>}<span class="token comment">-- 查询person 表中指定范围的数据</span>scan <span class="token string">'person'</span><span class="token punctuation">,</span> {TIMERANGE <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1392368783980</span><span class="token punctuation">,</span> <span class="token number">1392380169184</span><span class="token punctuation">]</span>}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除数据">删除数据</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 删除person 表row key 为rk0001，列标示符为info:name 的数据</span><span class="token keyword">delete</span> <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info:name'</span><span class="token comment">-- 删除person 表row key 为rk0001，列标示符为info:name，timestamp 为1392383705316 的数据</span><span class="token keyword">delete</span> <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'rk0001'</span><span class="token punctuation">,</span> <span class="token string">'info:name'</span><span class="token punctuation">,</span> <span class="token number">1392383705316</span><span class="token comment">-- 清空person 表中的数据</span><span class="token keyword">truncate</span> <span class="token string">'person'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改表结构">修改表结构</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 首先停用person 表</span><span class="token keyword">disable</span> <span class="token string">'person'</span><span class="token comment">-- 添加两个列族f1 和f2</span><span class="token keyword">alter</span> <span class="token string">'person'</span><span class="token punctuation">,</span> NAME <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'f1'</span><span class="token keyword">alter</span> <span class="token string">'person'</span><span class="token punctuation">,</span> NAME <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'f2'</span><span class="token comment">-- 删除一个列族</span><span class="token keyword">alter</span> <span class="token string">'person'</span><span class="token punctuation">,</span> NAME <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'f1'</span><span class="token punctuation">,</span> METHOD <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'delete'</span><span class="token keyword">alter</span> <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'delete'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'f1'</span><span class="token comment">-- 添加列族f1 同时删除列族f2</span><span class="token keyword">alter</span> <span class="token string">'person'</span><span class="token punctuation">,</span> {NAME <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'f1'</span>}<span class="token punctuation">,</span> {NAME <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'f2'</span><span class="token punctuation">,</span> METHOD <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'delete'</span>}<span class="token comment">-- 将person 表的f1 列族版本号改为5</span><span class="token keyword">alter</span> <span class="token string">'person'</span><span class="token punctuation">,</span> NAME <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'info'</span><span class="token punctuation">,</span> VERSIONS <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">5</span><span class="token comment">-- 启用表</span><span class="token keyword">enable</span> <span class="token string">'person'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除表">删除表</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">disable</span> <span class="token string">'person'</span><span class="token keyword">drop</span> <span class="token string">'person'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-HBase-高可用集群部署</title>
      <link href="/2023/04/23/yun-wei/hadoop-hbase-gao-ke-yong-ji-qun-bu-shu/"/>
      <url>/2023/04/23/yun-wei/hadoop-hbase-gao-ke-yong-ji-qun-bu-shu/</url>
      
        <content type="html"><![CDATA[<ol><li>启动 Hadoop 集群: <a href="/2023/04/19/yun-wei/hadoop-ji-qun-bu-shu/" title="Hadoop-集群部署">Hadoop-集群部署</a> | <a href="/2023/04/22/yun-wei/hadoop-gao-ke-yong-ji-qun-bu-shu/" title="Hadoop-高可用集群部署">Hadoop-高可用集群部署</a></li><li>启动 Zookeeper 集群: <a href="/2023/04/21/yun-wei/zookeeper-gao-ke-yong-ji-qun-bu-shu-dockerswarm/" title="Zookeeper-高可用集群部署[DockerSwarm]">Zookeeper-高可用集群部署[DockerSwarm]</a></li><li>修改 HBase 配置文件<ul><li><code>hbase-env.sh</code>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">HBASE_PID_DIR</span><span class="token operator">=</span>/var/hbase/pids<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-11-openjdk-11.0.19.0.7-1.el9_1.x86_64<span class="token builtin class-name">export</span> <span class="token assign-left variable">HBASE_MANAGES_ZK</span><span class="token operator">=</span>false<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/opt/hadoop/hadoop-3.3.5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>hbase-site.xml</code>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hbase.rootdir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hdfs://hadoop01:9000/hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hbase.cluster.distributed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hbase.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hadoop01:2181,hadoop02:2181,hadoop03:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hbase.wal.provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>filesystem<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>Regionservers</code>  <pre class="line-numbers language-text" data-language="text"><code class="language-text">hadoop01hadoop02hadoop03<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li>使用 <code>scp -r</code> 把软件复制到其他节点<ul><li><code>scp -r /opt/hbase/ root@hadoop02:/opt/hbase/</code></li><li><code>scp -r /opt/hbase/ root@hadoop03:/opt/hbase/</code></li></ul></li><li>配置环境变量</li><li>启动主节点Master: <code>start-hbase.sh</code></li><li>启动从节点备用Master: <code>hbase-daemon.sh start master</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-13.HBase-特点</title>
      <link href="/2023/04/23/hadoop/hadoop-13-hbase-te-dian/"/>
      <url>/2023/04/23/hadoop/hadoop-13-hbase-te-dian/</url>
      
        <content type="html"><![CDATA[<h2 id="HBase-列式数据库简介">HBase 列式数据库简介</h2><p>HBase 是一个开源的非关系型分布式数据库（NoSql） 原型是 Google 的 BigTable 论文，受到了该论文思想的启发，目前作为Hadoop 的子项目来开发维护。它介于 nosql 和 RDBMS 之间，仅能通过主键(row key)和主键的 range 来检索数据，可通过 hive 支持来实现多表 join 等复杂操作。</p><h2 id="HBase-特点">HBase 特点</h2><ul><li><strong>海量存储</strong>: Hbase 适合存储 PB 级别的海量数据，在 PB 级别的数据以及采用廉价 PC 存储的情况下，能在几十到百毫秒内返回数据。这与 Hbase 的极易扩展性息息相关。正式因为 Hbase 良好的扩展性，才为海量数据的存储提供了便利。</li><li><strong>列式存储</strong>: 这里的列式存储其实说的是列族（ColumnFamily）存储，Hbase 是根据列族来存储数据的。列族下面可以有非常多的列，列族在创建表的时候就必须指定。</li><li><strong>极易扩展</strong>: Hbase 的扩展性主要体现在两个方面，一个是基于上层处理能力（RegionServer）的扩展，一个是基于存储的扩展（HDFS）。通过横向添加RegionSever 的机器，进行水平扩展，提升 Hbase 上层的处理能力，提升 Hbsae 服务更多 Region 的能力。</li><li><strong>高并发</strong>: 由于目前大部分使用 Hbase 的架构，都是采用的廉价 PC，因此单个 IO 的延迟其实并不小，一般在几十到上百 ms 之间。这里说的高并发，主要是在并发的情况下，Hbase 的单个 IO 延迟下降并不多。能获得高并发、低延迟的服务。</li><li><strong>稀疏</strong>: 稀疏主要是针对 Hbase 列的灵活性，在列族中，你可以指定任意多的列，在列数据为空的情况下，是不会占用存储空间的。</li></ul><p>适用场景:</p><ul><li>持久化存储大量数据（TB、PB）</li><li>对扩展伸缩性有要求</li><li>需要良好的随机读写性能</li><li>简单的业务 KV 查询(不支持复杂的查询比如表关联等)</li><li>能够同时处理结构化和非结构化的数据</li><li>订单流水、交易记录、需要记录历史版本的数据等</li></ul><p>不适用场景:</p><ul><li>几千、几百万那种还不如使用 RDBMS</li><li>需要类型列</li><li>需要跨行事务，目前 HBase 只支持单行事务</li><li>SQL 查询</li></ul><h2 id="HBase-数据模型">HBase 数据模型</h2><table>    <tbody><tr>        <th>Row Key</th>        <th>Time Stamp</th>        <th>CF1</th>        <th>CF2</th>        <th>CF3</th>    </tr>    <tr>        <td rowspan="3">rk00001</td>        <td>t1</td>        <td></td>        <td>CF2:q1=val1</td>        <td>CF3:q2=val2</td>    </tr>    <tr>        <td>t2</td>        <td></td>        <td></td>        <td></td>    </tr>    <tr>        <td>t3</td>        <td>CF1:q3=val3</td>        <td></td>        <td></td>    </tr></tbody></table><ul><li>ROW KEY<ul><li>决定一行数据</li><li>按照字典顺序排序的</li><li>ROW KEY 只能存储 64k 的字节数据</li></ul></li><li>Column Family 列族 &amp; qualifier 列<ul><li>HBase 表中的每个列都归属于某个列族，列族必须作为表模式(schema)定义的一部分预先给出。<code>create 'test', 'course'</code></li><li>列名以列族作为前缀， 每个“列族”都可以有多个列成员(column) ； 如 <code>course:math</code>,<code>course:english</code>, 新的列族成员（列）可以随后按需、动态加入；</li><li>权限控制、存储以及调优都是在列族层面进行的；</li><li>HBase 把同一列族里面的数据存储在同一目录下，由几个文件保存</li></ul></li><li>Timestamp 时间戳<ul><li>在HBase 每个 cell 存储单元对同一份数据有多个版本，根据唯一的时间戳来区分每个版本之间的差异，不同版本的数据按照时间倒序排序，最新的数据版本排在最前面</li><li>时间戳的类型是 64 位整型</li><li>时间戳可以由HBase(在数据写入时自动)赋值，此时时间戳是精确到毫秒的当前系统时间</li><li>时间戳也可以由客户显式赋值</li></ul></li><li>Cell 单元格<ul><li>由行和列的坐标交叉决定</li><li>单元格是有版本的</li><li>单元格的内容是未解析的字节数组</li><li>由<code>{rowkey，column(=&lt;family&gt; +&lt;qualifier&gt;)，version}</code>唯一确定的单元</li><li>Cell 中的数据是没有类型的，全部是二进制字节码形式存储</li></ul></li></ul><h2 id="HBase-架构">HBase 架构</h2><p><img src="/static/IT/Hadoop/HBase.png" alt="HBase 架构"></p><ul><li><strong>Client</strong>: 包含了访问 Hbase 的接口，另外 Client 还维护了对应的 cache 来加速 HBase 的访问，比如 cache 的.META.元数据的信息</li><li><strong>Zookeeper</strong>: HBase 通过 Zookeeper 来做 master 的高可用、RegionServer 的监控、元数据的入口以及集群配置的维护等工作<ul><li>通过 Zoopkeeper 来保证集群中只有1个 master 在运行，如果 master 异常，会通过竞争机制</li><li>产生新的 master 提供服务</li><li>通过 Zoopkeeper 来监控 RegionServer 的状态，当 RegionSevrer 有异常的时候，通过回调的形式通知 Master RegionServer 上下线的信息</li><li>通过 Zoopkeeper 存储元数据的统一入口地址</li></ul></li><li><strong>HMaster</strong>:<ul><li>为 RegionServer 分配 Region</li><li>维护整个集群的负载均衡</li><li>维护集群的元数据信息</li><li>发现失效的 Region，并将失效的 Region 分配到正常的 RegionServer 上</li><li>当 RegionSever 失效的时候，协调对应 Hlog 的拆分</li></ul></li><li><strong>HregionServer</strong>: 直接对接用户的读写请求，是真正的“干活”的节点<ul><li>管理 master 为其分配的 Region</li><li>处理来自客户端的读写请求</li><li>负责和底层 HDFS 的交互，存储数据到 HDFS</li><li>负责 Region 变大以后的拆分</li><li>负责 Storefile 的合并工作</li></ul></li><li><strong>HDFS</strong>: 为 Hbase 提供最终的底层数据存储服务，同时为 HBase 提供高可用（Hlog 存储在 HDFS）的支持<ul><li>提供元数据和表数据的底层分布式存储服务</li><li>数据多副本，保证的高可靠和高可用性</li></ul></li></ul><h2 id="HBase-中的角色">HBase 中的角色</h2><ul><li><strong>HMaster</strong><ul><li>监控 RegionServer</li><li>处理 RegionServer 故障转移</li><li>处理元数据的变更</li><li>处理 region 的分配或转移</li><li>在空闲时间进行数据的负载均衡</li><li>通过 Zookeeper 发布自己的位置给客户端</li></ul></li><li><strong>RegionServer</strong><ul><li>负责存储 HBase 的实际数据</li><li>处理分配给它的 Region</li><li>刷新缓存到 HDFS</li><li>维护 Hlog</li><li>执行压缩</li><li>负责处理 Region 分片</li></ul></li><li><strong>Write-Ahead logs (WAL)</strong><ul><li>HBase 的修改记录，当对 HBase 读写数据的时候，数据不是直接写进磁盘，它会在内存中保留一段时间（时间以及数据量阈值可以设定）。但把数据保存在内存中可能有更高的概率引起数据丢失，为了解决这个问题，数据会先写在一个叫做 Write-Ahead logfile 的文件中，然后再写入内存中。所以在系统出现故障的时候，数据可以通过这个日志文件重建。</li></ul></li><li><strong>Region</strong><ul><li>Hbase 表的分片，HBase 表会根据 RowKey 值被切分成不同的 region 存储在 RegionServer 中，在一个 RegionServer 中可以有多个不同的 region</li></ul></li><li><strong>Store</strong><ul><li>HFile 存储在 Store 中，一个 Store 对应 HBase 表中的一个列族(列簇， ColumnFamily)</li></ul></li><li><strong>MemStore</strong><ul><li>顾名思义，就是内存存储，位于内存中，用来保存当前的数据操作，所以当数据保存在 WAL 中之后，RegsionServer 会在内存中存储键值对</li></ul></li><li><strong>HFile</strong><ul><li>这是在磁盘上保存原始数据的实际的物理文件，是实际的存储文件。StoreFile 是以 HFile 的形式存储在 HDFS 的</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> HBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-12.Hive-特点</title>
      <link href="/2023/04/22/hadoop/hadoop-12-hive-te-dian/"/>
      <url>/2023/04/22/hadoop/hadoop-12-hive-te-dian/</url>
      
        <content type="html"><![CDATA[<h2 id="Hive-简介">Hive 简介</h2><p>Hive 是属于 Hadoop 的数据仓库工具，可以让使用者将结构化数据映射成一张张数据库的表，让用户能通过 SQL 来查询数据。用户出 SQL 命令给 hive，<font color="orange">hive 把 SQL 语句转换成 MapReduce 查询分析存储在 hdfs 上的数据</font>。</p><p>优点:</p><ul><li>直接使用 MapReuce 实现复杂查询比较复杂，而 Hive 提供 SQL 的语法，提高了开发的便捷程度</li><li>直接使用 SQL 查询，减少了人员的学习成本，哪怕是数据库操作人员能很快上手</li><li>HIVE 提供很好的扩展性，方便用户增加功能</li></ul><h2 id="Hive-与传统数据库对比">Hive 与传统数据库对比</h2><p><img src="/static/IT/Hadoop/Hive-SQL-Compare.png" alt="Hive 与传统数据库对比"></p><ul><li><strong>查询语言</strong>: 由于 SQL 被广泛的应用在数据仓库中，因此，专门针对 Hive 的特性设计了类 SQL 的查询语言 HQL。熟悉 SQL 开发的开发者可以很方便的使用 Hive 进行开发。</li><li><strong>数据存储位置</strong>: Hive 是建立在 Hadoop 之上的，所有 Hive 的数据都是存储在 HDFS 中的。而数据库则可以将数据保存在块设备或者本地文件系统中。</li><li><strong>数据格式</strong>: Hive 中没有定义专门的数据格式，数据格式可以由用户指定，用户定义数据格式需要指定三个属性：<strong>列分隔符</strong>（通常为空格、”\t”、”\x001″）、<strong>行分隔符</strong>（”\n”）以及<strong>读取文件数据的方法</strong>（Hive 中默认有三个文件格式 <code>TextFile</code>，<code>SequenceFile</code> 以及 <code>RCFile</code>）。由于在加载数据的过程中，不需要从用户数据格式到 Hive 定义的数据格式的转换，因此，<strong>Hive 在加载的过程中不会对数据本身进行任何修改</strong>，而只是将数据内容复制或者移动到相应的 HDFS 目录中。而在数据库中，不同的数据库有不同的存储引擎，定义了自己的数据格式。所有数据都会按照一定的组织存储，因此，数据库加载数据的过程会比较耗时。</li><li><strong>数据更新</strong>: 由于 Hive 是针对数据仓库应用设计的，而数据仓库的内容是<strong>读多写少</strong>的。因此，<strong>Hive 中不支持对数据的改写和添加</strong>，所有的数据都是在加载的时候中确定好的。而数据库中的数据通常是需要经常进行修改的，因此可以使用 INSERT INTO … VALUES 添加数据，使用 UPDATE … SET 修改数据。</li><li><strong>索引</strong>: 之前已经说过，Hive 在加载数据的过程中不会对数据进行任何处理，甚至不会对数据进行扫描，因此也没有对数据中的某些 Key 建立索引。Hive 要访问数据中满足条件的特定值时，需要<strong>暴力扫描整个数据</strong>，因此访问延迟较高。由于 <code>MapReduce</code> 的引入， Hive 可以<strong>并行访问数据</strong>，因此即使没有索引，<strong>对于大数据量的访问，Hive 仍然可以体现出优势</strong>。数据库中，通常会针对一个或者几个列建立索引，因此对于少量的特定条件的数据的访问，数据库可以有很高的效率，较低的延迟。由于数据的访问延迟较高，决定了 <strong>Hive 不适合在线数据查询</strong>。</li><li><strong>执行</strong>: Hive 中大多数查询的执行是通过 Hadoop 提供的 <code>MapReduce</code> 来实现的（类似 select * from tbl 的查询不需要 MapReduce）。而数据库通常有自己的执行引擎。</li><li><strong>执行延迟</strong>: 之前提到，Hive 在查询数据的时候，<strong>由于没有索引，需要扫描整个表，因此延迟较高</strong>。另外一个导致 Hive 执行延迟高的因素是 MapReduce 框架。由于 <strong>MapReduce 本身具有较高的延迟</strong>，因此在利用 MapReduce 执行 Hive 查询时，也会有较高的延迟。相对的，数据库的执行延迟较低。当然，这个低是有条件的，即数据规模较小，<strong>当数据规模大到超过数据库的处理能力的时候，Hive 的并行计算显然能体现出优势</strong>。</li><li><strong>可扩展性</strong>: 由于 Hive 是建立在 Hadoop 之上的，因此 <strong>Hive 的可扩展性是和 Hadoop 的可扩展性是一致的</strong>。而数据库由于 ACID 语义的严格限制，扩展行非常有限。目前最先进的并行数据库 Oracle 在理论上的扩展能力也只有 100 台左右。</li><li><strong>数据规模</strong>: 由于 Hive 建立在集群上并可以利用 MapReduce 进行并行计算，因此可以支持<strong>很大规模的数据</strong>；对应的，数据库可以支持的数据规模较小。</li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive-UDF自定义函数-大小写转换Demo</title>
      <link href="/2023/04/22/coding/hive-udf-zi-ding-yi-han-shu-da-xiao-xie-zhuan-huan-demo/"/>
      <url>/2023/04/22/coding/hive-udf-zi-ding-yi-han-shu-da-xiao-xie-zhuan-huan-demo/</url>
      
        <content type="html"><![CDATA[<h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hive-exec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Lower-java">Lower.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Lower</span> <span class="token keyword">extends</span> <span class="token class-name">UDF</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">Text</span> <span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Text</span> s<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试">测试</h2><p>将代码打成 jar 包上传到服务器</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">add</span> JAR <span class="token operator">/</span>path<span class="token operator">/</span><span class="token keyword">to</span><span class="token operator">/</span>udf<span class="token punctuation">.</span>jar<span class="token keyword">create</span> <span class="token keyword">temporary</span> <span class="token keyword">function</span> tolowercase <span class="token keyword">as</span> <span class="token string">'cn.enjoy.hive.Lower'</span><span class="token keyword">select</span> tolowercase<span class="token punctuation">(</span><span class="token string">"AAA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> sid<span class="token punctuation">,</span>tolowercase<span class="token punctuation">(</span>sname<span class="token punctuation">)</span><span class="token punctuation">,</span>sex <span class="token keyword">from</span> person_p<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive-分桶</title>
      <link href="/2023/04/22/coding/hive-fen-tong/"/>
      <url>/2023/04/22/coding/hive-fen-tong/</url>
      
        <content type="html"><![CDATA[<h2 id="创建桶表">创建桶表</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> hive<span class="token punctuation">.</span>enforce<span class="token punctuation">.</span>bucketing<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">set</span> mapreduce<span class="token punctuation">.</span>job<span class="token punctuation">.</span>reduces<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">table</span> person_buck<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> person_buck<span class="token punctuation">(</span>sid <span class="token keyword">int</span> <span class="token punctuation">,</span>sname string<span class="token punctuation">)</span>partitioned <span class="token keyword">by</span><span class="token punctuation">(</span>sex string<span class="token punctuation">)</span><span class="token keyword">clustered</span> <span class="token keyword">by</span><span class="token punctuation">(</span>sid<span class="token punctuation">)</span>sorted <span class="token keyword">by</span><span class="token punctuation">(</span>sid <span class="token keyword">DESC</span><span class="token punctuation">)</span><span class="token keyword">into</span> <span class="token number">4</span> buckets<span class="token keyword">row</span> format delimited<span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> person_buck <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span> <span class="token keyword">select</span> sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>sex <span class="token keyword">from</span> person_p<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="桶表抽样查询">桶表抽样查询</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> table_name tablesample<span class="token punctuation">(</span>bucket X <span class="token keyword">out</span> <span class="token keyword">of</span> Y <span class="token keyword">on</span> field<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> person_buck tablesample<span class="token punctuation">(</span>bucket <span class="token number">1</span> <span class="token keyword">out</span> <span class="token keyword">of</span> <span class="token number">2</span> <span class="token keyword">on</span> sid<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>X 表示从哪个桶中开始抽取</li><li>Y 表示相隔多少个桶再次抽取<ul><li>Y 必须为分桶数量的倍数或者因子，比如分桶数为 6，Y 为 6，则表示只从桶中抽取 1 个 bucket 的数据；若 Y 为 3，则表示从桶中抽取 6/3 (2)个 bucket 的数据</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive-窗口函数-常用函数</title>
      <link href="/2023/04/22/coding/hive-chuang-kou-han-shu-chang-yong-han-shu/"/>
      <url>/2023/04/22/coding/hive-chuang-kou-han-shu-chang-yong-han-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> window_demo<span class="token punctuation">(</span>cookieid STRING<span class="token punctuation">,</span> createtime STRING<span class="token punctuation">,</span> pv <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token keyword">ROW</span> FORMAT DELIMITED<span class="token keyword">FIELDS</span> <span class="token keyword">TERMINATED</span> <span class="token keyword">BY</span> <span class="token string">','</span><span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'/testdata/window'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> window_demo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SUM">SUM</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> cookieid<span class="token punctuation">,</span>createtime<span class="token punctuation">,</span>pv<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>pv<span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime<span class="token punctuation">)</span> <span class="token keyword">AS</span> pv1<span class="token punctuation">,</span> <span class="token comment">-- 默认为从起点到当前行</span><span class="token function">SUM</span><span class="token punctuation">(</span>pv<span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime <span class="token keyword">ROWS</span> <span class="token operator">BETWEEN</span> <span class="token keyword">UNBOUNDED</span> <span class="token keyword">PRECEDING</span> <span class="token operator">AND</span> <span class="token keyword">CURRENT</span> <span class="token keyword">ROW</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> pv2<span class="token punctuation">,</span> <span class="token comment">--从起点到当前行，结果同 pv1</span><span class="token function">SUM</span><span class="token punctuation">(</span>pv<span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime <span class="token keyword">ROWS</span> <span class="token operator">BETWEEN</span> <span class="token number">3</span> <span class="token keyword">PRECEDING</span> <span class="token operator">AND</span> <span class="token keyword">CURRENT</span> <span class="token keyword">ROW</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> pv3<span class="token punctuation">,</span> <span class="token comment">--当前行+往前 3 行</span><span class="token function">SUM</span><span class="token punctuation">(</span>pv<span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime <span class="token keyword">ROWS</span> <span class="token operator">BETWEEN</span> <span class="token number">3</span> <span class="token keyword">PRECEDING</span> <span class="token operator">AND</span> <span class="token number">1</span> <span class="token keyword">FOLLOWING</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> pv4<span class="token punctuation">,</span> <span class="token comment">--当前行+往前 3 行+往后 1 行</span><span class="token function">SUM</span><span class="token punctuation">(</span>pv<span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime <span class="token keyword">ROWS</span> <span class="token operator">BETWEEN</span> <span class="token keyword">CURRENT</span> <span class="token keyword">ROW</span> <span class="token operator">AND</span> <span class="token keyword">UNBOUNDED</span> <span class="token keyword">FOLLOWING</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> pv5 <span class="token comment">--当前行+往后所有行</span><span class="token keyword">FROM</span> test1<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果不指定 <code>ROWS BETWEEN</code>, 默认统计窗口为从起点到当前行</li><li>如果不指定 <code>ORDER BY</code>, 不仅分区内没有排序, 则将分组内所有值累加</li><li><code>max()</code> 函数无论有没有 <code>order by</code> 都是计算整个分区的最大值</li></ul><p>关键是理解 <code>ROWS BETWEEN</code> 含义, 也叫做 window 子句：</p><ul><li><code>PRECEDING</code>：往前</li><li><code>FOLLOWING</code>：往后</li><li><code>CURRENT ROW</code>：当前行</li><li><code>UNBOUNDED</code>：无边界</li><li><code>UNBOUNDED PRECEDING</code>：表示从最前面的起点开始</li><li><code>UNBOUNDED FOLLOWING</code>：表示到最后面的终点</li></ul><h2 id="NTILE">NTILE</h2><p><code>NTILE(n)</code>，用于将分组数据按照顺序切分成 n 片，返回当前切片值，<code>NTILE</code> 不支持 <code>ROWS BETWEEN</code></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> cookieid<span class="token punctuation">,</span>createtime<span class="token punctuation">,</span>pv<span class="token punctuation">,</span> NTILE<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime<span class="token punctuation">)</span> <span class="token keyword">AS</span> ntile1<span class="token punctuation">,</span> <span class="token comment">--分组内将数据分成 2 片</span>NTILE<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime<span class="token punctuation">)</span> <span class="token keyword">AS</span> ntile2<span class="token punctuation">,</span> <span class="token comment">--分组内将数据分成 3 片</span>NTILE<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> createtime<span class="token punctuation">)</span> <span class="token keyword">AS</span> ntile3 <span class="token comment">--将所有数据分成 4 片</span><span class="token keyword">FROM</span> window_demo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ROW-NUMBER">ROW_NUMBER</h2><p><code>ROW_NUMBER()</code> 从 1 开始，按照顺序，生成分组内记录的序列<br><code>ROW_NUMBER()</code> 的应用场景非常多，比如获取分组内排序第一的记录</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> cookieid<span class="token punctuation">,</span>createtime<span class="token punctuation">,</span>pv<span class="token punctuation">,</span> ROW_NUMBER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pv <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> rn<span class="token keyword">FROM</span> window_demo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="RANK-DENSE-RANK">RANK DENSE_RANK</h2><p><code>RANK()</code> 生成数据项在分组中的排名，排名相等会在名次中留下空位<br><code>DENSE_RANK()</code> 生成数据项在分组中的排名，排名相等会在名次中不会留下空位</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> cookieid<span class="token punctuation">,</span>createtime<span class="token punctuation">,</span>pv<span class="token punctuation">,</span> RANK<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pv <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> rank1<span class="token punctuation">,</span> DENSE_RANK<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pv <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> d_rank2<span class="token punctuation">,</span> ROW_NUMBER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pv <span class="token keyword">DESC</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> rn3<span class="token keyword">FROM</span> window_demo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CUME-DIST">CUME_DIST</h2><p><code>cume_dist</code> 返回 小于等于 当前值的行数/分组内总行数</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> cookieid<span class="token punctuation">,</span>createtime<span class="token punctuation">,</span>pv<span class="token punctuation">,</span> <span class="token function">round</span><span class="token punctuation">(</span>CUME_DIST<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pv<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> cd1<span class="token punctuation">,</span> <span class="token function">round</span><span class="token punctuation">(</span>CUME_DIST<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> cookieid <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> pv<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> cd2<span class="token keyword">FROM</span> window_demo<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive-dd与dmll-常用命令</title>
      <link href="/2023/04/22/coding/hive-dd-yu-dmll-chang-yong-ming-ling/"/>
      <url>/2023/04/22/coding/hive-dd-yu-dmll-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="创建表">创建表</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span>EXTERNAL<span class="token punctuation">]</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> table_name    <span class="token punctuation">[</span><span class="token punctuation">(</span>col_name data_type <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> col_comment<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> table_comment<span class="token punctuation">]</span>    <span class="token punctuation">[</span>PARTITIONED <span class="token keyword">BY</span> <span class="token punctuation">(</span>col_name data_type <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> col_comment<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span><span class="token keyword">CLUSTERED</span> <span class="token keyword">BY</span> <span class="token punctuation">(</span>col_name<span class="token punctuation">,</span> col_name<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>    <span class="token punctuation">[</span>SORTED <span class="token keyword">BY</span> <span class="token punctuation">(</span>col_name <span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">INTO</span> num_buckets BUCKETS<span class="token punctuation">]</span>    <span class="token punctuation">[</span><span class="token keyword">ROW</span> FORMAT row_format<span class="token punctuation">]</span>    <span class="token punctuation">[</span>STORED <span class="token keyword">AS</span> file_format<span class="token punctuation">]</span>    <span class="token punctuation">[</span>LOCATION hdfs_path<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建内部表">创建内部表</h3><p>删除表的时候数据也会被删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> mytable<span class="token punctuation">(</span>sid <span class="token keyword">int</span> <span class="token punctuation">,</span>sname string<span class="token punctuation">)</span> <span class="token keyword">row</span> format delimited<span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span> stored <span class="token keyword">as</span> textfile<span class="token punctuation">;</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传数据: <code>hdfs dfs -put a /user/hive/warehouse/test.db/mytable/</code><br><code>select * from mytable</code></p><h3 id="创建外部表">创建外部表</h3><p>删除表的时候数据不会被删除</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> external <span class="token keyword">table</span> mytable_ext<span class="token punctuation">(</span>sid <span class="token keyword">int</span> <span class="token punctuation">,</span>sname string<span class="token punctuation">)</span><span class="token keyword">row</span> format delimited<span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span> location <span class="token string">'/dbdata'</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> mytable_ext<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建分区表">创建分区表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> person_p<span class="token punctuation">(</span>sid <span class="token keyword">int</span> <span class="token punctuation">,</span>sname string<span class="token punctuation">)</span> partitioned <span class="token keyword">by</span><span class="token punctuation">(</span>sex string<span class="token punctuation">)</span> <span class="token keyword">row</span> format delimited <span class="token keyword">fields</span><span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span>stored <span class="token keyword">as</span> textfile<span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'/testdata/a'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> person_p <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">'nan'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'/testdata/a'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> person_p <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">'nv'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> person_p<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建动态分区表">创建动态分区表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> hive<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">.</span>dynamic<span class="token punctuation">.</span><span class="token keyword">partition</span><span class="token punctuation">.</span><span class="token keyword">mode</span><span class="token operator">=</span>nonstrict<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> person_p2<span class="token punctuation">(</span>sid <span class="token keyword">int</span> <span class="token punctuation">,</span>sname string<span class="token punctuation">)</span> partitioned <span class="token keyword">by</span><span class="token punctuation">(</span>sex string<span class="token punctuation">)</span> <span class="token keyword">row</span> format delimited<span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span>stored <span class="token keyword">as</span> textfile<span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> person_p2 <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span> <span class="token keyword">select</span> sid<span class="token punctuation">,</span>sname<span class="token punctuation">,</span>sex <span class="token keyword">from</span> person_p<span class="token punctuation">;</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> person_p2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改表">修改表</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">ADD</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> partition_spec <span class="token punctuation">[</span> LOCATION <span class="token string">'location1'</span> <span class="token punctuation">]</span> partition_spec <span class="token punctuation">[</span> LOCATION <span class="token string">'location2'</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>partition_spec:: <span class="token keyword">PARTITION</span> <span class="token punctuation">(</span>partition_col <span class="token operator">=</span> partition_col_value<span class="token punctuation">,</span> partition_col <span class="token operator">=</span> partiton_col_value<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">DROP</span> partition_spec<span class="token punctuation">,</span> partition_spec<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="增加分区">增加分区</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> person_p3<span class="token punctuation">(</span>sid <span class="token keyword">int</span> <span class="token punctuation">,</span>sname string<span class="token punctuation">)</span> partitioned <span class="token keyword">by</span><span class="token punctuation">(</span>sex string<span class="token punctuation">)</span> <span class="token keyword">row</span> format delimited<span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">','</span>stored <span class="token keyword">as</span> textfile<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> person_p3 <span class="token keyword">add</span> <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'/testdata/a'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> person_p3 <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">local</span> inpath <span class="token string">'/testdata/a'</span> <span class="token keyword">into</span> <span class="token keyword">table</span> person_p3 <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> person_p3<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除分区">删除分区</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> person_p3 <span class="token keyword">drop</span> <span class="token keyword">partition</span><span class="token punctuation">(</span>sex<span class="token operator">=</span><span class="token string">'2'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="重命名表">重命名表</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> person_p3 <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> person_p4<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="新增列">新增列</h3><p>ADD 是代表新增一字段，字段位置在所有列后面(partition 列前)，REPLACE 则是表示替换表中所有字段。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">ADD</span><span class="token operator">|</span><span class="token keyword">REPLACE</span> <span class="token keyword">COLUMNS</span> <span class="token punctuation">(</span>col_name data_type <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> col_comment<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> person_p5<span class="token punctuation">(</span>sid <span class="token keyword">int</span> <span class="token punctuation">,</span>sname string<span class="token punctuation">)</span> partitioned <span class="token keyword">by</span><span class="token punctuation">(</span>sex string<span class="token punctuation">)</span> <span class="token keyword">row</span> format delimited<span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token keyword">Alter</span> <span class="token keyword">table</span> person_p5 <span class="token keyword">add</span> <span class="token keyword">COLUMNS</span> <span class="token punctuation">(</span>age <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">desc</span> person_p5<span class="token punctuation">;</span><span class="token keyword">Alter</span> <span class="token keyword">table</span> person_p5 <span class="token keyword">REPLACE</span> <span class="token keyword">COLUMNS</span> <span class="token punctuation">(</span>age2 <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">desc</span> person_p5<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改列">修改列</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name CHANGE <span class="token punctuation">[</span><span class="token keyword">COLUMN</span><span class="token punctuation">]</span> col_old_name col_new_name column_type<span class="token punctuation">[</span><span class="token keyword">COMMENT</span> col_comment<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">FIRST</span><span class="token operator">|</span><span class="token keyword">AFTER</span> column_name<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> person_p5 change <span class="token keyword">column</span> age2 age2 string<span class="token punctuation">;</span><span class="token keyword">desc</span> person_p5<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="显示命令">显示命令</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> tablese<span class="token punctuation">;</span><span class="token keyword">show</span> databasese<span class="token punctuation">;</span><span class="token keyword">show</span> partitions table_namee<span class="token punctuation">;</span><span class="token keyword">show</span> functionse<span class="token punctuation">;</span><span class="token keyword">desc</span> <span class="token keyword">extended</span> table_name<span class="token punctuation">;</span><span class="token keyword">desc</span> formatted table_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Load-操作">Load 操作</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">LOAD</span> <span class="token keyword">DATA</span> <span class="token punctuation">[</span><span class="token keyword">LOCAL</span><span class="token punctuation">]</span> INPATH <span class="token string">'filepath'</span> <span class="token punctuation">[</span>OVERWRITE<span class="token punctuation">]</span> <span class="token keyword">INTO</span><span class="token keyword">TABLE</span> tablename <span class="token punctuation">[</span><span class="token keyword">PARTITION</span> <span class="token punctuation">(</span>partcol1<span class="token operator">=</span>val1<span class="token punctuation">,</span> partcol2<span class="token operator">=</span>val2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Insert">Insert</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">TABLE</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>XX<span class="token punctuation">,</span>YY<span class="token punctuation">,</span>ZZ<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> OVERWRITE <span class="token punctuation">[</span><span class="token keyword">INTO</span><span class="token punctuation">]</span> <span class="token keyword">TABLE</span> tablename1 <span class="token punctuation">[</span><span class="token keyword">PARTITION</span> <span class="token punctuation">(</span>partcol1<span class="token operator">=</span>val1<span class="token punctuation">,</span> partcol2<span class="token operator">=</span>val2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span>select_statement1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SELECT">SELECT</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">[</span><span class="token keyword">ALL</span> <span class="token operator">|</span> <span class="token keyword">DISTINCT</span><span class="token punctuation">]</span> select_expr<span class="token punctuation">,</span> select_expr<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> table_reference<span class="token punctuation">[</span><span class="token keyword">WHERE</span> where_condition<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> col_list <span class="token punctuation">[</span><span class="token keyword">HAVING</span> condition<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>CLUSTER <span class="token keyword">BY</span> col_list<span class="token operator">|</span> <span class="token punctuation">[</span>DISTRIBUTE <span class="token keyword">BY</span> col_list<span class="token punctuation">]</span> <span class="token punctuation">[</span>SORT <span class="token keyword">BY</span><span class="token operator">|</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> col_list<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">LIMIT</span> number<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><code>order by</code> 会对输入做全局排序，因此只有一个 reducer，会导致当输入规模较大时，需要较长的计算时间。</li><li><code>sort by</code> 不是全局排序，其在数据进入 reducer 前完成排序。因此，如果用 <code>sort by</code> 进行排序，并且设置 <code>mapred.reduce.tasks&gt;1</code>，则 <code>sort by</code> 只保证每个 reducer 的输出有序，<strong>不保证全局有序</strong>。</li><li><code>distribute by</code>(字段) 根据指定的字段将数据分到不同的 reducer，且分发算法是 <strong>hash 散列</strong>。</li><li><code>Cluster by</code>(字段) 除了具有 <code>Distribute by</code> 的功能外，还会对该字段进行<strong>排序</strong>。</li></ol><p>因此，如果分桶和 sort 字段是同一个时，此时，<code>cluster by = distribute by + sort by</code></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230412-这个世界有太多东西值得我去探索</title>
      <link href="/2023/04/22/ri-ji/ri-ji-20230412-zhe-ge-shi-jie-you-tai-duo-dong-xi-zhi-de-wo-qu-tan-suo/"/>
      <url>/2023/04/22/ri-ji/ri-ji-20230412-zhe-ge-shi-jie-you-tai-duo-dong-xi-zhi-de-wo-qu-tan-suo/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="084a39885ea6e4e958cd4f2d4cc27d95b7028c6831615713b620d48eb7d3d1b8">775986d9acbb0b15ae59994c4d3eed10715a94701f728f2e165a145f9929353aa235ec14bf8a39040b8b81edd3042d8a436ad8255ee53a08dc5caed06e8234f703cd488b630b86ce216d2e575accc44d2addaeb561dac80be6b1d1c7c4b1a802a831a8f76fa8037b6a4fa762f958522e3586935adec687844c45bddd236f6a254704d07399bccbf415cc9e327dfc5254b548e942b37f5680c884bfac1882ac2f64cdfc629294c33e3f7a051c58832206</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive-PSQLException: 不支援 10 验证类型</title>
      <link href="/2023/04/22/coding/hive-psqlexception-bu-zhi-yuan-10-yan-zheng-lei-xing/"/>
      <url>/2023/04/22/coding/hive-psqlexception-bu-zhi-yuan-10-yan-zheng-lei-xing/</url>
      
        <content type="html"><![CDATA[<p>报错：PSQLException: 不支援 10 验证类型。请核对您已经组态 pg_hba.conf 文件包含客户端的IP位址或网路区段，以及驱动程序所支援的验证架构模式已被支援</p><p>原因：驱动不兼容（需要更新驱动版本）</p><ol><li>去官网或者使用Maven下载新的驱动jar包</li><li>添加到 hive/lib 目录中</li><li>将目录中旧的驱动jar包移出 hive/lib 目录</li></ol>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive-WstxParsingException: Illegal character entity: expansion character</title>
      <link href="/2023/04/22/coding/hive-wstxparsingexception-illegal-character-entity-expansion-character/"/>
      <url>/2023/04/22/coding/hive-wstxparsingexception-illegal-character-entity-expansion-character/</url>
      
        <content type="html"><![CDATA[<p><code>hive-site.xml</code> 文件第 3215 行左右有一个特殊字符 (<code>&amp;#8;</code>)，删掉它:</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">214      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>3215       Ensures commands with OVERWRITE (such as INSERT OVERWRITE) acquire Exclusive      locks for<span class="token entity" title="">&amp;#8;</span>transactional tables.  This ensures that inserts (w/o overwrite) runni     ng concurrently3216       are not hidden by the INSERT OVERWRITE.3217     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-Hive-安装</title>
      <link href="/2023/04/22/yun-wei/hadoop-hive-an-zhuang/"/>
      <url>/2023/04/22/yun-wei/hadoop-hive-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装</h2><ol><li><code>tar -zxvf apache-hive-3.1.3-bin.tar.gz -C /opt/hive</code></li><li><code>cp hive-env.sh.template hive-env.sh</code></li><li><code>hive-env.sh</code> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/opt/hadoop/hadoop-3.3.5<span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_HOME</span><span class="token operator">=</span>/opt/hive/apache-hive-3.1.3-bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><code>cp hive-log4j.properties.template hive-log4j.properties</code></li><li><code>hive-log4j.properties</code> <pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#log4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter</span><span class="token key attr-name">log4j.appender.EventCounter</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.hadoop.log.metrics.EventCounter</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>添加环境变量</li><li>依赖 jdk 1.8</li></ol><h2 id="依赖数据库">依赖数据库</h2><p>支持哪些数据库可以去 lib 目录下看看有哪些数据库驱动jar包</p><ol><li><code>cp hive-default.xml.template hive-site.xml</code></li><li>将配置文件中几个 <code>${}</code> 变量替换成自己设置的</li></ol><h3 id="derby">derby</h3><ul><li>初始化数据库: <code>schematool -dbType derby --initSchema</code></li><li>缺点: 在当前目录中创建 db 文件，离开当前目录就找不到原来的 db 了。</li></ul><h3 id="postgres">postgres</h3><ol><li>安装数据库 (<a href="/2023/04/14/yun-wei/postgresql-bu-shu/" title="PostgreSQL-部署">PostgreSQL-部署</a>)</li><li>修改配置文件 <code>hive-site.xml</code> <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hive.metastore.db.type<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>postgres<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionURL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>jdbc:postgresql://192.168.140.130:5432/hivedb?useSSL=false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionDriverName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>org.postgresql.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionUserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hivedb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>javax.jdo.option.ConnectionPassword<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hivedb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>初始化数据库: <code>schematool -dbType postgres --initSchema</code></li><li>如果报错<code>PSQLException: 不支援 10 验证类型。请核对您已经组态 pg_hba.conf 文件包含客户端的IP位址或网路区段，以及驱动程序所支援的验证架构模式已被支援。</code>: <a href="/2023/04/22/coding/hive-psqlexception-bu-zhi-yuan-10-yan-zheng-lei-xing/" title="Hive-PSQLException: 不支援 10 验证类型">Hive-PSQLException: 不支援 10 验证类型</a></li></ol><h2 id="启动">启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hive show databases<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>如果报错: <code>WstxParsingException: Illegal character entity: expansion character</code><ul><li><a href="/2023/04/22/coding/hive-wstxparsingexception-illegal-character-entity-expansion-character/" title="Hive-WstxParsingException: Illegal character entity: expansion character">Hive-WstxParsingException: Illegal character entity: expansion character</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-共同好友Demo</title>
      <link href="/2023/04/22/coding/hadoop-gong-tong-hao-you-demo/"/>
      <url>/2023/04/22/coding/hadoop-gong-tong-hao-you-demo/</url>
      
        <content type="html"><![CDATA[<h2 id="思路">思路</h2><p>原数据:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">A:B,C,D,F,E,OB:A,C,E,KC:F,A,D,ID:A,E,F,LE:B,C,D,M,LF:A,s,C,D,E,O,MG:A,C,D,E,FH:A,C,D,E,OI:A,OJ:B,OK:A,C,DL:D,E,FM:E,F,GO:A,H,I,J<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>先找出一个用户是哪些用户的共同好友（比如 C 是哪些用户的共同好友，以上题目中的 C 是用户 A,B,E,F,G,H,K 的共同好友，所以 AB 的共同好友为 C，AE 的共同好友为 C，以此类推。。。）</li><li>经过第一步推算，得到 AE 的 共同好友还有 D，最后将 AE 的共同好友合并得到 C,D，这只是举个例子，他们的共同好友还有很多，即将两两用户作为 key，好友作为 value，以此类推，因此需要写两个 mapreduce</li></ol><h2 id="JAVA-代码">JAVA 代码</h2><h3 id="FriendsStepOne-java">FriendsStepOne.java</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FriendsStepOne</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">FriendsStepOneMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LongWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LongWritable</span> key<span class="token punctuation">,</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">String</span> line <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> splits <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> person <span class="token operator">=</span> splits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> friends <span class="token operator">=</span> splits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> fString <span class="token operator">:</span>friends<span class="token punctuation">)</span><span class="token punctuation">{</span>                context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>fString<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">FriendsStepOneReducer</span> <span class="token keyword">extends</span> <span class="token class-name">Reducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">Text</span> friend<span class="token punctuation">,</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> persons<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">StringBuffer</span> sBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Text</span> pText <span class="token operator">:</span>persons<span class="token punctuation">)</span><span class="token punctuation">{</span>                sBuffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>pText<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>friend<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>sBuffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">FriendsStepOne</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">FriendsStepOneMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">FriendsStepOneReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:\\friends\\input"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:\\friends\\output-1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> res <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>res<span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="FriendsStepTwo-java">FriendsStepTwo.java</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FriendsStepTwo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">FriendsStepTwoMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LongWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LongWritable</span> key<span class="token punctuation">,</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">String</span> line <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> splits <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> friend <span class="token operator">=</span> splits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> persons <span class="token operator">=</span> splits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> persons<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> persons<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>persons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"-"</span><span class="token operator">+</span>persons<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>friend<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">FriendsStepTwoReducer</span> <span class="token keyword">extends</span> <span class="token class-name">Reducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">Text</span> person_pair<span class="token punctuation">,</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> friends<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">StringBuffer</span> sBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Text</span> fText <span class="token operator">:</span> friends<span class="token punctuation">)</span><span class="token punctuation">{</span>                sBuffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fText<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>person_pair<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>sBuffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">FriendsStepTwo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">FriendsStepTwoMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">FriendsStepTwoReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:\\friends\\output-1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:\\friends\\output-2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> res <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>res<span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-倒排索引-文章单词统计Demo</title>
      <link href="/2023/04/22/coding/hadoop-dao-pai-suo-yin-wen-zhang-dan-ci-tong-ji-demo/"/>
      <url>/2023/04/22/coding/hadoop-dao-pai-suo-yin-wen-zhang-dan-ci-tong-ji-demo/</url>
      
        <content type="html"><![CDATA[<h2 id="思路-倒推法">思路 (倒推法)</h2><p>第二步:</p><ul><li>Reduce<ul><li>key:单词</li><li>values[] 文章–次数</li></ul></li><li>Map<ul><li>key: 单词</li><li>value: 文章–次数</li></ul></li></ul><p>第一步:</p><ul><li>Reduce<ul><li>key: 单词–文档位置</li><li>value: 单词次数</li></ul></li><li>Map<ul><li>key: 单词–文档位置</li><li>value: 1</li></ul></li></ul><hr><h2 id="JAVA-代码">JAVA 代码</h2><h3 id="IndexStepOne-java">IndexStepOne.java</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexStepOne</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IndexStepOneMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LongWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">IntWritable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token class-name">Text</span> k <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">IntWritable</span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LongWritable</span> key<span class="token punctuation">,</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">String</span> line <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">FileSplit</span> <span class="token class-name">Split</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FileSplit</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span><span class="token function">getInputSplit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> filename <span class="token operator">=</span> <span class="token class-name">Split</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//输出 key :单词--文件名 value:1</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> words<span class="token punctuation">)</span><span class="token punctuation">{</span>                k<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>word <span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>                context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IndexStepOneReducer</span> <span class="token keyword">extends</span> <span class="token class-name">Reducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">IntWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">IntWritable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token class-name">IntWritable</span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">Text</span> key<span class="token punctuation">,</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span> value <span class="token operator">:</span> values<span class="token punctuation">)</span><span class="token punctuation">{</span>                count <span class="token operator">+=</span> value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            v<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepOne</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepOneMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepOneReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这里可以进行 combiner 组件的设置</span>        job<span class="token punctuation">.</span><span class="token function">setCombinerClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepOneReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setInputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextInputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextOutputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/index/input"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/index/output-1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> res <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>res<span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="IndexStepTwo-java">IndexStepTwo.java</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexStepTwo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IndexStepTwoMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LongWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token class-name">Text</span> k <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Text</span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LongWritable</span> key<span class="token punctuation">,</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">String</span> line <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fields <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> word_file <span class="token operator">=</span> fields<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> count <span class="token operator">=</span> fields<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> word_file<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> word <span class="token operator">=</span> split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> file <span class="token operator">=</span> split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            k<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>            v<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>file<span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IndexStepTwoReducer</span> <span class="token keyword">extends</span> <span class="token class-name">Reducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>        <span class="token class-name">Text</span> v <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">Text</span> key<span class="token punctuation">,</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">StringBuffer</span> sBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Text</span> value <span class="token operator">:</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>                sBuffer<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            v<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>sBuffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepTwo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//告诉程序，我们的程序所用的 mapper 类和 reducer 类是什么</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepTwoMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepTwoReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//告诉框架，我们程序输出的数据类型</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这里可以进行 combiner 组件的设置</span>        job<span class="token punctuation">.</span><span class="token function">setCombinerClass</span><span class="token punctuation">(</span><span class="token class-name">IndexStepTwoReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//告诉框架，我们要处理的数据文件在那个路劲下</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/index/output-1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//告诉框架，我们的处理结果要输出到什么地方</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:/index/output-2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> res <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>res<span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-高可用集群部署</title>
      <link href="/2023/04/22/yun-wei/hadoop-gao-ke-yong-ji-qun-bu-shu/"/>
      <url>/2023/04/22/yun-wei/hadoop-gao-ke-yong-ji-qun-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="架构示例">架构示例</h2><p><img src="/static/IT/Hadoop/Hadoop-high.png" alt="Hadoop 高可用架构"></p><table><thead><tr><th>主机名</th><th>IP</th><th>服务</th><th>进程</th></tr></thead><tbody><tr><td>HA1</td><td>192.168.140.130</td><td>Hadoop</td><td>NN(active), ZKFC</td></tr><tr><td>HA2</td><td>192.168.140.131</td><td>Hadoop</td><td>NN(standby), ZKFC</td></tr><tr><td>HA3</td><td>192.168.140.132</td><td>Hadoop</td><td>RM(active)</td></tr><tr><td>HA4</td><td>192.168.140.133</td><td>Hadoop</td><td>RM(standby)</td></tr><tr><td>HA5</td><td>192.168.140.134</td><td>Hadoop<br>Zookeeper</td><td>DN, NM, JN, QPM</td></tr><tr><td>HA6</td><td>192.168.140.135</td><td>Hadoop<br>Zookeeper</td><td>DN, NM, JN, QPM</td></tr><tr><td>HA7</td><td>192.168.140.136</td><td>Hadoop<br>Zookeeper</td><td>DN, NM, JN, QPM</td></tr></tbody></table><p>节点含义: <a href="/2023/04/17/hadoop/hadoop-2-jie-dian/" title="Hadoop-2.节点">Hadoop-2.节点</a></p><ul><li>QPM: QuorumPeerMain Zookeeper 进程</li></ul><h2 id="安装软件">安装软件</h2><p>安装 Java, Hadoop, Zookeeper(Docker swarm)</p><ul><li><a href="/2023/04/18/coding/linux-yum-an-zhuang-jdk11/" title="Linux-yum安装jdk11">Linux-yum安装jdk11</a></li><li><a href="/2023/04/21/yun-wei/zookeeper-gao-ke-yong-ji-qun-bu-shu-dockerswarm/" title="Zookeeper-高可用集群部署[DockerSwarm]">Zookeeper-高可用集群部署[DockerSwarm]</a></li><li><code>tar -zxvf hadoop-3.3.5.tar.gz -C /opt/hadoop</code></li><li>配置环境变量</li></ul><h2 id="配置网络环境">配置网络环境</h2><ol><li>同步时间</li><li>修改hosts文件 <code>vi /etc/hosts</code>:<ul><li><code>192.168.140.130 HA1</code></li><li><code>192.168.140.131 HA2</code></li><li><code>192.168.140.132 HA3</code></li><li><code>192.168.140.133 HA4</code></li><li><code>192.168.140.134 HA5</code></li><li><code>192.168.140.135 HA6</code></li><li><code>192.168.140.136 HA7</code></li></ul></li><li>关闭防火墙<ul><li><code>systemctl stop firewalld.service</code></li><li><code>systemctl disable firewalld.service</code></li><li><code>firewall-cmd --stat</code></li></ul></li><li>修改主机名 <code>vi /etc/hostname</code><ul><li>分别配置为 <code>HA1</code>,<code>HA2</code>,<code>HA3</code>,<code>HA4</code>,<code>HA5</code>,<code>HA6</code>,<code>HA7</code></li></ul></li><li>配置免密钥登陆（主要针对NN和RM节点）<ul><li><code>ssh-keygen -t rsa</code></li><li><code>ssh-copy-id HA1</code></li><li><code>ssh-copy-id HA2</code></li><li><code>ssh-copy-id HA3</code></li><li><code>ssh-copy-id HA4</code></li><li><code>ssh-copy-id HA5</code></li><li><code>ssh-copy-id HA6</code></li><li><code>ssh-copy-id HA7</code></li></ul></li></ol><h2 id="Hadoop配置文件">Hadoop配置文件</h2><p><code>/opt/hadoop/hadoop-3.3.5/etc/hadoop/</code>:</p><ul><li><code>hadoop-env.sh</code>: <code>export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</code></li><li><code>core-site.xml</code>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 hdfs 的 nameservice 为 bi --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hdfs://bi/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 hadoop 临时目录 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/var/hadoop/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 zookeeper 地址 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>ha.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA5:2181,HA6:2181,HA7:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>hdfs-site.xml</code>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--指定 hdfs 的 nameservice 为 bi，需要和 core-site.xml 中的保持一致 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.nameservices<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>bi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- bi 下面有两个 NameNode，分别是 nn1, nn2 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.ha.namenodes.bi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>nn1,nn2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- nn1 的 RPC 通信地址 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.rpc-address.bi.nn1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA1:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- nn1 的 http 通信地址 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.http-address.bi.nn1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA1:50070<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- nn2 的 RPC 通信地址 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.rpc-address.bi.nn2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA2:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- nn2 的 http 通信地址 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.http-address.bi.nn2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA2:50070<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 NameNode 的 edits 元数据在 JournalNode 上的存放位置 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.shared.edits.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>qjournal://HA5:8485;HA6:8485;HA7:8485/bi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 JournalNode 在本地磁盘存放数据的位置 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.journalnode.edits.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/var/hadoop/journaldata<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 开启 NameNode 失败自动切换 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.ha.automatic-failover.enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 配置失败自动切换实现方式 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.client.failover.proxy.provider.bi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 配置隔离机制方法，多个机制用换行分割，即每个机制暂用一行--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.ha.fencing.methods<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>        sshfence        shell(/bin/true)        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 使用 sshfence 隔离机制时需要 ssh 免登陆 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.ha.fencing.ssh.private-key-files<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/home/hadoop/.ssh/id_rsa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 配置 sshfence 隔离机制超时时间 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.ha.fencing.ssh.connect-timeout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>30000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>mapred-site.xml</code>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 mr 框架为 yarn 方式 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>yarn-site.xml</code>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 开启 RM 高可用 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.ha.enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 RM 的 cluster id --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.cluster-id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>yrc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 RM 的名字 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.ha.rm-ids<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>rm1,rm2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 分别指定 RM 的地址 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.hostname.rm1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.hostname.rm2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 指定 zk 集群地址 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.resourcemanager.zk-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>HA5:2181,HA6:2181,HA7:2181<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>workers</code> (<code>slaves</code> in Hadoop2)<ul><li>NN 节点的 workers 指的是 DN 节点</li><li>RM (yarn)节点的 workers 指的是 NM 节点  <pre class="line-numbers language-text" data-language="text"><code class="language-text">HA5HA6HA7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li>使用 <code>scp -r</code> 将配置好的目录复制到其他机器</li></ul><h2 id="启动">启动</h2><ol><li>启动 Zookeeper 集群</li><li>启动 JN (HA5, HA6, HA7): <code>hadoop-daemon.sh start journalnode</code></li><li>格式化 NN (HA1 上执行): <code>hdfs namenode -format</code><ul><li>使用 <code>scp -r</code> 将 <code>core-site.xml</code> 文件中配置的 <code>hadoop.tmp.dir</code> 目录复制到 NN standby 节点 (HA2), 为了保持同步</li></ul></li><li>格式化 ZKFC (HA1 上执行): <code>hdfs zkfc -formatZK</code></li><li>启动 HDFS (HA1 上执行): <code>start-dfs.sh</code></li><li>启动 YARN (HA3 上执行): <code>start-yarn.sh</code></li><li>启动 YARN standby (HA4 上执行): <code>yarn-daemon.sh start resourcemanager</code></li></ol><h2 id="JAVA-客户端">JAVA 客户端</h2><ol><li>将集群配置文件中的 <code>core-site.xml</code>, <code>hdfs-site.xml</code> 拷贝到项目的 <code>resources</code> 目录</li><li><code>FileSystem</code> 指定 hdfs 的 nameservice 为 bi <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://bi/"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span>  <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper-高可用集群部署[DockerSwarm]</title>
      <link href="/2023/04/21/yun-wei/zookeeper-gao-ke-yong-ji-qun-bu-shu-dockerswarm/"/>
      <url>/2023/04/21/yun-wei/zookeeper-gao-ke-yong-ji-qun-bu-shu-dockerswarm/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">zoo1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo1    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 2181<span class="token punctuation">:</span><span class="token number">2181</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> zoo1<span class="token punctuation">:</span>/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=0.0.0.0<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=zoo2<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.3=zoo3<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181  <span class="token key atrule">zoo2</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo2    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 2182<span class="token punctuation">:</span><span class="token number">2181</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> zoo2<span class="token punctuation">:</span>/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">2</span>      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=zoo1<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=0.0.0.0<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.3=zoo3<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181  <span class="token key atrule">zoo3</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo3    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 2183<span class="token punctuation">:</span><span class="token number">2181</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> zoo3<span class="token punctuation">:</span>/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">3</span>      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=zoo1<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=zoo2<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.3=0.0.0.0<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181<span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">zoo1</span><span class="token punctuation">:</span>    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"nfs"</span>      <span class="token key atrule">o</span><span class="token punctuation">:</span> <span class="token string">"addr=192.168.140.130,rw"</span>      <span class="token key atrule">device</span><span class="token punctuation">:</span> <span class="token string">":/srv/nfs/zoo1"</span>  <span class="token key atrule">zoo2</span><span class="token punctuation">:</span>    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"nfs"</span>      <span class="token key atrule">o</span><span class="token punctuation">:</span> <span class="token string">"addr=192.168.140.130,rw"</span>      <span class="token key atrule">device</span><span class="token punctuation">:</span> <span class="token string">":/srv/nfs/zoo2"</span>  <span class="token key atrule">zoo3</span><span class="token punctuation">:</span>    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"nfs"</span>      <span class="token key atrule">o</span><span class="token punctuation">:</span> <span class="token string">"addr=192.168.140.130,rw"</span>      <span class="token key atrule">device</span><span class="token punctuation">:</span> <span class="token string">":/srv/nfs/zoo3"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> stack deploy <span class="token parameter variable">-c</span> docker-compose.yml zoo<span class="token function">docker</span> <span class="token function">service</span> <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>注意事项:</p><ol><li>docker-compose.yml 更新后建议换一个 stack 名重启</li><li>nfs 目录的权限</li><li>nfs 服务的集群高可用</li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFS-Rocky安装NFS</title>
      <link href="/2023/04/21/coding/nfs-rocky-an-zhuang-nfs/"/>
      <url>/2023/04/21/coding/nfs-rocky-an-zhuang-nfs/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 服务端和客户端都需安装</span>dnf <span class="token function">install</span> nfs-utils<span class="token comment"># 启动服务端</span>systemctl <span class="token builtin class-name">enable</span> nfs-serversystemctl start nfs-serversystemctl status nfs-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>配置 NFC 服务: <a href="/2023/04/21/coding/nfs-linux-pei-zhi-nfs-fu-wu/" title="NFS-Linux配置NFS服务">NFS-Linux配置NFS服务</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFS-Linux配置NFS服务</title>
      <link href="/2023/04/21/coding/nfs-linux-pei-zhi-nfs-fu-wu/"/>
      <url>/2023/04/21/coding/nfs-linux-pei-zhi-nfs-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1>服务端</h1><h2 id="创建服务端共享目录">创建服务端共享目录</h2><p>配置NFSv4服务器时，一个好的做法是使用全局NFS根目录，并将实际目录绑定到共享挂载点。<br>一般使用/srv/nfs4目录作为NFS根目录。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mount</span> <span class="token parameter variable">--bind</span> /var/www /srv/nfs4/www<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="重启后自动绑定目录">重启后自动绑定目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/fstab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加绑定信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/var/www     /srv/nfs4/www      none   <span class="token builtin class-name">bind</span>   <span class="token number">0</span>   <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="导出服务端文件系统">导出服务端文件系统</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/exports<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加共享配置信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/srv/nfs4  <span class="token number">192.168</span>.33.0/24<span class="token punctuation">(</span>rw,sync,no_subtree_check,crossmnt,fsid<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>/srv/nfs4/www     <span class="token number">192.168</span>.33.110<span class="token punctuation">(</span>rw,sync,no_subtree_check<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>常用选项说明：</p><ul><li><code>fsid=0</code>定义NFS根目录<code>/srv/nfs4</code></li><li>仅允许来自<code>192.168.33.0/24</code>子网的客户端对此NFS访问权限</li><li>crossmnt选项是必需的，它用于共享目录和导出子目录</li><li><code>/srv/nfs4/www</code>目录，只允许<code>192.168.33.0/24</code>网段的客户端有读的权限，并且仅允许IP地址是<code>192.168.33.110</code>的客户端具有读和写权限<ul><li><code>*</code>表示所有网段</li></ul></li><li><code>sync</code>选项告诉NFS在恢复之前将更改写入磁盘。</li><li>默认启用 <code>root_squash</code> 选项，防止从客户端对已挂载的共享具有root权限。它将映射rootUID和GID到nobody/nogroup UID/GID。<ul><li>为了使客户端计算机能够访问，NFS希望客户端的用户和组ID与服务器的用户和组ID匹配。另一种选择是使用NFSv4 idmapping功能，将用户和组ID转换为名称。</li><li>使用 <code>no_all_squash,no_root_squash</code> 关闭</li></ul></li></ul><p>例子:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/srv/nfs  *<span class="token punctuation">(</span>rw,sync,no_subtree_check,crossmnt,fsid<span class="token operator">=</span><span class="token number">0</span>,no_all_squash,no_root_squash<span class="token punctuation">)</span>/srv/nfs/www *<span class="token punctuation">(</span>rw,async,no_all_squash,no_subtree_check,no_root_squash<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使配置生效：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> exportfs <span class="token parameter variable">-ra</span><span class="token function">sudo</span> exportfs <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1>客户端</h1><h2 id="客户端挂载NFS文件系统">客户端挂载NFS文件系统</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /srv/www<span class="token function">sudo</span> <span class="token function">mount</span> <span class="token parameter variable">-t</span> nfs <span class="token parameter variable">-o</span> <span class="token assign-left variable">vers</span><span class="token operator">=</span><span class="token number">4</span> <span class="token number">192.168</span>.33.10:/www /srv/www<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>挂载NFS v4版本的文件系统时，可以省略NFS根目录，因此你可以使用/www，而不是/srv/nfs4/www挂载NFS共享目录。</p><p>查看是否挂载成功：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">df</span> <span class="token parameter variable">-h</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>自动挂载需要修改<code>/etc/fstab</code>文件，与上文服务端的自动挂载相同配置方法</p><h2 id="客户端卸载NFS文件系统">客户端卸载NFS文件系统</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">umount</span> /srv/www<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同时不要忘记删除<code>/etc/fstab</code>文件中的自动挂载点</p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DockerSwarm-初始化</title>
      <link href="/2023/04/21/yun-wei/dockerswarm-chu-shi-hua/"/>
      <url>/2023/04/21/yun-wei/dockerswarm-chu-shi-hua/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 初始化 swarm</span><span class="token function">docker</span> swarm init<span class="token comment"># 查看如何加入本机 swarm 的命令</span><span class="token function">docker</span> swarm join-token manager<span class="token function">docker</span> swarm join-token worker<span class="token comment"># 查看 swarm 中的节点</span><span class="token function">docker</span> <span class="token function">node</span> <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-Rocky安装Docker</title>
      <link href="/2023/04/21/coding/linux-rocky-an-zhuang-docker/"/>
      <url>/2023/04/21/coding/linux-rocky-an-zhuang-docker/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dnf config-manager --add-repo<span class="token operator">=</span>https://download.docker.com/linux/centos/docker-ce.repodnf updatednf <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce docker-ce-cli containerd.io<span class="token function">docker</span> <span class="token parameter variable">--version</span>systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>systemctl start <span class="token function">docker</span>systemctl status <span class="token function">docker</span><span class="token comment"># 添加用户到 Docker 组</span><span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> jxch<span class="token function">id</span> jxch<span class="token comment"># 测试</span><span class="token function">docker</span> run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-11.优化</title>
      <link href="/2023/04/21/hadoop/hadoop-11-you-hua/"/>
      <url>/2023/04/21/hadoop/hadoop-11-you-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="参数调优">参数调优</h2><p><strong>以下参数是在用户自己的 mr 应用程序中配置就可以生效</strong></p><ol><li><code>mapreduce.map.memory.mb</code>: 一个 Map Task 可使用的资源上限（单位:MB），默认为 1024。如果 Map Task 实际使用的资源量超过该值，则会被强制杀死。</li><li><code>mapreduce.reduce.memory.mb</code>: 一个 Reduce Task 可使用的资源上限（单位:MB），默认为 1024。如果 Reduce Task 实际使用的资源量超过该值，则会被强制杀死。</li><li><code>mapreduce.map.cpu.vcores</code>: 每个 Map task 可使用的最多 cpu core 数目, 默认值: 1</li><li><code>mapreduce.reduce.cpu.vcores</code>: 每个 Reduce task 可使用的最多 cpu core 数目, 默认值: 1</li><li><code>mapreduce.map.java.opts</code>: Map Task 的 JVM 参数，你可以在此配置默认的 java heap size 等参数, e.g. “-Xmx1024m -verbose:gc -Xloggc:/tmp/@taskid@.gc” （@taskid@ 会被 Hadoop 框架自动换为相应的 taskid）, 默认值: “”</li><li><code>mapreduce.reduce.java.opts</code>: Reduce Task 的 JVM 参数，你可以在此配置默认的 java heap size 等参数, e.g. “-Xmx1024m -verbose:gc -Xloggc:/tmp/@taskid@.gc”, 默认值: “”</li></ol><p><strong>应该在 yarn 启动之前就配置在服务器的配置文件中才能生效</strong></p><ol><li><code>yarn.scheduler.minimum-allocation-mb</code>: 1024 给应用程序 container 分配的最小内存</li><li><code>yarn.scheduler.maximum-allocation-mb</code>: 8192 给应用程序 container 分配的最大内存</li><li><code>yarn.scheduler.minimum-allocation-vcores</code>: 1 最小核数</li><li><code>yarn.scheduler.maximum-allocation-vcores</code>: 32 最大核数</li><li><code>yarn.nodemanager.resource.memory-mb</code>: 8192 nodemanager resource 内存大小</li></ol><p><strong>shuffle 性能优化的关键参数，应在 yarn 启动之前就配置好</strong></p><ol><li><code>mapreduce.task.io.sort.mb</code>: 100  shuffle 的环形缓冲区大小，默认 100m</li><li><code>mapreduce.map.sort.spill.percent</code>: 0.8  环形缓冲区溢出的阈值，默认 80%</li></ol><p><strong>可靠性相关</strong></p><ol><li><code>mapreduce.map.speculative</code>: 是否为 Map Task 打开推测执行机制，默认为 false</li><li><code>mapreduce.reduce.speculative</code>: 是否为 Reduce Task 打开推测执行机制，默认为 false</li><li><code>mapreduce.job.user.classpath.first</code> &amp; <code>mapreduce.task.classpath.user.precedence</code>：当同一个 class 同时出现在用户 jar 包和 hadoop jar 中时，优先使用哪个 jar 包中的 class，默认为 false，表示优先使用 hadoop jar 中的 class</li><li><code>mapreduce.input.fileinputformat.split.minsize</code>: FileInputFormat 做切片时的最小切片大小，</li><li><code>mapreduce.input.fileinputformat.split.maxsize</code>: FileInputFormat 做切片时的最大切片大小 (切片的默认大小就等于 blocksize，即 134217728)</li></ol><p>推测执行机制就是同时执行两台机器，选最先出结果的机器的结果，杀死另一台机器的任务，防止出现其中一台机器计算速度太慢的情况</p><p><strong>压缩</strong></p><ul><li>如果是 IO 密集形任务，可以考虑开启压缩</li></ul><h2 id="代码优化">代码优化</h2><ol><li>输出的时候不要频繁创建对象</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>    context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// 改为</span><span class="token class-name">Text</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">IntWritable</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>    context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>尽量使用Combiner机制，减轻Reduce的压力: <code>job.setCombinerClass(XXReducer.class);</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-10.YARN资源调度器</title>
      <link href="/2023/04/21/hadoop/hadoop-10-yarn-zi-yuan-diao-du-qi/"/>
      <url>/2023/04/21/hadoop/hadoop-10-yarn-zi-yuan-diao-du-qi/</url>
      
        <content type="html"><![CDATA[<p>配置 (<a href="https://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-common/yarn-default.xml">官方文档</a>):<br><code>yarn.resourcemanager.scheduler.class</code> 默认: <code>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</code></p><hr><p><img src="/static/IT/Hadoop/YARN-QUEUE.png" alt="YARN 资源调度器"></p><ol><li>FIFO 队列缺点: 大任务会耗时太长会导致小任务得不到及时的执行</li><li>分为大小任务两个队列，小任务在大任务执行时也能得到及时执行<ul><li>缺点：如果只有大任务或只有小任务，会浪费掉一部分内存资源维护另一个用不到的队列</li><li>Apache Hadoop 原生默认的队列类型</li></ul></li><li>公平队列：在大任务执行过程中，如果加入了小任务，那么大任务会让出部分资源给小任务执行<ul><li>缺点：小任务需要等待大任务让出资源，得不到及时执行</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-9.mapreduce-YARN流程</title>
      <link href="/2023/04/21/hadoop/hadoop-9-mapreduce-yarn-liu-cheng/"/>
      <url>/2023/04/21/hadoop/hadoop-9-mapreduce-yarn-liu-cheng/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/IT/Hadoop/YARN-MR.png" alt="mapreduce-YARN流程"></p><ol><li>应用申请运行RM的JOB</li><li>RM返回JOBID以及提交资源的目录</li><li>应用提交相关文件到资源目录</li><li>通知RM, JOB资源提交完毕</li><li>RM初始任务TASK, 加入调度队列</li><li>空闲NM领取任务</li><li>NM根据任务信息创建Container (并且从资源目录获取JOB资源)</li><li>应用发送指令启动NM的MrAppMaster</li><li>MrAppMaster向RM请求运算节点</li><li>MrAppMaster向请求回来的运算节点中启动MapTask</li><li>MrAppMaster向请求回来的运算节点中启动ReduceTask</li><li>JOB执行完成后, MrAppMaster向RM注销自己</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-8.YARN流程</title>
      <link href="/2023/04/21/hadoop/hadoop-8-yarn-liu-cheng/"/>
      <url>/2023/04/21/hadoop/hadoop-8-yarn-liu-cheng/</url>
      
        <content type="html"><![CDATA[<p>YARN 是运算资源调度系统，他只做运算资源的分配和调度，不参与用户程序内部的具体工作，所以 YARN 可以作为一个通用的资源调度平台</p><p>在 Hadoop1.x 的时候其实是没有 YRAN，当初的 MapReduce 由两个组件组成</p><ul><li>Job Tracker: 相当于 RM + MrAppMaster</li><li>Task Tracker: 相当于 NM + Task(MapTask, ReduceTask)</li></ul><hr><p><img src="/static/IT/Hadoop/YARN.png" alt="YARN 流程"></p><ol><li>客户端程序向 ResourceManager 提交应用并请求一个 ApplicationMaster 实例</li><li>ResourceManager 找到一个可以运行一个 Container 的 NodeManager，并在这个 Container 中启动 ApplicationMaster 实例</li><li>ApplicationMaster 向 ResourceManager 进行注册 ，注册之后客户端就可以查询 ResourceManager 获得自己 ApplicationMaster 的详细信息 ，以后就可以和自己的 ApplicationMaster 直接交互了（这个时候，客户端主动和 ApplicationMaster 交互，应用先向 ApplicationMaster 发送一个满足自己需求的资源请求）</li><li>在平常的操作过程中，ApplicationMaster 根据协议向 ResourceManager 发送资源请求</li><li>当 Container 被成功分配后，ApplicationMaster 通过向 NodeManager 发送信息来启动 Container，信息包含了能够让 Container 和 ApplicationMaster 交互所需要的资料</li><li>应用程序的代码以 task 形式在启动的 Container 中运行，并把运行的进度、状态等信息通过协议发送给 ApplicationMaster</li><li>在应用程序运行期间，提交应用的客户端主动和 ApplicationMaster 交流获得应用的运行状态、进度更新等信息</li><li>一旦应用程序执行完成并且所有相关工作也已经完成，ApplicationMaster 向 ResourceManager 取消注册然后关闭，用到所有的 Container 也归还给系统</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-数据压缩</title>
      <link href="/2023/04/21/coding/hadoop-shu-ju-ya-suo/"/>
      <url>/2023/04/21/coding/hadoop-shu-ju-ya-suo/</url>
      
        <content type="html"><![CDATA[<h2 id="原则">原则</h2><p>MapReduce 支持压缩，通过压缩算法对 mapper 或者 reducer 的最终数据结果进行压缩</p><ul><li>好处：减少了磁盘 io，提高了 MR 获取数据的速度，节省了磁盘空间</li><li>坏处：压缩需要增加 cpu 的运算负担</li></ul><p>原则:</p><ul><li>运算密集的 job，少用压缩，尤其是中间数据</li><li>Io 密集的 job，可以用压缩，尤其是最终归档数据</li></ul><p><a href="http://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html#Data_Compression">官方文档</a></p><hr><h2 id="Mapper-输出压缩">Mapper 输出压缩</h2><p>配置文档:</p><ul><li><code>mapreduce.map.output.compress=false</code></li><li><code>mapreduce.map.output.compress.codec=org.apache.hadoop.io.compress.DefaultCodec</code></li></ul><p>在代码中进行配置:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">conf<span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span><span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token constant">MAP_OUTPUT_COMPRESS</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>conf<span class="token punctuation">.</span><span class="token function">setClass</span><span class="token punctuation">(</span><span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token constant">MAP_OUTPUT_COMPRESS_CODEC</span><span class="token punctuation">,</span> <span class="token class-name">GzipCodec</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">CompressionCodec</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Reduce-输出压缩">Reduce 输出压缩</h2><p>配置文档:</p><ul><li><code>mapreduce.output.fileoutputformat.compress=false </code></li><li><code>mapreduce.output.fileoutputformat.compress.codec=org.apache.hadoop.io.compress.DefaultCodec </code></li><li><code>mapreduce.output.fileoutputformat.compress.type=RECORD</code></li></ul><p>在代码中进行配置:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setCompressOutput</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputCompressorClass</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token class-name">GzipCodec</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p><img src="/static/IT/Hadoop/Compression.jpg" alt="支持的压缩类型"></p><p>不建议使用配置文档的方式，不灵活，可以使用代码进行配置<br><a href="http://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-client-core/mapred-default.xml">配置文件官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-自定义OutputFileFormat-Demo</title>
      <link href="/2023/04/21/coding/hadoop-zi-ding-yi-outputfileformat-demo/"/>
      <url>/2023/04/21/coding/hadoop-zi-ding-yi-outputfileformat-demo/</url>
      
        <content type="html"><![CDATA[<p>如果单词是老师人名，放到一个目录，否则放到另外一个目录</p><h2 id="TeacherOutPutFormat-java">TeacherOutPutFormat.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TeacherOutPutFormat</span> <span class="token keyword">extends</span> <span class="token class-name">FileOutputFormat</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">NullWritable</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">RecordWriter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">NullWritable</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRecordWriter</span><span class="token punctuation">(</span><span class="token class-name">TaskAttemptContext</span> job<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> teacherPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/excelteacher/excelteacher.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> otherPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/excelother/excelother.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FSDataOutputStream</span> teacherOut <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>teacherPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FSDataOutputStream</span> otherOut <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>otherPath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TeacherRecordWriter</span><span class="token punctuation">(</span>teacherOut<span class="token punctuation">,</span>otherOut<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TeacherRecordWriter</span> <span class="token keyword">extends</span> <span class="token class-name">RecordWriter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">NullWritable</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>        <span class="token class-name">FSDataOutputStream</span> teacherOut<span class="token punctuation">;</span>        <span class="token class-name">FSDataOutputStream</span> otherOut<span class="token punctuation">;</span>                <span class="token keyword">public</span> <span class="token class-name">TeacherRecordWriter</span><span class="token punctuation">(</span><span class="token class-name">FSDataOutputStream</span> teacherOut<span class="token punctuation">,</span> <span class="token class-name">FSDataOutputStream</span> otherOut<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>teacherOut <span class="token operator">=</span> teacherOut<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>otherOut <span class="token operator">=</span> otherOut<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Text</span> key<span class="token punctuation">,</span> <span class="token class-name">NullWritable</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token class-name">String</span> keyStr <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>keyStr<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">":teacher"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">String</span> resultKey <span class="token operator">=</span> keyStr<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">":teacher"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                teacherOut<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>resultKey<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                otherOut<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>keyStr<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token class-name">TaskAttemptContext</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>teacherOut <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                teacherOut<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>otherOut <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                otherOut<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ExcelMapper-java">ExcelMapper.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">NullWritable</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> teachers <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span> key<span class="token punctuation">,</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span>words<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>teachers<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                word <span class="token operator">=</span> word<span class="token operator">+</span><span class="token string">":teacher"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">NullWritable</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        teachers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teachers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"deer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teachers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"james"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teachers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"peter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teachers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"lison"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teachers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"king"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teachers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"mark"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ExcelJob-java">ExcelJob.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelJob</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">ExcelJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">ExcelMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">NullWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setInputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">ExcelFileInputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TeacherOutPutFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//不需要Reduce</span>        job<span class="token punctuation">.</span><span class="token function">setNumReduceTasks</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//指定文件得读取位置</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:\\wc\\excel"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//指定文件得输出位置 还有success文件需要输出 </span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"D:\\wc\\excelout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-自定义InputFileFormat-Demo</title>
      <link href="/2023/04/21/coding/hadoop-zi-ding-yi-inputfileformat-demo/"/>
      <url>/2023/04/21/coding/hadoop-zi-ding-yi-inputfileformat-demo/</url>
      
        <content type="html"><![CDATA[<p>以 excel 的文件举例</p><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.sourceforge.jexcelapi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jxl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ExcelInputFormat-java">ExcelInputFormat.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelFileInputFormat</span> <span class="token keyword">extends</span> <span class="token class-name">FileInputFormat</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">isSplitable</span><span class="token punctuation">(</span><span class="token class-name">JobContext</span> context<span class="token punctuation">,</span> <span class="token class-name">Path</span> filename<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">RecordReader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> <span class="token function">createRecordReader</span><span class="token punctuation">(</span><span class="token class-name">InputSplit</span> split<span class="token punctuation">,</span> <span class="token class-name">TaskAttemptContext</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ExcelRecordReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ExcelRecordReader-java">ExcelRecordReader.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelRecordReader</span> <span class="token keyword">extends</span> <span class="token class-name">RecordReader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> rows<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> current <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Sheet</span> sheet<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Workbook</span> workbook<span class="token punctuation">;</span>        <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token class-name">InputSplit</span> split<span class="token punctuation">,</span> <span class="token class-name">TaskAttemptContext</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">FileSplit</span> filesplit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FileSplit</span><span class="token punctuation">)</span> split<span class="token punctuation">;</span>        <span class="token class-name">Configuration</span> conf<span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> filePath <span class="token operator">=</span>filesplit<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileSystem</span> fs<span class="token operator">=</span>filePath<span class="token punctuation">.</span><span class="token function">getFileSystem</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FSDataInputStream</span> inputStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            workbook <span class="token operator">=</span> <span class="token class-name">Workbook</span><span class="token punctuation">.</span><span class="token function">getWorkbook</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>            sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getSheets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            rows <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BiffException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">nextKeyValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>current<span class="token operator">&lt;</span>rows<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            current<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">IntWritable</span> <span class="token function">getCurrentKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Text</span> <span class="token function">getCurrentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">StringBuffer</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>sheet<span class="token punctuation">.</span><span class="token function">getColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">Cell</span> cell <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> current<span class="token punctuation">)</span><span class="token punctuation">;</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">getProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> current<span class="token operator">/</span>rows<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        workbook<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ExcelMapper-java">ExcelMapper.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">,</span><span class="token class-name">IntWritable</span><span class="token punctuation">,</span><span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span> key<span class="token punctuation">,</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ExcelJob-java">ExcelJob.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExcelJob</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">ExcelJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">ExcelMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setInputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">ExcelFileInputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//不需要Reduce</span>        job<span class="token punctuation">.</span><span class="token function">setNumReduceTasks</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//指定文件得读取位置</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/excel"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//指定文件得输出位置</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/excelout"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-7.切片逻辑</title>
      <link href="/2023/04/21/hadoop/hadoop-7-qie-pian-luo-ji/"/>
      <url>/2023/04/21/hadoop/hadoop-7-qie-pian-luo-ji/</url>
      
        <content type="html"><![CDATA[<p>默认切片的大小与 hdfs 的 block 的 size 相等<br>切片大小: <code>Math.max(minSize, Math.min(maxSize, blockSize))</code></p><ul><li><code>mapreduce.input.fileinputformat.split.minsize</code> 默认值 <code>1</code></li><li><code>mapreduce.input.fileinputformat.split.maxsize</code> 默认值 <code>Long.MAX_VALUE</code></li></ul><p>切片规则: <code>剩余长度 / splitsize &lt; 1.1</code></p><hr><p>流程:</p><div class="mermaid">  graph TD    A(input.txt) --&gt; F([FileInputFormat])    F --&gt; J([Jobsubmit])    J -.-&gt;|剩余/splitsize&lt;1.1| S1([切片1])    J -.-&gt;|剩余/splitsize&lt;1.1| S2([切片2])    S1 --写入文件--&gt; JS(job.split)    S2 --写入文件--&gt; JS(job.split)    JS --MrAppMaster--&gt; M1([MapTask1])    JS --MrAppMaster--&gt; M2([MapTask2])</div>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-单词分组排序统计Demo</title>
      <link href="/2023/04/20/coding/hadoop-dan-ci-fen-zu-pai-xu-tong-ji-demo/"/>
      <url>/2023/04/20/coding/hadoop-dan-ci-fen-zu-pai-xu-tong-ji-demo/</url>
      
        <content type="html"><![CDATA[<p>先进行单词统计: <a href="/2023/04/20/coding/hadoop-dan-ci-tong-ji-demo/" title="Hadoop-单词统计Demo">Hadoop-单词统计Demo</a></p><h2 id="排序">排序</h2><p>利用对Mapper输出的Key的自动排序进行排序</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WCSortMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LongWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">DescIntWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LongWritable</span> key<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> line <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>words<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DescIntWritable</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>words<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>words<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WCSortReducer</span> <span class="token keyword">extends</span> <span class="token class-name">Reducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DescIntWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">IntWritable</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">DescIntWritable</span> key<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Text</span> word <span class="token operator">:</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DescIntWritable</span> <span class="token keyword">extends</span> <span class="token class-name">IntWritable</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">DescIntWritable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">DescIntWritable</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分组">分组</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WCPartitioner</span> <span class="token keyword">extends</span> <span class="token class-name">Partitioner</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DescIntWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getPartition</span><span class="token punctuation">(</span><span class="token class-name">DescIntWritable</span> descIntWritable<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Text</span> text<span class="token punctuation">,</span> <span class="token keyword">int</span> numPartitions<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"jxch"</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Job">Job</h2><p>先完成单词统计的任务，然后在此基础上进行分组排序</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WCSortJob</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">WCSortJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">WCMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">WCReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        Mapper 输出键值类型</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        Reducer 输出键值类型</span>        job<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setInputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextInputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextOutputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/input"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/output"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        等待执行完并检查是否执行成功</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Job</span> sortJob <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">WCSortJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">WCSortMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">WCSortReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">DescIntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setInputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextInputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setOutputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextOutputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setPartitionerClass</span><span class="token punctuation">(</span><span class="token class-name">WCPartitioner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sortJob<span class="token punctuation">.</span><span class="token function">setNumReduceTasks</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>sortJob<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/output"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>sortJob<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/output_sort"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>sortJob<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-jar-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>archive</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addClasspath</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addClasspath</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>classpathPrefix</span><span class="token punctuation">&gt;</span></span>lib/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>classpathPrefix</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>org.jxch.study.hadoop.mr.wc.sort.WCSortJob<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>archive</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行">运行</h2><p>编译 jar 包: <code>mvn package -Dmaven.test.skip=true -f pom.xml</code><br>将 jar 包上传到 Hadoop 服务器之后，执行命令: <code>hadoop jar /home/jxch/study-hadoop-1.1-SNAPSHOT.jar </code></p><p>跑完后，检查运行结果:</p><ul><li><code>hadoop fs -ls /wc/output_sort</code></li><li><code>hadoop fs -cat /wc/output_sort/part-r-00000</code></li><li><code>hadoop fs -cat /wc/output_sort/part-r-00001</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-6.提交任务流程与Shuffle流程</title>
      <link href="/2023/04/20/hadoop/hadoop-6-ti-jiao-ren-wu-liu-cheng-yu-shuffle-liu-cheng/"/>
      <url>/2023/04/20/hadoop/hadoop-6-ti-jiao-ren-wu-liu-cheng-yu-shuffle-liu-cheng/</url>
      
        <content type="html"><![CDATA[<p>shuffle 并不是个组件，而是 mr 处理流程中的一个子过程，它过程开始于 maptask 把数据写入环形缓存一直到数据到 reduce 之间的整个过程</p><p><img src="/static/IT/Hadoop/shuffle.png" alt="Shuffle 流程"></p><ol><li>maptask 收集我们的 <code>map()</code> 方法输出的 kv 对，放到内存缓冲区中</li><li>从内存缓冲区不断溢出本地磁盘文件，可能会溢出多个文件</li><li>多个溢出文件会被合并成大的溢出文件</li><li><font color="orange">在溢出过程中，及合并 Combine 的过程中，都要调用 partitoner 进行分组和针对 key 进行排序 (compare)</font></li><li>reducetask 根据自己的分区号，去各个 maptask 机器上取相应的结果分区数据</li><li>reducetask 会取到同一个分区的来自不同 maptask 的结果文件，<font color="orange">reducetask 会将这些文件再进行合并（归并排序）</font></li><li>合并成大文件后，shuffle 的过程也就结束了，后面进入 reducetask 的逻辑运算过程（从文件中取出一个个的键值对 group，调用用户自定义的 <code>reduce()</code>方法）</li><li>缓冲区的大小可以通过参数调整, 参数：<code>mapreduce.task.io.sort.mb</code> 默认 100M</li></ol><hr><p><a href="http://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-client-core/mapred-default.xml">官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-5.mapreduce工作机制</title>
      <link href="/2023/04/20/hadoop/hadoop-5-mapreduce-gong-zuo-ji-zhi/"/>
      <url>/2023/04/20/hadoop/hadoop-5-mapreduce-gong-zuo-ji-zhi/</url>
      
        <content type="html"><![CDATA[<p>一个完整的 mapreduce 程序在分布式运行时有三类实例进程：</p><ol><li>MRAppMaster：负责整个程序的过程调度及状态协调</li><li>MapTask：负责 map 阶段的整个数据处理流程</li><li>ReduceTask：负责 reduce 阶段的整个数据处理流程</li></ol><hr><p>流程:</p><ol><li>一个 mr 程序启动的时候，最先启动的是 MRAppMaster，MRAppMaster 启动后根据本次 job 的描述信息，计算出需要的 maptask 实例数量，然后向集群申请机器启动相应数量的 maptask 进程（这里先理解成一个文件一个 maptask）</li><li>maptask 进程启动之后，根据给定的数据切片范围进行数据处理，主体流程为：<ol><li>利用客户指定的 inputformat 来获取数据，形成输入 K，V 对</li><li>将输入 KV 对传递给客户定义的 <code>map()</code> 方法，做逻辑运算，并将 <code>map()</code> 方法输出的 KV 对收集到缓存</li><li>将缓存中的 KV 对按照 K 分区排序后不断溢写到磁盘文件</li></ol></li><li>MRAppMaster 监控到所有 maptask 进程任务完成之后，会根据客户指定的参数启动相应数量的 reducetask 进程，并告知 reducetask 进程要处理的数据范围（数据分区）</li><li>Reducetask 进程启动之后，根据 MRAppMaster 告知的待处理数据所在位置，从若干台 maptask 运行所在机器上获取到若干个 maptask 输出结果文件，并在本地进行重新归并排序，然后按照相同 key 的 KV 为一个组，调用客户定义的 <code>reduce()</code> 方法进行逻辑运算，并收集运算输出的结果 KV，然后调用客户指定的 outputformat 将结果数据输出到外部存储</li></ol><hr><div class="mermaid">  graph TD    M -.-&gt;|开启两个MapTask| C1    M -.-&gt;|所有maptask进程完成后<br>开启两个ReduceTask<br>告知数据所在位置| R1    M(MRAppMaster) --&gt; A(input dir)    A --&gt; B1([1.txt])    A --&gt; B2([2.txt])    B1 --InputFormat<br>TextInputFormat--&gt; C1([MapTask1])    B2 --InputFormat<br>TextInputFormat--&gt; C2([MapTask2])    M -.-&gt;|开启两个MapTask| C2    C1 --Mapper.map--&gt;D1([context.write])    C2 --Mapper.map--&gt;D2([context.write])    D1 --&gt; E1(内存缓存-环形缓冲区)    D2 --&gt; E2(内存缓存-环形缓冲区)    E1 --按照KEY分区排序<br>写入磁盘--&gt; F1(溢出文件1)     E1 --按照KEY分区排序<br>写入磁盘--&gt; F2(溢出文件2)     E2 --按照KEY分区排序<br>写入磁盘--&gt; F3(溢出文件3)     E2 --按照KEY分区排序<br>写入磁盘--&gt; F4(溢出文件4)    F1 --&gt; H1([Shuffle流程])    F2 --&gt; H1([Shuffle流程])    F3 --&gt; H2([Shuffle流程])    F4 --&gt; H2([Shuffle流程])    H1 -.-&gt; F5(所有客户机的数据)    H2 -.-&gt; F5    F5 --从客户机获取溢出文件<br>key.hashcode%2=0--&gt; R1([ReduceTask1])    F5 --从客户机获取溢出文件<br>key.hashcode%2=1--&gt; R2([ReduceTask2])    M -.-&gt;|所有maptask进程完成后<br>开启两个ReduceTask<br>告知数据所在位置| R2    R1 --归并排序分组<br>Reducer.reduce--&gt; G1([context.write])    R2 --归并排序分组<br>Reducer.reduce--&gt; G2([context.write])    G1 --OutputFormat<br>TextOutputFormat--&gt; P1(part-r-00000)    G2 --OutputFormat<br>TextOutputFormat--&gt; P2(part-r-00001)</div><hr><p>关于Shuffle流程: <a href="/2023/04/20/hadoop/hadoop-6-ti-jiao-ren-wu-liu-cheng-yu-shuffle-liu-cheng/" title="Hadoop-6.提交任务流程与Shuffle流程">Hadoop-6.提交任务流程与Shuffle流程</a></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-单词统计Demo</title>
      <link href="/2023/04/20/coding/hadoop-dan-ci-tong-ji-demo/"/>
      <url>/2023/04/20/coding/hadoop-dan-ci-tong-ji-demo/</url>
      
        <content type="html"><![CDATA[<p>导入 <code>hadoop</code> 和 <code>hadoop.mapreduce</code> 包下的类</p><h2 id="WCMapper-java">WCMapper.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 泛型分别是：输入的键值类型; 输出的键值类型 </span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WCMapper</span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LongWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">IntWritable</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LongWritable</span> key<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Text</span> value<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> line <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words <span class="token operator">=</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>            context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="WCReducer-java">WCReducer.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 泛型分别是：输入的键值类型; 输出的键值类型 </span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WCReducer</span> <span class="token keyword">extends</span> <span class="token class-name">Reducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">IntWritable</span><span class="token punctuation">,</span> <span class="token class-name">Text</span><span class="token punctuation">,</span> <span class="token class-name">IntWritable</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">reduce</span><span class="token punctuation">(</span><span class="token class-name">Text</span> key<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IntWritable</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">,</span> <span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">IntWritable</span> v <span class="token operator">:</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>            count <span class="token operator">+=</span> v<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        context<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">IntWritable</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="WCJob-java">WCJob.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WCJob</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Job</span> job <span class="token operator">=</span> <span class="token class-name">Job</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setJarByClass</span><span class="token punctuation">(</span><span class="token class-name">WCJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapperClass</span><span class="token punctuation">(</span><span class="token class-name">WCMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setReducerClass</span><span class="token punctuation">(</span><span class="token class-name">WCReducer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//        Mapper 输出键值类型</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setMapOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        Reducer 输出键值类型</span>        job<span class="token punctuation">.</span><span class="token function">setOutputKeyClass</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputValueClass</span><span class="token punctuation">(</span><span class="token class-name">IntWritable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setInputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextInputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        job<span class="token punctuation">.</span><span class="token function">setOutputFormatClass</span><span class="token punctuation">(</span><span class="token class-name">TextOutputFormat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//         前期准备, 在 Hadoop /wc/input 目录中上传进待分析的文件</span>        <span class="token class-name">FileInputFormat</span><span class="token punctuation">.</span><span class="token function">setInputPaths</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/input"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FileOutputFormat</span><span class="token punctuation">.</span><span class="token function">setOutputPath</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/wc/output"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        等待执行完并检查是否执行成功</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">waitForCompletion</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-jar-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>archive</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addClasspath</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addClasspath</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>classpathPrefix</span><span class="token punctuation">&gt;</span></span>lib/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>classpathPrefix</span><span class="token punctuation">&gt;</span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">&gt;</span></span>org.jxch.study.hadoop.mr.wc.WCJob<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">&gt;</span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>archive</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行">运行</h2><p>编译 jar 包: <code>mvn package -Dmaven.test.skip=true -f pom.xml</code><br>将 jar 包上传到 Hadoop 服务器之后，执行命令: <code>hadoop jar /home/jxch/study-hadoop-1.0-SNAPSHOT.jar </code></p><p>跑完后，检查运行结果:</p><ul><li><code>hadoop fs -ls /wc/output</code></li><li><code>hadoop fs -cat /wc/output/part-r-00000</code></li></ul><hr><h2 id="依赖包">依赖包</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hadoop-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hadoop-hdfs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hadoop-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.jetbrains<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>annotations<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-4.元数据管理-edits+fsimage</title>
      <link href="/2023/04/20/hadoop/hadoop-4-yuan-shu-ju-guan-li-edits-fsimage/"/>
      <url>/2023/04/20/hadoop/hadoop-4-yuan-shu-ju-guan-li-edits-fsimage/</url>
      
        <content type="html"><![CDATA[<h2 id="元数据的存储形式">元数据的存储形式</h2><p>hdfs 的读写流程都离不开 namenode，在 namenode 中维护了文件、文件块的信息，这些信息统统称之为元数据</p><p>元数据在 hdfs 中有 3 种存在形式 (<font color="red">内存的数据 = fsimage + edits 文件</font>)</p><ol><li>存在内存中，这个最全的元数据</li><li>fsimage 磁盘元数据镜像文件</li><li>最新的操作日志文件</li></ol><p>查看存储结构:</p><ul><li><code>cd /soft/data/tmp/dfs/name/current</code></li><li><code>hdfs oev -i edits_0000000000000001913-0000000000000001959 -o edits.xml</code></li><li><code>hdfs oiv -i fsimage_0000000000000001972 -p XML -o fsimage.xml</code></li></ul><h2 id="checkpoint">checkpoint</h2><p>当达到某个条件后，secondary namenode 会把 namenode 上保存的 edits 和最新的 fsimage 下载到本地，并把这些 edits 和 fsimage 进行合并，产生新的 fsimage，这整个过程把他称作 <font color="red">checkpoint</font> (<a href="http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/hdfs-default.xml">官方文档</a>)</p><p>checkpoint 的条件配置 (hdfs-site.xml):</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#检查触发条件是否满足的频率，60 秒</span><span class="token key attr-name">dfs.namenode.checkpoint.check.period</span><span class="token punctuation">=</span><span class="token value attr-value">60 </span><span class="token comment"># 以下两个参数做checkpoint 操作时，代表 secondary namenode 的本地工作目录</span><span class="token key attr-name">dfs.namenode.checkpoint.dir</span><span class="token punctuation">=</span><span class="token value attr-value">file://${hadoop.tmp.dir}/dfs/namesecondary</span><span class="token key attr-name">dfs.namenode.checkpoint.edits.dir</span><span class="token punctuation">=</span><span class="token value attr-value">${dfs.namenode.checkpoint.dir} </span><span class="token comment">#最大重试次数</span><span class="token key attr-name">dfs.namenode.checkpoint.max-retries</span><span class="token punctuation">=</span><span class="token value attr-value">3 </span><span class="token comment">#两次 checkpoint 之间的时间间隔 3600 秒</span><span class="token key attr-name">dfs.namenode.checkpoint.period</span><span class="token punctuation">=</span><span class="token value attr-value">3600 </span><span class="token comment">#两次 checkpoint 之间最大的操作记录</span><span class="token key attr-name">dfs.namenode.checkpoint.txns</span><span class="token punctuation">=</span><span class="token value attr-value">1000000 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="checkpoint-工作机制">checkpoint 工作机制</h2><p><img src="/static/IT/Hadoop/checkpoint.png" alt="checkpoint 工作机制"></p><ol><li>SecondaryNameNode 会定时的和 NameNode 通信，请求其停止使用 edits 文件，暂时将新的写操作写到一个新的文件 edits.new 上，这个操作是瞬时完成的，上层的写日志函数完全感觉不到差别</li><li>econdaryNameNode 通过 HTTP 的 get 方法从 NameNode 上获取到 fsimage 和 edits 文件，SecondaryNameNode 将 fsimage 文件载入内存中，逐一执行 edits 文件中的事务，创建新的合并后的 fsimage 文件，<font color="red">使得内存中的 fsimage 保存最新</font>。</li><li>SecondaryNameNode 执行完 2 之后，会通过 post 方法将新的 fsimage 文件发送到 NameNode 节点上</li><li>NameNode 将从 SecondaryNameNode 接收到的新的 fsimage 文件保存为.ckpt 文件</li><li>NameNode 重新命名 fsimage.ckpt 为 fsimage 替换旧的 fsimage 文件，同时将 edits.new 替换为 edits 文件，<font color="red">通过这个过程 edits 文件就变小了</font>。</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-3.hdfs读写文件流程</title>
      <link href="/2023/04/20/hadoop/hadoop-3-hdfs-du-xie-wen-jian-liu-cheng/"/>
      <url>/2023/04/20/hadoop/hadoop-3-hdfs-du-xie-wen-jian-liu-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="HDFS-特点">HDFS 特点</h2><ol><li>hdfs 里的文件是分块（block）存储的，默认大小是 128M</li><li>hdfs 使用统一的抽象目录树管理文件，客户端不需要关心具体的文件分块<ul><li>例如：hdfs://hadoop01:port/path1/path2/file</li></ul></li><li>抽象目录树以及分块的信息由 namenode 节点管理</li><li>具体的 block 存储在每一个节点上，并且每一个 block 可以有多个副本（dfs.replication）</li><li>Hdfs 适合设计成一次写入多次读取的情况，不支持修改</li></ol><h2 id="HDFS-写文件流程">HDFS 写文件流程</h2><p><img src="/static/IT/Hadoop/HDFS-W.png" alt="HDFS 写文件流程"></p><p>举例来说，现在要上传一个 hadoop.jar 文件, 200M（按默认得配置应该分成两个 block [128,72]）<br>对应命令是： <code>hadoop fs put hadoop.jar /</code></p><ol><li>客户端使用 FIleSystem 上传</li><li>FIleSystem 与 namenode 进行通信，nn 会检查自己维护得目录树，判断当前目录是否存在</li><li>当 namenode 正确返回后，客户端再向 namenode 请求上传第一个 block, namenode 确认 datanode 的状态，把健康的 datanode 集合返回给客户端，客户端会根据返回的 datanode 集合挑选一个进行连接</li><li>客户端对每一个用于传输的节点都建立 pipeline 管道，并对传输第一个 block 块的数据（每次传输的并不是一整个 block 块，而是一个 packet，默认大小为 64K，64K 的 packet 中每次传输 512b 的数据时（一个 chunk）会进行一次校验）所以你可以把 packet 又理解成 chunk的集合</li><li>每个 datenode 写完个 block 后再返回确认信息</li><li>所有写完了，关闭输出流</li><li>整个完成后最后通知 namdenode 完成数据上传</li></ol><h2 id="HDFS-读文件流程">HDFS 读文件流程</h2><p><img src="/static/IT/Hadoop/HDFS-R.png" alt="HDFS 写文件流程"></p><p><code>hadoop fs get /hadoop.jar</code></p><ol><li>client 访问 NameNode，查询元数据信息，获得这个文件的数据块位置列表，返回输入流对象。</li><li>就近挑选一台 datanode 服务器，请求建立输入流</li><li>DataNode 向输入流中中写数据，以 packet 为单位</li><li>关闭输入流</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-FileSystem-文件操作Demo</title>
      <link href="/2023/04/20/coding/hadoop-filesystem-wen-jian-cao-zuo-demo/"/>
      <url>/2023/04/20/coding/hadoop-filesystem-wen-jian-cao-zuo-demo/</url>
      
        <content type="html"><![CDATA[<h2 id="FSTest-java">FSTest.java</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 需要安装Hadoop程序, 并配置环境变量(HADOOP_HOME) * 不配置也可以使用部分功能 * 配置本地的hosts文件, 对应hadoop01的ip地址 */</span><span class="token annotation punctuation">@Slf4j</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FSTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">FileSystem</span> fileSystem<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Before</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">URISyntaxException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>        fileSystem <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">"hdfs://hadoop01:9000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@After</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        fileSystem<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//显示根目录下文件</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showRootFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">RemoteIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LocatedFileStatus</span><span class="token punctuation">&gt;</span></span> files <span class="token operator">=</span> fileSystem<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">LocatedFileStatus</span> fileStatus <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Path</span> path <span class="token operator">=</span> fileStatus<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> name <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{} -&gt; {}"</span><span class="token punctuation">,</span> path<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">//测试上传文件</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCopyFromLocalFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Path</span> src <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"E:\\work\\test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> dst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileSystem<span class="token punctuation">.</span><span class="token function">copyFromLocalFile</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//测试删除文件</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">Path</span> dst <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileSystem<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//测试使用流的方式上传</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUploadUseStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"E:\\work\\test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">FSDataOutputStream</span> fos <span class="token operator">=</span> fileSystem<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> fos<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//测试下载文件</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCopyToLocalFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span><span class="token comment">//        这种方式只有配置了HADOOP_HOME之后才能使用</span><span class="token comment">//        fileSystem.copyToLocalFile(new Path("/test.txt"), new Path("E:\\work\\test2.txt"));</span><span class="token comment">//        使用Java默认的方式 (RawLocalFileSystem)</span>        fileSystem<span class="token punctuation">.</span><span class="token function">copyToLocalFile</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"/test.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">"E:\\work\\test2.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pom-xml">pom.xml</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hadoop-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hadoop-hdfs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hadoop-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.3.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven-更换阿里源</title>
      <link href="/2023/04/20/coding/maven-geng-huan-a-li-yuan/"/>
      <url>/2023/04/20/coding/maven-geng-huan-a-li-yuan/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-fs-常用命令</title>
      <link href="/2023/04/20/coding/hadoop-fs-chang-yong-ming-ling/"/>
      <url>/2023/04/20/coding/hadoop-fs-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>hadoop fs -help</code></td><td>帮助命令</td></tr><tr><td><code>hadoop fs -ls /</code></td><td>显示目录信息</td></tr><tr><td><code>hadoop fs -ls hdfs://hadoop01:9000/</code></td><td>显示目录信息(使用Nn节点)</td></tr><tr><td><code>hadoop fs -mkdir -p /path1/path2/path3</code></td><td>创建目录</td></tr><tr><td><code>hadoop fs -moveFromLocal /file/a.txt /path1/path2</code></td><td>从本地剪切粘贴到hdfs</td></tr><tr><td><code>hadoop fs -appendToFile  b.txt /file/a.txt</code></td><td>追加文件</td></tr><tr><td><code>hadoop fs -cat /a.txt</code></td><td>显示文件</td></tr><tr><td><code>hadoop fs -chmod 666 /file/a.txt</code></td><td>改权限</td></tr><tr><td><code>hadoop fs -chown root:root /file/a.txt</code></td><td>改组和拥有者</td></tr><tr><td><code>hadoop fs -chgrp group /file/a.txt</code></td><td>改组</td></tr><tr><td><code>hadoop fs -copyFromLocal ./b.txt /</code></td><td>拷贝文件到HDFS (上传)</td></tr><tr><td><code>hadoop fs -copyToLocal /b.txt /c.txt</code></td><td>拷贝HDFS文件到本地 (下载)</td></tr><tr><td><code>hadoop fs -cp /aa.txt /bbb.txt</code></td><td>复制</td></tr><tr><td><code>hadoop fs -mv /aa.txt /bbb.txt</code></td><td>移动</td></tr><tr><td><code>hadoop fs -get /aa.txt</code></td><td>下载</td></tr><tr><td><code>hadoop fs -put aa.txt /file</code></td><td>上传</td></tr><tr><td><code>hadoop fs -getmerge /file bb.txt</code></td><td>合并下载某个目录中的多个文件</td></tr><tr><td><code>hadoop fs -rmdir /file1/file2</code></td><td>删除空目录</td></tr><tr><td><code>hadoop fs -rm -r /d.txt</code></td><td>删除文件或文件夹</td></tr><tr><td><code>hadoop fs -df -h /</code></td><td>统计文件系统可用空间</td></tr><tr><td><code>hadoop fs -du -s -h /file</code></td><td>统计文件夹大小</td></tr><tr><td><code>hadoop fs -count /file</code></td><td>统计文件夹节点数量</td></tr><tr><td><code>hadoop fs -setrep 3 /aa.txt</code></td><td>设置副本数量</td></tr><tr><td><code>hdfs dfsadmin -report</code></td><td>查看集群状态</td></tr></tbody></table><hr><p><a href="https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/FileSystemShell.html">官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-ClassNotFoundException</title>
      <link href="/2023/04/19/coding/hadoop-classnotfoundexception/"/>
      <url>/2023/04/19/coding/hadoop-classnotfoundexception/</url>
      
        <content type="html"><![CDATA[<ol><li>输入命令 <code>hadoop classpath</code>, 将结果复制下来</li><li><code>mapred-site.xml</code> 中加入:</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>mapreduce.application.classpath<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>刚才复制的值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>yarn-site.xml</code> 中加入:</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>yarn.application.classpath<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>刚才复制的值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>重启 hadoop 集群</li></ol>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-启动时没有启动datanode</title>
      <link href="/2023/04/19/coding/hadoop-qi-dong-shi-mei-you-qi-dong-datanode/"/>
      <url>/2023/04/19/coding/hadoop-qi-dong-shi-mei-you-qi-dong-datanode/</url>
      
        <content type="html"><![CDATA[<p>原因:<br>在第一次格式化<code>dfs</code>后，启动并使用了<code>hadoop</code>，后来又重新执行了格式化命令 <code>hdfs namenode -format</code>，这时<code>namenode</code>的<code>clusterID</code>会重新生成，而<code>datanode</code>的<code>clusterID</code> 保持不变。</p><p>解决方法:</p><ol><li>删除目录，重新格式化</li><li>将<code>name/current</code>下的<code>VERSION</code>中的<code>clusterID</code>复制到<code>data/current</code>下的<code>VERSION</code>中，覆盖掉原来的<code>clusterID</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-集群部署</title>
      <link href="/2023/04/19/yun-wei/hadoop-ji-qun-bu-shu/"/>
      <url>/2023/04/19/yun-wei/hadoop-ji-qun-bu-shu/</url>
      
        <content type="html"><![CDATA[<p>示例:</p><table><thead><tr><th>IP(Hostname)</th><th>Server</th></tr></thead><tbody><tr><td>192.168.140.130 (hadoop01)</td><td><font color="red">Nn</font> Dn Snn Nm</td></tr><tr><td>192.168.140.131 (hadoop02)</td><td>Dn Nm <font color="red">Rm</font></td></tr><tr><td>192.168.140.132 (hadoop03)</td><td>Dn Nm</td></tr></tbody></table><p>节点类型参考: <a href="/2023/04/17/hadoop/hadoop-2-jie-dian/" title="Hadoop-2.节点">Hadoop-2.节点</a></p><hr><p>以下操作需要在三台机器上同步进行:</p><ol><li>同步时间</li><li>修改hosts文件 <code>vi /etc/hosts</code>:<ul><li><code>192.168.140.130 hadoop01</code></li><li><code>192.168.140.131 hadoop02</code></li><li><code>192.168.140.132 hadoop03</code></li></ul></li><li>关闭防火墙<ul><li><code>systemctl stop firewalld.service</code></li><li><code>systemctl disable firewalld.service</code></li><li><code>firewall-cmd --stat</code></li></ul></li><li>修改主机名 <code>vi /etc/hostname</code><ul><li>分别配置为 <code>hadoop01</code>, <code>hadoop02</code>, <code>hadoop03</code></li></ul></li><li>配置免密钥登陆（主要针对 Nn 和 Rm 节点）<ul><li><code>ssh-keygen -t rsa</code></li><li><code>ssh-copy-id hadoop01</code></li><li><code>ssh-copy-id hadoop02</code></li><li><code>ssh-copy-id hadoop03</code></li></ul></li><li>安装Java, 并配置环境变量:（<a href="/2023/04/18/coding/linux-yum-an-zhuang-jdk11/" title="Linux-yum安装jdk11">Linux-yum安装jdk11</a>）</li><li>解压 Hadoop 软件包: <code>tar -zxvf hadoop-3.3.5.tar.gz -C /opt/hadoop</code></li><li>修改配置文件: <code>/opt/hadoop/hadoop-3.3.5/etc/hadoop/</code><ul><li><code>hadoop-env.sh</code>: <code>export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</code></li><li><code>core-site.xml</code>(指定 Nn 的位置, 即 hadoop01)<pre><code class="language-xml">&lt;configuration&gt;    &lt;property&gt;        &lt;name&gt;fs.defaultFS&lt;/name&gt;        &lt;value&gt;hdfs://hadoop01:9000&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;        &lt;value&gt;/tmp/hadoop&lt;/value&gt;    &lt;/property&gt;&lt;/configuration&gt;</code></pre></li><li><code>hdfs-site.xml</code>(指定每个文件有3个副本, 并指定 Snn 的位置, 即 hadoop01)<pre><code class="language-xml">&lt;configuration&gt;   &lt;property&gt;       &lt;name&gt;dfs.replication&lt;/name&gt;       &lt;value&gt;3&lt;/value&gt;   &lt;/property&gt;   &lt;property&gt;       &lt;name&gt;dfs.secondary.http.address&lt;/name&gt;       &lt;value&gt;hadoop01:50090&lt;/value&gt;   &lt;/property&gt;&lt;/configuration&gt;</code></pre></li><li><code>mapred-site.xml</code> (指定使用 yarn 方式运行 mr)<pre><code class="language-xml">&lt;configuration&gt;   &lt;property&gt;       &lt;name&gt;mapreduce.framework.name&lt;/name&gt;       &lt;value&gt;yarn&lt;/value&gt;   &lt;/property&gt;&lt;/configuration&gt;</code></pre></li><li><code>yarn-site.xml</code>(指定 Rm 的位置, 即 hadoop02)<pre><code class="language-xml">&lt;configuration&gt;    &lt;property&gt;        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;        &lt;value&gt;hadoop02&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;    &lt;/property&gt;&lt;/configuration&gt;</code></pre></li><li><code>workers</code> (<code>slaves</code> in Hadoop2)<ul><li><code>hadoop01</code></li><li><code>hadoop02</code></li><li><code>hadoop03</code></li></ul></li></ul></li><li>格式化: <code>hdfs namenode -format</code>(或 <code>hadoop namenode -format</code>)</li><li>(可选) 将一台机器配置完的目录复制到其他机器<ul><li><code>scp -r /opt/hadoop/hadoop-3.3.5 root@hadoop02:/opt/hadoop/hadoop-3.3.5</code></li><li><code>scp -r /opt/hadoop/hadoop-3.3.5 root@hadoop03:/opt/hadoop/hadoop-3.3.5</code></li></ul></li><li>配置环境变量<ul><li><code>vi /etc/profile</code></li><li><code>export HADOOP_HOME=/opt/hadoop/hadoop-3.3.5</code></li><li><code>export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</code></li><li><code>source /etc/profile</code></li></ul></li><li>启动<ul><li><code>start-dfs.sh</code>(在 Nn 节点启动, 即 hadoop01)</li><li><code>start-yarn.sh</code>(在 Rm 节点启动, 即 hadoop02)</li></ul></li><li>web 访问端口<ul><li>(Nn 节点, 即 hadoop01) <code>50070</code>(Hadoop2) | <code>9870</code>(Hadoop3)</li><li>(Rm 节点, 即 hadoop02) <code>8088</code></li></ul></li><li>测试<ul><li><code>jps</code> 查看节点是否启动</li><li>测试上传文件 <code>hdfs dfs -put /path/to/file /target/path</code><ul><li>访问 <code>hadoop01:9870</code>: Utilities -&gt; Browse the file system -&gt; Go!</li><li>检查上传的文件是否已经存在3个副本 (Replication)</li></ul></li><li>测试圆周率计算(如果报 <code>ClassNotFoundException</code>, 请参考文章: <a href="/2023/04/19/coding/hadoop-classnotfoundexception/" title="Hadoop-ClassNotFoundException">Hadoop-ClassNotFoundException</a>)<ul><li><code>hadoop jar /opt/hadoop/hadoop-3.3.5/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.5.jar pi 10 10</code></li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-单机伪分布式部署</title>
      <link href="/2023/04/19/yun-wei/hadoop-dan-ji-wei-fen-bu-shi-bu-shu/"/>
      <url>/2023/04/19/yun-wei/hadoop-dan-ji-wei-fen-bu-shi-bu-shu/</url>
      
        <content type="html"><![CDATA[<ol><li>配置网络环境<ul><li><code>vi /etc/hosts</code>: <code>192.168.140.130 hadoop</code></li><li><code>vi /etc/hostname</code>: <code>hadoop</code></li><li>关闭防火墙<ul><li><code>systemctl stop firewalld.service</code></li><li><code>systemctl disable firewalld.service</code></li><li><code>firewall-cmd --state</code></li></ul></li><li>配置免密钥登陆<ul><li><code>ssh-keygen -t rsa</code></li><li><code>ssh-copy-id hadoop</code></li></ul></li></ul></li><li>安装Java, 并配置环境变量:（<a href="/2023/04/18/coding/linux-yum-an-zhuang-jdk11/" title="Linux-yum安装jdk11">Linux-yum安装jdk11</a>）</li><li>解压 Hadoop 软件包: <code>tar -zxvf hadoop-3.3.5.tar.gz -C /opt/hadoop</code></li><li>修改配置文件: <code>/opt/hadoop/hadoop-3.3.5/etc/hadoop/</code><ul><li><code>hadoop-env.sh</code><ul><li><code>export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</code></li></ul></li><li><code>core-site.xml</code>  <pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hdfs://hadoop:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/tmp/hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>hdfs-site.xml</code><pre><code class="language-xml">&lt;configuration&gt;   &lt;property&gt;       &lt;name&gt;dfs.replication&lt;/name&gt;       &lt;value&gt;1&lt;/value&gt;   &lt;/property&gt;   &lt;property&gt;       &lt;name&gt;dfs.secondary.http.address&lt;/name&gt;       &lt;value&gt;hadoop:50090&lt;/value&gt;   &lt;/property&gt;&lt;/configuration&gt;</code></pre></li><li><code>mapred-site.xml</code> (指定使用 yarn 方式运行 mr)<pre><code class="language-xml">&lt;configuration&gt;   &lt;property&gt;       &lt;name&gt;mapreduce.framework.name&lt;/name&gt;       &lt;value&gt;yarn&lt;/value&gt;   &lt;/property&gt;&lt;/configuration&gt;</code></pre></li><li><code>yarn-site.xml</code><pre><code class="language-xml">&lt;configuration&gt;    &lt;property&gt;        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;        &lt;value&gt;hadoop&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;    &lt;/property&gt;&lt;/configuration&gt;</code></pre></li><li><code>workers</code> (<code>slaves</code> in Hadoop2): <code>hadoop</code></li></ul></li><li>格式化: <code>hdfs namenode -format</code>(或 <code>hadoop namenode -format</code>)</li><li>修改启动脚本 (使用 root 用户启动): <code>/opt/hadoop/hadoop-3.3.5/sbin/</code><ul><li><code>start-dfs.sh </code> and <code>stop-dfs.sh</code><pre><code class="language-bash">HDFS_DATANODE_USER=rootHADOOP_SECURE_DN_USER=hdfsHDFS_NAMENODE_USER=rootHDFS_SECONDARYNAMENODE_USER=root</code></pre></li><li><code>start-yarn.sh</code> and <code>stop-yarn.sh</code><pre><code class="language-bash">YARN_RESOURCEMANAGER_USER=rootHADOOP_SECURE_DN_USER=yarnYARN_NODEMANAGER_USER=root</code></pre></li></ul></li><li>配置环境变量<ul><li><code>vi /etc/profile</code></li><li><code>export HADOOP_HOME=/opt/hadoop/hadoop-3.3.5</code></li><li><code>export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</code></li><li><code>source /etc/profile</code></li></ul></li><li>启动 Hadoop<ul><li><code>start-dfs.sh</code></li><li><code>start-yarn.sh</code></li></ul></li><li>web 访问端口<ul><li><code>50070</code>(Hadoop2) | <code>9870</code>(Hadoop3)</li><li><code>8088</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-yum安装jdk11</title>
      <link href="/2023/04/18/coding/linux-yum-an-zhuang-jdk11/"/>
      <url>/2023/04/18/coding/linux-yum-an-zhuang-jdk11/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看与 java-11 有关的包</span>yum list <span class="token operator">|</span> <span class="token function">grep</span> java-11<span class="token comment"># 安装这三个即可</span>yum <span class="token function">install</span> java-11-openjdk.x86_64  java-11-openjdk-devel.x86_64  java-11-openjdk-headless.x86_64<span class="token function">java</span> <span class="token parameter variable">--version</span>javac <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置环境变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># java</span><span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64<span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span><span class="token assign-left variable">CLASS_PATH</span><span class="token operator">=</span>.:<span class="token variable">$JRE_HOME</span>/lib<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin<span class="token builtin class-name">export</span> JAVA_HOME JRE_HOME CLASS_PATH <span class="token environment constant">PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span class="token builtin class-name">echo</span> <span class="token variable">$JAVA_HOME</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-家乡</title>
      <link href="/2023/04/18/zuo-pin/shi-ci-jia-xiang/"/>
      <url>/2023/04/18/zuo-pin/shi-ci-jia-xiang/</url>
      
        <content type="html"><![CDATA[<blockquote><p>家乡<br>寒鸦绕孤村，斜月独徘徊。<br>风吹花落去，寂寞雨滴来。<br>樽前人依旧，夜夜蛙虫哀。<br>春江何处去，总会带星来。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-2.节点</title>
      <link href="/2023/04/17/hadoop/hadoop-2-jie-dian/"/>
      <url>/2023/04/17/hadoop/hadoop-2-jie-dian/</url>
      
        <content type="html"><![CDATA[<ul><li>NN: NameNode fdfs 节点的 leader</li><li>DN: DataNode fdfs 的数据节点</li><li>SNN SecondaryNameNode fdfs 节点的镜像复制节点</li><li>RM: resoucemanager yarn 资源管理器的主节点</li><li>NM: nodemanager yarn 资源管理器的从节点</li><li>JN: JournalNode 日志节点</li></ul><hr><ul><li>ZKFC: DFSZKFailoverController Zookeeper 高可用控制</li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop2-集群部署[DockerCompose]</title>
      <link href="/2023/04/17/yun-wei/hadoop2-ji-qun-bu-shu-dockercompose/"/>
      <url>/2023/04/17/yun-wei/hadoop2-ji-qun-bu-shu-dockercompose/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.8"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">namenode</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bde2020/hadoop<span class="token punctuation">-</span>namenode<span class="token punctuation">:</span>2.0.0<span class="token punctuation">-</span>hadoop3.2.1<span class="token punctuation">-</span>java8    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> namenode    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 9870<span class="token punctuation">:</span><span class="token number">9870</span>      <span class="token punctuation">-</span> 9000<span class="token punctuation">:</span><span class="token number">9000</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> hadoop_namenode<span class="token punctuation">:</span>/hadoop/dfs/name    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> CLUSTER_NAME=test    <span class="token key atrule">env_file</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./hadoop.env  <span class="token key atrule">datanode</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bde2020/hadoop<span class="token punctuation">-</span>datanode<span class="token punctuation">:</span>2.0.0<span class="token punctuation">-</span>hadoop3.2.1<span class="token punctuation">-</span>java8    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> datanode    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> hadoop_datanode<span class="token punctuation">:</span>/hadoop/dfs/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">SERVICE_PRECONDITION</span><span class="token punctuation">:</span> <span class="token string">"namenode:9870"</span>    <span class="token key atrule">env_file</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./hadoop.env    <span class="token key atrule">resourcemanager</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bde2020/hadoop<span class="token punctuation">-</span>resourcemanager<span class="token punctuation">:</span>2.0.0<span class="token punctuation">-</span>hadoop3.2.1<span class="token punctuation">-</span>java8    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> resourcemanager    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">SERVICE_PRECONDITION</span><span class="token punctuation">:</span> <span class="token string">"namenode:9000 namenode:9870 datanode:9864"</span>    <span class="token key atrule">env_file</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./hadoop.env  <span class="token key atrule">nodemanager1</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bde2020/hadoop<span class="token punctuation">-</span>nodemanager<span class="token punctuation">:</span>2.0.0<span class="token punctuation">-</span>hadoop3.2.1<span class="token punctuation">-</span>java8    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> nodemanager    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">SERVICE_PRECONDITION</span><span class="token punctuation">:</span> <span class="token string">"namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"</span>    <span class="token key atrule">env_file</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./hadoop.env    <span class="token key atrule">historyserver</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> bde2020/hadoop<span class="token punctuation">-</span>historyserver<span class="token punctuation">:</span>2.0.0<span class="token punctuation">-</span>hadoop3.2.1<span class="token punctuation">-</span>java8    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> historyserver    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">SERVICE_PRECONDITION</span><span class="token punctuation">:</span> <span class="token string">"namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> hadoop_historyserver<span class="token punctuation">:</span>/hadoop/yarn/timeline    <span class="token key atrule">env_file</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./hadoop.env  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">hadoop_namenode</span><span class="token punctuation">:</span>  <span class="token key atrule">hadoop_datanode</span><span class="token punctuation">:</span>  hadoop_historyserver<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hadoop-env">hadoop.env</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">CORE_CONF_fs_defaultFS</span><span class="token punctuation">=</span><span class="token value attr-value">hdfs://namenode:9000</span><span class="token key attr-name">CORE_CONF_hadoop_http_staticuser_user</span><span class="token punctuation">=</span><span class="token value attr-value">root</span><span class="token key attr-name">CORE_CONF_hadoop_proxyuser_hue_hosts</span><span class="token punctuation">=</span><span class="token value attr-value">*</span><span class="token key attr-name">CORE_CONF_hadoop_proxyuser_hue_groups</span><span class="token punctuation">=</span><span class="token value attr-value">*</span><span class="token key attr-name">CORE_CONF_io_compression_codecs</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.hadoop.io.compress.SnappyCodec</span><span class="token key attr-name">HDFS_CONF_dfs_webhdfs_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">HDFS_CONF_dfs_permissions_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">false</span><span class="token key attr-name">HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check</span><span class="token punctuation">=</span><span class="token value attr-value">false</span><span class="token key attr-name">YARN_CONF_yarn_log___aggregation___enable</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">YARN_CONF_yarn_log_server_url</span><span class="token punctuation">=</span><span class="token value attr-value">http://historyserver:8188/applicationhistory/logs/</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_recovery_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_store_class</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_scheduler_class</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</span><span class="token key attr-name">YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___mb</span><span class="token punctuation">=</span><span class="token value attr-value">8192</span><span class="token key attr-name">YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___vcores</span><span class="token punctuation">=</span><span class="token value attr-value">4</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_fs_state___store_uri</span><span class="token punctuation">=</span><span class="token value attr-value">/rmstate</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_system___metrics___publisher_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_hostname</span><span class="token punctuation">=</span><span class="token value attr-value">resourcemanager</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_address</span><span class="token punctuation">=</span><span class="token value attr-value">resourcemanager:8032</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_scheduler_address</span><span class="token punctuation">=</span><span class="token value attr-value">resourcemanager:8030</span><span class="token key attr-name">YARN_CONF_yarn_resourcemanager_resource__tracker_address</span><span class="token punctuation">=</span><span class="token value attr-value">resourcemanager:8031</span><span class="token key attr-name">YARN_CONF_yarn_timeline___service_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">YARN_CONF_yarn_timeline___service_generic___application___history_enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">YARN_CONF_yarn_timeline___service_hostname</span><span class="token punctuation">=</span><span class="token value attr-value">historyserver</span><span class="token key attr-name">YARN_CONF_mapreduce_map_output_compress</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">YARN_CONF_mapred_map_output_compress_codec</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.hadoop.io.compress.SnappyCodec</span><span class="token key attr-name">YARN_CONF_yarn_nodemanager_resource_memory___mb</span><span class="token punctuation">=</span><span class="token value attr-value">16384</span><span class="token key attr-name">YARN_CONF_yarn_nodemanager_resource_cpu___vcores</span><span class="token punctuation">=</span><span class="token value attr-value">8</span><span class="token key attr-name">YARN_CONF_yarn_nodemanager_disk___health___checker_max___disk___utilization___per___disk___percentage</span><span class="token punctuation">=</span><span class="token value attr-value">98.5</span><span class="token key attr-name">YARN_CONF_yarn_nodemanager_remote___app___log___dir</span><span class="token punctuation">=</span><span class="token value attr-value">/app-logs</span><span class="token key attr-name">YARN_CONF_yarn_nodemanager_aux___services</span><span class="token punctuation">=</span><span class="token value attr-value">mapreduce_shuffle</span><span class="token key attr-name">MAPRED_CONF_mapreduce_framework_name</span><span class="token punctuation">=</span><span class="token value attr-value">yarn</span><span class="token key attr-name">MAPRED_CONF_mapred_child_java_opts</span><span class="token punctuation">=</span><span class="token value attr-value">-Xmx4096m</span><span class="token key attr-name">MAPRED_CONF_mapreduce_map_memory_mb</span><span class="token punctuation">=</span><span class="token value attr-value">4096</span><span class="token key attr-name">MAPRED_CONF_mapreduce_reduce_memory_mb</span><span class="token punctuation">=</span><span class="token value attr-value">8192</span><span class="token key attr-name">MAPRED_CONF_mapreduce_map_java_opts</span><span class="token punctuation">=</span><span class="token value attr-value">-Xmx3072m</span><span class="token key attr-name">MAPRED_CONF_mapreduce_reduce_java_opts</span><span class="token punctuation">=</span><span class="token value attr-value">-Xmx6144m</span><span class="token key attr-name">MAPRED_CONF_yarn_app_mapreduce_am_env</span><span class="token punctuation">=</span><span class="token value attr-value">HADOOP_MAPRED_HOME=/opt/hadoop-3.2.1/</span><span class="token key attr-name">MAPRED_CONF_mapreduce_map_env</span><span class="token punctuation">=</span><span class="token value attr-value">HADOOP_MAPRED_HOME=/opt/hadoop-3.2.1/</span><span class="token key attr-name">MAPRED_CONF_mapreduce_reduce_env</span><span class="token punctuation">=</span><span class="token value attr-value">HADOOP_MAPRED_HOME=/opt/hadoop-3.2.1/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> docker-compose.yml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop-1.生态</title>
      <link href="/2023/04/17/hadoop/hadoop-1-sheng-tai/"/>
      <url>/2023/04/17/hadoop/hadoop-1-sheng-tai/</url>
      
        <content type="html"><![CDATA[<h2 id="Hadoop-背景">Hadoop 背景</h2><p>其实最先被这些问题困惑的并不是电商，而是 google，他需面对的挑战一点也不会比电商小</p><ul><li>大量的网页怎么存储</li><li>面对的数据和计算难题</li></ul><p>2003，2004 年 Google</p><ul><li>GFS</li><li>MapReduce</li></ul><p>为了解决上面的两大难题，google 提出了自己的简介方案，当然这解决方案是闭源的，另外<br>还提出了两篇论文，为大量数据的存储与计算问题提供了思路。</p><hr><h2 id="Hadoop-生态">Hadoop 生态</h2><p><a href="http://hadoop.apache.org/">Hadoop 是 apache 下面的一套开源软件平台</a></p><p>Hadoop 的功能：利用服务器的集群，根据用户的业务逻辑对海里信息进行处理（存储与计算）<br>Hadoop 的核心组件:</p><ul><li>HDFS(分布式文件系统)</li><li>MAPREDUCE(分布式运行系统)</li><li>YARN(运算资源调度系统)<br>以上就是 hadoop 最核心的部分，可是随着时间的推移，hadoop 已经不只是这些技术了，它慢慢进化成了一个生态圈</li></ul><p><img src="/static/IT/Hadoop/%E7%94%9F%E6%80%81.png" alt="Hadoop 生态"></p><hr><h2 id="Hadoop-起源">Hadoop 起源</h2><ul><li>Hadoop 最初是由 Apache Lucene 项目的创始人 Doug Cutting 开发的文本搜索库。Hadoop 源自始于 2002 年的 Apache Nutch 项目——一个开源的网络搜索引擎并且也是 Lucene 项目的一部分</li><li>2004 年 Nutch 项目也模仿 GFS 开发了自己的分布式文件系统 NDFS（Nutch Distributed File System），也就是 HDFS 的前身</li><li>2005 年，Nutch 开源实现了谷歌的 MapReduce</li><li>2006 年 2 月，Nutch 中的 NDFS 和 MapReduce 开始独立出来，成为 Lucene 项目的一个子项目，称为 Hadoop，同时，Doug Cutting 加盟雅虎</li><li>2008 年 1 月，HADOOP 成为 Apache 顶级项目，迎来了它的快速发展期。</li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230413-Brooks-S&amp;P Emini</title>
      <link href="/2023/04/17/shi-chang-fen-xi/shi-chang-fen-xi-20230413-brooks-s-p-emini/"/>
      <url>/2023/04/17/shi-chang-fen-xi/shi-chang-fen-xi-20230413-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Thursday April 13, 2023</font></p><h1><font color="green">S&amp;P Emini pre-open market analysis</font></h1><h2 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h2><ul><li>The Emini gapped up yesterday, testing the high of April 4th. However, yesterday sold off early on and closed as a big bear trend bar.<ul><li>Emini 昨日高开低走，测试 4 月 4 日的高点。然而，昨天早早抛售并作为一个大的熊市趋势线收盘。</li></ul></li><li>Yesterday’s close is big enough to be a surprise bar. This means that traders probably expect at least a small 2nd leg down. If today is a bull bar, it will likely have a weak bull close with a  tail above.<ul><li>昨天的收盘价大到足以成为一个惊喜柱。这意味着交易者可能预计至少会出现第二次小幅下跌。如果今天是牛市，它很可能会以影线在上方的弱牛市收盘。</li></ul></li><li>The bears see yesterday’s close as a double top with April 4th. They want a break below the neckline (April 6th) of the double top and for the market to fall below the March 22nd high.<ul><li>空头将昨天的收盘价视为 4 月 4 日的双顶。他们希望跌破双顶的颈线（4 月 6 日），并希望市场跌破 3 月 22 日的高点</li></ul></li><li>The bears had a strong close yesterday, which means that they have an opportunity to get a strong follow-through bar today. If the bears can get a follow-through bar similar in size to yesterday, that would increase the odds of lower prices.<ul><li>空头昨天收盘强劲，这意味着他们今天有机会获得强劲的跟进柱。如果空头能够获得与昨天相似大小的跟进柱，那将增加价格下跌的可能性。</li></ul></li><li>I have been saying that the rally up to April 4th is stalling under important resistance (February 2nd high). This means traders are taking profits anticipating a failed breakout above the February high.  This is similar to the March 13th selloff that tested the December 2022 low.<ul><li>我一直在说，直到 4 月 4 日的反弹在重要阻力（2 月 2 日高点）下停滞不前。这意味着交易员预期突破 2 月高点失败后获利了结。这类似于 3 月 13 日测试 2022 年 12 月低点的抛售。</li></ul></li><li>The reasons above make me think there is an increased risk of a deep pullback or a possible downside breakout that tests back to 4,000.<ul><li>上述原因让我认为深度回调或可能下行突破测试回 4,000 点的风险增加。</li></ul></li><li>If the bears get a reversal back down to 4,000 or lower, they need to show more signs of strength.<ul><li>如果空头逆转回落至 4,000 点或更低，他们需要显示更多的力量迹象。</li></ul></li><li>Overall, the bears have done well with yesterday’s close. However, if bears fail to get follow-through over the next few bars, the bulls will buy, which could drive the market above the February high. This increases the odds of at least a brief 2nd leg down.<ul><li>总体而言，空头在昨天收盘时表现不错。然而，如果空头未能在接下来的几个柱中得到跟进，多头就会买入，这可能会推动市场突破 2 月高点。这增加了至少短暂的第二回合下跌的几率。</li></ul></li></ul><h2 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h2><ul><li>Emini is up 12 points in the overnight Globex session.</li><li>The Globex market has been going sideways for most of the overnight session.<ul><li>在隔夜的大部分时间里，Globex 市场一直在横盘整理。</li></ul></li><li>Traders should be neutral going into the U.S. Session.<ul><li>交易者在进入美国交易时段时应保持中立</li></ul></li><li>Traders should pay close attention to the first 6 – 12 bars of the day. The first 6 bars can often give a trader much insight into what the rest of the day will look like, so it is important to be patient and remember that there are 81 bars in the day, which means there is plenty of time to place 1-3 trades.<ul><li>交易者应密切关注当天的前 6-12 根柱线。前 6 个柱通常可以让交易者深入了解当天剩余时间的情况，因此耐心等待并记住一天中有 81 个柱很重要，这意味着有足够的时间放置 1 -3 笔交易。</li></ul></li><li>Most traders should wait for the market to form a double top/bottom or a wedge top/bottom and see if it leads to a swing trade. A swing trade usually begins before the end of the second hour, and often, it starts around bar 12.<ul><li>大多数交易者应该等待市场形成双顶/双底或楔形顶/底，看看它是否会导致波段交易。波段交易通常在第二个小时结束前开始，通常在第 12 根柱线左右开始。</li></ul></li><li>Most traders should focus on catching the opening swing trade because it often leads to trade with good risk/reward and decent probability.<ul><li>大多数交易者应该专注于抓住开盘摆动交易，因为它通常会导致交易具有良好的风险/回报和不错的可能性。</li></ul></li><li>Traders should expect a trading range day until they have reason to believe otherwise. The bulls will want to reverse yesterday’s bear close. However, the size of the bar will increase the risk of sellers on any bounce today.<ul><li>交易者应该期待一个交易区间日，直到他们有理由相信否则。多头将希望扭转昨天的空头收盘价。然而，柱的大小将增加卖家今天反弹的风险。</li></ul></li><li>Since yesterday’s bar is big and within a tight trading range on the daily chart, this will increase the risk of disappointing follow-through today. Both reasons above make me think the market will form a trading range today.<ul><li>由于昨天的柱线很大并且在日线图上处于狭窄的交易区间内，这将增加今天跟进令人失望的风险。以上两个原因让我认为今天市场将形成一个交易区间</li></ul></li><li>Lastly, because yesterday is a big bear bar and a second entry short with April 4th, the bulls may give up below today’s bar. This means that traders should be mindful of a possible bear trend day today, and if the bears start to get strong, bear closes, they must not be in denial.<ul><li>最后，因为昨天是一个大熊市和 4 月 4 日的第二次空头，多头可能会在今天的柱线下方放弃。这意味着交易者应该注意今天可能出现的熊市趋势日，如果空头开始走强，熊市收盘，他们一定不能否认</li></ul></li></ul><h2 id="font-color-red-Emini-intraday-market-update-font"><font color="red">Emini intraday market update</font></h2><ul><li>The Emini gapped up on the open and formed a double bottom with bar 6.<ul><li>Emini 开盘跳空，并在第 6 根柱线处形成双底。</li></ul></li><li>This led to a strong 3-bar bull breakout, and the market became Always In Long.<ul><li>这导致强劲的 3 条牛市突破，市场变得永远在多头。</li></ul></li><li>The market went sideways for 15 bars to the moving average and recently got a second leg up at 9:30 AM PT.<ul><li>市场横盘整理移动平均线 15 根柱线，最近在太平洋时间上午 9:30 再次上涨</li></ul></li><li>While the market is Always In Long at 9:40 AM PT, it is at important resistance (Yesterday’s 11:20 AM PT major lower high).<ul><li>虽然市场在太平洋时间上午 9:40 始终处于多头状态，但它处于重要阻力位（昨天太平洋时间上午 11:20 的主要较低高点）。</li></ul></li><li>While the market can continue much higher, it will probably try to stay within yesterday’s range and form an inside day.<ul><li>虽然市场可以继续走高，但它可能会试图保持在昨天的区间内并形成内包日</li></ul></li><li>If the bears can develop more selling pressure, that will increase the odds of a pullback to 4,144, which is the midpoint of the 15-bar trading range.<ul><li>如果空头能够形成更大的抛售压力，回调的可能性将增加至 4,144，这是 15 条交易区间的中点</li></ul></li><li>Traders should expect the market to evolve into a trading range soon. Less likely, the day remains a trend for the rest of the day.<ul><li>交易者应该期望市场很快进入交易区间。不太可能，这一天在剩下的时间里仍然是一个趋势</li></ul></li><li>Since trends typically evolve into trading ranges, this means that the odds favor either a continued bull trend, or a trading range for the rest of the day.<ul><li>由于趋势通常会演变成交易区间，这意味着可能性有利于持续的牛市趋势或当天剩余时间的交易区间</li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230413-SP500-Emini-5-Min-LHDT-Parabolic-Wedge-Sell-Climax-and-Reversal-Up-768x432.png" alt="Emini 5 Min"></p><hr><p><a href="https://www.brookstradingcourse.com/analysis/emini-bears-want-strong-follow-through/">原文链接-Brooks</a></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-MAC</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-mac/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="MAC-地址">MAC 地址</h2><p>在局域网中，硬件地址又称为物理地址，或 MAC 地址。 802 标准所说的“地址”严格地讲应当是每一个站的“名字”或标识符。  <strong>将48位的“名字”称为“地址”仅仅是一种习惯。</strong></p><p>IEEE 的注册管理机构 RA 负责向<strong>厂家分配地址字段的前三个字节(高位 24 位)</strong>。 地址字段中的<strong>后三个字节(低位 24 位)由厂家自行指派</strong>，称为扩展标识符，<strong>必须保证生产出的适配器没有重复地址</strong>。 这 48 位<strong>MAC地址已被固化到适配器ROM中</strong>，又称为适配器地址或适配器标识符EUI-48。</p><ul><li>48位全1为广播地址；</li><li>第一字节最低位（I/G）为0，表示是单播地址，为1是组播地址；</li><li>第一字节次低位（G/L）为0，表示是局部地址，为1是全局地址。</li></ul><p>适配器检查 MAC 地址 ：适配器从网络上每收到一个 MAC 帧就首先用硬件检查 MAC 帧中的 MAC 地址。<strong>如果是发往本站的帧则收下</strong>，然后再进行其他的处理。 <strong>否则就将此帧丢弃</strong>，不再进行其他的处理。 “发往本站的帧”包括以下三种帧：</p><ol><li>单播(unicast)帧（一对一）</li><li>广播(broadcast)帧（一对全体）</li><li>多播(multicast)帧（一对多）</li></ol><p>以太网MAC帧格式有两种标准：</p><ul><li>DIX Ethernet V2 标准</li><li>IEEE 的 802.3 标准</li></ul><p><strong>最常用的 MAC 帧是以太网 V2 的格式。</strong></p><hr><h2 id="以太网-V2-的-MAC-帧格式">以太网 V2 的 MAC 帧格式</h2><p><img src="/static/IT/network/MAC-%E6%A0%BC%E5%BC%8F.png" alt="MAC 帧格式"></p><ul><li>目的地址字段 6 字节</li><li>源地址字段 6 字节</li><li>类型字段 2 字节 ：<strong>类型字段用来标志上一层使用的是什么协议</strong>，以便把收到的 MAC 帧的数据上交给上一层的这个协议。</li><li><strong>数据字段 46 ~ 1500 字节</strong> ： 数据字段的正式名称是 MAC 客户数据字段<br>最小长度 ： <strong>64 字节 - 18 字节的首部和尾部 = 数据字段的最小长度</strong><br>当数据字段的长度小于 46 字节时，应在数据字段的后面加入整数字节的填充字段，以保证以太网的 <strong>MAC 帧长不小于 64 字节</strong>。</li><li>FCS 字段 4 字节 ： 当传输媒体的误码率为 1*10<sup>-8</sup> 时，MAC 子层可使未检测到的差错小于 1 * 10<sup>-14</sup>。</li><li>为了达到<strong>比特同步</strong>，在传输媒体上<strong>实际传送的要比 MAC 帧还多 8 个字</strong><br>帧的前面插入的 8 字节中的<strong>前 7 个字节是前同步码</strong>，用来迅速实现 MAC 帧的比特同步。<strong>第8个字节是帧开始定界符</strong>，表示后面的信息就是MAC 帧。</li></ul><hr><h2 id="无效的-MAC-帧">无效的 MAC 帧</h2><ul><li>帧的长度不是整数个字节；</li><li>用收到的帧检验序列 FCS 查出有差错；</li><li>收到的帧中客户数据字段的长度不在 46 ~ 1500 字节之间。（<strong>有效 MAC 帧长为 64 ~ 1518 字节</strong>）</li></ul><p>对于检查出的<strong>无效 MAC 帧就简单地丢弃。以太网不负责重传丢弃的帧。</strong></p><hr><h2 id="帧间最小间隔">帧间最小间隔</h2><p><strong>帧间最小间隔 ：帧间最小间隔为 9.6 μs，相当于 96 bit 的发送时间。一个站在检测到总线开始空闲后，还要等待 9.6 μs 才能再次发送数据。这样做是为了使刚刚收到数据帧的站的接收缓存来得及清理，做好接收下一帧的准备。</strong></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-集线器/网桥</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ji-xian-qi-wang-qiao/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ji-xian-qi-wang-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="集线器">集线器</h2><p><strong>集线器 ： <strong>是使用电子器件来模拟实际电缆线的工作，因此整个系统仍然像一个传统的以太网那样运行。  使用集线器的以太网在逻辑上仍是一个总线网，各工作站使用的还是 <strong>CSMA/CD 协议</strong>，并</strong>共享逻辑上的总线</strong>。  集线器很像一个多接口的转发器，<strong>工作在物理层</strong>。</p><p><img src="/static/IT/network/%E9%9B%86%E7%BA%BF%E5%99%A8.png" alt="集线器"></p><ul><li>优点<ul><li>使原来属于不同碰撞域的局域网上的计算机能够进行跨碰撞域的通信。 <strong>扩大了局域网覆盖的地理范围。</strong></li></ul></li><li>缺点<ul><li><strong>碰撞域增大了，但总的吞吐量并未提高</strong>。如果不同的碰撞域使用不同的数据率，那么就不能用集线器将它们互连起来。</li></ul></li></ul><p><img src="/static/IT/network/%E7%A2%B0%E6%92%9E%E5%9F%9F.png" alt="碰撞域"></p><hr><h2 id="网桥">网桥</h2><p><strong>网桥 ：<strong>在</strong>数据链路层扩展局域网</strong>使用的是网桥。网桥根据 MAC 帧的目的地址对收到的帧进行转发。<strong>网桥具有过滤帧的功能。<strong>当网桥收到一个帧时，并不是向所有的接口转发此帧，而是先检查此帧的目的 MAC 地址，然后再确定将该帧转发到哪一个接口。<br>网桥通过隔断电信号，使得</strong>每一个端口连接的网络都是独立的总线形网络</strong>；<br>网桥作为<strong>分组转发设备</strong>，实现MAC帧不同总线形网络之间的转发。</p><h3 id="网桥的内部结构">网桥的内部结构</h3><p><img src="/static/IT/network/%E7%BD%91%E6%A1%A5.png" alt="网桥"></p><p>网桥使各网段成为隔离开的碰撞域  ：</p><p><img src="/static/IT/network/%E7%BD%91%E6%A1%A5%E9%9A%94%E5%BC%80%E7%A2%B0%E6%92%9E%E5%9F%9F.png" alt="隔离开碰撞域"></p><ul><li>优点<ul><li>扩大了物理范围。</li><li>过滤通信量。</li><li><strong>提高了可靠性。</strong></li><li><strong>可互连不同物理层、不同 MAC 子层和不同速率</strong>（如10 Mb/s 和 100 Mb/s 以太网）的局域网。</li></ul></li><li>缺点<ul><li><strong>存储转发增加了时延。</strong></li><li>在MAC 子层并<strong>没有流量控制功能</strong>。</li><li>具有不同 MAC 子层的网段桥接在一起时时延更大。</li><li><strong>网桥只适合于</strong>用户数不太多(不超过几百个)和<strong>通信量不太大的局域网</strong>，否则有时还会因传播过多的广播信息而产生网络拥塞。这就是所谓的<strong>广播风暴</strong>。</li></ul></li></ul><p><img src="/static/IT/network/%E7%BD%91%E6%A1%A5%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93.png" alt="网桥转发"></p><p><strong>网桥和集线器（或转发器）不同  ：</strong><br><strong>集线器在转发帧时，不对传输媒体进行检测。网桥在转发帧之前必须执行 CSMA/CD 算法</strong>。若在发送过程中出现碰撞，就必须停止发送和进行退避。</p><p><strong>透明网桥 ：</strong><br>目前使用最多的网桥是透明网桥(transparent bridge)。 “透明”是指局域网上的站点并不知道所发送的帧将经过哪几个网桥，因<strong>网桥对各站来说是看不见的</strong>。  透明网桥是一种即插即用设备，其标准是 IEEE 802.1D。</p><hr><h2 id="网桥自学习算法">网桥自学习算法</h2><p><strong>网桥</strong>应当按照以下<strong>自学习算法</strong>处理收到的帧和建立转发表 ：</p><ul><li>若从 A 发出的帧从接口 x 进入了某网桥，那么从这个接口出发沿相反方向一定可把一个帧传送到A。<strong>网桥每收到一个帧，就记下其源地址和进入网桥的接口</strong>，作为转发表中的一个项目。</li><li>在建立转发表时是<strong>把帧首部中的源地址写在“地址”这一栏的下面</strong>。</li><li><strong>在转发帧时，则是根据收到的帧首部中的目的地址来转发的。这时就把在“地址”栏下面已经记下的源地址当作目的地址，而把记下的进入接口当作转发接口。</strong></li><li>在网桥的转发表中写入的信息除了地址和接口外，还有<strong>帧进入该网桥的时间</strong>。这是因为以太网的拓扑可能经常会发生变化，站点也可能会更换适配器（这就改变了站点的地址）。另外，以太网上的工作站并非总是接通电源的。</li></ul><h3 id="网桥的自学习和转发帧的步骤">网桥的自学习和转发帧的步骤</h3><ul><li>网桥收到一帧后先进行<strong>自学习。</strong> 查找转发表中与收到帧的源地址有无相匹配的项目。</li><li>如没有，就在转发表中增加一个项目（源地址、进入的接口和时间）。</li><li>如有，则把原有的项目进行更新。</li><li>**转发帧。**查找转发表中与收到帧的目的地址有无相匹配的项目。</li><li>如没有，则通过所有其他接口（但进入网桥的接口除外）进行转发。</li><li>如有，则按转发表中给出的接口进行转发。</li><li>若转发表中给出的接口就是该帧进入网桥的接口，则应丢弃这个帧（因为这时不需要经过网桥进行转发）。</li></ul><p><img src="/static/IT/network/%E7%BD%91%E6%A1%A5%E8%BD%AC%E5%8F%91.png" alt="网桥的自学习和转发帧"></p><p><img src="/static/IT/network/%E7%BD%91%E6%A1%A5%E4%BC%A0%E9%80%81%E7%AE%97%E6%B3%95.png" alt="网桥的自学习和转发帧算法图"></p><hr><h2 id="透明网桥生成树算法">透明网桥生成树算法</h2><p>透明网桥使用了<strong>生成树算法</strong>：这是为了避免产生转发的帧在网络中不断地兜圈子。</p><p><img src="/static/IT/network/%E7%BD%91%E6%A1%A5%E7%94%9F%E6%88%90%E6%A0%91%E7%AE%97%E6%B3%95.png" alt="耗费网络资源"></p><p>为避免产生转发的帧在网络中不断地兜圈子。互连在一起的网桥在进行彼此通信后，要找出网络拓扑的一个子集，<strong>使得整个连通的网络中不存在回路</strong>，即在任何两个站之间只有一条路径。 为了得出能够反映网络拓扑发生变化时的生成树，<strong>在生成树上的根网桥每隔一段时间还要对生成树的拓扑进行更新。</strong></p><p>透明网桥容易安装，但网络资源的利用不充分。<strong>源路由</strong>(source route)网桥在发送帧时将<strong>详细的路由信息放在帧的首部中</strong>。源站以广播方式向欲通信的目的站发送一个发现帧，<strong>每个发现帧都记录所经过的路由。</strong> 发现帧到达目的站时就沿各自的路由返回源站。<strong>源站在得知这些路由后，从所有可能的路由中选择出一个最佳路由</strong>。凡从该源站向该目的站发送的帧的首部，都必须携带源站所确定的这一路由信息。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-ICMP</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-icmp/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-icmp/</url>
      
        <content type="html"><![CDATA[<h2 id="网际控制报文协议-ICMP">网际控制报文协议 ICMP</h2><p>为了提高 IP 数据报交付成功的机会,在网际层使用了网际控制报文协议 ICMP (InternetControl Message Protocol)。 <strong>ICMP 允许主机或路由器报告差错情况和提供有关异常情况的报告</strong>。ICMP 不是高层协议,而是 IP 层的协议。<strong>ICMP 报文作为 IP 层数据报的数据,加上数据报的首部,组成 IP 数据报发送出去。</strong></p><h2 id="ICMP-报文的格式">ICMP 报文的格式</h2><p><img src="/static/IT/network/ICMP-%E6%A0%BC%E5%BC%8F.png" alt="ICMP 报文的格式"></p><ul><li>类型<ul><li>3 终点不可达</li><li>11 时间超过</li><li>12 参数问题</li><li>5 改变路由</li><li>8或0 回送请求或回答</li><li>13或14 时间戳请求或回答</li></ul></li><li>代码 ： 进一步区分某种类型中的几种不同情况。</li><li>检验和 ： 用于检验整个ICMP报文。但是IP首部检验和并不检验IP数据报的内容，因此<strong>不能保证经过传输的ICMP报文不产生差错。</strong></li></ul><p><strong>ICMP 报文装在 IP 数据报中，但是它不是高层协议，而是 IP 层协议。</strong></p><p>ICMP 报文的种类有两种,即 <strong>ICMP 差错报告报文和 ICMP 询问报文</strong>。<br><strong>ICMP 报文的前 4 个字节是统一的格式,共有三个字段:即类型、代码和检验和。接着的 4 个字节的内容与 ICMP 的类型有关。</strong></p><hr><h2 id="ICMP-差错报告报文共有-5-种">ICMP 差错报告报文共有 5 种</h2><ul><li>终点不可达</li><li>源点抑制(Source quench)</li><li>时间超过 ： 生存时间减为0时。</li><li>参数问题 ： 数据报首部字段出错。</li><li>改变路由(重定向)(Redirect) ：让主机知道下次应该将数据报发送给另外的路由（可通过更好的路由）。</li></ul><h2 id="ICMP-差错报告报文的数据字段的内容">ICMP 差错报告报文的数据字段的内容</h2><p><img src="/static/IT/network/ICMP-%E5%B7%AE%E9%94%99.png" alt="ICMP 差错报告报文"></p><p>不应发送 ICMP 差错报告报文的几种情况 ：</p><ul><li>对 <strong>ICMP 差错报告报文</strong>不再发送 ICMP 差错报告报文。</li><li>对<strong>第一个分片的数据报片的所有后续数据报片</strong>都不发送 ICMP 差错报告报文。</li><li>对具有<strong>多播地址的数据报</strong>都不发送 ICMP 差错报告报文。</li><li>对具有<strong>特殊地址</strong>(如127.0.0.0 或 0.0.0.0)的数据报不发送 ICMP 差错报告报文。</li></ul><hr><h2 id="ICMP-询问报文有两种">ICMP 询问报文有两种</h2><ul><li><strong>回送请求和回答报文</strong>  ：主机或路由器向特定目的主机发出询问，收到此报文的主机必须发送ICMP回送回答报文。可用于<strong>测试目的站是否可达以及了解其有关状态</strong>。</li><li><strong>时间戳请求和回答报文</strong> ： 请求某台主机或路由器回答当前的日期和时间，可用于<strong>时钟同步和时间测量</strong>。</li></ul><p>下面的几种 ICMP 报文不再使用</p><ul><li>信息请求与回答报文</li><li>掩码地址请求和回答报文</li><li>路由器询问和通告报文</li></ul><hr><h2 id="ICMP-的应用举例-PING-Packet-InterNet-Groper">ICMP 的应用举例 PING (Packet InterNet Groper)</h2><p>PING 用来测试两个主机之间的连通性。PING 使用了 ICMP 回送请求与回送回答报文。<strong>PING 是应用层直接使用网络层 ICMP 的例子,它没有通过运输层的 TCP 或UDP。</strong></p><p><img src="/static/IT/network/ICMP-%E5%91%BD%E4%BB%A4.png" alt="PING"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-OSPF</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ospf/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ospf/</url>
      
        <content type="html"><![CDATA[<h2 id="基本特点">基本特点</h2><p>内部网关协议 OSPF (Open Shortest Path First) 的基本特点 ：</p><ul><li>“开放”表明 OSPF 协议不是受某一家厂商控制,而是公开发表的。</li><li>“最短路径优先”是因为使用了 Dijkstra 提出的最短路径算法SPF。</li><li>OSPF 只是一个协议的名字,它并不表示其他的路由选择协议不是“最短路径优先”。</li><li>是分布式的链路状态协议。</li></ul><h2 id="三个要点">三个要点</h2><ul><li><strong>向本自治系统中所有路由器发送信息</strong>,这里使用的方法是<strong>洪泛法</strong>。</li><li><strong>发送的信息就是与本路由器相邻的所有路由器的链路状态,但这只是路由器所知道的部分信息。</strong></li><li><strong>只有当链路状态发生变化时,路由器才用洪泛法向所有路由器发送此信息。</strong></li></ul><h2 id="链路状态数据库-link-state-database">链路状态数据库 (link-state database)</h2><p>由于各路由器之间频繁地交换链路状态信息，因此所有的路由器最终都能建立一个链路状态数据库。这个数据库实际上就是全网的拓扑结构图，它在全网范围内是一致的（这称为链路状态数据库的同步）。OSPF 的链路状态数据库能较快地进行更新，使各个路由器能及时更新其路由表。<strong>OSPF 的更新过程收敛得快是其主要优点</strong>。</p><h2 id="OSPF-的区域-area">OSPF 的区域(area)</h2><p>为了使 OSPF 能够用于规模很大的网络，OSPF 将一个自治系统再划分为若干个更小的范围，叫作区域。<strong>每一个区域都有一个 32 位的区域标识符</strong>（用点分十进制表示）。 区域也不能太大，在一个区域内的路由器最好不超过 200 个。</p><h2 id="划分区域">划分区域</h2><p>划分区域的好处就是将利用洪泛法交换链路状态信息的范围局限于每一个区域而不是整个的自治系统，这就<strong>减少了整个网络上的通信量</strong>。 在一个区域内部的路由器只知道本区域的完整网络拓扑，而不知道其他区域的网络拓扑的情况。 OSPF 使用层次结构的区域划分。在上层的区域叫作主干区域(backbone area)。主干区域的标识符规定为0.0.0.0。主干区域的作用是用来连通其他在下层的区域。</p><p><img src="/static/IT/network/OSPF-%E7%B3%BB%E7%BB%9F.png" alt="划分区域"></p><hr><p><strong>OSPF 不用 UDP 而是直接用 IP 数据报传送。</strong></p><h2 id="OSPF-的其他特点">OSPF 的其他特点</h2><ul><li><strong>OSPF 构成的数据报很短</strong>。<ul><li>这样做可减少路由信息的通信量。</li><li>数据报很短的另一好处是可以不必将长的数据报分片传送。分片传送的数据报只要丢失一个，就无法组装成原来的数据报，而整个数据报就必须重传。</li></ul></li><li>OSPF 对不同类型的业务可计算出不同的路由。</li><li><strong>具有负载平衡能力。</strong></li><li>所有在 OSPF 路由器之间交换的分组都具有鉴别的功能。</li><li>支持可变长度的子网划分和无分类编址 CIDR。</li><li>每一个链路状态都带上一个 32 位的序号，序号越大状态就越新。</li><li>OSPF 还规定<strong>每隔一段时间，如 30 分钟，要刷新一次数据库中的链路状态</strong>。</li><li>由于一个路由器的链路状态只涉及到与相邻路由器的连通状态，因而与整个互联网的规模并无直接关系。<strong>因此当互联网规模很大时，OSPF协议要比距离向量协议 RIP 好得多。</strong></li><li>OSPF 没有“坏消息传播得慢”的问题，据统计，其响应网络变化的时间小于 100 ms。</li></ul><hr><h2 id="OSPF-数据报格式">OSPF 数据报格式</h2><p><img src="/static/IT/network/OSPF-%E6%A0%BC%E5%BC%8F.png" alt="OSPF 数据报格式"></p><ul><li>版本 ： 当前版本号是2。</li><li>类型 ： 可以是五种类型分组中的一种。<ul><li>类型1，问候(Hello)分组。用来发现和维持邻战的可达型。 </li><li>类型2，数据库描述(Database Description)分组。向邻站给出自己的链路状态数据库中的所有链路状态项目的摘要信息。</li><li>类型3，链路状态请求(Link State Request)分组。 向对方请求发送某些链路状态项目的详细信息。</li><li>类型4，链路状态更新(Link State Update)分组， 用洪泛法对全网更新链路状态。</li><li>类型5，链路状态确认(Link State Acknowledgment) 分组。对链路更新分组的确认。</li></ul></li><li>分组长度 ： 包括OSPF首部在内的分组长度，以字节为单位。</li><li>路由器标识符 ： 标志发送该分组的路由器的接口的IP地址。</li><li>区域标识符 ： 分组属于的区域的标识符。</li><li>检验和 ： 用来检验分组中的差错。</li><li>鉴别类型 ： 目前只有两种，0（不用）和1（口令）。</li><li>鉴别 ： 鉴别类型为0时就填入0，鉴别类型为1时则填入8个字符的口令。</li></ul><hr><h2 id="OSPF-的基本操作">OSPF 的基本操作</h2><p><img src="/static/IT/network/OSPF%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.png" alt="OSPF 的基本操作"></p><h2 id="洪泛法">洪泛法</h2><p><img src="/static/IT/network/OSPF-%E6%B4%AA%E8%8C%83%E6%B3%95.png" alt="洪泛法"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-ARP/RARP</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-arp-rarp/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-arp-rarp/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/IT/network/ARP-RARP.png" alt="ARP/RARP"></p><p>不管网络层使用的是什么协议，在实际网络的链路上传送数据帧时，最终还是<strong>必须使用硬件地址</strong>。 <strong>每一个主机都设有一个 ARP 高速缓存(ARP cache)，里面有所在的局域网上的各主机和路由器的 IP 地址到硬件地址的映射表。</strong> 当主机 A 欲向本局域网上的某个主机 B 发送 IP 数据报时，就先在其 ARP 高速缓存中查看有无主机 B 的 IP 地址。如有，就可查出其对应的硬件地址，再将此硬件地址写入 MAC 帧，然后通过局域网将该 MAC 帧发往此硬件地址。</p><p><img src="/static/IT/network/ARP.png" alt="ARP 请求响应"></p><h2 id="ARP-高速缓存的作用">ARP 高速缓存的作用</h2><p>为了减少网络上的通信量，主机 A 在发送其 ARP 请求分组时，就将自己的 IP 地址<br>到硬件地址的映射写入 ARP 请求分组。当主机 B 收到 A 的 ARP 请求分组时，就将主机 A 的这一地址映射写入主机 B 自己的 ARP 高速缓存中。这对主机 B 以后向 A 发送数据报时就更方便了。</p><p>应当注意 ：<br><strong>ARP 是解决同一个局域网上的主机或路由器的 IP 地址和硬件地址的映射问题。</strong> 如果所要找的主机和源主机不在同一个局域网上，那么就要**通过ARP找到一个位于本局域网上的某个路由器的硬件地址，然后把分组发送给这个路由器，让这个路由器把分组转发给下一个网络。**剩下的工作就由下一个网络来做。<br><strong>从IP地址到硬件地址的解析是自动进行的</strong>，主机的用户对这种地址解析过程是不知道的。 只要主机或路由器要和本网络上的另一个已知 IP 地址的主机或路由器进行通信，ARP 协议就会自动地将该 IP 地址解析为链路层所需要的硬件地址。</p><h2 id="使用-ARP-的四种典型情况">使用 ARP 的四种典型情况</h2><ol><li>发送方是<strong>主机</strong>，要把IP数据报发送到<strong>本网络上的另一个主机</strong>。这时用 ARP 找到目的主机的硬件地址。</li><li>发送方是<strong>主机</strong>，要把 IP 数据报发送到<strong>另一个网络上的一个主机</strong>。这时用 ARP找到本网络上的一个路由器的硬件地址。剩下的工作由这个路由器来完成。</li><li>发送方是<strong>路由器</strong>，要把 IP 数据报转发到<strong>本网络上的一个主机</strong>。这时用 ARP 找到目的主机的硬件地址。</li><li>发送方是<strong>路由器</strong>，要把 IP 数据报转发到<strong>另一个网络上的一个主机</strong>。这时用 ARP找到本网络上的一个路由器的硬件地址。剩下的工作由这个路由器来完成。</li></ol><p>为什么我们不直接使用硬件地址进行通信？<br><strong>由于全世界存在着各式各样的网络，它们使用不同的硬件地址</strong>。要使这些异构网络能够互相通信就必须进行非常复杂的硬件地址转换工作，因此几乎是不可能的事。<strong>连接到因特网的主机都拥有统一的 IP 地址，它们之间的通信就像连接在同一个网络上那样简单方便</strong>，因为调用 ARP 来寻找某个路由器或主机的硬件地址都是由计算机软件自动进行的，对用户来说是看不见这种调用过程的。</p><hr><h2 id="逆地址解析协议-RARP">逆地址解析协议 RARP</h2><p><strong>逆地址解析协议 RARP 使只知道自己硬件地址的主机能够知道其 IP 地址。</strong><br>这种主机往往是无盘工作站。 因此 <em>RARP协议目前已很少使用。</em></p><hr><p>例 ：<br>主机A发送IP数据报给主机B，途中经过了5个路由器。试问在IP数据报的发送过程中总共使用了几次ARP？<br>6次，主机用一次，每个路由器各使用一次。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-IP</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ip/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ip/</url>
      
        <content type="html"><![CDATA[<h2 id="网际层的-IP-协议及配套协议">网际层的 IP 协议及配套协议</h2><p><img src="/static/IT/network/IP%20%E5%8D%8F%E8%AE%AE%E5%8F%8A%E9%85%8D%E5%A5%97%E5%8D%8F%E8%AE%AE.png" alt="IP 协议及配套协议"></p><h2 id="网络互连">网络互连</h2><p>互连在一起的网络要进行通信，会遇到许多问题需要解决，如：</p><ul><li>不同的寻址方案</li><li>不同的最大分组长度</li><li>不同的网络接入机制</li><li>不同的超时控制</li><li>不同的差错恢复方法</li><li>不同的状态报告方法</li><li>不同的路由选择技术</li><li>不同的用户接入控制</li><li>不同的服务（面向连接服务和无连接服务）</li><li>不同的管理与控制方式</li></ul><p>网络互相连接起来要使用一些中间设备 ：中间设备又称为中间系统或中继(relay)系统。</p><ul><li>物理层中继系统：转发器(repeater)。</li><li>数据链路层中继系统：网桥或桥接器(bridge)。</li><li>网络层中继系统：路由器(router)。</li><li>网桥和路由器的混合物：桥路器(brouter)。</li><li>网络层以上的中继系统：网关(gateway)。</li></ul><p>网络互连使用路由器 ：当中继系统是转发器或网桥时，一般并不称之为网络互连，因为这仅仅是把一个网络扩大了，而这仍然是一个网络。 网关由于比较复杂，目前使用的较少。互联网都是指用路由器进行互连的网络。由于历史的原因，许多有关 TCP/IP 的文献将网络层使用的路由器称为网关。</p><h3 id="虚拟互连网络">虚拟互连网络</h3><p>所谓虚拟互连网络也就是逻辑互连网络。互连起来的各种物理网络的异构性本来是客观存在的，但利用IP协议可以使这些性能各异的网络从用户角度看起来好像是一个统一的网络。 使用 IP 协议的虚拟互连网络可简称为 IP 网。 使用虚拟互连网络的好处是：<strong>当互联网上的主机进行通信时，就好像在一个网络上通信一样，而看不见互连的各具体的网络异构细节。</strong></p><p><img src="/static/IT/network/%E4%BC%A0%E9%80%81.png" alt="分组在互联网中的传送"></p><p>如果我们只从网络层考虑问题，那么 IP 数据报就可以想象是在网络层中传送。</p><p><img src="/static/IT/network/IP%E4%BC%A0%E9%80%81.png" alt="想象是在网络层中传送"></p><hr><p>把整个因特网看成为一个单一的、抽象的网络。IP地址就是给每个连接在因特网上的主机（或路由器）分配的一个<strong>全世界范围唯一的32位标识符</strong>。IP地址现在由因特网名字与号码指派公司<strong>ICANN (Internet Corporation for Assigned Names and Numbers)</strong> 进行分配  。</p><h2 id="IP-地址的编址方法">IP 地址的编址方法</h2><ul><li><strong>分类的IP地址</strong>。这是最基本的编址方法，在 1981 年就通过了相应的标准协议。</li><li><strong>子网的划分</strong>。这是对最基本的编址方法的改进，其标准[RFC 950]在 1985 年通过。</li><li><strong>构成超网</strong>。这是比较新的无分类编址方法。1993 年提出后很快就得到推广应用。</li></ul><hr><h2 id="分类-IP-地址">分类 IP 地址</h2><p>每一类地址都由两个固定长度的字段组成，其中一个字段是<strong>网络号</strong> net-id，它标志主机（或路由器）所连接到的网络，而另一个字段则是<strong>主机号</strong> host-id，它标志该主机（或路由器）。 两级的 IP 地址可以记为：<br>IP 地址 ::= { &lt;网络号&gt;, &lt;主机号&gt;}  <em>:= 代表“定义为”</em></p><h3 id="IP-地址中的网络号字段和主机号字段">IP 地址中的网络号字段和主机号字段</h3><p><img src="/static/IT/network/IP%E5%8F%B7%E6%AE%B5.png" alt="IP 地址中的网络号字段和主机号字段"></p><h3 id="IP-地址的使用范围">IP 地址的使用范围</h3><p><img src="/static/IT/network/IP%E4%BD%BF%E7%94%A8%E8%8C%83%E5%9B%B4.png" alt="IP 地址的使用范围"></p><p>**点分十进制记法 ：**机器中存放的 IP 地址是 32 位 二进制代码，每隔 8 位插入一个空格能够提高可读性，将每8位的二进制数转换为十进制数，采用点分十进制记法，则进一步提高可读性。000000000010110000001100011111 -&gt; 28.11.3.31</p><h3 id="IP-地址的一些重要特点">IP 地址的一些重要特点</h3><ul><li>IP 地址是一种<strong>分等级的地址结构</strong>。分两个等级的好处是：</li><li>地址管理机构在分配 IP 地址时只分配网络号，而剩下的主机号则由得到该网络号的单位自行分配。这样就方便了 IP 地址的管理。</li><li>器仅根据目的主机所连接的网络号来转发分组（而不考虑目的主机号），这样就可以使路由表中的项目数大幅度减少，从而减小了路由表所占的存储空间。</li><li>实际上IP地址是标志一个主机（或路由器）和一条链路的<strong>接口</strong>。</li><li>个主机同时连接到两个网络上时，该主机就必须同时具有两个相应的IP地址，其网络号net-id 必须是不同的。这种主机称为多归属主机(multihomed host)。</li><li>由器至少应当连接到两个网络（这样它才能将IP数据报从一个网络转发到另一个网络），因此<strong>一个路由器至少应当有两个不同的 IP 地址</strong>。</li><li>用<strong>转发器或网桥连接起来的若干个局域网仍为一个网络</strong>，因此这些局域网都具有同样的网络号net-id。</li><li>**所有分配到网络号net-id的网络都是平等的，**不管是范围很小的局域网，还是可能覆盖很大地理范围的广域网。</li></ul><p><strong>在同一个局域网上的主机或路由器的 IP 地址中的网络号必须是一样的</strong>。<br><strong>路由器总是具有两个或两个以上的 IP 地址。路由器的每一个接口都有一个不同网络号的 IP 地址。</strong><br><strong>两个路由器直接相连的接口处，可指明也可不指明 IP 地址</strong>。如指明 IP 地址，则这一段连线就构成了一种只包含一段线路的特殊“网络” 。<em>现在常不指明 IP 地址。</em></p><h2 id="IP-层转发分组的流程">IP 层转发分组的流程</h2><p>IP 层转发分组的流程 ：有四个 A 类网络通过三个路由器连接在一起。每一个网络上都可能有成千上万个主机。可以想像,若按目的主机号来制作路由表,则所得出的路由表就会过于庞大。但若按主机所在的网络地址来制作路由表,那么每一个路由器中的路由表就只包含 4 个项目。这样就可使路由表大大简化。<br>在路由表中,对每一条路由,最主要的是(<strong>目的网络地址,下一跳地址</strong>)</p><p><img src="/static/IT/network/IP-%E8%B7%AF%E7%94%B1.png" alt="路由表"></p><p>IP 数据报的首部中没有地方可以用来指明“下一跳路由器的 IP 地址”。<strong>当路由器收到待转发的数据报</strong>,不是将下一跳路由器的 IP 地址填入 IP 数据报,而是<strong>送交下层的网络接口软件</strong>。<strong>网络接口软件使用 ARP 负责将下一跳路由器的IP 地址转换成硬件地址,并将此硬件地址放在链路层的 MAC 帧的首部,然后根据这个硬件地址找到下一跳路由器。</strong></p><h3 id="分组转发算法">分组转发算法</h3><ol><li>从数据报的首部提取目的主机的 IP 地址 D, <strong>得出目的网络地址为 N</strong>。</li><li>若网络 N 与此路由器<strong>直接相连</strong>,则把数据报直接交付目的主机 D;否则是间接交付,执行(3)。</li><li>若路由表中有目的地址为 D 的<strong>特定主机路由</strong>,则把数据报传送给路由表中所指明的下一跳路由器;否 则,执行(4)。</li><li>若路由表中有<strong>到达网络 N 的路由</strong>,则把数据报传送给路由表指明的下一跳路由器;否则,执行(5)。</li><li>若路由表中有一个<strong>默认路由</strong>,则把数据报传送给路由表中所指明的默认路由器;否则,执行(6)。</li><li>报告转发分组<strong>出错</strong>。</li></ol><hr><h2 id="划分子网-：从两级-IP-地址到三级-IP-地址">划分子网 ：从两级 IP 地址到三级 IP 地址</h2><p>在 ARPANET 的早期,IP 地址的设计确实不够合理。IP 地址空间的利用率有时很低。给每一个物理网络分配一个网络号会使路由表变得太大因而使网络性能变坏。两级的 IP 地址不够灵活。<br>从 1985 年起在 IP 地址中又<strong>增加了一个“子网号字段”</strong>,使两级的 IP 地址变成为三级的 IP 地址。这种做法叫作划分子网(subnetting) 。划分子网已成为因特网的正式标准协议。</p><p><strong>划分子网纯属一个单位内部的事情。单位对外仍然表现为没有划分子网的网络。</strong><br><strong>从主机号借用若干个位作为子网号 subnet-id,而主机号 host-id 也就相应减少了若干个位。</strong><br><strong>IP地址 ::= {&lt;网络号&gt;, &lt;子网号&gt;, &lt;主机号&gt;}</strong></p><p>凡是从其他网络发送给本单位某个主机的 IP 数据报,仍然是根据 IP 数据报的目的网络号 net-id,先找到连接在本单位网络上的路由器。然后此路由器在收到 IP 数据报后,再按目的网络号net-id 和子网号 subnet-id 找到目的子网。最后就将 IP 数据报直接交付目的主机。</p><p>一个未划分子网的 B 类网络145.13.0.0<br><img src="/static/IT/network/%E7%BD%91%E7%BB%9C.png" alt="未划分子网"></p><p>划分为三个子网后对外仍是一个网络<br><img src="/static/IT/network/%E5%AD%90%E7%BD%91.png" alt="划分为三个子网"></p><h3 id="子网掩码">子网掩码</h3><p>从一个 IP 数据报的首部并无法判断源主机或目的主机所连接的网络是否进行了子网划分。<strong>使用子网掩码(subnet mask)可以找出IP 地址中的子网部分。</strong></p><p>IP 地址的各字段和子网掩码 ：<br><img src="/static/IT/network/%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81.png" alt="各字段和子网掩码"></p><p>子网掩码是一个网络或一个子网的重要属性。<strong>路由器在和相邻路由器交换路由信息时,必须把自己所在网络(或子网)的子网掩码告诉相邻路由器。路由器的路由表中的每一个项目,除了要给出目的网络地址外,还必须同时给出该网络的子网掩码。若一个路由器连接在两个子网上就拥有两个网络地址和两个子网掩码。</strong></p><p>已知 IP 地址是 141.14.72.24,子网掩码是255.255.192.0。试求网络地址。<br><img src="/static/IT/network/IP%E9%A2%981.png" alt="试求网络地址"></p><p>若子网掩码改为255.255.224.0<br><img src="/static/IT/network/IP%E9%A2%982.png" alt="试求网络地址"></p><p><strong>不同的子网掩码得出相同的网络地址。但不同的掩码的效果是不同的。</strong></p><h3 id="使用子网掩码的分组转发过程">使用子网掩码的分组转发过程</h3><p>在不划分子网的两级 IP 地址下,从 IP 地址得出网络地址是个很简单的事。但<strong>在划分子网的情况下,从 IP 地址却不能唯一地得出网络地址来,这是因为网络地址取决于那个网络所采用的子网掩码,但数据报的首部并没有提供子网掩码的信息</strong>。 因此分组转发的算法也必须做相应的改动。</p><ol><li>从收到的分组的首部<strong>提取目的 IP 地址 D</strong>。</li><li>先用各<strong>直接相连网络的子网掩码和D逐位相“与”,看是否和相应的网络地址匹配</strong>。若匹配,则将分组直接交付。否则就是间接交付,执行(3)。</li><li>若路由表中有目的地址为 D 的<strong>特定主机路由</strong>,则将分组传送给指明的下一跳路由器;否则,执行(4)。</li><li>对<strong>路由表中的每一行的子网掩码和 D 逐位相“与”</strong>,若其结果与该行的目的网络地址匹配,则将分组传送给该行指明的下一跳路由器;否则,执行(5)。</li><li>若路由表中有一个<strong>默认路由</strong>,则将分组传送给路由表中所指明的默认路由器;否则,执行(6)。</li><li>报告转发分组<strong>出错</strong>。</li></ol><p>已知互联网和路由器 R1 中的路由表。主机 H1 向 H2发送分组。试讨论 R1 收到 H1 向 H2 发送的分组后查找路由表的过程。<br><img src="/static/IT/network/IP%E9%A2%983.png" alt="查找路由表的过程"></p><ol><li>H1 <strong>首先检测目的IP地址和自己是否在同一个子网</strong> 。将目的地址与自己的子网掩码做与运算。</li><li>255.255.255.128 &amp; 128.30.33.138 = 128.30.33.128 ≠ 128.30.33.0</li><li>结果与本网络的网络地址不一致，所以不在一个网段。</li><li>H1 必须<strong>把分组传送到路由器</strong> R1然后逐项查找路由表。</li><li>与第一个路由项的子网掩码做与运算。<br>6. 255.255.255.128 &amp; 128.30.33.138 = 128.30.33.128 ≠ 128.30.33.0<br>7. 不一致，与第二个路由项的子网掩码做与运算。</li><li>255.255.255.128 &amp; 128.30.33.138 = 128.30.33.128 = 128.30.33.128</li><li>一致，转发接口1。</li></ol><hr><h2 id="无分类编址">无分类编址</h2><p>划分子网在一定程度上缓解了因特网在发展中遇到的困难。然而在 1992 年因特网仍然面临三个必须尽早解决的问题,这就是:B 类地址在 1992 年已分配了近一半,眼看就要在 1994 年 3 月全部分配完毕!因特网主干网上的路由表中的项目数急剧增长(从几千个增长到几万个)。<strong>整个 IPv4 的地址空间最终将全部耗尽。</strong></p><h3 id="CIDR">CIDR</h3><p>CIDR 消除了传统的 A 类、B 类和 C 类地址以及划分子网的概念,因而可以更加有效地分配 IPv4 的地址空间。CIDR 使用各种长度的 “ <strong>网络前缀</strong>”(network-prefix)来代替分类地址中的网络号和子网号。<strong>IP 地址从三级编址(使用子网掩码)又回到了两级编址。</strong></p><p>无分类的两级编址的记法是:<br><strong>IP地址 ::= {&lt;网络前缀&gt;, &lt;主机号&gt;}</strong></p><p>CIDR 还使用“斜线记法”(slash notation),它又称为CIDR记法,即在 IP 地址后面加上一个斜线“/”,然后写上网络前缀所占的位数(这个数值对应于三级编址中子网掩码中 1 的个数)。<strong>CIDR 把网络前缀都相同的连续的 IP 地址组成“CIDR 地址块”。</strong><br>128.14.32.0/20 表示的地址块共有 212 个地址(因为斜线后面的 20 是网络前缀的位数,所以这个地址的主机号是 12 位)。这个地址块的起始地址是 128.14.32.0。在不需要指出地址块的起始地址时,也可将这样的地址块简称为“/20 地址块”。128.14.32.0/20 地址块的最小地址:128.14.32.0，最大地址:128.14.47.255。<strong>全 0 和全 1 的主机号地址一般不使用。</strong></p><p><em>128.14.32.0/20所有地址的 20 位前缀都是一样的</em><br><img src="/static/IT/network/IP-%E6%97%A0%E5%88%86%E7%B1%BB.png" alt="所有地址的 20 位前缀都是一样的"></p><h3 id="路由聚合-route-aggregation">路由聚合(route aggregation)</h3><p>一个 CIDR 地址块可以表示很多地址,这种地址的聚合常称为路由聚合,它使得路由表中的一个项目可以表示很多个(例如上千个)原来传统分类地址的路由。<strong>路由聚合也称为构成超网</strong>(supernetting)。CIDR 虽然不使用子网了,但仍然使用“掩码”这一名词(但不叫子网掩码)。对于 /20 地址块,它的掩码是 20 个连续的 1。<strong>斜线记法中的数字就是掩码中1的个数。</strong></p><ul><li>10.0.0.0/10 隐含地指出 IP 地址 10.0.0.0 的掩码是 255.192.0.0。</li><li>10.0.0.0/10 可简写为 10/10,也就是<strong>把点分十进制中低位连续的 0 省略</strong>。</li><li>*CIDR的其他表示方法：<em>网络前缀的后面加一个星号 * 的表示方法如 00001010 00</em>,在星号 * 之前是网络前缀,而星号 * 表示 IP 地址中的主机号,可以是任意值。</li></ul><h3 id="构成超网">构成超网</h3><p>前缀长度不超过 23 位的 CIDR 地址块都包含了多个 C 类地址。这些 C 类地址合起来就构成了超网。<strong>CIDR 地址块中的地址数一定是 2 的整数次幂</strong>。网络前缀越短,其地址块所包含的地址数就越多。</p><p><img src="/static/IT/network/CIDR.png" alt="CIDR 地址块"></p><p>这个 ISP 共有 64 个 C 类网络。如果不采用 CIDR 技术,则在与该 ISP 的路由器交换路由信息的每一个路由器的路由表中,就需要有 64 个项目。但采用地址聚合后,只需用路由聚合后的 1 个项目 206.0.64.0/18 就能找到该 ISP。</p><h3 id="最长前缀匹配">最长前缀匹配</h3><p>使用 CIDR 时,路由表中的每个项目由“网络前缀”和“下一跳地址”组成。<strong>在查找路由表时可能会得到不止一个匹配结果。应当从匹配结果中选择具有最长网络前缀的路由</strong>:最长前缀匹配(longest-prefix matching)。<strong>网络前缀越长,其地址块就越小,因而路由就越具体</strong>(more specific) 。最长前缀匹配又称为<strong>最长匹配或最佳匹配</strong>。</p><p>例如：<br>收到的分组的目的地址 D = 206.0.71.128<br>路由表中的项目:206.0.68.0/22(大学)、206.0.71.128/25 (四系)<br>D AND (11111111 11111111 11111100 00000000) = 206.0.68.0/22 匹配<br>D AND (11111111 11111111 11111111 10000000) = 206.0.71.128/25 匹配<br>选择两个匹配的地址中更具体的一个,即选择最长前缀的地址。</p><h3 id="使用二叉线索查找路由表">使用二叉线索查找路由表</h3><p>使用二叉线索查找路由表 :当路由表的项目数很大时,怎样设法减小路由表的查找时间就成为一个非常重要的问题。为了进行更加有效的查找**,通常是将无分类编址的路由表存放在一种层次的数据结构中,然后自上而下地按层次进行查找。这里最常用的就是二叉线索**(binarytrie)。 IP 地址中从左到右的比特值决定了从根结点逐层向下层延伸的路径,而二叉线索中的各个路径就代表路由表中存放的各个地址。为了提高二叉线索的查找速度,广泛使用了各种<strong>压缩技术</strong>。</p><p><em>用 5 个前缀构成的二叉线索</em><br><img src="/static/IT/network/CIDR%E9%A2%981.png" alt="二叉线索"></p><hr><h2 id="IP-地址与硬件地址">IP 地址与硬件地址</h2><p><img src="/static/IT/network/IP%E6%8A%A5%E6%96%87.png" alt="IP 地址与硬件地址"></p><p><img src="/static/IT/network/IP-%E8%B7%AF%E7%94%B1%E8%B7%AF%E5%BE%84.png" alt="通信路径"></p><p><img src="/static/IT/network/IP-%E6%95%B0%E6%8D%AE%E6%B5%81%E5%8A%A8.png" alt="数据流动"></p><ul><li><strong>在 IP 层抽象的互联网上只能看到 IP 数据报</strong>。图中的  IP1→IP2  表示从源地址 IP1 到目的地址 IP2 。<strong>两个路由器的 IP 地址并不出现在 IP 数据报的首部中</strong>。</li><li><strong>路由器只根据目的站的 IP 地址的网络号进行路由选择</strong></li><li><strong>在具体的物理网络的链路层只能看见 MAC 帧而看不见 IP 数据报</strong></li><li><strong>IP层抽象的互联网屏蔽了下层很复杂的细节</strong>。在抽象的网络层上讨论问题，就能够使用统一的、抽象的 IP 地址研究主机和主机或主机和路由器之间的通信</li></ul><hr><h2 id="IP-数据报的格式">IP 数据报的格式</h2><p>一个 IP 数据报由<strong>首部和数据</strong>两部分组成。首部的前一部分是<strong>固定长度,共 20 字节</strong>,是所有 IP 数据报必须具有的。首部固定部分后面是一些<strong>可选字段</strong>,它们的长度可变。</p><p><img src="/static/IT/network/IP-%E6%95%B0%E6%8D%AE%E6%8A%A5.png" alt="IP 格式"></p><ul><li>版本——<strong>占 4 位</strong>,指 IP 协议的版本目前的 IP 协议版本号为 4 (即 IPv4)</li><li>首部长度——<strong>占 4 位</strong>,可表示的最大数值是 15 个单位(一个单位为 4 字节)因此 <strong>IP 的首部长度的最大值是 60 字节。</strong></li><li>区分服务——<strong>占 8 位</strong>,用来获得更好的服务在旧标准中叫做服务类型,但实际上<strong>一直未被使用过</strong>。1998 年这个字段改名为区分服务。只有在使用区分服务(DiffServ)时,这个字段才起作用。在一般的情况下都不使用这个字段。</li><li>总长度——<strong>占 16 位</strong>,指<strong>首部和数据之和的长度</strong>,单位为字节,因此<strong>数据报的最大长度为 65535 字节</strong>。总长度必须不超过最大传送单元 <strong>MTU</strong>。</li><li>标识(identification)—— <strong>占 16 位</strong>,它是一个<strong>计数器</strong>,用来产生数据报的标识。<strong>每产生一个数据报，标识就加一</strong>，因为是无链接服务，数据报不存在按序接受的问题。当必须对<strong>IP数据报分片</strong>时，可将标识复制到其他数据报片中，用于回复数据报。</li><li>标志(flag) ——<strong>占 3 位</strong>,<strong>目前只有前两位有意义</strong>。标志字段的最低位是 MF (More Fragment)。<strong>MF = 1 表示后面“还有分片”。MF = 0 表示最后一个分片</strong>。标志字段中间的一位是 DF (Don’t Fragment) 。只有当 <strong>DF = 0 时才允许分片。</strong></li><li>片偏移——<strong>占 13 位</strong>，指出<strong>较长的分组在分片后某片在原分组中的相对位置</strong>。<strong>片偏移以 8 个字节为偏移单位</strong>，也就是说每个分片的长度一定是8字节(64位)的整数倍。</li><li>生存时间——<strong>占 8 位</strong>，记为 TTL (Time To Live)<strong>数据报在网络中可通过的路由器数的最大值</strong>。</li><li>协议——<strong>占 8 位</strong>，字段指出此数据报携带的数据使用何种协议，以便目的主机的 <strong>IP 层将数据部分上交给哪个处理过程</strong>（如TCP/UDP/ICMP/IGMP/OSPF等）。</li><li>首部检验和——<strong>占 16 位</strong>，<strong>字段只检验数据报的首部不检验数据部分</strong>。这里不采用 CRC 检验码而采用简单的计算方法。</li><li>源地址和目的地址—— <strong>各占 4 字节</strong></li><li><strong>可选字段必须为 4 字节的倍数，否则就要进行填充</strong>。该选项很少被使用。<strong>IP 首部最大长度为 60 字节，而固定长度为 20 字节，所以该字段最大长度为 40 字节。</strong></li></ul><hr><h2 id="IP-数据报分片">IP 数据报分片</h2><p><img src="/static/IT/network/IP-%E5%88%86%E7%89%87.png" alt="IP 数据报分片"></p><p><strong>首部检验和</strong> ：不采用 CRC 检验码而采用简单的计算方法，<strong>只检验数据报的首部。</strong></p><p><img src="/static/IT/network/IP-%E6%A3%80%E9%AA%8C%E5%92%8C.png" alt="检验和"></p><p><strong>IP 数据报首部的可变部分</strong><br>IP 首部的可变部分就是一个选项字段,用来支持<strong>排错、测量以及安全等措施,内容很丰富</strong>。选项字段的长度可变,从 1 个字节到 40 个字节不等,取决于所选择的项目。增加首部的可变部分是为了增加 IP 数据报的功能,但这同时也使得 IP 数据报的首部长度成为可变的。这就<strong>增加了每一个路由器处理数据报的开销</strong>。<strong>实际上这些选项很少被使用。</strong></p><hr><h2 id="IP的编址问题">IP的编址问题</h2><h3 id="子网掩码和基本分类的一些基本问题">子网掩码和基本分类的一些基本问题</h3><p>例 1.1：子网掩码和基本分类的一些基本问题。</p><ul><li>子网掩码为255.255.255.0代表什么意思？（<strong>有三种含义</strong>）<ul><li>其一是一个<strong>A类网</strong>的子网掩码，对于A类网络的IP地址，前8位表示网络号，后24位示主机号，使用子网掩码255.255.255.0表示前8位为网络号，中间16位用于子网段的划分，最后8位为主机号。</li><li>第二种情况为一个<strong>B类网</strong>，对于B类网络的IP地址，前16位表示网络号，后16位表示主机号，使用子网掩码255.255.255.0表示前16位为网络号，中间8位用于子网段的划分，最后8位为主机号。</li><li>第三种情况为一个<strong>C类网</strong>，这个子网掩码为C类网的默认子网掩码。</li></ul></li><li>一网络的现在掩码为255.255.255.248，问该网络能够连接多少个主机？<ul><li>255.255.255.248即11111111.11111111.11111111.11111000.</li><li>每一个子网上的主机为(2^3)=6 台</li><li>掩码位数29，该网络能够连接8个主机，扣除全1和全0后为6台。</li></ul></li><li>一A类网络和一B网络的子网号subnet-id分别为16个1和8个1，问这两个子网掩码有何不同？<ul><li>A类网络：11111111   11111111   11111111   00000000</li><li>给定子网号（16位“1”）则子网掩码为255.255.255.0</li><li>B类网络：11111111   11111111   11111111   00000000</li><li>给定子网号（8位“1”）则子网掩码为255.255.255.0，但子网数目不同</li></ul></li><li>一个B类地址的子网掩码是255.255.240.0。试问在其中每一个子网上的主机数最多是多少？<ul><li>（240）<sub>10</sub>=（128+64+32+16）<sub>10</sub>=（11110000）<sub>2</sub></li><li>Host-id的位数为4+8=12，因此，最大主机数为：2^12-2=4096-2=4094</li><li>11111111.11111111.11110000.00000000    主机数2^12-2</li></ul></li><li>一A类网络的子网掩码为<strong>255.255.0.255；它是否为一个有效的子网掩码？</strong><ul><li><strong>是</strong></li><li>10111111   11111111 00000000 11111111</li></ul></li><li>某个IP地址的十六进制表示C2.2F.14.81，试将其转化为点分十进制的形式。这个地址是哪一类IP地址？<ul><li>C2  2F 14  81 – 194.47.20.129</li><li>C2  2F 14  81 – 11000010.00101111.00010100.10000001</li><li>C类地址</li></ul></li><li>C类网络使用子网掩码有无实际意义？为什么？<ul><li>有实际意义.</li><li>C类子网IP地址的32位中,前24位用于确定网络号,后8位用于确定主机号.</li><li>如果划分子网,可以选择后8位中的高位,这样做可以进一步划分网络,并且不增加路由表的内容,但是代价是主机数相信减少.</li></ul></li></ul><h3 id="子网划分的实际问题">子网划分的实际问题</h3><p>例1.2 : 子网划分的实际问题。<br>单位分配到一个B类IP地址，其net-id为129.250.0.0.该单位有4000台机器，分布在16个不同的地点。如选用子网掩码为255.255.255.0，试给每一个地点分配一个子网掩码号，并算出每个地点主机号码的最小值和最大值?</p><p>4000/16=250，平均每个地点250台机器。如选255.255.255.0为掩码，则每个网络所连主机数=2<sup>8</sup>-2=254&gt;250，共有子网数=2<sup>8</sup>-2=254&gt;16，能满足实际需求。<br>可给每个地点分配如下子网号码 :</p><table><thead><tr><th style="text-align:left">地点</th><th style="text-align:left">子网号（subnet-id）</th><th style="text-align:left">子网网络号</th><th style="text-align:center">主机IP的最小值和最大值</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">00000001</td><td style="text-align:left">129.250.1.0</td><td style="text-align:center">129.250.1.1—129.250.1.254</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">00000010</td><td style="text-align:left">129.250.2.0</td><td style="text-align:center">129.250.2.1—129.250.2.254</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">00000011</td><td style="text-align:left">129.250.3.0</td><td style="text-align:center">129.250.3.1—129.250.3.254</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">00000100</td><td style="text-align:left">129.250.4.0</td><td style="text-align:center">129.250.4.1—129.250.4.254</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">00000101</td><td style="text-align:left">129.250.5.0</td><td style="text-align:center">129.250.5.1—129.250.5.254</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">00000110</td><td style="text-align:left">129.250.6.0</td><td style="text-align:center">129.250.6.1—129.250.6.254</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">00000111</td><td style="text-align:left">129.250.7.0</td><td style="text-align:center">129.250.7.1—129.250.7.254</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">00001000</td><td style="text-align:left">129.250.8.0</td><td style="text-align:center">129.250.8.1—129.250.8.254</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">00001001</td><td style="text-align:left">129.250.9.0</td><td style="text-align:center">129.250.9.1—129.250.9.254</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">00001010</td><td style="text-align:left">129.250.10.0</td><td style="text-align:center">129.250.10.1—129.250.10.254</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">00001011</td><td style="text-align:left">129.250.11.0</td><td style="text-align:center">129.250.11.1—129.250.11.254</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">00001100</td><td style="text-align:left">129.250.12.0</td><td style="text-align:center">129.250.12.1—129.250.12.254</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">00001101</td><td style="text-align:left">129.250.13.0</td><td style="text-align:center">129.250.13.1—129.250.13.254</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">00001110</td><td style="text-align:left">129.250.14.0</td><td style="text-align:center">129.250.14.1—129.250.14.254</td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">00001111</td><td style="text-align:left">129.250.15.0</td><td style="text-align:center">129.250.15.1—129.250.15.254</td></tr><tr><td style="text-align:left">16</td><td style="text-align:left">00010000</td><td style="text-align:left">129.250.16.0</td><td style="text-align:center">129.250.16.1—129.250.16.254</td></tr></tbody></table><h3 id="哪些子网掩码是不推荐使用的">哪些子网掩码是不推荐使用的</h3><p>例 1.3 :<br>以下有4个子网掩码。哪些是不推荐使用的？为什么？<br>（1）176.0.0.0，（2）96.0.0.0，（3）127.192.0.0，（4）255.128.0.0。<br>只有（4）是连续的1和连续的0的掩码，是推荐使用的。</p><h3 id="无分类编址-2">无分类编址</h3><p>例 ：无分类编址<br>有如下的4个/24地址块，试进行最大可能性的聚会。</p><ul><li>212.56.132.0/24</li><li>212.56.133.0/24</li><li>212.56.134.0/24</li><li>212.56.135.0/24</li></ul><p>212=（11010100）<sub>2</sub>，56=（00111000）<sub>2</sub><br>132=（10000100）<sub>2</sub><br>133=（10000101）<sub>2</sub><br>134=（10000110）<sub>2</sub><br>135=（10000111）<sub>2</sub></p><p>所以共同的前缀有22位，即11010100,00111000,100001，聚合的CIDR地址块是: 212.56.132.0/22</p><h3 id="哪一个地址块包含了另一个地址">哪一个地址块包含了另一个地址</h3><p>例 1.4 :<br>有两个CIDR地址块208.128/11和208.130.28/22。是否有哪一个地址块包含了另一个地址？如果有，请指出，并说明理由。</p><ul><li>208.128/11的前缀为：11010000 100</li><li>208.130.28/22的前缀为：11010000 10000010 000101</li></ul><p>208.130.28/22的前11位与208.128/11的前缀是一致的，所以208.128/11地址块包含了208.130.28/22这一地址块。</p><hr><h2 id="分组转发的问题">分组转发的问题</h2><h3 id="子网掩码的分组转发">子网掩码的分组转发</h3><p>例 2.1：子网掩码的分组转发<br>设某路由器建立了如下路由表：</p><table><thead><tr><th>目的网络</th><th style="text-align:left">子网掩码</th><th style="text-align:center">下一跳</th></tr></thead><tbody><tr><td>128.96.39.0</td><td style="text-align:left">255.255.255.128</td><td style="text-align:center">接口m0</td></tr><tr><td>128.96.39.128</td><td style="text-align:left">255.255.255.128</td><td style="text-align:center">接口m1</td></tr><tr><td>128.96.40.0</td><td style="text-align:left">255.255.255.128</td><td style="text-align:center">R2</td></tr><tr><td>192.4.153.0</td><td style="text-align:left">255.255.255.192</td><td style="text-align:center">R3</td></tr><tr><td>*（默认）</td><td style="text-align:left">——</td><td style="text-align:center">R4</td></tr><tr><td>现共收到5个分组，其目的地址分别为：</td><td style="text-align:left"></td><td style="text-align:center"></td></tr></tbody></table><ol><li>128.96.39.10</li><li>128.96.40.12</li><li>128.96.40.151</li><li>192.153.17</li><li>192.4.153.90</li></ol><p>试分别计算下一跳。</p><ol><li>分组的目的站IP地址为：128.96.39.10。</li><li>先与子网掩码255.255.255.128相与，得128.96.39.0，</li><li>可见该分组经接口0转发。</li><li>分组的目的IP地址为：128.96.40.12。</li><li>与子网掩码255.255.255.128相与得128.96.40.0，不等于128.96.39.0。</li><li>与子网掩码255.255.255.128相与得128.96.40.0，</li><li>经查路由表可知，该项分组经R2转发。</li><li>分组的目的IP地址为：128.96.40.151</li><li>与子网掩码255.255.255.128相与后得128.96.40.128，</li><li>与子网掩码255.255.255.192相与后得128.96.40.128，</li><li>经查路由表知，该分组转发选择默认路由，经R4转发。</li><li>分组的目的IP地址为：192.4.153.17。</li><li>与子网掩码255.255.255.128相与后得192.4.153.0。</li><li>与子网掩码255.255.255.192相与后得192.4.153.0，</li><li>经查路由表知，该分组经R3转发。</li><li>分组的目的IP地址为：192.4.153.90，</li><li>与子网掩码255.255.255.128相与后得192.4.153.0。</li><li>与子网掩码255.255.255.192相与后得192.4.153.64，</li><li>经查路由表知，该分组转发选择默认路由，经R4转发。</li></ol><h3 id="无分类编址的分组转发">无分类编址的分组转发</h3><p>例 2.2 ：无分类编址的分组转发<br>已知路由器R1的路由表如下表所示。</p><table><thead><tr><th style="text-align:left">地址掩码</th><th style="text-align:left">目的网络地址</th><th style="text-align:left">下一跳地址</th><th style="text-align:center">路由器接口</th></tr></thead><tbody><tr><td style="text-align:left">/26</td><td style="text-align:left">140.5.12.64</td><td style="text-align:left">180.15.2.5</td><td style="text-align:center">m2</td></tr><tr><td style="text-align:left">/24</td><td style="text-align:left">130.5.8.0</td><td style="text-align:left">190.16.6.2</td><td style="text-align:center">m1</td></tr><tr><td style="text-align:left">/16</td><td style="text-align:left">110.71.0.0</td><td style="text-align:left">……</td><td style="text-align:center">m0</td></tr><tr><td style="text-align:left">/16</td><td style="text-align:left">180.15.0.0</td><td style="text-align:left">……</td><td style="text-align:center">m2</td></tr><tr><td style="text-align:left">/16</td><td style="text-align:left">196.16.0.0</td><td style="text-align:left">……</td><td style="text-align:center">m1</td></tr><tr><td style="text-align:left">默认</td><td style="text-align:left">默认</td><td style="text-align:left">110.71.4.5</td><td style="text-align:center">m0</td></tr></tbody></table><p>试画出个网络和必要的路由器的连接拓扑，标注出必要的IP地址和接口。对不能确定的情应该指明。<br><img src="/static/IT/network/IP-%E9%A2%98.jpg" alt="答案"></p><hr>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-RIP</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-rip/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-rip/</url>
      
        <content type="html"><![CDATA[<p>路由信息协议 RIP(Routing Information Protocol) 是内部网关协议 IGP中最先得到广泛使用的协议。RIP 是一种分布式的<strong>基于距离向量</strong>的路由选择协议。<br>RIP 协议要求网络中的每一个路由器都要维护从它自己到其他每一个目的网络的<strong>距离记录。</strong><br><strong>RIP是应用层协议。使用UDP数据报传送。</strong></p><h2 id="“距离”的定义">“距离”的定义</h2><ul><li>从一路由器到<strong>直接连接</strong>的网络的距离定义为 1。</li><li>从一个路由器到<strong>非直接连接</strong>的网络的距离定义为所经过的路由器数加 1。</li></ul><p>RIP 协 议 中 的 “ 距 离 ” 也 称 为 “ 跳 数 ” (hop count),因为每经过一个路由器,跳数就加 1。<strong>这里的“距离”实际上指的是“最短距离”,</strong><br>RIP 认为一个好的路由就是它通过的路由器的数目少,即“距离短”。RIP 允许<strong>一条路径最多只能包含 15 个路由器。“距离”的最大值为16 时即相当于不可达。可见 RIP 只适用于小型互联网。 RIP 不能在两个网络之间同时使用多条路由。</strong> RIP 选择一个具有最少路由器的路由(即<strong>最短路由</strong>),哪怕还存在另一条高速(低时延)但路由器较多的路由。</p><hr><h2 id="RIP-协议的三个要点">RIP 协议的三个要点</h2><ol><li><strong>仅和相邻路由器交换信息。</strong></li><li>交换的信息是当前本路由器所知道的全部信息,即自己的<strong>路由表</strong>。</li><li><strong>按固定的时间间隔交换路由信息</strong>,例如,每隔 30 秒。</li></ol><h2 id="路由表的建立">路由表的建立</h2><ul><li>路由器在刚刚开始工作时,只知道到直接连接的网络的距离(此距离定义为1)。</li><li>以后,每一个路由器也只和数目非常有限的相邻路由器交换并更新路由信息。</li><li>经过若干次更新后,<strong>所有的路由器最终都会知道到达本自治系统中任何一个网络的最短距离和下一跳路由器的地址。</strong></li><li><strong>RIP 协议的收敛(convergence)过程较快</strong>,即在自治系统中所有的结点都得到正确的路由选择信息的过程。</li></ul><hr><h2 id="距离向量算法">距离向量算法</h2><p>收到相邻路由器(其地址为 X)的一个 RIP 报文:</p><ol><li>先修改此RIP报文中的所有项目:</li><li>把“下一跳”字段中的地址都改为X,并把所有的**“距离”字段的值加1**。</li><li>每个项目中的三个关键数据:到目的网络N,距离为d,<strong>下一跳路由器是X</strong>。</li><li>对修改后的RIP 报文中的每一个项目,进行以下步骤:</li><li>若原来的路由表中<strong>没有目的网络N</strong>,则把该项目<strong>加到</strong>路由表中。</li><li>否则若<strong>下一跳路由器地址是X</strong>,则用收到的项目<strong>替换</strong>原路由表中的项目。</li><li>否则若收到项目中的<strong>距离小于路由表中的距离</strong>,则进行<strong>更新</strong>,</li><li>否则,什么也不做。</li><li>若3分钟还没有收到相邻路由器的更新路由表,则把此相邻路由器记为<strong>不可达</strong>路由器,即将<strong>距离置为16</strong>。</li><li>返回。</li></ol><p><img src="/static/IT/network/RIP-%E8%B7%AF%E7%94%B1%E6%9B%B4%E6%96%B01.png" alt="RIP 更新路由表-1"><br><img src="/static/IT/network/RIP-%E8%B7%AF%E7%94%B1%E6%9B%B4%E6%96%B02.png" alt="RIP 更新路由表-2"><br><img src="/static/IT/network/RIP-%E8%B7%AF%E7%94%B1%E6%9B%B4%E6%96%B03.png" alt="RIP 更新路由表-3"></p><p>RIP协议让互联网中的所有路由器都和自己的相邻路由器不断交换路由信息,并不断更新其路由表,使得从<strong>每一个路由器到每一个目的网络的路由都是最短的(即跳数最少)。<strong>虽然</strong>所有的路由器最终都拥有了整个自治系统的全局路由信息</strong>,但由于每一个路由器的位置不同,它们的路由表当然也应当是不同的。</p><hr><h2 id="RIP2-协议的报文格式">RIP2 协议的报文格式</h2><p><img src="/static/IT/network/RIP2-%E5%8D%8F%E8%AE%AE.png" alt="RIP2 格式"></p><p><em>RIP2 报文中的路由部分由若干个路由信息组成。每个路由信息需要用 20 个字节。</em></p><ul><li>命令域：指出RIP报文是一个请求报文还是对请求的应答报文</li><li>请求报文:请求路由器发送路由表</li><li>应答报文:可以是对请求的应答,也可以是主动的更新。</li><li>版本域:一般为1,新版本为2。</li><li>地址族标识符(又称为地址类别)字段用来标志所使用的地址协议。</li><li>路由标记填入自治系统的号码,这是考虑使RIP有可能收到本自治系统以外的路由选择信息。</li><li>再后面指出某个网络地址、该网络的子网掩码、下一跳路由器地址以及到此网络的距离。</li></ul><hr><h2 id="RIP2-的其他功能">RIP2 的其他功能</h2><ul><li>支持变长子网掩码VLSM和CIDR</li><li>具有简单的鉴别功能</li><li>支持多播</li></ul><p>RIP2的鉴别功能<br>鉴别:确认合法的信息包,目前支持纯文本的口令形式。</p><p>RIP2的鉴别报文格式<br><img src="/static/IT/network/RIP2-%E9%89%B4%E5%88%AB.png" alt="RIP2 鉴别报文格式"></p><hr><h2 id="RIP-协议的优缺点">RIP 协议的优缺点</h2><ul><li>RIP协议最大的优点就是<strong>实现简单,开销较小</strong>。</li><li>问题: <strong>好消息传播得快,而坏消息传播得慢</strong>。当网络出现故障时,要经过比较长的时间才能将此信息传送到所有的路由器。</li><li>RIP <strong>限制了网络的规模</strong>,它能使用的最大距离为 15(16 表示不可达)。</li><li>路由器之间交换的路由信息是路由器中的完整路由表,因而随<strong>着网络规模的扩大,开销也就增加</strong>。</li></ul><p><img src="/static/IT/network/RIP-%E7%89%B9%E7%82%B9.png" alt="RIP 优缺点"></p><h2 id="坏消息传播得慢">坏消息传播得慢</h2><ol><li><strong>R2 在收到 R1 的更新报文之前,还发送原来的报文,因为这时 R2 并不知道 R1 出了故障。</strong></li><li><strong>R1 收到 R2 的更新报文后,误认为可经过 R2 到达网1,于是更新自己的路由表,说:“我到网 1 的距离是3,下一跳经过R2”。然后将此更新信息发送给R2。</strong></li><li><strong>R2 以后又更新自己的路由表为“1, 4, R1”,表明“我到网 1 距离是 4,下一跳经过 R1”。</strong></li><li><strong>这样不断更新下去,直到 R 1 和 R2 到网 1 的距离都增大到 16 时,R1 和 R2 才知道网 1 是不可达的。</strong></li></ol><p>这就是好消息传播得快,而坏消息传播得慢。网络出故障的传播时间往往需要较长的时间(例如数分钟)。<strong>这是 RIP 的一个主要缺点。</strong></p><hr><h2 id="例1">例1</h2><p>假定网络中的路由器B的路由表有如下的项目（这三列分别表示“目的网络”、“距离”和“下一跳路由器”）</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">N1        7        AN2        2        CN6        8        FN8        4        EN9        4        F<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在B收到从C发来的路由信息（这两列分别表示“目的网络”“距离”）：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">N2        4N3        8N6        4N8        3N9        5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试求出路由器B更新后的路由表（详细说明每一个步骤）。<br>路由器B更新后的路由表如下：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">N1　　　7　　A　　　　无新信息，不改变N2　　　5　　C　　　　相同的下一跳，更新N3　　　9　　C　　　　新的项目，添加进来N6　　　5　　C　　　　不同的下一跳，距离更短，更新N8　　　4　　E　　　　不同的下一跳，距离一样，不改变N9　　　4　　F　　　　不同的下一跳，距离更大，不改变<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="例2">例2</h2><p>假定网络中的路由器A的路由表有如下的项目（格式同上题）：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">N1          4          BN2          2          CN3          1          FN4          5          G<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>现将A收到从C发来的路由信息（格式同上题）：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">N1          2N2          1N3          3N4          7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>试求出路由器A更新后的路由表（详细说明每一个步骤）。<br>路由器A更新后的路由表如下：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">N1　　　3　　C　　　　不同的下一跳，距离更短，改变N2　　　2　　C　　　　相同的下一跳，距离一样，更新N3　　　1　　F　　　　不同的下一跳，距离更大，不改变N4　　　5　　G　　　　无新信息，不改变<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-UDP</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-udp/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-udp/</url>
      
        <content type="html"><![CDATA[<p>UDP 只在 IP 的数据报服务之上增加了很少一点的功能，即端口的功能和差错检测的功能。<strong>UDP 用户数据报只能提供不可靠的交付。</strong></p><h2 id="UDP-的主要特点">UDP 的主要特点</h2><ul><li>UDP 是无连接的，即发送数据之前不需要建立连接。</li><li>UDP 使用尽最大努力交付，即不保证可靠交付，同时也不使用拥塞控制。</li><li>UDP 是面向报文的。UDP 没有拥塞控制，很适合多媒体通信的要求。</li><li>UDP 支持一对一、一对多、多对一和多对多的交互通信。</li><li>UDP 的首部开销小，只有 8 个字节。</li></ul><h2 id="面向报文的-UDP">面向报文的 UDP</h2><ul><li>发送方 UDP 对应用程序交下来的报文，在添加首部后就向下交付 IP 层。UDP<br>对应用层交下来的报文，<strong>既不合并，也不拆分</strong>，而是保留这些报文的边界。</li><li>接收方 UDP 对 IP 层交上来的 UDP 用户数据报，在去除首部后就原封不动地交付上层的应用进程，<strong>一次交付一个完整的报文</strong>。</li><li><strong>应用程序必须选择合适大小的报文。</strong></li></ul><p><img src="/static/IT/network/UDP%E6%8A%A5%E6%96%87.png" alt="UDP 报文"></p><h2 id="UDP-基于端口的分用">UDP 基于端口的分用</h2><p><img src="/static/IT/network/UDP%E7%AB%AF%E5%8F%A3.png" alt="UDP 端口分用"></p><hr><h2 id="UDP-的首部格式">UDP 的首部格式</h2><hr><p><img src="/static/IT/network/UDP%E9%A6%96%E9%83%A8.png" alt="UDP 首部"></p><p>用户数据报 UDP 有两个字段：数据字段和首部字段。首部字段有 8 个字节，由 4 个字段组成，每个字段都是两个字节。<br>在计算检验和时，临时把“伪首部”和 UDP 用户数据报连接在一起。<strong>伪首部仅仅是为了计算检验和</strong>。</p><h2 id="计算-UDP-检验和的例子">计算 UDP 检验和的例子</h2><p><img src="/static/IT/network/UDP%E6%A3%80%E9%AA%8C%E5%92%8C.png" alt="UDP 检验和"></p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-PPP/MAC/IP/UDP/TCP的数据报格式</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ppp-mac-ip-udp-tcp-de-shu-ju-bao-ge-shi/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-ppp-mac-ip-udp-tcp-de-shu-ju-bao-ge-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="PPP-协议的帧格式："><strong>PPP 协议的帧格式</strong>：</h2><p><em>PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节。</em></p><p><img src="/static/IT/network/PPP.png" alt="PPP 格式"></p><ul><li><strong>PPP 有一个 2 个字节的协议字段</strong></li><li>当协议字段为 <strong>0x0021</strong> 时，PPP 帧的信息字段就是<strong>IP 数据报</strong>。</li><li>若为 <strong>0xC021</strong>, 则信息字段是 PPP <strong>链路控制数据</strong>。</li><li>若为 <strong>0x8021</strong>，则表示这是<strong>网络控制数据</strong>。</li><li>首部和尾部的控制字段F为<strong>7E表示帧的定界符</strong>。</li><li>控制字段<strong>A和C没有实际意义</strong>。</li></ul><hr><h2 id="以太网-V2-的-MAC-帧格式"><strong>以太网 V2 的 MAC 帧格式</strong></h2><p><img src="/static/IT/network/MAC.png" alt="MAC 格式"></p><ul><li>目的地址字段 <strong>6 字节</strong></li><li>源地址字段 <strong>6 字节</strong></li><li>类型字段 <strong>2 字节</strong> ：<strong>类型字段用来标志上一层使用的是什么协议</strong>，以便把收到的 MAC 帧的数据上交给上一层的这个协议。</li><li><strong>数据字段 46 ~ 1500 字节</strong> ： 数据字段的正式名称是 MAC 客户数据字段<br>最小长度 ： <strong>64 字节 - 18 字节的首部和尾部 = 数据字段的最小长度</strong><br>当数据字段的长度小于 46 字节时，应在数据字段的后面加入整数字节的填充字段，以保证以太网的 <strong>MAC 帧长不小于 64 字节</strong>。</li><li>FCS 字段 <strong>4 字节</strong> ： 当传输媒体的误码率为 1*10<sup>-8</sup> 时，MAC 子层可使未检测到的差错小于 1 * 10<sup>-14</sup>。</li><li>为了达到<strong>比特同步</strong>，在传输媒体上<strong>实际传送的要比 MAC 帧还多 8 个字</strong><br>帧的前面插入的 <strong>8 字节</strong>中的<strong>前 7 个字节是前同步码</strong>，用来迅速实现 MAC 帧的比特同步。<strong>第8个字节是帧开始定界符</strong>，表示后面的信息就是MAC 帧。</li></ul><hr><h2 id="IP-数据报的格式"><strong>IP 数据报的格式</strong></h2><p>一个 IP 数据报由<strong>首部和数据</strong>两部分组成。首部的前一部分是<strong>固定长度,共 20 字节</strong>,是所有 IP 数据报必须具有的。首部固定部分后面是一些<strong>可选字段</strong>,它们的长度可变。</p><p><img src="/static/IT/network/IP.png" alt="IP 格式"></p><ul><li>版本——<strong>占 4 位</strong>,指 IP 协议的版本目前的 IP 协议版本号为 4 (即 IPv4)</li><li>首部长度——<strong>占 4 位</strong>,可表示的最大数值是 15 个单位(一个单位为 4 字节)因此 <strong>IP 的首部长度的最大值是 60 字节。</strong></li><li>区分服务——<strong>占 8 位</strong>,用来获得更好的服务在旧标准中叫做服务类型,但实际上<strong>一直未被使用过</strong>。1998 年这个字段改名为区分服务。只有在使用区分服务(DiffServ)时,这个字段才起作用。在一般的情况下都不使用这个字段。</li><li>总长度——<strong>占 16 位</strong>,指<strong>首部和数据之和的长度</strong>,单位为字节,因此**数据报的最大长度为 65535 字节。**总长度必须不超过最大传送单元 <strong>MTU</strong>。</li><li>标识(identification)—— <strong>占 16 位</strong>,它是一个<strong>计数器</strong>,用来产生数据报的标识。<strong>每产生一个数据报，标识就加一</strong>，因为是无链接服务，数据报不存在按序接受的问题。当必须对<strong>IP数据报分片</strong>时，可将标识复制到其他数据报片中，用于回复数据报。</li><li>标志(flag) ——<strong>占 3 位</strong>,<strong>目前只有前两位有意义</strong>。标志字段的最低位是 MF (More Fragment)。<strong>MF = 1 表示后面“还有分片”。MF = 0 表示最后一个分片</strong>。标志字段中间的一位是 DF (Don’t Fragment) 。只有当 <strong>DF = 0 时才允许分片。</strong></li><li>片偏移——<strong>占13 位</strong>，指出<strong>较长的分组在分片后某片在原分组中的相对位置</strong>。**片偏移以 8 个字节为偏移单位，**也就是说每个分片的长度一定是8字节(64位)的整数倍。</li><li>生存时间——<strong>占8 位</strong>，记为 TTL (Time To Live)<strong>数据报在网络中可通过的路由器数的最大值</strong>。</li><li>协议——<strong>占8 位</strong>，字段指出此数据报携带的数据使用何种协议，以便目的主机的 <strong>IP 层将数据部分上交给哪个处理过程</strong>（如TCP/UDP/ICMP/IGMP/OSPF等）。</li><li>首部检验和——<strong>占16 位</strong>，<strong>字段只检验数据报的首部不检验数据部分</strong>。这里不采用 CRC 检验码而采用简单的计算方法。</li><li>源地址和目的地址—— <strong>各占4 字节</strong></li><li>**可选字段必须为4字节的倍数，否则就要进行填充。**该选项很少被使用。<strong>IP首部最大长度为60字节，而固定长度为20字节，所以该字段最大长度为40字节。</strong></li></ul><hr><h2 id="UDP-的首部格式"><strong>UDP 的首部格式</strong></h2><p><img src="/static/IT/network/UDP.png" alt="UDP 格式"></p><p>用户数据报 UDP 有两个字段：数据字段和首部字段。首部字段有 8 个字节，由 4 个字段组成，每个字段都是两个字节。<br>在计算检验和时，临时把“伪首部”和 UDP 用户数据报连接在一起。<strong>伪首部仅仅是为了计算检验和</strong>。</p><hr><h2 id="TCP-报文段的首部格式"><strong>TCP 报文段的首部格式</strong></h2><p><img src="/static/IT/network/TCP.png" alt="TCP 格式"></p><ul><li>源端口和目的端口字段——各占 2 字节。端口是运输层与应用层的服务接口。运输层的复用和分用功能都要通过端口才能实现。</li><li>序号字段——占 4 字节。TCP 连接中传送的<strong>数据流中的每一个字节都编上一个序号</strong>。序号字段的值则指的是<strong>本报文段所发送的数据的第一个字节的序号</strong>。</li><li>确认号字段——占 4 字节，是<strong>期望收到对方的下一报文段的数据的第一个字节的序号。</strong></li><li>数据偏移（即<strong>首部长度</strong>）——占 4 位，它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移”的<strong>单位是 32 位字（以 4 字节为计算单位）。</strong></li><li>保留字段——占 6 位，保留为今后使用，但<strong>目前应置为 0</strong>。</li><li><strong>6个控制位，用来说明本报文段的性质</strong>。</li><li>紧急 URG —— 当 URG = 1 时，表明紧急指针字段有效。它告诉系统此报文段中有紧急数据，应尽快传送(相当于<strong>高优先级的数据</strong>)。</li><li>确认 ACK —— 只有<strong>当 ACK = 1 时确认号字段才有效。当 ACK = 0 时，确认号无效。</strong></li><li>推送 PSH (PuSH) —— 接收 TCP 收到 PSH = 1 的报文段，就<strong>尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付。</strong></li><li>复位 RST (ReSeT) —— 当 RST = 1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须<strong>释放连接，然后再重新建立运输连接</strong>。</li><li>同步 SYN —— 同步 SYN = 1 表示这是一个<strong>连接请求或连接接受</strong>报文。</li><li>终止 FIN (FINis) —— 用来<strong>释放一个连接</strong>。FIN = 1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接。</li><li>窗口字段（<strong>发送方的接收窗口</strong>） —— 占 2 字节，用来<strong>让对方设置发送窗口的依据</strong>，单位为字节。</li><li>检验和 —— 占 2 字节。<strong>检验和字段检验的范围包括首部和数据这两部分</strong>。<strong>在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部。</strong></li><li>紧急指针字段 —— 占 16 位，<strong>指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面，只有URG=1时该项才有意义）。</strong></li><li>选项字段——<strong>长度可变</strong>。</li><li>最大报文段长度MSS——TCP最初只规定了一种选项，即最大报文段长度MSS(Maximum Segment Size)，<strong>仅指TCP 报文段中的数据字段的最大长度</strong>。</li><li>窗口扩大选项 ——占 3 字节，其中有一个字节表示移位值 S。新的窗口值等于TCP 首部中的<strong>窗口位数增大到(16 + S)</strong>，相当于把窗口值向左移动 S 位后获得实际的窗口大小。</li><li>时间戳选项——占10 字节，其中最主要的字段时间戳值字段（4 字节）和时间戳回送回答字段（4 字节）。 <strong>计算RTT和防止序号绕回</strong>。</li><li>选择确认选项——在后面的<strong>选择确认 SACK</strong>介绍。</li><li>填充字段 —— 这是<strong>为了使整个首部长度是 4 字节的整数倍</strong>。</li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-ICMP/RIP/OSPF数据报格式</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-icmp-rip-ospf-shu-ju-bao-ge-shi/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-icmp-rip-ospf-shu-ju-bao-ge-shi/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/IT/network/osi-tcp-ip.png" alt="OSI TCP/IP"></p><hr><h2 id="ICMP-报文的格式"><strong>ICMP 报文的格式</strong></h2><p><strong>ICMP报文装在IP数据报中，但是它不是高层协议，而是IP层协议。</strong></p><p><img src="/static/IT/network/ICMP.png" alt="ICMP 格式"></p><ul><li>类型</li><li>3 终点不可达</li><li>11 时间超过</li><li>12 参数问题</li><li>5 改变路由</li><li>8或0 回送请求或回答</li><li>13或14 时间戳请求或回答</li><li>代码 ： 进一步区分某种类型中的几种不同情况。</li><li>检验和 ： 用于检验整个ICMP报文。但是IP首部检验和并不检验IP数据报的内容，因此<strong>不能保证经过传输的ICMP报文不产生差错。</strong></li></ul><p>###<strong>ICMP 差错报告报文的数据字段的内容</strong></p><p><img src="/static/IT/network/ICMP-ERROR.png" alt="ICMP 差错报文格式"></p><hr><h2 id="RIP2-协议的报文格式"><strong>RIP2 协议的报文格式</strong></h2><p><img src="/static/IT/network/RIP2.png" alt="RIP2 格式"></p><p><em>RIP2 报文中的路由部分由若干个路由信息组成。每个路由信息需要用 20 个字节。</em></p><ul><li>命令域：指出RIP报文是一个请求报文还是对请求的应答报文</li><li>请求报文:请求路由器发送路由表</li><li>应答报文:可以是对请求的应答,也可以是主动的更新。</li><li>版本域:一般为1,新版本为2。</li><li>地址族标识符(又称为地址类别)字段用来标志所使用的地址协议。</li><li>路由标记填入自治系统的号码,这是考虑使RIP有可能收到本自治系统以外的路由选择信息。</li><li>再后面指出某个网络地址、该网络的子网掩码、下一跳路由器地址以及到此网络的距离。</li></ul><p>RIP2的鉴别报文格式<br><img src="/static/IT/network/RIP2%E9%89%B4%E5%88%AB.png" alt="RIP2 鉴别报文格式"></p><hr><h2 id="OSPF数据报格式"><strong>OSPF数据报格式</strong></h2><p><img src="/static/IT/network/OSPF.png" alt="OSPF 格式"></p><ul><li>版本 ： 当前版本号是2。</li><li>类型 ： 可以是五种类型分组中的一种。</li><li>类型1，问候(Hello)分组。用来发现和维持邻战的可达型。 </li><li>类型2，数据库描述(Database Description)分组。向邻站给出自己的链路状态数据库中的所有链路状态项目的摘要信息。</li><li>类型3，链路状态请求(Link State Request)分组。 向对方请求发送某些链路状态项目的详细信息。</li><li>类型4，链路状态更新(Link State Update)分组， 用洪泛法对全网更新链路状态。</li><li>类型5，链路状态确认(Link State Acknowledgment) 分组。对链路更新分组的确认。</li><li>分组长度 ： 包括OSPF首部在内的分组长度，以字节为单位。</li><li>路由器标识符 ： 标志发送该分组的路由器的接口的IP地址。</li><li>区域标识符 ： 分组属于的区域的标识符。</li><li>检验和 ： 用来检验分组中的差错。</li><li>鉴别类型 ： 目前只有两种，0（不用）和1（口令）。</li><li>鉴别 ： 鉴别类型为0时就填入0，鉴别类型为1时则填入8个字符的口令。</li></ul>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络-性能指标</title>
      <link href="/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xing-neng-zhi-biao/"/>
      <url>/2023/04/16/ji-suan-ji-wang-luo/ji-suan-ji-wang-luo-xing-neng-zhi-biao/</url>
      
        <content type="html"><![CDATA[<p>计算机网络的性能指标：</p><ol><li>速率</li><li>带宽</li><li>吞吐量</li><li>时延</li></ol><hr><p>速率：<br>速率即数据率(data rate)或比特率(bit rate)是计算机网络中最重要的一个性能指标。速率的单位是 b/s，或kb/s, Mb/s, Gb/s等。速率往往是指<strong>额定速率</strong>或<strong>标称速率</strong>。<br><em>在<strong>计算机领域</strong>，数的计算使用二进制，例如：K=2<sup>10</sup>=1024，M=2<sup>20</sup>。所有这些单位都用大写。但是在<strong>通信领域</strong>中，K=10<sup>3</sup>，M=10<sup>4</sup>,只有“1000”可以使用小写k，其余也都用大写，大写k即表示1024也表示1000。</em></p><p>带宽  ：<br>“带宽”(bandwidth)本来是指信号具有的频带宽度，单位是赫（或千赫、兆赫、吉赫等）。现在“带宽”是数字信道所能传送的“最高数据率”的同义语，单位是“比特每秒”，或 b/s (bit/s)。<br><em>例如：千比每秒，即 Kb/s （10<sup>3</sup> b/s）</em></p><p>吞吐量 ：<br>吞吐量(throughput)表示在单位时间内通过某个网络（或信道、接口）的数据量。<br><em>吞吐量受网络的带宽或网络的额定速率的限制。</em></p><p><strong>时延：</strong></p><ul><li>发送时延</li><li>传播时延</li><li>处理时延</li><li>排队时延</li></ul><p>总时延 = 发送时延+传播时延+处理时延+排队时延</p><p><strong>发送时延</strong>：发送数据时，数据块从结点进入到传输媒体所需要的时间。也就是<em>从发送数据帧的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间</em>。<br><strong>发送时延 = 数据块长度（比特） /  信道带宽（比特/秒）</strong></p><p><strong>传播时延</strong>：电磁波在信道中需要传播一定的距离而花费的时间。<br><strong>传播时延 = 信道长度（米） /   信号在信道上的传播速率（米/秒）</strong></p><p>处理时延：交换结点为存储转发而进行一些必要的处理所花费的时间。<br>排队时延：结点缓存队列中分组排队所经历的时延。 <em>排队时延的长短往往取决于网络中当时的通信量</em></p><hr><p>例：收发两端的传输距离为1000km，信号在媒体上的传播速率为2*10<sup>8</sup>m/s。试计算以下两种情况的发送时延和传播时延：</p><ol><li>数据长度为10<sup>7</sup>bit, 数据发送速率为100Kbit/s。</li><li>数据长度为10<sup>3</sup>bit, 数据发送速率为1Gbit/s。</li></ol><p>以上计算结果可得出什么结论？<br>1)、<br>发送时延<br>= 数据块长度（比特） / 信道带宽（比特/秒）<br>= 10<sup>7</sup>bit / 100Kbit/s<br>= (10<sup>7</sup> / 10<sup>5</sup>)s<br>= 100s<br>传播时延<br>= 信道长度（米） /   信号在信道上的传播速率（米/秒）<br>= 1000km / （2<em>10<sup>8</sup>m/s）<br>= (10<sup>6</sup> / (2</em>10<sup>8</sup>))s<br>= 0.005s<br>2)、<br>发送时延<br>= 数据块长度（比特） / 信道带宽（比特/秒）<br>= 10<sup>3</sup>bit / 1Gbit/s<br>= (10<sup>3</sup> / 10<sup>9</sup>)s<br>= 1us<br>传播时延<br>= 信道长度（米） /   信号在信道上的传播速率（米/秒）<br>= 1000km / （2<em>10<sup>8</sup>m/s）<br>= (10<sup>6</sup> / (2</em>10<sup>8</sup>))s<br>= 0.005s<br>结论：若数据长度低而发送速率低，则在总的时延中，发送时延往往大于传播时延。但若数据长度短而发送速率高，则传播时延就可能是总时延的主要成分。</p><hr><p>注意：</p><ul><li>信号发送速率（即传输速率）和信号在信道上的传播速率是完全不同的概念。</li><li>对于高速网络链路，我们提高的仅仅是数据的发送速率（即传输速率）而不是比特在链路上的传播速率。</li><li>提高链路带宽减小了数据的发送时延。</li></ul><hr><p><strong>时延带宽积</strong>：链路的时延带宽积又称为以比特为单位的链路长度。<br><strong>时延带宽积 = 传播时延 * 带宽</strong></p><hr><p><strong>往返时间 RTT</strong>：往返时间 RTT (Round-Trip Time) 表示从发送端发送数据开始，到发送端收到来自接收端的确认（接收端收到数据后立即发送确认），总共经历的时间。 <em>（注：往返时间也就是往返时延。从英文译名的正确性考虑，用“往返时间”更为准确。）</em></p><hr><p><strong>利用率</strong> ：信道利用率指出某信道有百分之几的时间是被利用的（有数据通过）。完全空闲的信道的利用率是零。网络利用率则是全网络的信道利用率的加权平均值。<em>信道利用率并非越高越好</em>。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-忽略警告</title>
      <link href="/2023/04/16/coding/python-hu-lue-jing-gao/"/>
      <url>/2023/04/16/coding/python-hu-lue-jing-gao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> warningswarnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">'ignore'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas-dataframe查询第一个符合条件的index</title>
      <link href="/2023/04/16/coding/pandas-dataframe-cha-xun-di-yi-ge-fu-he-tiao-jian-de-index/"/>
      <url>/2023/04/16/coding/pandas-dataframe-cha-xun-di-yi-ge-fu-he-tiao-jian-de-index/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># A 列第一个大于 2 的 index</span>df<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>gt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>idxmax<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># A 列最后一个小于 2 的 index</span><span class="token comment"># 技巧: 使用 [::-1] 进行反转</span>df<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>idxmax<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 也支持其他复杂的查询</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><table><thead><tr><th>方法</th><th>缩写来源</th><th>含义</th></tr></thead><tbody><tr><td>lt</td><td>less than</td><td>小于</td></tr><tr><td>le</td><td>less than or equal to</td><td>小于等于</td></tr><tr><td>eq</td><td>equal to</td><td>等于</td></tr><tr><td>ne</td><td>not equal to</td><td>不等于</td></tr><tr><td>ge</td><td>greater than or equal to</td><td>大于等于</td></tr><tr><td>gt</td><td>greater than</td><td>大于</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-执行sql语句</title>
      <link href="/2023/04/16/coding/python-zhi-xing-sql-yu-ju/"/>
      <url>/2023/04/16/coding/python-zhi-xing-sql-yu-ju/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 比如 pgsql </span><span class="token comment"># 开源数据库都差不多, 导入对应的包就可以了</span><span class="token keyword">import</span> psycopg2conn <span class="token operator">=</span> psycopg2<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>database<span class="token operator">=</span>self<span class="token punctuation">.</span>db_database<span class="token punctuation">,</span> user<span class="token operator">=</span>self<span class="token punctuation">.</span>db_user<span class="token punctuation">,</span> password<span class="token operator">=</span>self<span class="token punctuation">.</span>db_password<span class="token punctuation">,</span>host<span class="token operator">=</span>self<span class="token punctuation">.</span>db_host<span class="token punctuation">,</span> port<span class="token operator">=</span>self<span class="token punctuation">.</span>db_port<span class="token punctuation">)</span>sql <span class="token operator">=</span> <span class="token string">'...'</span><span class="token keyword">with</span> conn<span class="token punctuation">:</span>    cur <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>sql<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>                       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas-dataframe直接读写数据库</title>
      <link href="/2023/04/16/coding/pandas-dataframe-zhi-jie-du-xie-shu-ju-ku/"/>
      <url>/2023/04/16/coding/pandas-dataframe-zhi-jie-du-xie-shu-ju-ku/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> create_engineconn <span class="token operator">=</span> create_engine<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>db_engine<span class="token punctuation">}</span></span><span class="token string">://</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>db_user<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>db_password<span class="token punctuation">}</span></span><span class="token string">@</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>db_host<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>db_port<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>db_database<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># 将 dataframe 写入数据库</span>df <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>df<span class="token punctuation">.</span>to_sql<span class="token punctuation">(</span><span class="token string">'table_name'</span><span class="token punctuation">,</span> conn<span class="token punctuation">,</span> schema<span class="token operator">=</span><span class="token string">'db_schema'</span><span class="token punctuation">,</span> if_exists<span class="token operator">=</span><span class="token string">'replace'</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment"># 查库</span>pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'select * from db_schema.table_name'</span></span><span class="token punctuation">,</span> con<span class="token operator">=</span>conn<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-线程池提交任务</title>
      <link href="/2023/04/16/coding/python-xian-cheng-chi-ti-jiao-ren-wu/"/>
      <url>/2023/04/16/coding/python-xian-cheng-chi-ti-jiao-ren-wu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> concurrent<span class="token punctuation">.</span>futures <span class="token keyword">import</span> ThreadPoolExecutor<span class="token punctuation">,</span> wait<span class="token punctuation">,</span> ALL_COMPLETED<span class="token punctuation">,</span> FIRST_COMPLETEDpool <span class="token operator">=</span> ThreadPoolExecutor<span class="token punctuation">(</span>max_workers<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token comment"># 批量把任务提交到线程池</span>tasks <span class="token operator">=</span> <span class="token punctuation">[</span>pool<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>task_function<span class="token punctuation">,</span> param<span class="token punctuation">)</span> <span class="token keyword">for</span> param <span class="token keyword">in</span> all_task_param<span class="token punctuation">]</span><span class="token comment"># 主线程阻塞等待线程池执行完毕</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">,</span> return_when<span class="token operator">=</span>ALL_COMPLETED<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow-...\tensorflow-plugins\tfdml_plugin.dll not found</title>
      <link href="/2023/04/16/coding/tensorflow-tfdml-plugin.dll-not-found/"/>
      <url>/2023/04/16/coding/tensorflow-tfdml-plugin.dll-not-found/</url>
      
        <content type="html"><![CDATA[<p>2.12.0 之后不支持直接调用 GPU, 需要安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> tensorflow-directml-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装过程中如果中途报 ERROR 也没关系, 最后一行显示 successfully 就行了</p>]]></content>
      
      
      <categories>
          
          <category> 排错笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow-GPU支持</title>
      <link href="/2023/04/16/coding/tensorflow-gpu-zhi-chi/"/>
      <url>/2023/04/16/coding/tensorflow-gpu-zhi-chi/</url>
      
        <content type="html"><![CDATA[<ol><li>安装N卡驱动</li><li>使用conda创建虚拟环境</li><li>安装conda依赖包</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用 conda 安装 cuda 和 cudnn</span>conda <span class="token function">install</span> <span class="token assign-left variable">cudatoolkit</span><span class="token operator">=</span><span class="token number">11.3</span>.1 <span class="token assign-left variable">cudnn</span><span class="token operator">=</span><span class="token number">8.2</span>.1<span class="token comment"># 自 2.11.0 之后 tensorflow 已经默认包含对 GPU 的支持</span>pip <span class="token function">install</span> tensorflow<span class="token comment"># 查看是否检测到GPU</span>print<span class="token punctuation">(</span>tf.config.list_physical_devices<span class="token punctuation">(</span>device_type<span class="token operator">=</span><span class="token string">'GPU'</span><span class="token punctuation">))</span><span class="token comment"># 2.12.0 之后不支持直接获取本地 GPU, 需要安装如下插件, 安装完成后训练时会自动使用 GPU</span><span class="token comment"># 否则 tensorflow 代码会报错: \tensorflow-plugins\tfdml_plugin.dll not found</span><span class="token comment"># 安装过程中如果中途报 ERROR 也没关系, 最后一行显示 successfully 就行了</span>pip <span class="token function">install</span> tensorflow-directml-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tensorflow-构建静态图示例</title>
      <link href="/2023/04/16/coding/tensorflow-gou-jian-jing-tai-tu-shi-li/"/>
      <url>/2023/04/16/coding/tensorflow-gou-jian-jing-tai-tu-shi-li/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plttraining <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>validation <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>model <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>models<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token comment"># input_shape 保持和数据集一致</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Conv1D<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> input_shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>MaxPool1D<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Conv1D<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>MaxPool1D<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Conv1D<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>MaxPool1D<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dropout<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'relu'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">'sigmoid'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>build<span class="token punctuation">(</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>summary<span class="token punctuation">(</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>loss<span class="token operator">=</span><span class="token string">'binary_crossentropy'</span><span class="token punctuation">,</span> optimizer<span class="token operator">=</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>learning_rate<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">)</span><span class="token punctuation">,</span> metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'acc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>his <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>training<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> training<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> epochs<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> validation_data<span class="token operator">=</span><span class="token punctuation">(</span>validation<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> validation<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'../output/model-data/model.h5'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>his<span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token string">'acc'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label <span class="token operator">=</span> <span class="token string">'Training'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>his<span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token string">'val_acc'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label <span class="token operator">=</span> <span class="token string">'Validation'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>test_loss<span class="token punctuation">,</span> test_acc <span class="token operator">=</span> model<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span>test_x<span class="token punctuation">,</span> test_y<span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">model <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>models<span class="token punctuation">.</span>load_model<span class="token punctuation">(</span><span class="token string">'../output/model-data/model.h5'</span><span class="token punctuation">)</span>probability_model <span class="token operator">=</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">[</span>model<span class="token punctuation">,</span> tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Softmax<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>predictions <span class="token operator">=</span> probability_model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>np<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span><span class="token punctuation">[</span>the_data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>numpy-保存数组变量到本地</title>
      <link href="/2023/04/16/coding/numpy-bao-cun-bian-liang-dao-ben-di/"/>
      <url>/2023/04/16/coding/numpy-bao-cun-bian-liang-dao-ben-di/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> nptraining <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment"># 保存</span>np<span class="token punctuation">.</span>savez<span class="token punctuation">(</span><span class="token string">'training'</span><span class="token punctuation">,</span> d1<span class="token operator">=</span>training<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d2<span class="token operator">=</span>training<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 读取</span>training <span class="token operator">=</span> np<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">'training.npz'</span><span class="token punctuation">)</span><span class="token comment"># 查看数据集内的变量名</span>training<span class="token punctuation">.</span>files<span class="token punctuation">(</span><span class="token punctuation">)</span>x <span class="token operator">=</span> training<span class="token punctuation">[</span><span class="token string">'d1'</span><span class="token punctuation">]</span>y <span class="token operator">=</span> training<span class="token punctuation">[</span><span class="token string">'d2'</span><span class="token punctuation">]</span><span class="token comment"># 如果 np.savez 不指定 d1 d2 的话，变量名将成为 arr_0 arr_1 ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL-部署</title>
      <link href="/2023/04/14/yun-wei/postgresql-bu-shu/"/>
      <url>/2023/04/14/yun-wei/postgresql-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">postgres</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 5432<span class="token punctuation">:</span><span class="token number">5432</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/lib/postgresql/data    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> POSTGRES_PASSWORD=pw      <span class="token punctuation">-</span> POSTGRES_USER=user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Capital-基于神经网络的趋势交易入场点预测模型</title>
      <link href="/2023/04/13/capital/capital-ji-yu-shen-jing-wang-luo-de-qu-shi-jiao-yi-ru-chang-dian-yu-ce-mo-xing/"/>
      <url>/2023/04/13/capital/capital-ji-yu-shen-jing-wang-luo-de-qu-shi-jiao-yi-ru-chang-dian-yu-ce-mo-xing/</url>
      
        <content type="html"><![CDATA[<p><font color="red">经验证噪音过多，短期无法迅速除噪，该项目暂时挂起，启动capital系列其他项目</font></p><h2 id="基于神经网络的趋势交易入场点预测模型">基于神经网络的趋势交易入场点预测模型</h2><p>可将价格行为学中的全部价格行为入场点都做成模型，先从最简单的趋势入场点开始做起<br>不同周期下趋势的表征也不同，比如大周期下的交易区间在小周期中就可能是一波又一波的趋势，这里的趋势主要指的是目标盈亏比大于2的情况<br>比如长趋势盈亏比大于5，中趋势盈亏比大于3，短趋势盈亏比大于2，短趋势可能在本周期中是一个小小的波段，但是在小周期中可能是一波趋势</p><h2 id="数据预处理">数据预处理</h2><ol><li>使用算法自动标注趋势入场点（主要使用盈亏比方式计算）<ul><li>以当前K线作为信号K线，以信号K线的最高最低点作为入场点或止损点（暂定）</li><li>其他止损点（比如前期摆动点，交易区间顶底等，后续模型再生成）</li><li>其他入场点（比如突破点，二次入场点等，后续模型再生成）</li><li>其他盈亏比（比如等距运动，前期阻力位，不同趋势程度的盈亏比等，后续模型再生成，本次只生成盈亏比大于2的入场点）</li><li>剔除反转交易入场点（反转交易失败风险极大，但是数据剔除的处理较为复杂，目前先不剔除）</li><li>剔除不良信号K线（比如十字星，小K线，虽然不是100%的不良K线，而且剔除小K线可能错过大趋势很多入场点，但是数据处理操作较为复杂，目前暂且全部剔除）<ul><li>多头入场点只为阳线最高点；空头入场点只为阴线最低点（一定程度剔除了部分弱信号K线和反转信号K线，但是会错过强趋势下的最佳回调入场点。但是降低了数据处理的复杂度，暂且如此，后续再进行调整）</li><li>十字星：K线实体长度低于总长度10%的；小K线：K线总长度低于5日均K线长度1/3的K线</li></ul></li><li>后续将价格行为学中的全部价格行为逐一追加进来</li></ul></li><li>删除最近一个入场点之后的股票数据（防止出现预测行情反而依赖后续行情的现象）</li><li>滑动窗口：使用前置一千根K线的数据标记最后一根K线，依次向后滑动来生产数据（即每个样本只标记最后一根K线；一千的取值是否合理，通过实验验证一下，或许不同K线周期下，所需的前置K线数量也不同）</li><li>数据归一化，转换为百分比坐标轴（包括成交量百分比）<ul><li>使用相对于第一根K线的百分比坐标，还是相对于前一根K线的百分比（整体结构原则，还是就近结构原则，通过实验验证一下，倾向就近，先做就近）</li></ul></li><li>买卖入场点样本数各不低于10w条（自然样本，越多越好）</li><li>可使用多周期K线图扩大样本库</li><li>不可使用缩放进行数据增强，会影响log坐标轴的K线结构，即只允许使用自然样本</li><li>不可使用数据裁剪进行数据增强，会影响K线结构完整性 ，即K线结构不完整时，不予以预测</li><li>挑选流动性好的标的，其K线结构更具有效性（通过日成交量过滤掉不达标的标的）</li><li>目标标的涵盖多品种</li></ol><hr><p>网络模型：残差网络<br>分类：买/卖/无（保留趋势程度的得分，即目标盈亏比及多盈利目标位，后续模型再给出）</p><p>目标胜率：在盈亏比大于2的情况下验证集准确率达到65%（依据不同盈亏比而定）<br>预测之后是否可行仍需进行人工判断</p><hr><p><a href="https://github.com/jxch-capital">capital项目</a><br>有意者请联系我</p>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Capital </tag>
            
            <tag> 工作计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络-网络模型</title>
      <link href="/2023/04/12/coding/shen-jing-wang-luo-wang-luo-mo-xing/"/>
      <url>/2023/04/12/coding/shen-jing-wang-luo-wang-luo-mo-xing/</url>
      
        <content type="html"><![CDATA[<div class="mermaid">  graph LR    A((x)) --w1--&gt; B((N1)) --&gt;C[F1] --w2--&gt; D((N2)) --&gt;E[F2] --w3--&gt; F((y)) --分类/打分--&gt; R[F3] --"惩罚"--&gt; H[Loss]    H --优化w--&gt; A</div><p>x: 特征向量<br>w: 权重矩阵<br>N: 神经元层<br>F: 激活函数（比如Rule函数）<br>y: 结果向量<br>Loss: 损失函数（比如归一化y向量）<br>惩罚: 惩罚函数（比如正则化w矩阵）<br>优化: 优化w的函数（比如梯度下降）</p><hr><p>神经网络的目的在于通过训练集优化出合理的w矩阵</p><p>前向传播的目的是得到损失函数<br>反向传播的目的是优化w矩阵</p><p>最终得到一个满意的w矩阵，使得输入x向量，可以得到一个满意的输出（得到y向量，然后进行分类或打分）</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-10</title>
      <link href="/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-10/"/>
      <url>/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-10/</url>
      
        <content type="html"><![CDATA[<blockquote><p>随着实力的不断增强，社团不再把个人的犯罪行为看得那么严重，因为对社团来说，<font color="orange">犯罪行为不再像从前那样被认为对整体的存在构成危险和颠覆</font>：肇事者不再会被“剥夺法律权利”和被驱逐，公众的愤怒也不允许像从前那样肆无忌惮地在他身上宣泄，——确切地说，<font color="orange">肇事者从此得到了社团方面谨慎的辩护与保护</font>，以避免他遭受这种愤怒，尤其是直接受害人的愤怒的伤害。<font color="orange">首先要与违法行为受害者的愤怒达成和解与妥协；努力将事态控制在局部范围</font>，防止更大范围的、乃至全面性的参与和骚乱；<font color="orange">尝试找到等价的补偿物</font>，并对整个交涉过程进行调解（die compositio）；尤其下面的意愿变得越来越明确，<font color="orange">即将每一个罪行都视作是在某种意义上可以得到抵偿的行为，也就是说，至少在一定程度上将罪犯与其行为分离开来</font>——这就是刑法在后来发展中越来越彰显的特征。<br><font color="orange">社团的实力与自我意识越是增长，刑法就变得越温和；任何削弱和严重破坏刑法的行为，都会造成更加严厉的刑罚形式重新出台。“债权人”越是富有，他在一定程度上就越是人性化；最后，他自己则变成了衡量自身财富的标准与尺度，他可以自行决定究竟能够承受多大的妨害，而不受影响。</font>这个社会具有某种实力意识也并非不可思议，<font color="orange">即该社会可以享受它所能得到的最高贵的奢华——对妨害社会者不施加惩罚</font>。它或许还会这样说：“<font color="orange">我体内的寄生虫跟我有什么关系？让它们生活和繁衍吧：我依然是强健的！</font>”…<br><font color="red">正义是因为“所有东西都可以被偿还，所有东西都必须得到偿还”而开始的，然后则因为上述睁一只眼闭一只眼的放任态度和允许无力偿还者逃之夭夭的做法而终结——与尘世间的一切善事一样，它的结束是自我扬弃。这种<strong>正义的自我扬弃</strong>：众所周知，它为自己美其名曰——宽宥；很显然，<strong>宽宥一直是最有权力者的特权</strong>，或者毋宁说，是他的<strong>法权的彼岸</strong>。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-9</title>
      <link href="/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-9/"/>
      <url>/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>如果我们一直用史前时代的标准加以衡量（也就是那种无论任何时代都是现存的，或者可能重现的史前时代），就会发现：<font color="red">公共社团与其成员之间也存在那种重要的基本关系，即债权人和他的债务人之间的关系</font>。人们生活在一个公共社团里，享受着社团的优越性（那是何等的优越性啊！我们今天偶尔会低估它），他们受到保护和照料，生活在和平与信任之中；他们不需要担心遭到侵害和敌意，而那些公共社团“之外”的人，那些“被放逐者”，却要面临这样的危险，——德国人都懂得“困苦”（Elend）一词，即êlend的原意是什么——<font color="orange">人们正是鉴于这些侵害与敌意才把自己抵押给了社团，并且承担相应的义务</font>。而在另外一种情况下会如何呢？可以肯定，<font color="orange">如果公共社团是受骗的债权人，那么它会竭尽全力使自己得到补偿</font>。这里讲的情况至少是指肇事者造成了直接的损失：先抛开损失不谈，<font color="orange">犯罪者（Verbrecher）首先是一个“违犯者”（Brecher），一个反对集体的契约与诺言的违犯者（Vertrags- und Wortbrüchiger）</font>，他的所作所为关系到他迄今为止一直分享的社团的财物与安逸。犯罪者是个债务人，他不仅不偿还他获得的利益和预支的好处，竟然还向他的债权人逞凶：所以，为公平起见，他不仅从此失去了所有那些财物及好处，——而且更重要的是要让他记住，这些财物的重要含义是什么。<font color="orange">遭受损失的债权人——公共社团，愤怒地把犯人重新推回到野蛮的、被剥夺法律权利的状态</font>。他迄今为止一直受到保护，而现在，<font color="orange">他被放逐了——各种敌意都可以发泄在他身上</font>。在文明发展的这一阶段，<font color="orange">这种“惩罚”不过是反映和模仿了人们对于可憎的、丧失了保护的、被征服的敌人的正常态度</font>。这样的敌人不仅丧失了所有权利和庇护，而且失去了获得任何宽宥的机会；<font color="orange">这就是“vae victis”所面对的战争法则和胜利欢庆！极其无情而且残酷：——这也解释了，为什么战争本身（包括战争的祭礼）贡献的都是历史上出现过的各种形式的惩罚。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-8</title>
      <link href="/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-8/"/>
      <url>/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>现在继续进行我们的研究，我们已经看到，<font color="red">罪欠感和个人责任感起源于人类历史上最古老与最原始的人际关系，起源于买主和卖主的关系，债权人和债务人的关系：正是在这里首先出现了人反对人的现象，也正是在这里首先出现了人和人相比较的情况</font>。人们发现，不管文明的发展水平有多低，总会在某种程度上有这类关系的存在。<font color="orange">价格的制定、价值的衡量、等价物的发明和交换——这些活动在相当大的程度上抢先占据了古人最原初的思想，甚至在某种意义上说，它们就是古人的思想本身：正是从这里培育出了人类最古老的敏锐洞察力，同样，人类自豪感的最初萌芽，人相对于其他动物的优越感也很可能由此产生。</font><br>或许在我们语言里，“人”（manas）这个单词表达的就是这样一种自我感觉：<font color="orange">人把自己称为会衡量价值、会评价和估量的存在物，称为“天生会估算价值的动物”。买和卖，连同它们的心理学属性，甚至要比任何一种原始的社会组织形式和社会团体都要古老</font>：在个人法权最原始的形式当中，恰恰是那些关于<font color="orange">交换、契约、债务、权利、义务、补偿</font>的萌芽意识首先被转移到了最粗放、最原始的公共群体中去（即出现在了与其他类似公共群体的关系当中），随之一同转移的还有那种<font color="orange">比较、衡量和计算权力</font>的习惯。<br>而人们的目光也被调整到了这一角度：古代人类的思想虽然笨拙，但却会固执地在同一方向上继续走下去，而带着这一思想所特有的连续性，<font color="orange">人们马上就得出了那个伟大的普遍性结论：“任何东西都有它的价格；而所有东西都可以被偿还”——这正是属于正义的最古老和最天真的道德法则，是尘世一切“善良”、“公平”、“善意”以及“客观性”的开端。</font><font color="red">这种处于初级阶段的正义是在力量大致均等者之间通行的善意，是他们之间的相互容忍，是通过某种协调达成的“谅解”，——而在涉及力量薄弱者时，则会强迫弱者内部达成某种协调。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-7</title>
      <link href="/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-7/"/>
      <url>/2023/04/11/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不过，我阐述这些思想的意图绝不是要帮助我们的悲观主义者们，向他们那走了调的、嘎嘎作响的、厌倦生命的磨盘上加水；相反，应当着力证明的乃是，在人类还未曾对他们的残酷行为感到羞耻的时候，地球上的生活比有悲观主义者存在的今天要欢乐很多。<font color="red">随着人们面对他人时的羞耻感的增长，人类头顶上的天空也就越来越阴暗</font>。<font color="orange">那疲惫的悲观主义的目光、那对于生命之谜的怀疑、那对于人生的反感与冷冰冰的否定</font>——这些都并不是人类最邪恶时代的特征：<font color="orange">那些特征乃是泥沼植物，它们属于泥沼，有了泥沼才有它们的显现——我指的就是病态的娇柔化和道德化趋势，正是因为这种趋势，“人”这种动物终于学会了对他所有的本能都感到羞耻</font>。在变成“天使”的途中（我不想在此用一个更冷酷的字眼），人给自己培养出了消化不良的胃和长了苔纹的舌，这使他不仅厌恶动物的快乐和无邪，而且对生命本身也感到腻歪：有时他甚至对自己也捂鼻子，并且带着厌恶的表情同教皇英诺森三世一道开列可厌事物的目录：“不洁的性交，在母亲体内让人作呕的哺育，人赖以生长的那些物质的丑恶，污浊的臭气，唾液的分泌、排尿、排便。”<font color="orange">在现代，痛苦总是首当其冲地被用作反对人生存在的第一条论据，是针对人生存在所提出的最强烈疑问，这使我们很愿意回忆起人类做出相反的价值判断的时代，因为制造痛苦对当时的人而言是不可舍弃的，他们在制造痛苦中看到了第一流的魅力，看到了一种真正的生命的诱饵</font>。或许那个时候——我这样说为了安慰娇柔者——疼痛不像今天这样厉害；至少一个治疗过内脏严重发炎的黑人患者的医生可以下这样的断言（黑人在这里代表史前人类），炎症的严重程度会使体格最好的欧洲人感到绝望；——可是黑人却无所谓。（事实上，<font color="orange">只要人们在过度文明的上流社会或者中上流社会中生活过之后就会发现，人的忍痛能力的曲线非常奇怪地、而且几乎是很突然地下降</font>；所以我个人则毫不怀疑，和一个歇斯底里的、受过教育的小女人所度过的某个痛苦夜晚相比，迄今为止为了寻求科学的答案而使用仪器测量过的所有动物的痛苦，都不值一提。）或许现在甚至还允许这样的可能性存在，即那种对于残酷的兴趣也不一定就要全部消失：与疼痛感在今天变得加剧起来的情况相对应，<font color="orange">这种兴趣只需要被崇高化与细腻化</font>，它在出现时必须首先被翻译成幻想的和灵魂的语言，并且要用令人放心的名称装扮起来，<font color="orange">使最温柔伪善的良心也不会对它产生怀疑</font>（一个这样的名称就是“<font color="orange">悲剧式的同情</font>”；另一个则是“les nostalgies de la croix”）。<br><font color="red">起来反对痛苦的，并不是痛苦自身，而是痛苦的无谓：但是</font>不论是对于把痛苦穿凿附会地解释成整个神秘的救赎机器的基督徒而言，还是对于那些擅长从观望者、或者痛苦制造者的角度去理解所有痛苦的天真的古代人来说，<font color="red">根本不存在一种无谓的痛苦</font>。而为了从世间清除掉那隐蔽的、未被发现的、无法证明的痛苦，并且将之确实地否定掉，从前的人们几乎是被迫发明了诸神和所有高尚与低贱的精怪神灵，简言之，<font color="orange">就是要发明某种东西，这个东西同样在隐蔽处游荡，同样在暗处观望，而且不会轻易错过一场有趣的充满痛苦的戏剧。借助这样的发明，生命在当时就已经善于利用它一直都十分擅长的技巧来为自身正名，并且也为它的“恶”正名</font>；在今天也许还需要其他发明的帮助（例如把生命看作一个谜，看作是认识论的难题）。“<font color="orange">神乐于见到，每一种恶都得到正名</font>”：这听起来是史前时代的情感逻辑——说真的，这难道仅是史前时代的情感逻辑吗？<font color="orange">诸神被想像成残酷戏剧的爱好者</font>——噢！只要想想加尔文与路德的例子就可以知道，这一古老的想像甚至在我们欧洲的人性化进程中都延伸得非常深远！无论如何，可以肯定的是，古希腊人也认为，<font color="orange">为了祈福，要向他们的神灵有所供奉，而再没有比残酷所带来的快乐更合适的供奉了</font>。你们觉得，荷马让他的诸神带着什么样的目光去俯瞰人们的命运呢？而特洛伊战争以及类似悲剧般的梦魇从根本上讲到底又有什么终极意义呢？毫无疑问：<font color="orange">它们都是为诸神准备的节日戏剧</font>：而且，如果其中的诗人比其他人都更具“神性”，那么这可能是为诗人准备的节日戏剧…后来的希腊道德哲人们也是如出一辙，<font color="orange">他们设想，神也俯身关注道德的争斗，关注英雄主义和品德高尚者的自我折磨</font>：“背负使命的赫拉克勒斯”登台了，他对此亦有自知；对于希腊人这个演员民族而言，没有证人的美德行为简直是不可思议的。这项当时首先为了欧洲而完成的大胆而且危险的发明，这项关于“自由意志”，关于人在善与恶中的绝对自发性的哲学发明，它之所以被发明难道主要是为了使人获得足够的权利去想象：即诸神对于人的兴趣，对于人类美德的兴趣，是永不衰竭的吗？在这个俗世的舞台上，理应从不缺乏真正的新鲜事物和真正前所未闻的对立、纠纷与灾难：<font color="orange">一个完全按照决定论所设想的世界，或许对神而言曾是可以正确预测的，但也因而很快让神感到了厌倦，——所以那些作为诸神之友的哲人们就有了充分理由，不去要求他们的神来创造这样一种决定论的世界！</font>所有古希腊人和罗马人都对“观众”充满了温情的眷顾，他们的世界本质上是一个属于公众的、一目了然的世界，在那里，<font color="orange">如果没有了戏剧和节庆，幸福也就无从谈起。——而且，正如前所述，就连重大的刑罚中也带着如此多的节日喜庆！</font>…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-打包为exe文件</title>
      <link href="/2023/04/10/coding/python-da-bao-wei-exe-wen-jian/"/>
      <url>/2023/04/10/coding/python-da-bao-wei-exe-wen-jian/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 不太好使，运行命令经常会报错，推荐使用 auto-py-to-exe 进行UI界面的操作 </span>pip <span class="token function">install</span> pyinstaller<span class="token comment"># UI界面操作</span>pip <span class="token function">install</span> auto-py-to-exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-命令行参数</title>
      <link href="/2023/04/10/coding/python-ming-ling-xing-can-shu/"/>
      <url>/2023/04/10/coding/python-ming-ling-xing-can-shu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> argparseparser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">'翻译文本和文件'</span><span class="token punctuation">)</span>parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'-C'</span><span class="token punctuation">,</span> <span class="token string">'--encoding'</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'文件编码类型，默认 utf-8'</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>encoding<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230410-我无处不在</title>
      <link href="/2023/04/10/ri-ji/ri-ji-20230410-wo-wu-chu-bu-zai/"/>
      <url>/2023/04/10/ri-ji/ri-ji-20230410-wo-wu-chu-bu-zai/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="5b639c1defafaa2481496b40eb94dbeab7fe58382cd329f3b3d5c33d957c2c08">775986d9acbb0b15ae59994c4d3eed10d9b021faa5969ff4c1f9809b5d9b809349733c20ebfd21f59e6b584b5507660df5546baedc2c4df40af42fa897935049bcbe33de7e1e63f89d1a8c928fb272724bee157c86c3418b0300af27cbf9acf6f1a73df2830dcc85cc273d948b8b433a4d351f0c0ed6dba106477abfd23647161da0d67216388b2b7081f2cc2de0bad09a3930fc7ff55eaad1824d5ed76cb575f6a2152c3b1f7de3053d18f408d25ad360ae48d017086b12a5cc459cbe61dbd5410b3b9e8fc68341b588d47d5d8b7bb7daca5fae38f6155884bc4fc8c45c853ffebfac49f390679c8ec52dc647dfb9d6648a875b55b708c93d020028072e399b9b68baf48dec9d0edaaceacc0079d4c4f1876a77e79b80f46d9aa250a0fbccc970a6c763347d03e0f92767022400cf9e2156f8bd1974467cedeb55e1e7c24d16</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-调用Google翻译</title>
      <link href="/2023/04/10/coding/python-diao-yong-google-fan-yi/"/>
      <url>/2023/04/10/coding/python-diao-yong-google-fan-yi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token parameter variable">-U</span> deep-translator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> deep_translator <span class="token keyword">import</span> GoogleTranslator<span class="token keyword">print</span><span class="token punctuation">(</span>GoogleTranslator<span class="token punctuation">(</span>source<span class="token operator">=</span><span class="token string">'auto'</span><span class="token punctuation">,</span> target<span class="token operator">=</span><span class="token string">'zh-CN'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>translate<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-6</title>
      <link href="/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-6/"/>
      <url>/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在这个领域，即债务法权的领域产生了道德的概念世界，如“罪欠”、“良知”、“义务”、“义务的神圣性”等，——它们的萌芽与尘世间所有大的事件一样，都是经过鲜血长期而又彻底地浇灌而促成的。难道人们不可以补充说，那个概念世界从根本上讲就从未失去过血腥和折磨的气味？（甚至连老康德也不例外，他的“范畴律令”就散发着残酷的味道……）也正是在这个领域，那个可怕的、或许已经变得无法斩断的关于“罪欠与痛苦”的观念网络首次得以构结形成。让我们再问一遍：<font color="orange">在何种程度上，痛苦可以补偿“欠债”？只要制造痛苦能够最大限度地产生快感，只要遭受损失的债权人能够用损失以及由此造成的不快换来一种特别的满足感即可</font>：制造痛苦，——就是一场真正的节日欢庆。如前所述，债权人的等级和社会地位越是配不上这种欢庆，它的价值就会越高。上面所说只是一种推测：因为这类隐秘的事情很难追根溯源，只除了一点，即这其实也是一件很尴尬的事情；如果有谁在这里唐突地抛出了“复仇欲望”的概念，他其实是在遮蔽和混淆视听，而不是将问题简化（——复仇本身其实也可以同样归结到同一个问题上：“制造痛苦怎么会成为一种补偿，并且产生满足感呢？”）。<br>在我看来，驯服的家畜（比如说现代人，比如说我们自己）的细心谨慎、尤其是他们的伪善扭曲了这一问题，伪善的他们竭尽全力试图要让人看到，残酷在何种程度上构成了古人巨大的节庆欢乐，它又在何种程度上变成了古人几乎所有快乐的配料；然而另一方面，古代人对残酷表现出的需求又是那么天真，那么无邪，而且他们那种“麻木不仁的恶毒”（或者用斯宾诺莎的话说，就是sympathia malevolens），已经从根本上被古人当成了人的正常特性——：从而也就成了为良知所真心接受的东西！明眼人或许会发现，时至今日仍然可以在很多地方感知到这种人类最古老、最原初的节庆欢乐。在《善恶的彼岸》的第117及以下数页中（甚至在更早出版的《朝霞》的第17、68、102页上），我就曾小心地指出，<font color="orange">残酷在被不断地精神升华化和“神圣化”，这一倾向贯穿了整个上层文化的历史</font>（而且，它甚至对于上层文化的形成也具有非常重要的意义）。<br>无论如何，<font color="orange">就在离我们还不是很遥远的过去，如果缺少了处决、鞭笞或者是异端审判及火刑，人们都不知道该如何举行王侯的婚礼与最盛大的民俗节庆。同样，当时没有哪个高贵的家族不备有专人，以供人随意发泄狠毒和进行残酷的戏弄</font>（让我们回想一下公爵夫人城堡中的堂吉诃德吧：如今我们在读整部小说时，舌头上满是苦涩，几乎是一种折磨，我们因此对小说的作者及其同时代人感到非常陌生、非常不能理解，——他们竟然心安理得地把这部小说当作最风趣的书来读，因为他，他们都笑得要死）。<font color="orange">看别人受苦很愉快，让别人受苦则更加愉快——这是一句很残忍的话，但却也是一个古老的、强有力的、人性的、太人性的基本原理</font>，也许就连猴子也会认可这一原理：因为有人说，猴子早就设想出了诸多稀奇古怪的残酷手法，为人类提前做出了内容丰富的预言，或者说“预演”。<font color="orange">不残酷则无欢庆：人类最古老、最悠久的历史如是教诲我们——而且就连惩罚中也带着如此多的节日喜庆！</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-5</title>
      <link href="/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-5/"/>
      <url>/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>然而，正如人们在经过了先前的解释之后所期待的那样，关于这些契约关系的设想与阐释会引起针对创造或认可这些关系的古人的种种质疑和抵触情绪。承诺行为正是在这里发生；正是在这里涉及让许诺者记住诺言的问题；人们完全有理由带着负面情绪去怀疑，正是在这里，人们将发现严酷、残忍和刑讯。<font color="orange">债务人为了让人相信自己还债的承诺，为了保证自己许诺的真诚和神圣，为了使自己的良知牢记还债是自己的义务与职责，在自己不能偿还债务的情况下，根据契约把自己平时所“占有”的、并且可以支配的某些东西抵押给债权人，比如，他的身体，他的妻子，他的自由，还有他的生命</font>（或者在某些特定的宗教前提下，债务人甚至还可以抵押他在“极乐世界里的幸福”，他的灵魂的拯救，乃至他在坟墓中的安宁：在埃及就是这样，债权人甚至不让债务人的尸首在坟墓中得到安宁——而埃及人恰恰是注重这种安宁的）。<br>尤其需要注意的是，<font color="orange">债权人可以任意侮辱和折磨债务人的躯体</font>，例如，从债务人身上割下与债务数额大致相等的肉：——以这个观点为基础，从前在世界各地都存在有对于人体四肢和各个部位的估价，这些估计精确而细致，甚至有些部分细致到了可怕的地步，而它们的存在却是合法的。罗马的十二铜表法规定，债权人在这种情况下无论割多还是割少，都是一样的，“si plus minusve secuerunt，ne fraude esto”，我认为这已经是一个进步，证明法律观念变得更加自由、更加大度、更加罗马化。现在，让我们弄清楚整个补偿形式的逻辑：这个逻辑是非常奇特的。<font color="orange">等价偿还的实现，不是通过财物来直接赔偿损失（不是用金钱、地产、或是其他财产来补偿），而是使债权人有权得到某种快感作为偿还和弥补，——这种快感就是债权人可以肆无忌惮地向失去权力的人行使权力</font>，这种淫欲就是“de faire le mal pour le plaisir de le faire”，就是在强暴中获得的满足：<font color="orange">债权人的社会地位越是低下和卑贱，他就越会重视这样的满足</font>，他很容易把它看作最可口的点心，看作是对上等人生活的预先体味。通过“惩罚”债务人，债权人就获得了分享一种主人权利的机会：<font color="orange">他终于也体验到了那种高级的感觉，可以蔑视和蹂躏一个“低于自己”的存在者</font>——或者如果真正的行刑权力与惩罚的实施已经转交给了“在上有权柄者”，那么他至少还可以去旁观对债务人的蔑视和蹂躏。<font color="orange">这就是说，所谓补偿就存在于索求与兑现残酷的权利之中。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-4</title>
      <link href="/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-4/"/>
      <url>/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>然而，那另外一样“灰暗的东西”，即对于罪欠的意识，以及所有的“良知谴责”又是怎样来到这个世界上的呢？——现在让我们回到我们的道德谱系学者那里。让我再重复一遍——或许我从未曾这样说过？——他们其实一无是处。他们的经验短浅，只有五拃长，而且纯粹是“现代”的经验；他们不了解过去，也没有了解过去的意愿；他们更缺少一种历史的本能，一种在这里恰恰是必备的“预见力”——尽管如此，他们仍然要研究道德的历史：最后得出的结论肯定并且势必无法接近事实。迄今为止的道德谱系学者们可曾在梦中想到过，那个主要的道德概念<font color="red">“罪欠”（Schuld）其实起源于“欠债”（Schulden）</font>这个非常物质的概念？或者可曾梦中想到过，<font color="orange">惩罚</font>作为一种回报，它的发展与有关意志自由或非自由的任何假设都毫无瓜葛？——然后它需<font color="orange">要先发展到一个人性化的较高阶段，以便“人”这种动物能够开始对“故意的”、“过失的”、“偶然的”、“有刑事责任能力的”等概念及其相反概念做一些比较原始的区分，并且在量刑时能够考虑到这些区别</font>。那个如今看来异常陈腐的，却又似乎非常自然、非常必然的观念，即“罪犯理应受到惩罚，因为他原本可以采取其他行动”，它当初也许不得不承担过解释公正感是如何在世界上形成的任务，事实上它的确是很晚才出现的，它是人类判断和推论的精致形式；谁要是把它挪到了人类的发展之初，谁就粗暴地歪曲了古人的心理。<br><font color="orange">在人类历史那段最为漫长的时光里，其实根本没有刑罚，因为人们让肇事者对自己的行为负责，而不是以只对罪犯进行惩罚为前提</font>——这更像现在的父母惩罚自己的孩子，因为遭受损失而恼怒于闯祸者，——但是，这种恼怒是受到限制的，并且由于下面的想法而得到缓解，即<font color="orange">任何损失都会得到补偿，而且损失真的可以通过补偿抵消，甚至通过闯祸者的疼痛也可以。损失与疼痛相等价，这一古老想法是根深蒂固的，今天或许已经无法去除</font>，它是如何获得如此威力的呢？我已经猜到了：<font color="orange">它来自于债权人和债务人的契约关系，这种契约关系与“法律主体”的存在同样古老，而且还可以把它重新归结到买卖、交换、贸易和交通的基本形式上去。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-3</title>
      <link href="/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-3/"/>
      <url>/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>他的良知？……可以预料，“良知”这一概念——我们在这里遭遇了它的最高的、近乎惊人的形式——业已经历了一个漫长的历史和形式演变过程。可以为自己做出准确的预言，可以骄傲地肯定自己，——如前所述，这是一颗成熟的果实，但也是一颗迟来的果实：——这颗果实曾经又酸又涩地挂在树上，经历了多么漫长的光阴啊！而在之前更为漫长的光阴里，人们无法观察到任何关于这种果实的迹象——没有人能够承诺这种果实的出现，尽管树上的一切都已做好了准备，并且它们之前的生长也都是为了这果实！——“人这种动物是怎样获得记忆的？人这种半是愚钝、半是轻率的片刻知性，这种遗忘性的化身，他又是怎样牢记住某些东西的？”……可以想见，这一古老的问题并非是用温和的回答与方法得到解决的；甚至可以这样说，在人类整个史前史时期，也许没有任何能比“记忆术”更恐怖、更令人毛骨悚然的东西了。<br>“人们将某个东西烙印在身体上，为了使其保留在记忆中：<font color="orange">只有不断引起疼痛的东西，才能保留在记忆中</font>。”——这是地球上最古老（可惜也是最长久）的心理学的一条定律。有人甚至宣称，地球上凡是有庄重、严厉、机密的地方，凡是在人和民众的生活中布满阴暗颜色的地方，那种在地球上一度被普遍地用来许诺、担保和赞扬的恐怖，它的某些残余仍在那里继续起着作用：每当我们变得“严肃”的时候，过去，那最漫长、最深刻、最严酷的过去，就会朝着我们大喝一声，从我们心底喷涌而出。每当人们认为有必要记住某些东西的时候，流血、酷刑、牺牲总是不可避免的；最可怕的牺牲和供奉（供奉头生子就属此类），最可憎的肉刑（比如阉割），一切宗教祭典中最残酷的那些仪式（所有宗教从其最根本上来说都是残酷的体系）——所有这一切都起源于那种本能，它揭示了疼痛是维持记忆术最强有力的辅助手段。从某种意义上讲，一切禁欲苦行均属此列：<font color="orange">一些理念应当是不可磨灭的、无所不在的、难以忘却的，并且应当被强制“固定”下来，以达到通过这些“固定观念”对整个神经与智力系统进行催眠的目的——而禁欲苦行的程序步骤与生活方式都只是手段，其目的就是要使相关理念摆脱与所有其他理念的竞争，使其变得“难以忘却”。人类在“记忆”上的表现越差，禁欲苦行的习俗就会越可怕</font>；尤其是刑法的严酷与否更是可以作为相关的标准，即人类需要多大努力才能胜利地克服遗忘性，并且让人类这种为瞬间的激情与欲望所支配的奴隶，将社会公共生活的一些基本要求牢牢记住。我们德国人肯定不会把自己看作一个特别残忍与冷酷的民族，更不会把自己看成特别轻浮随便与浑浑噩噩的民族；但是，只要看看我们古老的刑罚条例，就会发现，为了培养一个“思想家的民族”，尘世的人们为此付出了何等努力（我要说的这个欧洲的民族，在这个民族身上可以发现最大程度的自信、严肃、无聊与客观，而凭借着这些特性它拥有了培养各种类型的欧洲的“满大人”的权利）。德国人为了控制住自己粗俗的本能和野蛮的愚笨，曾经用多种可怕的方法来加强记忆：想一想德国古老的刑罚吧，比如石刑（——传说中用石磨盘砸罪犯的头），比如轮磔之刑（这是德国天才在刑罚王国中特有的发明和专长），例如投掷削尖的木刺，让马匹拉裂或踏碎犯人（“四马分尸”），下油锅或用酒烹（直到十四和十五世纪还用此刑罚），被广泛使用的剥皮之刑（“切皮带”），胸口割肉；还有给罪犯抹上蜂蜜，放在炽热的太阳下让苍蝇叮咬。借助这样的图景和过程，人们终于记住了五、六条“我不要”之类的规定，并以此许下诺言，这样才能享受在社会生活的优越性，——确实如此！<font color="orange">依靠这种记忆方式，人们最终走向了“理性”！</font>——啊，理性，是严肃，是控制情绪，是一切叫做反复思考的灰暗的东西，是人的一切特权和珍宝：但它们的代价是多么昂贵啊！<font color="orange">在一切“善的事物”的基础之上，又有多少鲜血和恐怖啊！</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-2</title>
      <link href="/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-2/"/>
      <url>/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">这正是责任如何起源的漫长历史</font>。正如我们业已认识到的那样，那个驯养一只可以做出承诺的动物的任务，在其自身中包含了一个近期任务作为其先决条件和准备工作，即在一定程度上首先使人变得有必然性、变得单一、变得性质相同、变得有规律性，因而也就变得可以被估算出来。这样一份艰巨的劳动，我把它称为“习俗的道德性”（参见《朝霞》第7、13、16页）——它是人类漫长历史中针对人自身的真正劳动，人类史前的全部劳动在这里获得了意义，得到了正名，无论这些劳动中包含了多少严酷、暴虐、无聊和愚蠢：<font color="orange">借助于习俗的道德性和社会的强制，人真的被造就得可以被估算了</font>。<br>如果我们把自己放在这一艰巨过程的终点，放在那棵大树结出硕果之时，放在社会团体及其习俗的道德性最终显露出它们乃是何种目的手段的时候：我们就会发现，<font color="orange">社团与道德之树上最成熟的果实就是独立自主的个体，那个只与其自身相等同的个体，那个重新摆脱了习俗的道德性束缚的个体，那个超越习俗的自律个体</font>（因为“自律”与“习俗”相互排斥），简而言之，我们这时就会发现<font color="red">具有独立的和长期的意志的人，他可以做出承诺</font>——在他身上有一种自豪的、在全身所有肌肉里颤抖的意识，那是关于最终将取得什么样的成就以及最终其内心将显化出何物的意识，那是一种<font color="red">真正的权力意识和自由意识</font>，那就是<strong>人的一种完满感觉。这个变得自由的人，这个可以真正做出承诺的人，这个自由意志的主人，这个独立的君王</strong>——他怎么可能不知道，与所有那些不可以做出承诺、无法为自己做出准确预言的事物相比，他具有多么大的优越性，他引起了<font color="orange">多少信任、多少恐惧、多少敬畏</font>——这三样东西都是他“应得的”——而他<strong>通过控制与统治自己又是怎样势所必然地去统治周围环境、统治自然、统治所有意志薄弱和不可信任的家伙</strong>？这个“自由的”人，这个<strong>不可摧毁的长期意志的所有者</strong>，在统治问题上也有自己的价值尺度：<font color="orange">他从自己的角度去观察别人，并以此尊敬或蔑视别人</font>；正因为如此，他必然尊敬那些与他自己相同的人，那些强壮的人和那些值得信赖的人（可以做出承诺的人）——<strong>也就是每一个能够像个独立的君王一般做出承诺的人，他不会轻易做出承诺，也很少许诺，而且要花很长时间做出承诺；也就是每一个在信任问题上吝啬的人；也就是每一个信任就意味着褒奖的人；也就是每一个能够许下可以信赖的诺言的人，因为他已经足够强大，哪怕是遭遇不测，哪怕是“对抗命运”，他都有办法坚持自己的诺言</strong>——：同样，他也必然准备好用脚猛踢那些随意许诺、却又瘦弱无能的轻浮鬼，准备好用戒尺与鞭子去惩戒那些诺言刚出口就已经不算数的骗子。<font color="red">他骄傲地认识和意识到，责任乃是非同寻常的特权，乃是罕有的自由，乃是驾驭自己与命运的权力</font>，而这些都已经深入到了他的内心最深处，并且变成了他的本能，<strong>占据主导地位的本能</strong>：——假如他必须用一个词来指称这种本能，他将会如何称呼这一占据主导地位的本能呢？毫无疑问：这个独立自主的人会把它叫做他的<font color="red">良知</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-2罪欠,良知谴责-1</title>
      <link href="/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-1/"/>
      <url>/2023/04/09/dao-de-de-pu-xi/dao-de-de-pu-xi-2-zui-qian-liang-zhi-qian-ze-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="orange">驯养一只动物，让他可以做出承诺</font>——这岂不正是大自然在涉及人的问题上给自己提出的那个自相矛盾的任务吗？这难道不正是人的真正问题之所在吗？……这个问题在很大程度上已经得到了解决，这对那些充分懂得评价<font color="orange">遗忘</font>这一特性的反作用力的人来说，懂得越深就必定会越感到惊奇。遗忘性并不像肤浅的人们所认为的那样，只是一种惯性，它更是一种主动的、最严格意义上的积极的阻力。可以归入这种力量的，只有我们所经历过的、体验过的、被我们吸纳的、被我们所消化的（可以称这种消化过程为“摄入灵魂”），却很少进入我们意识的东西，这就如同我们的身体吸收营养（即所谓“摄入肉体”）的那一整套千变万化的过程。<font color="orange">意识的门窗暂时关闭起来；不再受到由我们的低级服务器官与之周旋的那些噪音和纷争的干扰；意识获得了一些宁静，一些tabula rasa，以便意识还能有地方保留给新事物，尤其是留给更为高贵的职能和人员，留给治理、预测和规划</font>（因为我们的机体运作是寡头政治式的）——这就是之前提到的积极主动的遗忘性的用处，它就像一个门卫，一个心灵的秩序，宁静和规范的守护者：显而易见，如果没有遗忘性，或许也就没有幸福，没有欢乐，没有希望，没有自豪，没有现实存在了。一个人的这种阻碍机制如果受损或失灵，他就如同一个消化不良的患者（还不仅仅是如同——），他将一事无“成”。……<br>在这种必然需要遗忘的动物身上，遗忘性表现为一种力量，乃是一种体魄强健的表现形式，这种动物还为自己培养了另外一种<font color="orange">对立的能力，一种记忆</font>，借助它的力量，遗忘性在一定情况下被搁置不用——在那些应当做出承诺的情况下：因此，这绝不仅仅是被动地无法摆脱已建立的深刻印象，不仅仅是对某个人们无法履行的诺言的无法释怀，而是一种主动的、不想要摆脱的意愿，<font color="orange">是对曾经一度渴求的东西的持续不断的渴求，这是一种真正的意志记忆</font>：就这样，在最初的“我想要”、“我将要做”与意志的真正发泄，即意志的行动之间毫无疑问可以塞进一个充满新鲜陌生的事物、新鲜陌生的情况，甚至是新鲜陌生的意志行动的世界，而无需挣脱意志的长链。<font color="orange">但是，什么才是这一切的前提呢！为了能够在很大程度上提前支配未来，人们首先学会的肯定是能够区分必然事件与偶然事件，能够思考因果关系，能够观察遥远与现实，能够预先认识什么是目的、什么是手段，能够准确地预测、估算、得出结论——为此，人自身首先的变化也肯定是变得可以被估算，变得有规律，变得有必然性，这也是为了符合人自身的想象，以便最终能像一个承诺者那样，为人类自己的未来给出准确的预言！</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-为了任何真理">1. 为了任何真理</h2><blockquote><p>人们理应感谢英国心理学家们所做的迄今惟一的探索道德发生史的尝试。——他们连同其自身给我们留下了不小的疑团；我要承认，他们自身就是活生生的疑团，他们甚至因此比他的论著更为本质——他们本身就很有意思！这些英国心理学家——他们究竟要干什么？人们发现他们总是自觉或不自觉地从事同样的工作，即把我们内心世界的partie honteuse 暴露出来，并且在当中寻找真正有效用的、引领性的、对于发展具有关键意义的东西，而这正是人的理智自尊所最不希望发现的部分（譬如，习惯的vis inertiae，健忘，一种盲目和偶然的观念网络和观念机制，或者是某种纯粹的被动性，机械性，生物反射性，物理分子以及彻底的愚钝）——究竟是什么驱使这些心理学家径直走向这条道路的？<br>难道是一种人类所具有的秘密的、恶毒的、卑鄙的、或许人自己都不愿意承认的自我贬低本能？或者是一种悲观的猜疑，是对失望的、黯然失色的，业已变得愤愤不平和简单幼稚的理想主义者的怀疑？抑或是对基督教（和柏拉图）一种渺小的、隐秘的，或许从未跨过意识门槛的敌视和憎恨？也许是对陌生的事物、对令人头疼的悖论、对存在本身的可疑与荒诞的一种贪婪的嗜好？<br>或者，最后——这是一种综合的东西，其中既有一些卑鄙恶劣，也有一些阴郁灰暗，既有一些反基督教的倾向，也有一些对异域调味品的渴望和需求？……但有人对我说，这些人简直就像一群衰老的、冷血的、乏味的青蛙，它们在人的身旁爬行跳跃，并且爬进、跳进了人体内部，就好像在它们自己的天地里——在一个沼泽里——那样得心应手。<br>我并不愿意听到，而且更不会相信这种论调；如果允许人在不可能知情的情况下表达愿望，那么，我衷心希望他们的情况恰恰与此相反，——希望这些灵魂的研究者与用显微镜观察灵魂的人从根本上是勇敢、大度、骄傲的动物，他们懂得抑制自己的感情和痛楚，并且业已把自己培养成了能够为真理而牺牲一切心愿的人——<strong>为了任何真理，甚至是为了朴素的、苦涩的、丑陋的、令人厌恶的、非基督教的、不道德的真理……因为确实存在着这样的真理。</strong></p></blockquote><h2 id="2-那些“好人”自己才是这一判断的起源">2. 那些“好人”自己才是这一判断的起源</h2><blockquote><p>在这些研究道德的历史学者那里，支配他们精神的可能是一些善良的精灵。向这些精灵们致以崇高敬意！然而，遗憾的是，这些精灵自身却缺乏历史精神，而他们恰恰遭到了所有支配历史的善良精灵们的遗弃！从本质上而言，这些精灵们的思维与陈旧的哲人习俗一样，都是非历史的。这一点毋庸置疑。<br>当他们试图确定“善”这一概念兼判断的起源时，其道德谱系之拙劣从一开始就暴露无遗。他们晓谕众人说：“人们最初是从无私行为的服务对象方面，也就是该行为对服务对象有用的角度来赞许这一无私行为的，并称其为‘好’；后来人们忘记了这种赞许的起源，同时由于无私的行为在习惯上总是被赞扬为好，因此它也就直接被认为是好的——就好像这种行为本身就是好的一样。”<br>人们立刻看到：第一段引言就已经包含了那些过于敏感的英国心理学家们全部的典型特征，——我们发现了“有用”、“忘记”、“习惯”和结尾处的“谬误”等词语，所有这一切统统都被用来支撑某种声望，而迄今为止，上等人一直都自豪于拥有此种声望，就好像拥有某种人类的特权一般。此种自豪理应被羞辱，此种声望理应被贬值：但这一点是否已经实现了呢？……<br>首先，目前在我看来，这种理论很显然是在错误的地方寻找和设定“好”这一概念的原初发生地：<font color="orange">对“好”的判断并非起源于那些受益于“善行”的人！ 事实上，<font color="red">那些“好人”自己才是这一判断的起源</font>，也就是说那些高贵的、有权势的、上层的和高尚的人们认为并判定，他们自身以及他们的行为是好的，即属于第一等级的，与他们相对的则是低下的、下贱的、卑劣的群氓。他们从这种<font color="red">保持等级差别的激情中为自己获取了创造价值并彰显这些价值的权利</font>：行为的有用性跟他们有什么关系！</font><br><font color="red">最高级别的价值判断就是要确定等级并突出等级</font>，而对于这样一种迸发的激情而言，有利性的观点恰恰是极其陌生且不合时宜的：这种激情正是在这里遭遇到了那种以工于心计、锱铢必较为前提的低级热情的对立——不是一次，不是例外，而是永久。<font color="orange">高贵的激情和保持等级差别的激情，正如所言，这就是某个上等的统治阶层在与低贱阶层、“下等人”发生关系时所具有的持续的、主导性的总体感觉与基本感觉——这就是“好”与“坏”相对立的起源。</font>（<font color="orange">主人拥有赐名的权利，而这一权利后来逐渐发展到，人们允许自己将语言的起源本身理解为统治者的权力表达</font>：他们说：“这叫什么，那叫什么”，<font color="orange">他们用声音给每一物、每一事打上烙印，并通过这种方式似乎要将它们占为己有。</font>）<br>正是因为这样的起源，所以<font color="red">“好”这个词从一开始就与“无私的”行为完全没有必然的联系</font>：那只是那些<font color="orange">道德谱系学家的迷信而已</font>。<br><font color="red">只有到了贵族的价值判断走向衰亡的时期，“自私”与“无私”的尖锐对立才逐渐被强加给人的良知</font>，——用我的话说，<font color="orange">这是一种群体本能，<font color="red">这种本能伴随着上述对立而最终获得了表达自己（也可以是不断表达自己）的机会</font>。然后又经过了很长时间，这种本能才<font color="red">在一定程度上变成了主宰</font>，道德的声望才与上述对立紧密结合在一起</font>（例如，如今的欧洲正是这样：<font color="orange">现在占主导地位的就是这样一种偏见，它把“道德的”、“无私的”、“公正的”视为同等价值的概念，而它在人们头脑中的影响力已经可以与某种“固定观念”和脑部疾病相媲美</font>）。</p></blockquote><h2 id="3-那种关于“好”的价值判断起源的假设是没有历史依据的">3. 那种关于“好”的价值判断起源的假设是没有历史依据的</h2><blockquote><p>其次，<font color="orange">那种关于“好”的价值判断起源的假设是没有历史依据的</font>，即使对此完全抛开不谈，该假设本身也包含了心理学上的荒谬。据说，无私行为的有用性是其得到赞扬的本源，而该本源却又被人忘记了：——怎么可能会发生忘记的情况呢？难道是这种行为的有用性曾在某一时期中断过？<br>情况恰恰相反：这种有用性在任何时代都是习以为常的，并且总是不断地被人重新强调；因此，它不是从意识中消失了，不是被忘记了，而是肯定越来越清晰地烙印在意识中。<br>而另外一种与之相反的理论则比它不知道要理性多少倍（但是也不会更为真实——），例如，其代表人物赫伯特·斯宾塞认为：“好”的概念与“有用”、“实用”等概念在本质上是相通的，于是人类在“好”与“坏”的判断中，恰恰就是对人类那些关于有利—实用与有害—不实用的经验进行了总结和确认，这些经验是未被遗忘和无法遗忘的。按照这种理论，“好”就是自古以来被证明为有用的东西：因此，可以断言其具有“最高级别”的和“自在自为”的价值效用。<br>如上所述，<font color="orange">这种解释的思路是错误的</font>，但是至少这种解释本身是理性的，并且在心理学上是站得住脚的。</p></blockquote><h2 id="4-“高贵”、“高尚”都是社会等级意义上的根本概念">4. “高贵”、“高尚”都是社会等级意义上的根本概念</h2><blockquote><p>有一个问题的提出为我指明了正确的道路，那就是，用各种不同语言表达出来的“好”这个指称在语源学方面究竟具有什么样的意义：在这里我发现，这些指称统统都可以回溯到同一个概念的转化上，——普遍来看，无论哪里，<font color="red">“高贵”、“高尚”都是社会等级意义上的根本概念，由此就必然转化出具有“心灵高贵”和“高尚”等含义的“好”，具有“心灵崇高”和“心灵拥有特权”等含义的“好”：而这种演化总是与另一种演化并行发展的，即“卑贱”、“粗俗”、“低等”等词汇最终被转化成“坏”这一概念。</font><br>对于后一种情况而言，最有说服力的例子就是德文单词“坏”（schlecht）本身：它与“朴素”（schlicht）曾是通用的概念——试比较“schlechtweg”［直截了当地，直译：朴素的道路］和“schlechterdings”［实在地，直译：朴素的东西］两个单词——它最初指称的就是朴素的男子，<font color="orange">当时的人们还不会用怀疑的眼神斜睨这样的粗鄙男子，而只是用来指称高贵者的对立面。直到很久以后，大约是在三十年战争时期，这个词的含义才转移到了今天通用的含义。</font>——对我来说，这一点似乎是对道德谱系的一个本质性的洞见；而这一洞见之所以这么晚才被发现，就在于<font color="orange">现代世界内部的民主性偏见对所有起源问题都施加了阻碍性的影响</font>。这里还需要稍加指出的是，<font color="orange">这种影响甚至还渗透到表面上看来最客观的自然科学和生理学领域</font>。<br>臭名昭著的巴克尔案例表明，这种偏见一旦失控到了仇恨的地步，它尤其会对道德与历史造成多么大的危害。来自英国的现代精神中的平民主义再次在它的故土上爆发，激烈得如同一座岩浆迸发的火山，并且伴随着迄今为止所有火山都曾发出过的那种令人扫兴的、音量过大的、庸俗粗鄙的鼓噪。</p></blockquote><h2 id="5-指称“好”的言语和词根中已经多次透露出一种主要差别，而高贵者正是据此感觉自己是上等人">5. 指称“好”的言语和词根中已经多次透露出一种主要差别，而高贵者正是据此感觉自己是上等人</h2><blockquote><p>至于我们的问题，人们则完全有理由称之为一个安静的问题，并且有选择性地只针对少数听众。在我们的问题上，人们可以怀着很大的兴趣确定，<font color="red">在那些指称“好”的言语和词根中已经多次透露出一种主要差别，而高贵者正是据此感觉自己是上等人</font>。虽然，在大多数情况下，他们或许只是简单地按照自己在权力上的优势称呼自己（如“强有力者”，“主人”，“主宰”），或者用这一优势最为明显的表征来称呼自己，例如“富人”、“占有者”（这就是“arya”一词的意思，而在伊朗语和斯拉夫语中也有与之相应的含义）。但是，他们也按照一种典型的特性称呼自己：这也正是我们在本文所涉及的情况。<br>例如，他们称谓自己是“真诚的人”：开此先河的人是古希腊贵族，其代言人就是来自迈加拉的诗人忒奥格尼斯。表达这个意思的单词[x]，从其词根来看表示一个人，这个人存在着，他有实在性，他是真的，他是真实的；而后伴随着一次主观的转折，真实的人就被称为了真诚的人：在这个概念发生转变的阶段，这个词变为了贵族的流行词和标志语，而且完完全全过渡为“贵族的”这一含义，以便与忒奥格尼斯所认为和描述的那些喜欢说谎的粗鄙之人相区别，——直到贵族阶层衰落之后，这个词最终只剩下了指称“心灵高贵”的含义，同时该词也变得成熟和受人欢迎了。在[x]以及在[x]这两个词（两者都与[x]一词相对，即平民之意）当中，都强调了胆怯：这或许算是一个暗示，人们可以沿着这个方向来寻找那个具有多重含义的单词。[x]的语源学来源。而拉丁文中的malus（我把它与[x]一词相提并论）可以表示粗鄙的人，同样也可以表示深肤色的人，尤其是黑头发的人（“hic niger est——”），即在雅利安人之前生活在意大利的居民，他们与后来成为统治者的金黄头发的雅利安征服者种族最明显的区别就是颜色；而凯尔特语则至少为我提供了正好与之相吻合的情况——fin（比如Fin-Gal这个名字），这是用来表示贵族的单词，最后被用来表示善者、高贵者、纯洁者，而它最初的含义则是金色头发，也就是与那些深肤色、黑头发的土著有明显的区别。顺便说一句，凯尔特人是纯粹的金发人种；有人错误地把细致的德国人种分布图上那些明显属于深色头发的居民区域同凯尔特人的后裔或混血联系在一起，就连菲尔绍夫也还在这样做：在这些地方居住的应当是雅利安人之前的德国居民。（同样的情况差不多适用于整个欧洲：从根本上说，被征服的种族最终还是在那里占了上风，在颜色上，在颅骨偏短上，或许还在智识和社会的本能上：有谁赞同我们如下的观点：现代民主制度，更为现代的无政府主义，尤其是欧洲所有的社会主义者现在都一致偏好的那种最原始的社会形式“公社”，这些难道不都基本上意味着一个无比震颤的尾音吗？——征服者和主人种族——雅利安人甚至在生理上也处于劣势？……）我相信拉丁文单词bonus可以解释为武士：前提是，我可以拥有充足的理由把bonus追溯到更古老的单词duonus（试比较bellum ＝ duellum ＝ duen-lum，在我看来，duonus这个词在这几个词中似乎得到了保留）。所以，bonus就可以解释为挑拨离间、制造纷争（duo）的人，也就是武士：现在人们看到了，在古罗马是什么形成了一个人的“好”。<br>而我们德意志自己的“好”（Gut）呢：它的含义难道不就是“像神一样的人”（den Göttlichen），或来自“神圣种族”的人（den Mann “göttlichen Geschlechts”）吗？抑或是应当与哥特人（Gothen）的民族名称（最初也是贵族的名称）相吻合？此种猜测的理由在此不再赘述。</p></blockquote><h2 id="6-政治优越观念总是引起一种精神优越观念">6. 政治优越观念总是引起一种精神优越观念</h2><blockquote><p><font color="red">政治优越的观念总是引起一种精神优越的观念</font>，这一规则暂时还没有例外（虽然存在着出现例外的动因）。<font color="orange">所以当祭司阶层是社会最高等级时，他们就会喜欢一种能够提醒别人其祭司职能的称号来作为他们共同的名称</font>。例如，在这种情况下，“纯洁”（rein）与“不纯洁”（unrein）作为等级的标志而第一次被对立起来；同样在此基础上后来发展出了不再具有等级意义的的“好”与“坏”的观念。应当提醒人们的是，不要一开始就过于严肃、过于广义、甚至过于象征性地理解“纯洁”与“不纯洁”之类的概念：从最初来看，古人的一切概念都具有我们几乎无法想象的粗糙、笨拙、浅薄、狭隘、直接，尤其需要注意的是，它们是非象征性的。“纯洁的人”最初只是指这样的人，他洗脸洗澡，拒绝食用某些会导致皮肤疾病的食品，不和低等民族的肮脏妇女睡觉，厌恶流血——仅此而已，也仅此而已！而另一方面，就高度祭司化的贵族阶层的整体本质而言，当然可以解释清楚，为什么恰恰是在人类的早期，价值对立能够以一种危险的方式被内在化和尖锐化；事实上，<font color="red">正是这种价值对立最终在人与人之间制造了鸿沟</font>，就连具有自由精神的阿喀琉斯也不能毫无畏惧地逾越这些鸿沟。<br><font color="orange">某些不健康的东西从一开始就存在于这些祭司贵族之中，存在于该阶层普遍的习惯中，这些习惯使得他们远离行动，部分人会冥思苦想，部分人则会表现为情感爆发</font>，其结果就是所有时代的祭司们几乎都不可避免地患上了<font color="orange">传染性的肠道疾病和神经衰弱症</font>；然而，他们自己又发明了什么东西来医治自身的疾病呢？——人们不得不说，<font color="orange">他们的医治方法，其最终效果要比它理应治疗的疾病还要危险百倍。至今整个人类都还在忍受这些祭司的愚蠢疗法的后果！</font><br>试想一下那些<font color="orange">饮食疗法（禁荤食），斋戒，性生活节制，逃亡“进入荒漠”</font>（维尔·米切尔式的与世隔离，当然这里没有相关的致肥疗法和过度营养，虽然后者包含了最有效的方法，能够医治禁欲理想中产生的一切癔病）。此外，还有祭司们全部的形而上学，它们<font color="orange">仇视感官，使人变得懒惰和狡诈</font>；他们按照苦行僧和婆罗门的方式进行<font color="orange">自我催眠</font>——在这个意义上，梵与催眠时使用的玻璃纽扣和固定念头所起到的作用是一样的，<font color="orange">他们最终还会具有过于明显的普遍的厌倦情绪，厌倦他们的猛药疗法，即虚无</font>（或者说上帝：——那种与上帝结成一种unio mystica的需求也就是佛教徒所渴求的进入虚无状态，即涅槃——仅此而已！）在祭司们那里，一切都变得更危险了，不仅是医疗方法和治疗技巧，而且还有高傲，复仇，机敏，放荡，爱情，统治欲，美德，疾病；——这里还有必要加以补充的是：<font color="orange">人的，或祭司们的这种存在方式本质上是非常危险的，但正是在这一危险的存在方式的基础上，人才真正成为一种有趣的动物，而人的灵魂也正是在这里获得了更高意义上的深度，并且变得邪恶 ——这正是迄今为止人优越于其他动物的两个基本表现形式！</font>……</p></blockquote><h2 id="7-祭司的价值方式是多么轻易地脱离了骑士—贵族的价值方式，然后继续向其对立面发展">7. 祭司的价值方式是多么轻易地脱离了骑士—贵族的价值方式，然后继续向其对立面发展</h2><blockquote><p>人们或许已然猜出，<font color="red">祭司的价值方式是多么轻易地脱离了骑士—贵族的价值方式，然后继续向其对立面发展</font>；尤其是每当祭司阶层与武士阶层互相嫉妒、不愿妥协的时候，都是引起这种趋向的动因。骑士—贵族的价值判断有其前提，这就是强壮有力的体魄，勃发的、富余的、满溢而出的健康，以及以保持体魄健康为条件的战争、冒险、狩猎、舞蹈、竞赛，还有所有包含强壮、自由与乐观的行为。而正如我们业已看到的那样，祭司—高贵者的价值方式有着与此不同的前提：有关战争的一切东西对他们来说都糟糕透了！众所周知，祭司们是最邪恶的敌人——为什么这样说？因为他们是最虚弱无能的。<font color="orange">由于虚弱无能，他们所滋生的仇恨既暴烈又可怕，而且最富有才智，也最为阴险歹毒。</font><br>世界史上所有伟大的仇恨者都是祭司，而且是最具聪明机智的仇恨者：——与祭司的复仇智慧相比，所有其他的聪明才智都不值一哂。假如没有这些无能者提供的智慧进入历史，那整个人类历史就是一个蠢物：——我们马上就会举出最大的例子。尘世中所有反对“高贵者”、“强权者”、“主人”、“掌权者”的行动都无法与犹太人在这方面的所作所为相提并论：犹太人，那个祭司化的民族，善于<font color="orange">仅仅通过彻底改变他们的敌人和专制者的价值观，也就是通过一个最精神性的复仇行动，而使他们向自己赔礼道歉</font>。仅此一点，就与一个祭司化的民族相吻合，与一个将祭司化的复仇欲望潜藏最深的民族相符合。犹太人曾是这样的一个民族，他们以一种令人恐惧的逻辑性，勇敢地改变了贵族的价值方程式（善＝高贵的＝强有力的＝美丽的＝幸福的＝受神宠爱的），并且怀着最深的仇恨（虚弱无能的仇恨），用牙齿将这一改变紧紧咬住：“惟有困苦者才是善人；惟有穷人、虚弱无能的人、下等人才是善人；惟有忍受折磨的人、遭受贫困的人、病人、丑陋的人，才是惟一虔诚的人，惟一笃信上帝的人，惟有他们才配享受天堂里的至乐。——你们却相反，你们这些高贵者和强力者，你们永远都是恶人、残忍的人、淫荡的人、贪婪的人、不信上帝的人，你们将永远遭受不幸，受到诅咒，并将罚入地狱！”……人们都知道，是谁继承了犹太人这种颠覆的价值观……这是犹太人提出的最具根本意义的战争宣言，其中所包含的巨大的，也特别具有灾难性后果的主动精神会让我回忆起我在另外一个场合所讲过的话（《善恶的彼岸》第118页）——即<font color="red">犹太人是道德上的奴隶起义的始作俑者：那场两千年前的起义今天之所以淡出了我们的视线，仅仅因为它——成功了</font>……</p></blockquote><h2 id="8-它的复仇和改变所有价值的方式一再战胜了迄今为止的其他一切理想">8. 它的复仇和改变所有价值的方式一再战胜了迄今为止的其他一切理想</h2><blockquote><p>然而你们没有听懂吗？你们没有注意到某个需要两千年的岁月才能取得成功的东西？……这是不足为怪的：一切长期的事物都很难受人注意，也很难被观察与纵览。但是，这件事却是个大事件：从复仇和仇恨的树干中，从这株犹太式仇恨的树干中——这是一种最深刻和最精细的仇恨，因为它能创造理想，改变价值，地球上从未有过与之类似的东西——生长出一种同样不可比拟的东西，那就是一种新型的爱，它是所有爱的方式中最深刻和最精细的：——难道从其他哪种树干中能够生长出这样的爱吗？……但是，人们切不要错误地以为，这种爱的勃发是对报仇的渴望的真正否定，是犹太式仇恨的反面！不，真相恰恰与之相反！<font color="orange">这种爱生发于仇恨的树干，是这棵树的树冠</font>，是胜利的、在最纯净的明媚与阳光下逐渐展开的树冠，而在阳光和高度的王国中，<font color="orange">树冠以迫切的欲望追逐着上述仇恨的目标、胜利、战利品和其他诱惑，而仇恨的树根也以同样的迫切欲望在一切具有深度并且邪恶的事物中越陷越深，越来越贪婪</font>。<br>拿撒勒的耶稣，人格化的爱之福音，这位为穷人、病人、罪人带来极乐和胜利的“救世主”——他难道不正是最为神秘可怕且最难抗拒的一种诱惑形式吗？这条诱惑而曲折的道路通往的不正是犹太人的价值，以及理想的革新吗？以色列不正是通过这位“救世主”，这个以色列表面上的敌人和终结者，所指引的曲折道路才达到了他们那精细的复仇欲望的最终目标的吗？以色列不得不亲自在全世界面前把他复仇的真正工具像死敌一样予以否认，并且将其钉在十字架上，<font color="orange">以便“全世界”，即以色列的所有敌人，能够不加考虑地吞下这个诱饵</font>，这难道不算是真正伟大的复仇政治中隐秘阴险的策略吗，这难道不是一种具有远见、秘密隐蔽、缓慢进行、提前谋划的复仇吗？就算用尽其才智中所有的阴险诡诈，人们难道还能设想出比这更为危险的诱饵吗？<font color="orange">难道有什么东西能够在使人上当、入迷、麻醉和堕落的力量上可以与那个“神圣的十字架”的象征相抗衡，可以与“十字架上的神”这个令人恐怖的悖论相仿佛，可以与上帝为了拯救人类而选择将自己钉在十字架上那种极端的、超乎想象的残忍所代表的神秘性相提并论？</font>……至少有一点是肯定的，以色列“sub hoc signo”用<font color="red">它的复仇和改变所有价值的方式一再战胜了迄今为止的其他一切理想，一切更高贵的理想。</font></p></blockquote><h2 id="9-在这个问题上有很多需要保持沉默的东西">9. 在这个问题上有很多需要保持沉默的东西</h2><blockquote><p>“您还在奢谈什么更高贵的理想！让我们顺应这个事实吧：这个民族取得了胜利——或者叫‘奴隶’，或者叫‘群氓’，或者叫‘民众’，或者随您怎么称呼他们——反正犹太人做到了这一步，那就这样吧！从未有哪个民族拥有比这个更具世界历史意义的使命。‘主人’被打败了；卑贱者的道德取得了胜利。有人或许会把这一胜利看作一种血液中毒（该胜利将各个种族混合在了一起）——对此，我并不反对；毫无疑问，人类业已中毒了。‘拯救’人类（即拯救‘主人’）的目的正在顺利进行；一切都明显地被犹太化，或者基督化，或者群氓化了（用什么词语称呼又有什么关系呢！）。这种毒害人类全身肌体的过程似乎不可遏制，从现在起，其速度和步骤甚至可以越来越缓慢、越来越精致、越来越不易察觉和越来越审慎周到——反正有的是时间……从这个意图来看，今天的教会是否还有什么必要的任务，或者说还有什么存在下去的权利吗？或者人们是否可以舍弃教会？这是必然会有的疑问。教会似乎是在阻止和遏制这个毒害的过程，而不是加速它的蔓延？现在看来，这也许就是教会的可用之处……可以肯定的是，教会实在是有点粗俗和土气，这与一种更为文雅的智慧和真正现代的口味是格格不入的。难道教会至少不应该稍微精细一点吗？……教会今天疏远的人多于它所诱惑的人……假如没有教会，我们当中有谁能成为自由的精神？是教会使我们反感，而不是它的毒素……除了教会以外，我们也是很热爱这种毒素的……”——这是一个具有“自由精神”的人针对我的讲话所做的结束语，正如里面所充分显露的那样，他是一个诚实的动物，而且是一个民主主义者；他一直在倾听我的演讲，并且不能忍受我的沉默。对我而言，在这个问题上有很多需要保持沉默的东西。</p></blockquote><h2 id="10-道德上的奴隶起义开始于怨恨本身变得富有创造性，并且产生价值的时候">10. 道德上的奴隶起义开始于怨恨本身变得富有创造性，并且产生价值的时候</h2><blockquote><p><font color="red">道德上的奴隶起义开始于怨恨本身变得富有创造性，并且产生价值的时候：这种怨恨来自于这样的人物，他们无法用行动做出真正的反应，而只会通过幻想中的复仇获得补偿。一切高尚的道德均来自于一种胜利般的自我肯定，而奴隶道德从一开始就对“外在”、“他者”、“非我”加以否认：这种否定就是奴隶道德的创造性行动。</font><font color="orange">这种颠倒的价值目标的设定——其方向必然是向外，而不是反过来指向自己——恰恰属于这种怨恨：奴隶道德的形成首先总是需要一个对立的外部世界，从生理学上讲，它需要外部的刺激才能有所行动，——他的行动从根本上讲就是一种反应。而高贵的价值方式正好与此相反：它的行动和成长都是自发的，它寻求其对立面，仅仅是为了用更加感激与更加赞颂的方式来对自我加以肯定</font>，——它的否定概念，如“下等的”、“卑贱的”、“坏的”等，与它本身肯定性的基本概念相比较而言，只是后来形成的、苍白的对照图像，<font color="orange">它那肯定性的基本概念里完完全全充满了生命和激情</font>：“我们是高贵者，我们是好人，我们是俊美的，我们是幸福的！”假如高贵的价值方式有过错，强暴现实，那么，上述情况应当是发生在它尚未充分了解的领域，甚至可以说，它出于矜持与自我保护而拒绝对该领域进行真正的认识：在它所轻视的领域，也就是卑贱者和下等民族的领域，它也许会做出错误的判断；而另外一方面，人们应当仔细权衡，不管怎样，<font color="orange">这种蔑视的、骄傲的、优越的情绪——虽然我们设定它伪造了蔑视的图景——也远远无法与虚弱无能者带着压抑的仇恨向其对手（当然是in effigie）进行报复的那种虚伪相比</font>。<br>事实上，在<font color="orange">这种蔑视中存在着太多疏忽和轻率，并且夹杂着太多罔顾和急躁，甚至还有太多与生俱来的乐观情绪，以至于他们无法将其对象变成真正的讽刺画和丑陋危险的怪物</font>。例如，人们总是可以听到希腊贵族在所有言语中所加进的那些近乎善意友好的口吻和语气，他们藉此拉开与下等民族的距离；类似怜悯、关怀、宽容之类的情绪始终搅和在一起，而且还包裹上了糖衣，以至于到了最后，几乎所有适用于卑贱者的词汇最终只剩下“不幸的”、“可怜的”一类的表达（试比较[x],[x],[x],[x],后面两个词的本意是把卑贱者表达为劳动奴隶和驮载牲畜）——另一方面，“坏的”、“下等的”、“不幸的”等词汇也从未停止过，用一种以“不幸的”为主导的音色，最后在希腊人的耳朵里汇成统一的调门：这是古老的、更加高尚的贵族价值方式的遗产，即使在蔑视对方时也不会否认这一点。（古典语文学家们可以注意一下，[x],[x],[x],[x],[x]等词是在什么含义的情况下被使用。）而<font color="orange">“出身高贵者”对自己的感觉就是“幸福的人”，他们不会先去观察自己的敌人，而后人为地构造自己的幸福，或者在某些情况下说服，甚至骗取别人相信自己幸福（所有怀有怨恨的人都习惯于这样做）；他们同样知道，他们作为充满过多力量的人就必然是积极的人，他们不会把行动与幸福相分离——在他们那里，行动必定会带来幸福</font>（[x]一词的起源正是出于此）——<font color="orange">至于那些虚弱无能的人、压抑的人以及感染了有毒情感和仇视情感的人，所有这些都与他们那个层次的“幸福”截然相反，在后者那里，幸福在本质上只能被动地出现</font>，即表现为麻醉、沉迷、安宁、和睦、“犹太教安息日”、颐养性情和舒展四肢。<br><font color="orange">高贵的人生活得真诚而且坦然</font>（[x]，即“贵族出身”一词，侧重于“真诚正直”的细微含义，而且也很有可能同时侧重于“天真”的含义）；<font color="orange">而怀有怨恨的人既不真诚也不天真，甚至对自己也不诚实和直率。他的灵魂喜欢偷窥</font>；他的精神喜欢暗角、幽径和后门，所有晦暗的事情都引起他的兴趣，让他认为那是属于他自己的世界，他很安全，让他提神醒脑；他擅长沉默、记恨和等待，善于暂时地卑躬屈膝、忍辱负重。这样怀有怨恨的种族最终必然比其他高贵的种族更聪明，而且它还<font color="orange">以完全不同的程度尊崇聪明：即把聪明看作首要的生存条件；而对高贵的人来说，聪明不过是他们在品尝奢侈和高雅时本身就轻易获得的一种比较细腻的怪味而已：——聪明在这里早已不那么至关重要了</font>，它既不像那种调节性的无意识本能能够提供完美的功能性保护，甚至也不如某种非聪明，也就是无论面对危险，还是面对敌人时都勇猛直前，而且比不上那些愤怒、爱情、敬畏、感激、报复等狂热的情感爆发，<font color="orange">所有时代那些高贵的灵魂都曾在情感爆发问题上重新认识了自己。如果高贵的人心理也出现了怨恨，那么这怨恨也会立刻通过某个反应而得到发泄并且耗尽，所以他不会中怨恨的毒</font>：而在另一方面，如果说在不计其数的情况下，怨恨对于所有弱者和无能者来说是不可避免的话，那么在高贵的人身上却压根不会出现。<font color="orange">高贵的人甚至不会长时间地对敌人、对不幸、对不当行为耿耿于怀——这是天性强大和充实的标志，这种天性里包含着丰富的塑造力、复制力、治愈力，还有让人忘却的力量</font>（这方面的一个很好的例子，就是现代世界的米拉博，他记不住别人对他的侮辱和诽谤，所以也不存在原谅别人的问题，因为他——已经忘记了）。<font color="orange">这样的人身躯一震就可以抖掉身上无数的蛆虫，而在别人那里，这些蛆虫却会钻进他们的身体</font>。可以断定的是，只有这里，在地球上只有这里，才可能存在真正的所谓“爱仇敌”。一个高贵的人会对他的敌人抱有如此多的敬畏呀！——这样的敬畏就是通往爱的一座桥梁……<font color="red">他是为了自己的缘故而需要敌人，他把这种需求当做是对他的奖赏；他只能容忍这样的敌人，即身上没有任何需要蔑视的地方，而且值得备受尊敬的敌人！但与之相反，人们还是像怀有怨恨的人一样构想出来了自己的敌人——这就是他们的行为，他们的创造：他设想出了“邪恶的敌人”，即“恶人”，并且把这当作基本概念，还以此为出发点，他又设想出了该概念的心理遗存（Nachbild）兼对立面，即“善人”——那个人就是他自己！</font></p></blockquote><h2 id="11-这种“文明的工具”是人类的耻辱">11. 这种“文明的工具”是人类的耻辱</h2><blockquote><p><font color="red">高贵者的情况与此正好相反，他预先自发地从自身出发构想出“好”这一基本概念，然后才由此引申出一个关于“坏”的想象！这个起源于高贵的“坏”和那种来自于专门炮制无限仇恨的大锅的“恶”：前者只是一种模仿，是附带产生的东西，是一种补充色调，而后者却与此相反，它是本源，是起点，是奴隶道德构想中真正的行动</font>——“坏”与“恶”这两个表面上都是同一个概念“好”的反义词，但它们是多么不同啊！然而，<font color="red">事实上并不存在同一个“好”的概念</font>：人们更多地需要扪心自问，谁才是“邪恶”的，这里说的是怨恨道德意义上的“恶”。<br>最严格的回答是：就是<font color="orange">另外一种道德意义上的那些“好人”，高贵的人，有权势的人，统治者，只不过他们被怨恨的有毒眼睛改变了颜色、改变了含义、改变了外形</font>。我们在这里至少要否认一点：谁把那些“好人”只看作敌人，谁也就只会结识邪恶的敌人。同样是这些人：他们一方面受到风俗、信仰、习惯、感激情绪的限制，同时也更多地受到彼此之间的互相监视与嫉妒的严格限制；另一方面，他们在相互关系方面又表现出极大的相互体谅、自我克制、体贴、忠诚、自豪和友情，——<font color="orange">而一旦他们来到外面的世界，开始接触陌生的事物与陌生的环境时，他们不比脱笼的野兽好多少</font>。他们在那里享受摆脱了一切社会禁锢的自由，在野蛮状态中缓解自己因长期生活在和睦团体的封闭与禁锢中而形成的紧张心理，他们恢复了野兽的无辜心态，变成了幸灾乐祸的怪物，在犯下了一系列骇人听闻的凶杀、纵火、强奸、暴力之后，他们或许还会得意洋洋、心安理得地扬长而去，仿佛只是完成了一场大学生式的恶作剧而已，甚至还相信，在很长时间之内，诗人们也会因为他们的作为而又有了值得吟唱和赞颂的素材。<font color="orange">所有这些高贵的种族，他们的本性全都无异于野兽</font>，无异于非凡的、贪婪地渴求战利品与胜利的金发野兽。这一隐藏的本性需要时不时地发泄出来，野兽必须挣脱束缚，必须重归荒野：——罗马的贵族，阿拉伯的贵族，日耳曼的贵族，日本的贵族，《荷马史诗》中的英雄，斯堪的纳维亚的维京人——他们这方面的需求完全一样。<font color="orange">高贵的种族在所有他们去过的地方都留下了“野蛮人”的概念；而从他们最高等的文化中还显露出他们对此具有明确的意识，甚至是自豪</font>（譬如，伯利克勒斯在那篇著名的葬礼演说中对他的雅典人民说：“我们的冒险精神冲进了每个海洋和每个陆地，我们在各地都以好的和坏的方式建立起了不朽的丰碑”）。高贵种族的“冒险精神”表现得疯狂、荒谬、突然，他们的行动甚至不可捉摸、令人难以置信——伯利克勒斯尤其赞扬雅典人的[x]——他们对安全、肉体、生命和舒适表现得淡然和轻蔑，对一切破坏行为、对胜利和残忍带来的所有快感都表现出令人吃惊的兴致和发自内心的喜好——<font color="orange">所有这一切都使其受害人将他们勾画为“野蛮人”、“邪恶的敌人”的形象</font>，类似于“哥特人”加“汪达尔人”。德国人上台伊始就引起了别人深刻且冷酷的猜忌，现在又重新出现了——几百年来，欧洲人都怀着恐惧旁观着金发的日耳曼野兽的大肆破坏，这恐惧一直未曾消散，而他们的猜忌一直都还是这恐惧的余声与回响。（尽管在古老的日耳曼人和我们德国人之间，几乎不存在概念上的联系，更遑论他们之间血缘上的联系了。）<br>我之前曾指出过赫西俄德的窘境，他思考了文化时代的序列问题，并试图将这些时代冠以黄金、白银、黑铁等名称：<font color="orange">荷马笔下的世界带给他很大的矛盾，一方面是光辉灿烂，另一方面却是阴森恐怖、暴行肆虐</font>，而他解决这矛盾的手段无非是把同一个时代一分为二，而后按照先后次序加以排列——是攻打特洛伊和忒拜的英雄与半神的时代，它埋藏在贵族们的记忆之中，他们的祖先就生活在那个时代；然后就是黑铁时代，同样的世界对于那些被践踏者、被掠夺者、被虐待者、被奴役者和被贩卖者的后代而言则是另外一番景象：那是一个黑铁时代，如前所述，艰难、冷酷、残忍、感情与良知泯灭，一切都被摧毁且沾满血污。<br>假设现在那些始终被当作“真理”而被相信的东西果如其然，假设所有文明的意义就在于，把“人”这个野兽驯化成温顺的、有教养的动物，即一种家畜的话，那么，人们就必须毫不迟疑地把所有<font color="orange">这些反应本能和怨恨本能看作文明真正的工具，正是在它们的帮助下，贵族及其理念才最终遭受耻辱并被征服；当然，这并不意味着，这种工具的拥有者同时也体现了文明本身。更确切地说，事实可能恰恰相反</font>——不！相反的事实如今已经显而易见！这些具有压迫和报复本能的人，这些欧洲和非欧洲的奴隶的后代，尤其是所有在雅利安人之前的居民的后代——他们都体现了人类的倒退！<font color="orange">这种“文明的工具”是人类的耻辱，更是针对“文明”的一种怀疑和反驳！</font>如果人们惧怕所有高贵种族内心深处的金发野兽，并且加以防备，那是完全有理由的：但是，如果人们同时也能看到，不惧怕则意味着再也无法避免看到一片失败者、卑躬屈膝者、萎靡颓废者、中毒者那令人恶心的景象的话，那么，谁不愿意千方百计地选择惧怕呢？难道这不正是我们的厄运吗？今天，是什么造成了我们对“人”的反感？——因为我们以人为患，而这是毋庸置疑的。——<font color="orange">并不是恐惧让我们反感；而是因为：我们在人那里丝毫没有可以感到惧怕的东西；蛆虫一样的“人”获得了显著的地位，并且蜂拥而来；“温驯的人”、不可救药的中庸者和令人讨厌的家伙，他们已经学会了把自己当成目的和首脑，当作历史的意义，当作“上等人”</font>；—— 他们这种感觉也有一定的道理，只要他们感到自己与那一大群失败者、病人、疲倦者、苟活者（现在的欧洲已经开始散发他们的臭气）存在着差别，所以他们感觉自己至少还是比较可取的，至少是具有生活能力的，至少是肯定生活的……</p></blockquote><h2 id="12-我们对人感到厌倦">12. 我们对人感到厌倦</h2><blockquote><p>在这里，我并不准备压抑我的叹息和最后的信心。究竟是什么东西让我根本无法忍受？那个我无法独自应付的、令我窒息和煎熬的东西？是污浊的空气，正是污浊的空气！某种失败的东西正在接近我；我不得不去闻嗅一个<font color="orange">失败的灵魂那腐败的内脏！</font>……除此以外，人们还有什么不能忍受的呢？苦难，贫困，恶劣的天气，久病不愈，艰辛，孤寂？一般而言，人是能够对付其余一切困难的，<font color="orange">人生来就是一种黑暗的、充满争斗的存在；人总是不断地接触到光亮，不断地经历那胜利的金色时光，——然后就停留在那儿，仿佛生来就坚不可摧，期待着，随时准备迎接新的、更困难的、很遥远的战斗，就像一张弓，任何困苦都只会让它绷得更紧</font>。——假设在善与恶的彼岸，真的有上天的赐福者存在，那就让我不时得到些恩惠，让我可以看上一眼，看到一些<font color="orange">完美的、圆满的、幸福的、强大的、胜利的，却又能引起恐惧和敬畏的东西！</font>让我可以看到为人类辩护的人，看到可以让人类得到完满和救赎的机遇，正是因为这个机遇的存在，人们还可以坚持对人类的信心！……<br>因为现实的情况却是：欧洲人的<font color="orange">渺小化和中庸化</font>正掩盖着我们最大的危机，因为终日看着这样的欧洲人真的使人厌倦。……<font color="orange">我们现在看不到任何试图变得伟大的东西；我们有预感，这种情况还会下滑，不断下滑，人们将变得更瘦削、更和善、更聪明、更愉快、更中庸、更麻木，更中国化、更基督教化。——毋庸置疑，人们会越来越“好”</font>……这正是欧洲的劫难——<font color="red">在我们结束了对人的恐惧的同时，我们也失去了对人的爱，对人的敬畏，对人的期待，我们对人不再抱有任何意图。从此之后，看到人只会厌倦。——如果这还不是今天的虚无主义，那还有什么是呢？</font>……我们对人感到厌倦……</p></blockquote><h2 id="13-把软弱解释为自由，把软弱的种种表现解释为功绩">13. 把软弱解释为自由，把软弱的种种表现解释为功绩</h2><blockquote><p>我们还是言归正传：“善”的另外一个起源的问题，即<font color="orange">怀有怨恨的人如何设想出“善”的起源问题</font>，该问题需要有一个结论。——羔羊怨恨大的猛禽，这并不奇怪：只不过，怪罪大的猛禽不该捕食小的羔羊，却是没有道理的。如果羔羊们私下说：“这些猛禽是邪恶的；如果有人尽可能不去充当猛禽，而是更多地成为与其对立的羔羊，——这样的人难道不是更好吗？”那么，对这一理想的建立确实没有任何可以指摘之处，尽管猛禽会对此投来讥讽的眼光，或许还会自言自语道：“我们一点儿也不怨恨这些善良的羔羊，我们甚至爱他们：没有什么能比一只细嫩的羔羊更可口了。”——<font color="orange">要求强者不要表现为强者，要求他们没有征服欲望、战胜欲望、统治欲望，不渴求敌人、反抗和胜利，这就如同要求弱者表现为强者一样的荒谬。一定量的力就意味着同等量的欲求、意志和作为</font>——更确切地说，力无非就是这些欲求、意志和作为本身而已；只是在语言（以及蕴藏于语言之中的、僵化的、根本性的理性错误）的错误诱导下，即语言把所有作为都理解和误解为受到一个有所作为的事物、一个Subjekt的制约时，力才会具有其他表现形式。这恰恰就像民众把闪电和闪电的光亮分开，并把后者当作某个名叫闪电的Subjekt的行动和作为一样，<font color="orange">民众道德也把强大同其表现形式分离开来，就好像在强者后面还有一个中立的基础，而强大是否表现出来完全由这个基础来决定。然而，并不存在这样的基础</font>；在行动、作为、过程的背后并没有任何“存在”；<font color="orange">给行动附加一个“行动者”纯粹是臆造出来的——行动就是一切</font>。民众让闪电闪光，这从根本上而言是重复的行动，是一个行动—行动：<font color="orange">这是把同一个事件先设定为原因，而后再把它设定为结果</font>。自然研究者也不比一般民众好多少，他们说“力在运动中，力是原因”及类似的话——我们全部的科学，虽然非常冷静，没有情绪的干扰，却仍然受到语言的误导，没有摆脱掉强加在它们身上的那个怪胎，即Subjekte（例如，原子就是这样的一个怪胎，类似的还有康德的“物自体”）：不足为怪，<font color="orange">那些被压抑的、阴暗中闪烁着报复和仇恨火花的情绪充分利用了这一信念，甚至在心底里异常热烈地坚持这个信念，即让强者自由选择变为弱者，让猛禽自由选择成为羔羊：——这样，他们就赢得了把自己算作猛禽、让自己成为猛禽的权利</font>……<br>被压迫者、被践踏者、被强奸者出于无能者的复仇阴谋的考虑而私下说：“让我们不同于恶人，让我们成为善人！善人就是所有不施暴强奸的人，不伤害他人的人，不攻击别人、不报复别人、而把复仇的事交给上帝决定的人，他们就像我们隐藏自己，避开一切邪恶，不贪图享受，像我们一样忍耐、谦恭和正直。”——如果冷静而不带先入之见地仔细倾听这样的话语，这段话实际上无非是说：“<font color="orange">我们弱者确实是软弱；只要我们不做任何能够暴露出我们在这个方面还不够强大的事，这就是善。</font>”——但是，这一糟糕的事实，这种就连昆虫都有的低级智慧（昆虫在遇到大的危险时就可能会装死，以免行动“过多”），却<font color="orange">通过无能的作伪和自欺，给自己披上了道德的华丽外衣，忍让着、平静着、静候着，就好像弱者的软弱本身——这就是他的本质</font>，他的作为，他的全部的、唯一的、必然的、不可代替的真实性——就是一种自发的功能，是某种自我要求的、自我选择的东西，是一种行动，一种功绩。<font color="orange">这种人从一种自我保持、自我肯定的本能出发，习惯于将一切谎言神圣化，他们就必然相信那个中立的、供自由选择的Subjekt的存在。而这个Subjekt （或者我们通俗地称它为灵魂）或许因此是地球上迄今为止最好的信条</font>，因为它是绝大多数终有一死的人、所有类型的弱者和被压迫者都能够相信的那种<font color="red">精心编造的自我欺骗，即把软弱解释为自由，把软弱的种种表现解释为功绩。</font></p></blockquote><h2 id="14-制造理想的作坊，散布着谎言的臭气">14. 制造理想的作坊，散布着谎言的臭气</h2><blockquote><p>——有谁愿意探幽寻秘，看看地球上的理想是怎样制造出来的？谁有勇气做这件事？……那就开始吧！从这里可以窥见这个阴暗的作坊内部。请您稍候片刻，我的冒失大胆先生：您的眼睛首先必须习惯于这里变幻无常的虚假光线……好了！已经看够了！现在请您告诉我！那下面到底发生了什么事？您这个拥有最危险的好奇心的男子，请您说出您看到的东西——现在轮到我仔细听了。<br>——“我没有看见任何东西，我听到的却很多。从每个角落都传来小心翼翼的、阴险奸诈的窃窃私语。在我看来，这些人似乎在说谎；而每个声音却像蜜糖一般的温柔。他们说，软弱应当被解释为功绩，这一点毫无疑问——您之前说的对，情况就是这样。”<br>——请继续说！<br>——“还应当把不求报复的软弱无能解释为‘善良’；把怯懦的低贱解释为‘谦卑’；把向仇恨对象屈服解释为‘顺从’（也就是服从于他们所说的那唯一的一个，他命令他们屈服，——他们称他为上帝）。弱者的非侵略性，也就是他从不缺乏的胆怯，他倚门而立的态度，他无可奈何的等待，在这里获得了‘忍耐’的好名声，它还很有可能被称为美德；没有报仇的能力变成了没有报仇的意愿，或许甚至还可以被称为宽恕（‘因为他们不知道自己所做的是什么——只有我们知道他们所做的是什么！’），人们还说‘要爱他的仇敌’，——边说还边流汗。”<br>——请继续说！<br>——“毋庸置疑，所有这些窃窃私语者和躲在角落的谎言制造者，他们是困苦的，尽量他们蹲在一起互相温暖——但他们却对我说，他们的苦难乃是上帝的一种选择和嘉奖，这就像主人喜欢打自己最爱的狗一样；苦难或许还是一种准备、一种考验、一种训练，也许还意味着更多的东西——那将是一种补偿，并且用黄金，不！是用幸福作为巨额利息来支付的东西。他们称之为‘极乐世界里的幸福’。”<br>——请继续说！<br>——“他们试图让我明白，他们不仅仅优于那些权势者，即那些尘世的主人，他们不得不舔舐这些主人的唾液（不是因为恐惧，绝对不是因为恐惧！而是因为这是上帝的旨意，尊敬所有在上有权柄的）——他们不仅仅比这些人好，而且‘还有更好的命运’，不管怎样都将会拥有更好的境遇。但是，够了！够了！我已经不能再忍受下去了。污浊的空气！污浊的空气！<font color="red">这些制造理想的作坊——我觉得，它完全散布着谎言的臭气。</font>”<br>——不！稍等一下！ 您还没有说到这些黑暗魔术师的杰作，他们能从任何一种黑色中制造出白色、牛奶和无辜：——您难道没有注意到，他们所完成的精巧无缺的把戏到底是什么？他们那些最大胆、最细致、最富创造力、也充斥了最多的谎言的魔术手法到底是什么？请您注意！这些满怀报复欲望与仇恨的地下生物——他们出于报复和仇恨心理究竟会干什么？您听到他们的话语了吗？假如您只是听他们的谈话，您能料到你完全是在一群充满怨恨的人当中吗？<br>——“我明白，我再一次竖起耳朵仔细听（对了！对了！对了！我还应当屏住呼吸）。现在我终于听到了他们经常唠叨的一句话：‘我们是好人——我们是正义的’。——他们不把自己所欲求的东西叫做报仇，而叫做‘正义的胜利’；他们所仇恨的对象不是他们的敌人，不！他们仇恨的是‘不义’和‘不信上帝’；他们所信仰的和期望的，不是复仇和复仇所带来的甜蜜的陶醉（荷马就曾说复仇“比蜜还甜”），而是上帝的胜利，是正义的上帝对不信上帝的人的胜利；他们在这个地球上还值得热爱的人，不是他们那些满怀仇恨的兄弟，而是他们所说的‘满怀爱心的兄弟’，是地球上一切的善人和正义的人。”<br>——他们如何称呼那个给他们慰藉以对抗一切生活苦难的东西——也就是那个他们预先认定的关于“极乐世界里的幸福”的幻象（Phantasmagorie）呢？<br>——“什么？我没听错吧？他们竟然称之为‘末日的审判’，他们的王国，即“天国”将降临——但是，在那一天到来之前，他们将暂时生活在‘信’，‘爱’和‘望’之中。”<br>——够了！我受够了！</p></blockquote><h2 id="15-这些弱者——也想有朝一日成为强者">15. 这些弱者——也想有朝一日成为强者</h2><blockquote><p><font color="orange">信仰什么？爱什么？盼望什么？</font>——毋庸置疑，<font color="red">这些弱者——也想有朝一日成为强者</font>，有朝一日迎来他们的“天国”——对他们来说，“天国”就是所谓的：<font color="orange">人在所有情况下都保持谦卑！</font>为了去迎接这样的天国，人就必须活得很长，超越死亡，——是的，<font color="orange">人必须获得永生</font>，以便能永久地在“上帝的天国”里使自己那种“在信、爱、望中”的尘世生活<font color="orange">得到补偿。补偿什么？怎么补偿？</font>……<br>但我觉得，但丁犯了一个很糟糕的错误，他以一种令人恐惧的坦率，在通往他的地狱大门上放上了一句铭文：“还有永恒的爱也将我造就”：——那么，在通往基督教天国以及“天国里的永恒幸福”的大门上，无论如何都更有理由刻上这句铭文：“还有永恒的恨也将我造就”——假如在通往谎言的大门上也允许有真理存在的话！因为，那天国里的永恒幸福到底是什么呢？……我们或许已经猜出答案了；但是更好的做法是，让一位在这种事情上无人可以低估的权威来明确地为我们证明这个答案，这人就是托马斯·阿奎那，伟大的导师和圣人。他像羔羊一般温柔地说：“Beati in regno coelesti videbunt poenas damnatorum，ut beatitudo illis magis complaceat。(<font color="orange">天国有福者必见恶人受刑，更得福乐</font>)”幸福总比受罚更能给人以更大的快乐，<font color="orange">在天国里人们同样会因为亲眼看见恶人受罚而感到快乐</font>。”<br>人们或许还愿意听到一个强硬的声音对此的回答，它应该出自一位成功的早期基督教教父之口，他劝他的教民们弃绝公演戏剧的纵欲放荡。为什么呢？他在《论戏剧》第29章及30章中说：“信仰能够给我们更多、更强大的东西，远超我们所需；上帝的拯救使得我们拥有了完全不同的愉悦；想看角斗士，我们有殉教者作为替代；还要看流血的事吗？这里有基督的事迹。……！然而胜利凯旋的主再次来临，又将是何等场面！”——这位<font color="orange">令人着迷的幻想家</font>继续说道：<font color="gray">“At enim supersunt alia spectacula，tille ultimus et perpetuus judicii dies，ille nationibus insperatus，ille derisus，cum tanta saeculi vetustas et tot ejus nativitates uno igne haurientur. Quae tunc spectaculi latitudo！ Quid admirer！ Quid rideam！ Ubi gaudeam！ Ubi exultem，spectans tot et tantos reges，qui in coelum recepti nuntiabantur，cum ipso Jove et ipsis suis testibus in imis tenebris congemescentes！ Item praesides （die Provinzialstatthalter） persecutores dominici nominis saevioribus quam ipsi flammis saevierunt insultantibus contra Christianos liquescentes！ Quos praeterea sapientes illos philosophos coram discipulis suis una conflagrantibus erubescentes，quibus nihil ad deum pertinere suadebant，quibus animas aut nullas aut non in pristina corpora redituras affirmabant！ Etiam poëtàs non ad Rhadamanti nec ad Minois，sed ad inopinati Christi tribunal palpitantes！ Tunc magis tragoedi audiendi，magis scilicet［285］vocales （besser bei Stimme，noch ärgere Schreier） in sua propria calamitate；tunc histriones cognoscendi，solutiores multo per ignem；tunc spectandus auriga in flammea rota totus rubens，tunc xystici contemplandi non in gymnasiis，sed in igne jaculati，nisi quod ne tunc quidem illos velim vivos，ut qui malim ad eos potius conspectum insatiabilem conferre，qui in dominum desaevierunt. “Hic est ille，dicam，fabri aut quaestuariae filius （wie alles Folgende und insbesondere auch diese aus dem Talmud bekannte Bezeichnung der Mutter Jesu zeigt，meint Tertullian von hier ab die Juden），sabbati destructor，Samarites et daemonium habens. Hic est，quem a Juda redemistis，hic est ille arundine et colaphis diverberatus，sputamentis dedecoratus，felle et aceto potatus. Hic est，quem clam discentes subripuerunt，ut resurrexisse dicatur vel hortulanus detraxit，ne lactucae suae frequentia commeantium laederentur.” Ut talia spectes，ut talibus exultes，quis tibi praetor aut consul aut quaestor aut sacerdos de sua liberalitate praestabit？Et tamen haec jam habemus quodammodo per fidem spiritu imaginante repraesentata. Ceterum qualia illa sunt，quae nec oculus vidit nec auris audivit nec in cor hominis ascenderunt？（I. Cor. 2，9.） Credo circo et utraque cavea （erster und vierter Rang oder，nach Anderen，komische und tragische Bühne） et omni stadio gratiora.”——Per fidem：原文就是这样写的。</font></p></blockquote><h2 id="16-罗马无疑被打败了">16. 罗马无疑被打败了</h2><blockquote><p>现在我们进行总结。“好与坏”、“善与恶”这两个对立的价值观千余年来已经在地球上进行了非常可怕的斗争；尽管第二种价值观长期以来占据上风，但这场斗争在很多方面仍未分出胜负，仍在继续斗争。人们甚至可以说，这场斗争在此期间不断升级，同时也因此越来越深入，越来越具有精神的内容：以至于在“更高的本质”，即更具精神内涵的本质方面，现在或许最具决定性的特征反而是，双方在其含义上各执一词，使得这种对立又多了一个真正的战场。这场斗争的象征贯穿了全部人类历史，至今仍然清晰可辨，那就是“<font color="red">罗马反对犹太，犹太反对罗马</font>”：——迄今为止，还没有出现过比这场斗争、这个问题、这种不共戴天的敌对矛盾更大的事件。<br><font color="orange">罗马方面觉得犹太人本身就是违反天性的化身，是反常的怪物；在罗马，犹太人“被定罪是由于他们对人类的憎恨”</font>：因此，就此而言，人们有权利把人类的福祉和未来与贵族的价值观、罗马价值观的绝对统治联系在一起。相反，犹太人是如何看待罗马的呢？人们可以从上千种迹象中总结出结论；但是如果人们能够饶有兴趣地再读一遍圣经中的《约翰启示录》就已经足够了，那是文字史上报复欲对良知的最偏执狂热的发泄。（顺便说一下，人们不要小看了基督教本能上的深刻逻辑性，正是这一本能让人们用基督所钟爱的门徒的名字既为这篇仇恨之书命名，同时也为那篇充满爱心与狂热的福音书命名——：不管为了报复的目的而使用了多少文学上的矫饰与虚构，这其中都隐藏了一部分的真相。）罗马人是强壮和高贵的，迄今为止在地球上还从未有过比罗马人更强壮和更高贵的民族，其他民族甚至都没有过这样的梦想；罗马人的每一处遗迹、每一个铭文都是迷人的，如果人们能猜出其中含义的话。反之，<font color="orange">犹太人完全就是那种充满怨恨的祭司民族，他们具有一种无与伦比的民俗的—道德的天赋</font>：人们只需将中国人或德国人这些具有相似天赋的民族与犹太人相比较，就可以感受到什么是第一流的，什么是第五流的。<br>罗马和犹太，它们之中谁取得了暂时的胜利？这是毫无疑问的：人们可以仔细思考一下，在今天的罗马，人们把谁当作所有最高价值的化身，向其鞠躬礼拜——不仅在罗马，而且在几乎半个地球上，在所有人已被驯化，或者愿意被驯化的地方，——众所周知，人们要向三个犹太男人和一个犹太女人鞠躬（拿撒勒的耶稣、渔夫彼得、帐篷制作工保罗和最初被称为耶稣的那个人母亲，玛丽亚）。非常引人注意的是，<font color="orange">罗马无疑被打败了</font>。不过，在文艺复兴时期，古典主义的理想和衡量一切的高贵的价值方式都经历了一次光辉灿烂、影响巨大的复苏：甚至罗马也像一个从假死状态中苏醒过来的人一样，在那座在古罗马基础上新建的、犹太式的罗马城下面蠢动起来，那座新罗马俨然是一座世界性的犹太教堂，它被称为“教会”：但是很快，犹太又一次高奏凯歌了，这要归功于那场彻头彻尾的群氓的怨恨运动，人们称其为（德国人和英国人）的宗教改革。该运动的必然结果是，教会得到重建，——而古罗马再次被送进宁静的古墓之中。而伴随着法国大革命，犹太人再次从一个更具决定性的、更深刻的意义上获得了对古典理想的胜利：欧洲史上最后的政治高贵性，盛行于十七和十八世纪的法国政治精神，<font color="orange">终于在民众的怨恨本能下土崩瓦解</font>，——人们听见了地球上从未有过的无比热烈的喝彩、无比喧嚣的欢呼！虽然在这个时期也出现了最为惊人、最出乎预料的事情：古典理想竟然以肉身的方式，带着罕见的壮丽出现在人类的眼前和良知之中，——<font color="orange">它比以往更强大、更简单、也更显著，它大声疾呼反对怨恨者那个古老陈旧的欺骗口号“多数人享有特权”，它反对人类的底层意志、反对自贬意志，反对平均意志、反对堕落和老化的意志，再一次喊出了既可怕又迷人的反对口号：“少数人享有特权！”</font>拿破仑的出现，犹如指向另外一条道路的最后一块路标，他是那个时代最孤独的人，是出生太晚、生不逢时的人。自在自为的高贵理想问题已经化作拿破仑的肉身——人们或许应当想一想，这是个什么样的问题：拿破仑，这个非人和超人的综合体……</p></blockquote><h2 id="17-解决价值的难题，确定各种价值的等级">17. 解决价值的难题，确定各种价值的等级</h2><blockquote><p>到此就结束了吗？<font color="orange">那个所有理想对立中最伟大的对立就这样被永久地搁置起来了吗？</font>或者仅仅被推迟了、遥遥无期地推迟了？……<font color="orange">难道它有朝一日不会变成一场更加可怕、经久积蓄的熊熊大火吗？不仅如此：这难道不是各种力量所希望的吗？所甘愿的吗？所促进的吗？</font>……如同我的读者们一样，谁在此处开始思考并继续思考下去，谁就很难立即停下来，——而对我而言，这正是让我自己结束思考的充分理由，前提是，我所希求的，我用那句危险的口号所希求的早就已经足够清楚，那句口号十分适合我的上一本书：《善恶的彼岸》……它的名字至少不叫《好坏的彼岸》——附注：我利用这篇论文给我提供的机会，公开并正式地表达我迄今只是偶尔在与学者们交谈时所表达的一个愿望：如果某个哲学系有意通过一系列学术有奖征文比赛来推动道德的—历史的研究的话——那么，本书或许能在这个方面起到有力的促进作用。关于这种方式的可能性，我提出下面这个问题，它不仅对语文学者和历史学者，而且对真正以哲学学者为职业的人，都是十分值得注意和重视的：“语言学，尤其是语源学的研究，将会为道德概念的发展史给出怎样的提示？”<br>在另一个方面，争取生理学家和医学家参与这些问题的研究（关于迄今为止所有的价值评判的价值），当然是同样必要的：还可以委托专业哲人在这个具体的情况中担任代言人和协调者，只要他们能够在总体上成功地使哲学、生理学和医学之间那种原本十分难以处理并极易引起误会的关系，变成最为友好、最富成果的交流。事实上，历史和人种学研究所熟知的所有关于“诸好”的排名榜单，所有“你应当”的律条，首先需要生理学的说明和诠释，至少是在心理学的说明与诠释之前；它们同样还要等待来自医学方面的批判。这种或那种关于“好”的排名榜单以及“道德”的价值到底是什么？这个问题，应当从各个不同的角度来加以提出；特别是人们不可能十分精细地分析所谓“价值何为”（werth wozu？）的问题。例如，某种东西在涉及一个种族的最大可能的延续方面（或者在提高其对某一特定气候的适应能力方面，或者在尽可能保持种族最大数量方面）具有可见的价值，而它与那种能够培养一个更强大的种族的东西或许无论如何都不具有相同的价值。<font color="orange">大多数人的福祉与少数人的福祉是两种互相对立的价值观；认为第一种价值观天然就具有更高的价值的观点，我们将其称为英国生物学家的天真</font>……现在所有科学都需要为哲人未来的使命做好准备工作：而哲人的使命就是，<font color="orange">他们必须解决价值的难题，必须确定各种价值的等级。</font></p></blockquote><hr><p>[x]所代表的是原文的单词，和理解本文思想无关，反正也看不懂</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-17</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-17/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-17/</url>
      
        <content type="html"><![CDATA[<blockquote><p>到此就结束了吗？<font color="orange">那个所有理想对立中最伟大的对立就这样被永久地搁置起来了吗？</font>或者仅仅被推迟了、遥遥无期地推迟了？……<font color="orange">难道它有朝一日不会变成一场更加可怕、经久积蓄的熊熊大火吗？不仅如此：这难道不是各种力量所希望的吗？所甘愿的吗？所促进的吗？</font>……如同我的读者们一样，谁在此处开始思考并继续思考下去，谁就很难立即停下来，——而对我而言，这正是让我自己结束思考的充分理由，前提是，我所希求的，我用那句危险的口号所希求的早就已经足够清楚，那句口号十分适合我的上一本书：《善恶的彼岸》……它的名字至少不叫《好坏的彼岸》——附注：我利用这篇论文给我提供的机会，公开并正式地表达我迄今只是偶尔在与学者们交谈时所表达的一个愿望：如果某个哲学系有意通过一系列学术有奖征文比赛来推动道德的—历史的研究的话——那么，本书或许能在这个方面起到有力的促进作用。关于这种方式的可能性，我提出下面这个问题，它不仅对语文学者和历史学者，而且对真正以哲学学者为职业的人，都是十分值得注意和重视的：“语言学，尤其是语源学的研究，将会为道德概念的发展史给出怎样的提示？”<br>在另一个方面，争取生理学家和医学家参与这些问题的研究（关于迄今为止所有的价值评判的价值），当然是同样必要的：还可以委托专业哲人在这个具体的情况中担任代言人和协调者，只要他们能够在总体上成功地使哲学、生理学和医学之间那种原本十分难以处理并极易引起误会的关系，变成最为友好、最富成果的交流。事实上，历史和人种学研究所熟知的所有关于“诸好”的排名榜单，所有“你应当”的律条，首先需要生理学的说明和诠释，至少是在心理学的说明与诠释之前；它们同样还要等待来自医学方面的批判。这种或那种关于“好”的排名榜单以及“道德”的价值到底是什么？这个问题，应当从各个不同的角度来加以提出；特别是人们不可能十分精细地分析所谓“价值何为”（werth wozu？）的问题。例如，某种东西在涉及一个种族的最大可能的延续方面（或者在提高其对某一特定气候的适应能力方面，或者在尽可能保持种族最大数量方面）具有可见的价值，而它与那种能够培养一个更强大的种族的东西或许无论如何都不具有相同的价值。<font color="orange">大多数人的福祉与少数人的福祉是两种互相对立的价值观；认为第一种价值观天然就具有更高的价值的观点，我们将其称为英国生物学家的天真</font>……现在所有科学都需要为哲人未来的使命做好准备工作：而哲人的使命就是，<font color="orange">他们必须解决价值的难题，必须确定各种价值的等级。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-16</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-16/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-16/</url>
      
        <content type="html"><![CDATA[<blockquote><p>现在我们进行总结。“好与坏”、“善与恶”这两个对立的价值观千余年来已经在地球上进行了非常可怕的斗争；尽管第二种价值观长期以来占据上风，但这场斗争在很多方面仍未分出胜负，仍在继续斗争。人们甚至可以说，这场斗争在此期间不断升级，同时也因此越来越深入，越来越具有精神的内容：以至于在“更高的本质”，即更具精神内涵的本质方面，现在或许最具决定性的特征反而是，双方在其含义上各执一词，使得这种对立又多了一个真正的战场。这场斗争的象征贯穿了全部人类历史，至今仍然清晰可辨，那就是“<font color="red">罗马反对犹太，犹太反对罗马</font>”：——迄今为止，还没有出现过比这场斗争、这个问题、这种不共戴天的敌对矛盾更大的事件。<br><font color="orange">罗马方面觉得犹太人本身就是违反天性的化身，是反常的怪物；在罗马，犹太人“被定罪是由于他们对人类的憎恨”</font>：因此，就此而言，人们有权利把人类的福祉和未来与贵族的价值观、罗马价值观的绝对统治联系在一起。相反，犹太人是如何看待罗马的呢？人们可以从上千种迹象中总结出结论；但是如果人们能够饶有兴趣地再读一遍圣经中的《约翰启示录》就已经足够了，那是文字史上报复欲对良知的最偏执狂热的发泄。（顺便说一下，人们不要小看了基督教本能上的深刻逻辑性，正是这一本能让人们用基督所钟爱的门徒的名字既为这篇仇恨之书命名，同时也为那篇充满爱心与狂热的福音书命名——：不管为了报复的目的而使用了多少文学上的矫饰与虚构，这其中都隐藏了一部分的真相。）罗马人是强壮和高贵的，迄今为止在地球上还从未有过比罗马人更强壮和更高贵的民族，其他民族甚至都没有过这样的梦想；罗马人的每一处遗迹、每一个铭文都是迷人的，如果人们能猜出其中含义的话。反之，<font color="orange">犹太人完全就是那种充满怨恨的祭司民族，他们具有一种无与伦比的民俗的—道德的天赋</font>：人们只需将中国人或德国人这些具有相似天赋的民族与犹太人相比较，就可以感受到什么是第一流的，什么是第五流的。<br>罗马和犹太，它们之中谁取得了暂时的胜利？这是毫无疑问的：人们可以仔细思考一下，在今天的罗马，人们把谁当作所有最高价值的化身，向其鞠躬礼拜——不仅在罗马，而且在几乎半个地球上，在所有人已被驯化，或者愿意被驯化的地方，——众所周知，人们要向三个犹太男人和一个犹太女人鞠躬（拿撒勒的耶稣、渔夫彼得、帐篷制作工保罗和最初被称为耶稣的那个人母亲，玛丽亚）。非常引人注意的是，<font color="orange">罗马无疑被打败了</font>。不过，在文艺复兴时期，古典主义的理想和衡量一切的高贵的价值方式都经历了一次光辉灿烂、影响巨大的复苏：甚至罗马也像一个从假死状态中苏醒过来的人一样，在那座在古罗马基础上新建的、犹太式的罗马城下面蠢动起来，那座新罗马俨然是一座世界性的犹太教堂，它被称为“教会”：但是很快，犹太又一次高奏凯歌了，这要归功于那场彻头彻尾的群氓的怨恨运动，人们称其为（德国人和英国人）的宗教改革。该运动的必然结果是，教会得到重建，——而古罗马再次被送进宁静的古墓之中。而伴随着法国大革命，犹太人再次从一个更具决定性的、更深刻的意义上获得了对古典理想的胜利：欧洲史上最后的政治高贵性，盛行于十七和十八世纪的法国政治精神，<font color="orange">终于在民众的怨恨本能下土崩瓦解</font>，——人们听见了地球上从未有过的无比热烈的喝彩、无比喧嚣的欢呼！虽然在这个时期也出现了最为惊人、最出乎预料的事情：古典理想竟然以肉身的方式，带着罕见的壮丽出现在人类的眼前和良知之中，——<font color="orange">它比以往更强大、更简单、也更显著，它大声疾呼反对怨恨者那个古老陈旧的欺骗口号“多数人享有特权”，它反对人类的底层意志、反对自贬意志，反对平均意志、反对堕落和老化的意志，再一次喊出了既可怕又迷人的反对口号：“少数人享有特权！”</font>拿破仑的出现，犹如指向另外一条道路的最后一块路标，他是那个时代最孤独的人，是出生太晚、生不逢时的人。自在自为的高贵理想问题已经化作拿破仑的肉身——人们或许应当想一想，这是个什么样的问题：拿破仑，这个非人和超人的综合体……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-15</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-15/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-15/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="orange">信仰什么？爱什么？盼望什么？</font>——毋庸置疑，<font color="red">这些弱者——也想有朝一日成为强者</font>，有朝一日迎来他们的“天国”——对他们来说，“天国”就是所谓的：<font color="orange">人在所有情况下都保持谦卑！</font>为了去迎接这样的天国，人就必须活得很长，超越死亡，——是的，<font color="orange">人必须获得永生</font>，以便能永久地在“上帝的天国”里使自己那种“在信、爱、望中”的尘世生活<font color="orange">得到补偿。补偿什么？怎么补偿？</font>……<br>但我觉得，但丁犯了一个很糟糕的错误，他以一种令人恐惧的坦率，在通往他的地狱大门上放上了一句铭文：“还有永恒的爱也将我造就”：——那么，在通往基督教天国以及“天国里的永恒幸福”的大门上，无论如何都更有理由刻上这句铭文：“还有永恒的恨也将我造就”——假如在通往谎言的大门上也允许有真理存在的话！因为，那天国里的永恒幸福到底是什么呢？……我们或许已经猜出答案了；但是更好的做法是，让一位在这种事情上无人可以低估的权威来明确地为我们证明这个答案，这人就是托马斯·阿奎那，伟大的导师和圣人。他像羔羊一般温柔地说：“Beati in regno coelesti videbunt poenas damnatorum，ut beatitudo illis magis complaceat。(<font color="orange">天国有福者必见恶人受刑，更得福乐</font>)”幸福总比受罚更能给人以更大的快乐，<font color="orange">在天国里人们同样会因为亲眼看见恶人受罚而感到快乐</font>。”<br>人们或许还愿意听到一个强硬的声音对此的回答，它应该出自一位成功的早期基督教教父之口，他劝他的教民们弃绝公演戏剧的纵欲放荡。为什么呢？他在《论戏剧》第29章及30章中说：“信仰能够给我们更多、更强大的东西，远超我们所需；上帝的拯救使得我们拥有了完全不同的愉悦；想看角斗士，我们有殉教者作为替代；还要看流血的事吗？这里有基督的事迹。……！然而胜利凯旋的主再次来临，又将是何等场面！”——这位<font color="orange">令人着迷的幻想家</font>继续说道：<font color="gray">“At enim supersunt alia spectacula，tille ultimus et perpetuus judicii dies，ille nationibus insperatus，ille derisus，cum tanta saeculi vetustas et tot ejus nativitates uno igne haurientur. Quae tunc spectaculi latitudo！ Quid admirer！ Quid rideam！ Ubi gaudeam！ Ubi exultem，spectans tot et tantos reges，qui in coelum recepti nuntiabantur，cum ipso Jove et ipsis suis testibus in imis tenebris congemescentes！ Item praesides （die Provinzialstatthalter） persecutores dominici nominis saevioribus quam ipsi flammis saevierunt insultantibus contra Christianos liquescentes！ Quos praeterea sapientes illos philosophos coram discipulis suis una conflagrantibus erubescentes，quibus nihil ad deum pertinere suadebant，quibus animas aut nullas aut non in pristina corpora redituras affirmabant！ Etiam poëtàs non ad Rhadamanti nec ad Minois，sed ad inopinati Christi tribunal palpitantes！ Tunc magis tragoedi audiendi，magis scilicet［285］vocales （besser bei Stimme，noch ärgere Schreier） in sua propria calamitate；tunc histriones cognoscendi，solutiores multo per ignem；tunc spectandus auriga in flammea rota totus rubens，tunc xystici contemplandi non in gymnasiis，sed in igne jaculati，nisi quod ne tunc quidem illos velim vivos，ut qui malim ad eos potius conspectum insatiabilem conferre，qui in dominum desaevierunt. “Hic est ille，dicam，fabri aut quaestuariae filius （wie alles Folgende und insbesondere auch diese aus dem Talmud bekannte Bezeichnung der Mutter Jesu zeigt，meint Tertullian von hier ab die Juden），sabbati destructor，Samarites et daemonium habens. Hic est，quem a Juda redemistis，hic est ille arundine et colaphis diverberatus，sputamentis dedecoratus，felle et aceto potatus. Hic est，quem clam discentes subripuerunt，ut resurrexisse dicatur vel hortulanus detraxit，ne lactucae suae frequentia commeantium laederentur.” Ut talia spectes，ut talibus exultes，quis tibi praetor aut consul aut quaestor aut sacerdos de sua liberalitate praestabit？Et tamen haec jam habemus quodammodo per fidem spiritu imaginante repraesentata. Ceterum qualia illa sunt，quae nec oculus vidit nec auris audivit nec in cor hominis ascenderunt？（I. Cor. 2，9.） Credo circo et utraque cavea （erster und vierter Rang oder，nach Anderen，komische und tragische Bühne） et omni stadio gratiora.”——Per fidem：原文就是这样写的。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-14</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-14/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-14/</url>
      
        <content type="html"><![CDATA[<blockquote><p>——有谁愿意探幽寻秘，看看地球上的理想是怎样制造出来的？谁有勇气做这件事？……那就开始吧！从这里可以窥见这个阴暗的作坊内部。请您稍候片刻，我的冒失大胆先生：您的眼睛首先必须习惯于这里变幻无常的虚假光线……好了！已经看够了！现在请您告诉我！那下面到底发生了什么事？您这个拥有最危险的好奇心的男子，请您说出您看到的东西——现在轮到我仔细听了。<br>——“我没有看见任何东西，我听到的却很多。从每个角落都传来小心翼翼的、阴险奸诈的窃窃私语。在我看来，这些人似乎在说谎；而每个声音却像蜜糖一般的温柔。他们说，软弱应当被解释为功绩，这一点毫无疑问——您之前说的对，情况就是这样。”<br>——请继续说！<br>——“还应当把不求报复的软弱无能解释为‘善良’；把怯懦的低贱解释为‘谦卑’；把向仇恨对象屈服解释为‘顺从’（也就是服从于他们所说的那唯一的一个，他命令他们屈服，——他们称他为上帝）。弱者的非侵略性，也就是他从不缺乏的胆怯，他倚门而立的态度，他无可奈何的等待，在这里获得了‘忍耐’的好名声，它还很有可能被称为美德；没有报仇的能力变成了没有报仇的意愿，或许甚至还可以被称为宽恕（‘因为他们不知道自己所做的是什么——只有我们知道他们所做的是什么！’），人们还说‘要爱他的仇敌’，——边说还边流汗。”<br>——请继续说！<br>——“毋庸置疑，所有这些窃窃私语者和躲在角落的谎言制造者，他们是困苦的，尽量他们蹲在一起互相温暖——但他们却对我说，他们的苦难乃是上帝的一种选择和嘉奖，这就像主人喜欢打自己最爱的狗一样；苦难或许还是一种准备、一种考验、一种训练，也许还意味着更多的东西——那将是一种补偿，并且用黄金，不！是用幸福作为巨额利息来支付的东西。他们称之为‘极乐世界里的幸福’。”<br>——请继续说！<br>——“他们试图让我明白，他们不仅仅优于那些权势者，即那些尘世的主人，他们不得不舔舐这些主人的唾液（不是因为恐惧，绝对不是因为恐惧！而是因为这是上帝的旨意，尊敬所有在上有权柄的）——他们不仅仅比这些人好，而且‘还有更好的命运’，不管怎样都将会拥有更好的境遇。但是，够了！够了！我已经不能再忍受下去了。污浊的空气！污浊的空气！<font color="red">这些制造理想的作坊——我觉得，它完全散布着谎言的臭气。</font>”<br>——不！稍等一下！ 您还没有说到这些黑暗魔术师的杰作，他们能从任何一种黑色中制造出白色、牛奶和无辜：——您难道没有注意到，他们所完成的精巧无缺的把戏到底是什么？他们那些最大胆、最细致、最富创造力、也充斥了最多的谎言的魔术手法到底是什么？请您注意！这些满怀报复欲望与仇恨的地下生物——他们出于报复和仇恨心理究竟会干什么？您听到他们的话语了吗？假如您只是听他们的谈话，您能料到你完全是在一群充满怨恨的人当中吗？<br>——“我明白，我再一次竖起耳朵仔细听（对了！对了！对了！我还应当屏住呼吸）。现在我终于听到了他们经常唠叨的一句话：‘我们是好人——我们是正义的’。——他们不把自己所欲求的东西叫做报仇，而叫做‘正义的胜利’；他们所仇恨的对象不是他们的敌人，不！他们仇恨的是‘不义’和‘不信上帝’；他们所信仰的和期望的，不是复仇和复仇所带来的甜蜜的陶醉（荷马就曾说复仇“比蜜还甜”），而是上帝的胜利，是正义的上帝对不信上帝的人的胜利；他们在这个地球上还值得热爱的人，不是他们那些满怀仇恨的兄弟，而是他们所说的‘满怀爱心的兄弟’，是地球上一切的善人和正义的人。”<br>——他们如何称呼那个给他们慰藉以对抗一切生活苦难的东西——也就是那个他们预先认定的关于“极乐世界里的幸福”的幻象（Phantasmagorie）呢？<br>——“什么？我没听错吧？他们竟然称之为‘末日的审判’，他们的王国，即“天国”将降临——但是，在那一天到来之前，他们将暂时生活在‘信’，‘爱’和‘望’之中。”<br>——够了！我受够了！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-13</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-13/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-13/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我们还是言归正传：“善”的另外一个起源的问题，即<font color="orange">怀有怨恨的人如何设想出“善”的起源问题</font>，该问题需要有一个结论。——羔羊怨恨大的猛禽，这并不奇怪：只不过，怪罪大的猛禽不该捕食小的羔羊，却是没有道理的。如果羔羊们私下说：“这些猛禽是邪恶的；如果有人尽可能不去充当猛禽，而是更多地成为与其对立的羔羊，——这样的人难道不是更好吗？”那么，对这一理想的建立确实没有任何可以指摘之处，尽管猛禽会对此投来讥讽的眼光，或许还会自言自语道：“我们一点儿也不怨恨这些善良的羔羊，我们甚至爱他们：没有什么能比一只细嫩的羔羊更可口了。”——<font color="orange">要求强者不要表现为强者，要求他们没有征服欲望、战胜欲望、统治欲望，不渴求敌人、反抗和胜利，这就如同要求弱者表现为强者一样的荒谬。一定量的力就意味着同等量的欲求、意志和作为</font>——更确切地说，力无非就是这些欲求、意志和作为本身而已；只是在语言（以及蕴藏于语言之中的、僵化的、根本性的理性错误）的错误诱导下，即语言把所有作为都理解和误解为受到一个有所作为的事物、一个Subjekt的制约时，力才会具有其他表现形式。这恰恰就像民众把闪电和闪电的光亮分开，并把后者当作某个名叫闪电的Subjekt的行动和作为一样，<font color="orange">民众道德也把强大同其表现形式分离开来，就好像在强者后面还有一个中立的基础，而强大是否表现出来完全由这个基础来决定。然而，并不存在这样的基础</font>；在行动、作为、过程的背后并没有任何“存在”；<font color="orange">给行动附加一个“行动者”纯粹是臆造出来的——行动就是一切</font>。民众让闪电闪光，这从根本上而言是重复的行动，是一个行动—行动：<font color="orange">这是把同一个事件先设定为原因，而后再把它设定为结果</font>。自然研究者也不比一般民众好多少，他们说“力在运动中，力是原因”及类似的话——我们全部的科学，虽然非常冷静，没有情绪的干扰，却仍然受到语言的误导，没有摆脱掉强加在它们身上的那个怪胎，即Subjekte（例如，原子就是这样的一个怪胎，类似的还有康德的“物自体”）：不足为怪，<font color="orange">那些被压抑的、阴暗中闪烁着报复和仇恨火花的情绪充分利用了这一信念，甚至在心底里异常热烈地坚持这个信念，即让强者自由选择变为弱者，让猛禽自由选择成为羔羊：——这样，他们就赢得了把自己算作猛禽、让自己成为猛禽的权利</font>……<br>被压迫者、被践踏者、被强奸者出于无能者的复仇阴谋的考虑而私下说：“让我们不同于恶人，让我们成为善人！善人就是所有不施暴强奸的人，不伤害他人的人，不攻击别人、不报复别人、而把复仇的事交给上帝决定的人，他们就像我们隐藏自己，避开一切邪恶，不贪图享受，像我们一样忍耐、谦恭和正直。”——如果冷静而不带先入之见地仔细倾听这样的话语，这段话实际上无非是说：“<font color="orange">我们弱者确实是软弱；只要我们不做任何能够暴露出我们在这个方面还不够强大的事，这就是善。</font>”——但是，这一糟糕的事实，这种就连昆虫都有的低级智慧（昆虫在遇到大的危险时就可能会装死，以免行动“过多”），却<font color="orange">通过无能的作伪和自欺，给自己披上了道德的华丽外衣，忍让着、平静着、静候着，就好像弱者的软弱本身——这就是他的本质</font>，他的作为，他的全部的、唯一的、必然的、不可代替的真实性——就是一种自发的功能，是某种自我要求的、自我选择的东西，是一种行动，一种功绩。<font color="orange">这种人从一种自我保持、自我肯定的本能出发，习惯于将一切谎言神圣化，他们就必然相信那个中立的、供自由选择的Subjekt的存在。而这个Subjekt （或者我们通俗地称它为灵魂）或许因此是地球上迄今为止最好的信条</font>，因为它是绝大多数终有一死的人、所有类型的弱者和被压迫者都能够相信的那种<font color="red">精心编造的自我欺骗，即把软弱解释为自由，把软弱的种种表现解释为功绩。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-12</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-12/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-12/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在这里，我并不准备压抑我的叹息和最后的信心。究竟是什么东西让我根本无法忍受？那个我无法独自应付的、令我窒息和煎熬的东西？是污浊的空气，正是污浊的空气！某种失败的东西正在接近我；我不得不去闻嗅一个<font color="orange">失败的灵魂那腐败的内脏！</font>……除此以外，人们还有什么不能忍受的呢？苦难，贫困，恶劣的天气，久病不愈，艰辛，孤寂？一般而言，人是能够对付其余一切困难的，<font color="orange">人生来就是一种黑暗的、充满争斗的存在；人总是不断地接触到光亮，不断地经历那胜利的金色时光，——然后就停留在那儿，仿佛生来就坚不可摧，期待着，随时准备迎接新的、更困难的、很遥远的战斗，就像一张弓，任何困苦都只会让它绷得更紧</font>。——假设在善与恶的彼岸，真的有上天的赐福者存在，那就让我不时得到些恩惠，让我可以看上一眼，看到一些<font color="orange">完美的、圆满的、幸福的、强大的、胜利的，却又能引起恐惧和敬畏的东西！</font>让我可以看到为人类辩护的人，看到可以让人类得到完满和救赎的机遇，正是因为这个机遇的存在，人们还可以坚持对人类的信心！……<br>因为现实的情况却是：欧洲人的<font color="orange">渺小化和中庸化</font>正掩盖着我们最大的危机，因为终日看着这样的欧洲人真的使人厌倦。……<font color="orange">我们现在看不到任何试图变得伟大的东西；我们有预感，这种情况还会下滑，不断下滑，人们将变得更瘦削、更和善、更聪明、更愉快、更中庸、更麻木，更中国化、更基督教化。——毋庸置疑，人们会越来越“好”</font>……这正是欧洲的劫难——<font color="red">在我们结束了对人的恐惧的同时，我们也失去了对人的爱，对人的敬畏，对人的期待，我们对人不再抱有任何意图。从此之后，看到人只会厌倦。——如果这还不是今天的虚无主义，那还有什么是呢？</font>……我们对人感到厌倦……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-11</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-11/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-11/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">高贵者的情况与此正好相反，他预先自发地从自身出发构想出“好”这一基本概念，然后才由此引申出一个关于“坏”的想象！这个起源于高贵的“坏”和那种来自于专门炮制无限仇恨的大锅的“恶”：前者只是一种模仿，是附带产生的东西，是一种补充色调，而后者却与此相反，它是本源，是起点，是奴隶道德构想中真正的行动</font>——“坏”与“恶”这两个表面上都是同一个概念“好”的反义词，但它们是多么不同啊！然而，<font color="red">事实上并不存在同一个“好”的概念</font>：人们更多地需要扪心自问，谁才是“邪恶”的，这里说的是怨恨道德意义上的“恶”。<br>最严格的回答是：就是<font color="orange">另外一种道德意义上的那些“好人”，高贵的人，有权势的人，统治者，只不过他们被怨恨的有毒眼睛改变了颜色、改变了含义、改变了外形</font>。我们在这里至少要否认一点：谁把那些“好人”只看作敌人，谁也就只会结识邪恶的敌人。同样是这些人：他们一方面受到风俗、信仰、习惯、感激情绪的限制，同时也更多地受到彼此之间的互相监视与嫉妒的严格限制；另一方面，他们在相互关系方面又表现出极大的相互体谅、自我克制、体贴、忠诚、自豪和友情，——<font color="orange">而一旦他们来到外面的世界，开始接触陌生的事物与陌生的环境时，他们不比脱笼的野兽好多少</font>。他们在那里享受摆脱了一切社会禁锢的自由，在野蛮状态中缓解自己因长期生活在和睦团体的封闭与禁锢中而形成的紧张心理，他们恢复了野兽的无辜心态，变成了幸灾乐祸的怪物，在犯下了一系列骇人听闻的凶杀、纵火、强奸、暴力之后，他们或许还会得意洋洋、心安理得地扬长而去，仿佛只是完成了一场大学生式的恶作剧而已，甚至还相信，在很长时间之内，诗人们也会因为他们的作为而又有了值得吟唱和赞颂的素材。<font color="orange">所有这些高贵的种族，他们的本性全都无异于野兽</font>，无异于非凡的、贪婪地渴求战利品与胜利的金发野兽。这一隐藏的本性需要时不时地发泄出来，野兽必须挣脱束缚，必须重归荒野：——罗马的贵族，阿拉伯的贵族，日耳曼的贵族，日本的贵族，《荷马史诗》中的英雄，斯堪的纳维亚的维京人——他们这方面的需求完全一样。<font color="orange">高贵的种族在所有他们去过的地方都留下了“野蛮人”的概念；而从他们最高等的文化中还显露出他们对此具有明确的意识，甚至是自豪</font>（譬如，伯利克勒斯在那篇著名的葬礼演说中对他的雅典人民说：“我们的冒险精神冲进了每个海洋和每个陆地，我们在各地都以好的和坏的方式建立起了不朽的丰碑”）。高贵种族的“冒险精神”表现得疯狂、荒谬、突然，他们的行动甚至不可捉摸、令人难以置信——伯利克勒斯尤其赞扬雅典人的[x]——他们对安全、肉体、生命和舒适表现得淡然和轻蔑，对一切破坏行为、对胜利和残忍带来的所有快感都表现出令人吃惊的兴致和发自内心的喜好——<font color="orange">所有这一切都使其受害人将他们勾画为“野蛮人”、“邪恶的敌人”的形象</font>，类似于“哥特人”加“汪达尔人”。德国人上台伊始就引起了别人深刻且冷酷的猜忌，现在又重新出现了——几百年来，欧洲人都怀着恐惧旁观着金发的日耳曼野兽的大肆破坏，这恐惧一直未曾消散，而他们的猜忌一直都还是这恐惧的余声与回响。（尽管在古老的日耳曼人和我们德国人之间，几乎不存在概念上的联系，更遑论他们之间血缘上的联系了。）<br>我之前曾指出过赫西俄德的窘境，他思考了文化时代的序列问题，并试图将这些时代冠以黄金、白银、黑铁等名称：<font color="orange">荷马笔下的世界带给他很大的矛盾，一方面是光辉灿烂，另一方面却是阴森恐怖、暴行肆虐</font>，而他解决这矛盾的手段无非是把同一个时代一分为二，而后按照先后次序加以排列——是攻打特洛伊和忒拜的英雄与半神的时代，它埋藏在贵族们的记忆之中，他们的祖先就生活在那个时代；然后就是黑铁时代，同样的世界对于那些被践踏者、被掠夺者、被虐待者、被奴役者和被贩卖者的后代而言则是另外一番景象：那是一个黑铁时代，如前所述，艰难、冷酷、残忍、感情与良知泯灭，一切都被摧毁且沾满血污。<br>假设现在那些始终被当作“真理”而被相信的东西果如其然，假设所有文明的意义就在于，把“人”这个野兽驯化成温顺的、有教养的动物，即一种家畜的话，那么，人们就必须毫不迟疑地把所有<font color="orange">这些反应本能和怨恨本能看作文明真正的工具，正是在它们的帮助下，贵族及其理念才最终遭受耻辱并被征服；当然，这并不意味着，这种工具的拥有者同时也体现了文明本身。更确切地说，事实可能恰恰相反</font>——不！相反的事实如今已经显而易见！这些具有压迫和报复本能的人，这些欧洲和非欧洲的奴隶的后代，尤其是所有在雅利安人之前的居民的后代——他们都体现了人类的倒退！<font color="orange">这种“文明的工具”是人类的耻辱，更是针对“文明”的一种怀疑和反驳！</font>如果人们惧怕所有高贵种族内心深处的金发野兽，并且加以防备，那是完全有理由的：但是，如果人们同时也能看到，不惧怕则意味着再也无法避免看到一片失败者、卑躬屈膝者、萎靡颓废者、中毒者那令人恶心的景象的话，那么，谁不愿意千方百计地选择惧怕呢？难道这不正是我们的厄运吗？今天，是什么造成了我们对“人”的反感？——因为我们以人为患，而这是毋庸置疑的。——<font color="orange">并不是恐惧让我们反感；而是因为：我们在人那里丝毫没有可以感到惧怕的东西；蛆虫一样的“人”获得了显著的地位，并且蜂拥而来；“温驯的人”、不可救药的中庸者和令人讨厌的家伙，他们已经学会了把自己当成目的和首脑，当作历史的意义，当作“上等人”</font>；—— 他们这种感觉也有一定的道理，只要他们感到自己与那一大群失败者、病人、疲倦者、苟活者（现在的欧洲已经开始散发他们的臭气）存在着差别，所以他们感觉自己至少还是比较可取的，至少是具有生活能力的，至少是肯定生活的……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-10</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-10/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-10/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">道德上的奴隶起义开始于怨恨本身变得富有创造性，并且产生价值的时候：这种怨恨来自于这样的人物，他们无法用行动做出真正的反应，而只会通过幻想中的复仇获得补偿。一切高尚的道德均来自于一种胜利般的自我肯定，而奴隶道德从一开始就对“外在”、“他者”、“非我”加以否认：这种否定就是奴隶道德的创造性行动。</font><font color="orange">这种颠倒的价值目标的设定——其方向必然是向外，而不是反过来指向自己——恰恰属于这种怨恨：奴隶道德的形成首先总是需要一个对立的外部世界，从生理学上讲，它需要外部的刺激才能有所行动，——他的行动从根本上讲就是一种反应。而高贵的价值方式正好与此相反：它的行动和成长都是自发的，它寻求其对立面，仅仅是为了用更加感激与更加赞颂的方式来对自我加以肯定</font>，——它的否定概念，如“下等的”、“卑贱的”、“坏的”等，与它本身肯定性的基本概念相比较而言，只是后来形成的、苍白的对照图像，<font color="orange">它那肯定性的基本概念里完完全全充满了生命和激情</font>：“我们是高贵者，我们是好人，我们是俊美的，我们是幸福的！”假如高贵的价值方式有过错，强暴现实，那么，上述情况应当是发生在它尚未充分了解的领域，甚至可以说，它出于矜持与自我保护而拒绝对该领域进行真正的认识：在它所轻视的领域，也就是卑贱者和下等民族的领域，它也许会做出错误的判断；而另外一方面，人们应当仔细权衡，不管怎样，<font color="orange">这种蔑视的、骄傲的、优越的情绪——虽然我们设定它伪造了蔑视的图景——也远远无法与虚弱无能者带着压抑的仇恨向其对手（当然是in effigie）进行报复的那种虚伪相比</font>。<br>事实上，在<font color="orange">这种蔑视中存在着太多疏忽和轻率，并且夹杂着太多罔顾和急躁，甚至还有太多与生俱来的乐观情绪，以至于他们无法将其对象变成真正的讽刺画和丑陋危险的怪物</font>。例如，人们总是可以听到希腊贵族在所有言语中所加进的那些近乎善意友好的口吻和语气，他们藉此拉开与下等民族的距离；类似怜悯、关怀、宽容之类的情绪始终搅和在一起，而且还包裹上了糖衣，以至于到了最后，几乎所有适用于卑贱者的词汇最终只剩下“不幸的”、“可怜的”一类的表达（试比较[x],[x],[x],[x],后面两个词的本意是把卑贱者表达为劳动奴隶和驮载牲畜）——另一方面，“坏的”、“下等的”、“不幸的”等词汇也从未停止过，用一种以“不幸的”为主导的音色，最后在希腊人的耳朵里汇成统一的调门：这是古老的、更加高尚的贵族价值方式的遗产，即使在蔑视对方时也不会否认这一点。（古典语文学家们可以注意一下，[x],[x],[x],[x],[x]等词是在什么含义的情况下被使用。）而<font color="orange">“出身高贵者”对自己的感觉就是“幸福的人”，他们不会先去观察自己的敌人，而后人为地构造自己的幸福，或者在某些情况下说服，甚至骗取别人相信自己幸福（所有怀有怨恨的人都习惯于这样做）；他们同样知道，他们作为充满过多力量的人就必然是积极的人，他们不会把行动与幸福相分离——在他们那里，行动必定会带来幸福</font>（[x]一词的起源正是出于此）——<font color="orange">至于那些虚弱无能的人、压抑的人以及感染了有毒情感和仇视情感的人，所有这些都与他们那个层次的“幸福”截然相反，在后者那里，幸福在本质上只能被动地出现</font>，即表现为麻醉、沉迷、安宁、和睦、“犹太教安息日”、颐养性情和舒展四肢。<br><font color="orange">高贵的人生活得真诚而且坦然</font>（[x]，即“贵族出身”一词，侧重于“真诚正直”的细微含义，而且也很有可能同时侧重于“天真”的含义）；<font color="orange">而怀有怨恨的人既不真诚也不天真，甚至对自己也不诚实和直率。他的灵魂喜欢偷窥</font>；他的精神喜欢暗角、幽径和后门，所有晦暗的事情都引起他的兴趣，让他认为那是属于他自己的世界，他很安全，让他提神醒脑；他擅长沉默、记恨和等待，善于暂时地卑躬屈膝、忍辱负重。这样怀有怨恨的种族最终必然比其他高贵的种族更聪明，而且它还<font color="orange">以完全不同的程度尊崇聪明：即把聪明看作首要的生存条件；而对高贵的人来说，聪明不过是他们在品尝奢侈和高雅时本身就轻易获得的一种比较细腻的怪味而已：——聪明在这里早已不那么至关重要了</font>，它既不像那种调节性的无意识本能能够提供完美的功能性保护，甚至也不如某种非聪明，也就是无论面对危险，还是面对敌人时都勇猛直前，而且比不上那些愤怒、爱情、敬畏、感激、报复等狂热的情感爆发，<font color="orange">所有时代那些高贵的灵魂都曾在情感爆发问题上重新认识了自己。如果高贵的人心理也出现了怨恨，那么这怨恨也会立刻通过某个反应而得到发泄并且耗尽，所以他不会中怨恨的毒</font>：而在另一方面，如果说在不计其数的情况下，怨恨对于所有弱者和无能者来说是不可避免的话，那么在高贵的人身上却压根不会出现。<font color="orange">高贵的人甚至不会长时间地对敌人、对不幸、对不当行为耿耿于怀——这是天性强大和充实的标志，这种天性里包含着丰富的塑造力、复制力、治愈力，还有让人忘却的力量</font>（这方面的一个很好的例子，就是现代世界的米拉博，他记不住别人对他的侮辱和诽谤，所以也不存在原谅别人的问题，因为他——已经忘记了）。<font color="orange">这样的人身躯一震就可以抖掉身上无数的蛆虫，而在别人那里，这些蛆虫却会钻进他们的身体</font>。可以断定的是，只有这里，在地球上只有这里，才可能存在真正的所谓“爱仇敌”。一个高贵的人会对他的敌人抱有如此多的敬畏呀！——这样的敬畏就是通往爱的一座桥梁……<font color="red">他是为了自己的缘故而需要敌人，他把这种需求当做是对他的奖赏；他只能容忍这样的敌人，即身上没有任何需要蔑视的地方，而且值得备受尊敬的敌人！但与之相反，人们还是像怀有怨恨的人一样构想出来了自己的敌人——这就是他们的行为，他们的创造：他设想出了“邪恶的敌人”，即“恶人”，并且把这当作基本概念，还以此为出发点，他又设想出了该概念的心理遗存（Nachbild）兼对立面，即“善人”——那个人就是他自己！</font></p></blockquote><hr><p>[x]所代表的是原文的单词，和理解本文思想无关，反正也看不懂</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-9</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-9/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“您还在奢谈什么更高贵的理想！让我们顺应这个事实吧：这个民族取得了胜利——或者叫‘奴隶’，或者叫‘群氓’，或者叫‘民众’，或者随您怎么称呼他们——反正犹太人做到了这一步，那就这样吧！从未有哪个民族拥有比这个更具世界历史意义的使命。‘主人’被打败了；卑贱者的道德取得了胜利。有人或许会把这一胜利看作一种血液中毒（该胜利将各个种族混合在了一起）——对此，我并不反对；毫无疑问，人类业已中毒了。‘拯救’人类（即拯救‘主人’）的目的正在顺利进行；一切都明显地被犹太化，或者基督化，或者群氓化了（用什么词语称呼又有什么关系呢！）。这种毒害人类全身肌体的过程似乎不可遏制，从现在起，其速度和步骤甚至可以越来越缓慢、越来越精致、越来越不易察觉和越来越审慎周到——反正有的是时间……从这个意图来看，今天的教会是否还有什么必要的任务，或者说还有什么存在下去的权利吗？或者人们是否可以舍弃教会？这是必然会有的疑问。教会似乎是在阻止和遏制这个毒害的过程，而不是加速它的蔓延？现在看来，这也许就是教会的可用之处……可以肯定的是，教会实在是有点粗俗和土气，这与一种更为文雅的智慧和真正现代的口味是格格不入的。难道教会至少不应该稍微精细一点吗？……教会今天疏远的人多于它所诱惑的人……假如没有教会，我们当中有谁能成为自由的精神？是教会使我们反感，而不是它的毒素……除了教会以外，我们也是很热爱这种毒素的……”——这是一个具有“自由精神”的人针对我的讲话所做的结束语，正如里面所充分显露的那样，他是一个诚实的动物，而且是一个民主主义者；他一直在倾听我的演讲，并且不能忍受我的沉默。对我而言，在这个问题上有很多需要保持沉默的东西。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-8</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-8/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>然而你们没有听懂吗？你们没有注意到某个需要两千年的岁月才能取得成功的东西？……这是不足为怪的：一切长期的事物都很难受人注意，也很难被观察与纵览。但是，这件事却是个大事件：从复仇和仇恨的树干中，从这株犹太式仇恨的树干中——这是一种最深刻和最精细的仇恨，因为它能创造理想，改变价值，地球上从未有过与之类似的东西——生长出一种同样不可比拟的东西，那就是一种新型的爱，它是所有爱的方式中最深刻和最精细的：——难道从其他哪种树干中能够生长出这样的爱吗？……但是，人们切不要错误地以为，这种爱的勃发是对报仇的渴望的真正否定，是犹太式仇恨的反面！不，真相恰恰与之相反！<font color="orange">这种爱生发于仇恨的树干，是这棵树的树冠</font>，是胜利的、在最纯净的明媚与阳光下逐渐展开的树冠，而在阳光和高度的王国中，<font color="orange">树冠以迫切的欲望追逐着上述仇恨的目标、胜利、战利品和其他诱惑，而仇恨的树根也以同样的迫切欲望在一切具有深度并且邪恶的事物中越陷越深，越来越贪婪</font>。<br>拿撒勒的耶稣，人格化的爱之福音，这位为穷人、病人、罪人带来极乐和胜利的“救世主”——他难道不正是最为神秘可怕且最难抗拒的一种诱惑形式吗？这条诱惑而曲折的道路通往的不正是犹太人的价值，以及理想的革新吗？以色列不正是通过这位“救世主”，这个以色列表面上的敌人和终结者，所指引的曲折道路才达到了他们那精细的复仇欲望的最终目标的吗？以色列不得不亲自在全世界面前把他复仇的真正工具像死敌一样予以否认，并且将其钉在十字架上，<font color="orange">以便“全世界”，即以色列的所有敌人，能够不加考虑地吞下这个诱饵</font>，这难道不算是真正伟大的复仇政治中隐秘阴险的策略吗，这难道不是一种具有远见、秘密隐蔽、缓慢进行、提前谋划的复仇吗？就算用尽其才智中所有的阴险诡诈，人们难道还能设想出比这更为危险的诱饵吗？<font color="orange">难道有什么东西能够在使人上当、入迷、麻醉和堕落的力量上可以与那个“神圣的十字架”的象征相抗衡，可以与“十字架上的神”这个令人恐怖的悖论相仿佛，可以与上帝为了拯救人类而选择将自己钉在十字架上那种极端的、超乎想象的残忍所代表的神秘性相提并论？</font>……至少有一点是肯定的，以色列“sub hoc signo”用<font color="red">它的复仇和改变所有价值的方式一再战胜了迄今为止的其他一切理想，一切更高贵的理想。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-7</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-7/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>人们或许已然猜出，<font color="red">祭司的价值方式是多么轻易地脱离了骑士—贵族的价值方式，然后继续向其对立面发展</font>；尤其是每当祭司阶层与武士阶层互相嫉妒、不愿妥协的时候，都是引起这种趋向的动因。骑士—贵族的价值判断有其前提，这就是强壮有力的体魄，勃发的、富余的、满溢而出的健康，以及以保持体魄健康为条件的战争、冒险、狩猎、舞蹈、竞赛，还有所有包含强壮、自由与乐观的行为。而正如我们业已看到的那样，祭司—高贵者的价值方式有着与此不同的前提：有关战争的一切东西对他们来说都糟糕透了！众所周知，祭司们是最邪恶的敌人——为什么这样说？因为他们是最虚弱无能的。<font color="orange">由于虚弱无能，他们所滋生的仇恨既暴烈又可怕，而且最富有才智，也最为阴险歹毒。</font><br>世界史上所有伟大的仇恨者都是祭司，而且是最具聪明机智的仇恨者：——与祭司的复仇智慧相比，所有其他的聪明才智都不值一哂。假如没有这些无能者提供的智慧进入历史，那整个人类历史就是一个蠢物：——我们马上就会举出最大的例子。尘世中所有反对“高贵者”、“强权者”、“主人”、“掌权者”的行动都无法与犹太人在这方面的所作所为相提并论：犹太人，那个祭司化的民族，善于<font color="orange">仅仅通过彻底改变他们的敌人和专制者的价值观，也就是通过一个最精神性的复仇行动，而使他们向自己赔礼道歉</font>。仅此一点，就与一个祭司化的民族相吻合，与一个将祭司化的复仇欲望潜藏最深的民族相符合。犹太人曾是这样的一个民族，他们以一种令人恐惧的逻辑性，勇敢地改变了贵族的价值方程式（善＝高贵的＝强有力的＝美丽的＝幸福的＝受神宠爱的），并且怀着最深的仇恨（虚弱无能的仇恨），用牙齿将这一改变紧紧咬住：“惟有困苦者才是善人；惟有穷人、虚弱无能的人、下等人才是善人；惟有忍受折磨的人、遭受贫困的人、病人、丑陋的人，才是惟一虔诚的人，惟一笃信上帝的人，惟有他们才配享受天堂里的至乐。——你们却相反，你们这些高贵者和强力者，你们永远都是恶人、残忍的人、淫荡的人、贪婪的人、不信上帝的人，你们将永远遭受不幸，受到诅咒，并将罚入地狱！”……人们都知道，是谁继承了犹太人这种颠覆的价值观……这是犹太人提出的最具根本意义的战争宣言，其中所包含的巨大的，也特别具有灾难性后果的主动精神会让我回忆起我在另外一个场合所讲过的话（《善恶的彼岸》第118页）——即<font color="red">犹太人是道德上的奴隶起义的始作俑者：那场两千年前的起义今天之所以淡出了我们的视线，仅仅因为它——成功了</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-6</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-6/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-6/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">政治优越的观念总是引起一种精神优越的观念</font>，这一规则暂时还没有例外（虽然存在着出现例外的动因）。<font color="orange">所以当祭司阶层是社会最高等级时，他们就会喜欢一种能够提醒别人其祭司职能的称号来作为他们共同的名称</font>。例如，在这种情况下，“纯洁”（rein）与“不纯洁”（unrein）作为等级的标志而第一次被对立起来；同样在此基础上后来发展出了不再具有等级意义的的“好”与“坏”的观念。应当提醒人们的是，不要一开始就过于严肃、过于广义、甚至过于象征性地理解“纯洁”与“不纯洁”之类的概念：从最初来看，古人的一切概念都具有我们几乎无法想象的粗糙、笨拙、浅薄、狭隘、直接，尤其需要注意的是，它们是非象征性的。“纯洁的人”最初只是指这样的人，他洗脸洗澡，拒绝食用某些会导致皮肤疾病的食品，不和低等民族的肮脏妇女睡觉，厌恶流血——仅此而已，也仅此而已！而另一方面，就高度祭司化的贵族阶层的整体本质而言，当然可以解释清楚，为什么恰恰是在人类的早期，价值对立能够以一种危险的方式被内在化和尖锐化；事实上，<font color="red">正是这种价值对立最终在人与人之间制造了鸿沟</font>，就连具有自由精神的阿喀琉斯也不能毫无畏惧地逾越这些鸿沟。<br><font color="orange">某些不健康的东西从一开始就存在于这些祭司贵族之中，存在于该阶层普遍的习惯中，这些习惯使得他们远离行动，部分人会冥思苦想，部分人则会表现为情感爆发</font>，其结果就是所有时代的祭司们几乎都不可避免地患上了<font color="orange">传染性的肠道疾病和神经衰弱症</font>；然而，他们自己又发明了什么东西来医治自身的疾病呢？——人们不得不说，<font color="orange">他们的医治方法，其最终效果要比它理应治疗的疾病还要危险百倍。至今整个人类都还在忍受这些祭司的愚蠢疗法的后果！</font><br>试想一下那些<font color="orange">饮食疗法（禁荤食），斋戒，性生活节制，逃亡“进入荒漠”</font>（维尔·米切尔式的与世隔离，当然这里没有相关的致肥疗法和过度营养，虽然后者包含了最有效的方法，能够医治禁欲理想中产生的一切癔病）。此外，还有祭司们全部的形而上学，它们<font color="orange">仇视感官，使人变得懒惰和狡诈</font>；他们按照苦行僧和婆罗门的方式进行<font color="orange">自我催眠</font>——在这个意义上，梵与催眠时使用的玻璃纽扣和固定念头所起到的作用是一样的，<font color="orange">他们最终还会具有过于明显的普遍的厌倦情绪，厌倦他们的猛药疗法，即虚无</font>（或者说上帝：——那种与上帝结成一种unio mystica的需求也就是佛教徒所渴求的进入虚无状态，即涅槃——仅此而已！）在祭司们那里，一切都变得更危险了，不仅是医疗方法和治疗技巧，而且还有高傲，复仇，机敏，放荡，爱情，统治欲，美德，疾病；——这里还有必要加以补充的是：<font color="orange">人的，或祭司们的这种存在方式本质上是非常危险的，但正是在这一危险的存在方式的基础上，人才真正成为一种有趣的动物，而人的灵魂也正是在这里获得了更高意义上的深度，并且变得邪恶 ——这正是迄今为止人优越于其他动物的两个基本表现形式！</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-西江月·春游</title>
      <link href="/2023/04/08/zuo-pin/shi-ci-xi-jiang-yue-chun-you/"/>
      <url>/2023/04/08/zuo-pin/shi-ci-xi-jiang-yue-chun-you/</url>
      
        <content type="html"><![CDATA[<blockquote><p>西江月·春游</p><p>匆匆半空折翅，滚滚浪里行舟。人生乘势兴悠悠。来来去去狂游。<br>山外龙争虎斗，夕阳半点闲愁。画梁飞燕不自由。去年明朝白头。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-5</title>
      <link href="/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-5/"/>
      <url>/2023/04/08/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>至于我们的问题，人们则完全有理由称之为一个安静的问题，并且有选择性地只针对少数听众。在我们的问题上，人们可以怀着很大的兴趣确定，<font color="red">在那些指称“好”的言语和词根中已经多次透露出一种主要差别，而高贵者正是据此感觉自己是上等人</font>。虽然，在大多数情况下，他们或许只是简单地按照自己在权力上的优势称呼自己（如“强有力者”，“主人”，“主宰”），或者用这一优势最为明显的表征来称呼自己，例如“富人”、“占有者”（这就是“arya”一词的意思，而在伊朗语和斯拉夫语中也有与之相应的含义）。但是，他们也按照一种典型的特性称呼自己：这也正是我们在本文所涉及的情况。<br>例如，他们称谓自己是“真诚的人”：开此先河的人是古希腊贵族，其代言人就是来自迈加拉的诗人忒奥格尼斯。表达这个意思的单词[x]，从其词根来看表示一个人，这个人存在着，他有实在性，他是真的，他是真实的；而后伴随着一次主观的转折，真实的人就被称为了真诚的人：在这个概念发生转变的阶段，这个词变为了贵族的流行词和标志语，而且完完全全过渡为“贵族的”这一含义，以便与忒奥格尼斯所认为和描述的那些喜欢说谎的粗鄙之人相区别，——直到贵族阶层衰落之后，这个词最终只剩下了指称“心灵高贵”的含义，同时该词也变得成熟和受人欢迎了。在[x]以及在[x]这两个词（两者都与[x]一词相对，即平民之意）当中，都强调了胆怯：这或许算是一个暗示，人们可以沿着这个方向来寻找那个具有多重含义的单词。[x]的语源学来源。而拉丁文中的malus（我把它与[x]一词相提并论）可以表示粗鄙的人，同样也可以表示深肤色的人，尤其是黑头发的人（“hic niger est——”），即在雅利安人之前生活在意大利的居民，他们与后来成为统治者的金黄头发的雅利安征服者种族最明显的区别就是颜色；而凯尔特语则至少为我提供了正好与之相吻合的情况——fin（比如Fin-Gal这个名字），这是用来表示贵族的单词，最后被用来表示善者、高贵者、纯洁者，而它最初的含义则是金色头发，也就是与那些深肤色、黑头发的土著有明显的区别。顺便说一句，凯尔特人是纯粹的金发人种；有人错误地把细致的德国人种分布图上那些明显属于深色头发的居民区域同凯尔特人的后裔或混血联系在一起，就连菲尔绍夫也还在这样做：在这些地方居住的应当是雅利安人之前的德国居民。（同样的情况差不多适用于整个欧洲：从根本上说，被征服的种族最终还是在那里占了上风，在颜色上，在颅骨偏短上，或许还在智识和社会的本能上：有谁赞同我们如下的观点：现代民主制度，更为现代的无政府主义，尤其是欧洲所有的社会主义者现在都一致偏好的那种最原始的社会形式“公社”，这些难道不都基本上意味着一个无比震颤的尾音吗？——征服者和主人种族——雅利安人甚至在生理上也处于劣势？……）我相信拉丁文单词bonus可以解释为武士：前提是，我可以拥有充足的理由把bonus追溯到更古老的单词duonus（试比较bellum ＝ duellum ＝ duen-lum，在我看来，duonus这个词在这几个词中似乎得到了保留）。所以，bonus就可以解释为挑拨离间、制造纷争（duo）的人，也就是武士：现在人们看到了，在古罗马是什么形成了一个人的“好”。<br>而我们德意志自己的“好”（Gut）呢：它的含义难道不就是“像神一样的人”（den Göttlichen），或来自“神圣种族”的人（den Mann “göttlichen Geschlechts”）吗？抑或是应当与哥特人（Gothen）的民族名称（最初也是贵族的名称）相吻合？此种猜测的理由在此不再赘述。</p></blockquote><hr><p>[x]所代表的是原文的单词，和理解本文思想无关，反正也看不懂</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230404-Brooks-S&amp;P Emini</title>
      <link href="/2023/04/07/shi-chang-fen-xi/shi-chang-fen-xi-20230404-brooks-s-p-emini/"/>
      <url>/2023/04/07/shi-chang-fen-xi/shi-chang-fen-xi-20230404-brooks-s-p-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Tuesday April 4, 2023</font></p><h2 id="font-color-green-S-P-Emini-pre-open-market-analysis-font"><font color="green">S&amp;P Emini pre-open market analysis</font></h2><h3 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h3><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230404-Emini-Daily-Chart-Market-Testing-Bear-Trendline-768x432.jpg" alt="Emini daily chart"></p><ul><li>Yesterday was a follow-through bar, and the market reached the bear trendline (blue line). Emini risk getting big for bulls.<ul><li><font color="gray">昨天趋势跟进，市场到达熊市趋势线（蓝线）。 Emini 多头风险变大</font></li></ul></li><li>At the moment, the momentum up from the March 24th low is strong enough to increase the odds of a second leg up after any pullback.<ul><li><font color="gray">目前，自3/24低点以来的上涨势头强劲，足以增加任何回调后第二轮上涨的可能性</font></li></ul></li><li>Traders should expect the market to pull back soon for a day or two. The risk is getting big for the bulls. Therefore, traders will likely begin to take partial profits.<ul><li><font color="gray">交易者应该预料到市场会很快回落一两天。多头面临的风险越来越大。因此，交易者可能会开始获利了结</font></li></ul></li><li>The bulls want a breakout far above the February 2nd high and rally to the August 16th high.<ul><li><font color="gray">多头希望突破远高于2/2的高点并反弹至8/16的高点</font></li></ul></li><li>The bears want the rally to stall around the February high and form a double top.<ul><li><font color="gray">空头希望涨势在2月高点附近停滞并形成双顶</font></li></ul></li><li>the market will probably pull back soon as bulls take partial profits.<ul><li><font color="gray">随着多头获利了结，市场可能会很快回调</font></li></ul></li><li>Traders will pay close attention to see how deep the pullback will be.<ul><li><font color="gray">交易者将密切关注回调的深度</font></li></ul></li><li>Traders will also pay close attention to the test of the February 2nd high. If the market starts to stall and go sideways under February 2023 high, that will increase risk of the rally being a buy vacuum test of resistance (February 2023). If the market breaks beyond February 2023 high and starts to go sideways above it, that will increase the odds of higher prices.<ul><li><font color="gray">交易者也将密切关注对2/2高点的测试。如果市场开始停滞并在2023/2的高点下方横盘整理，这将增加反弹成为阻力买入真空测试（2023/2）的风险。如果市场突破2023/2的高点并开始在其上方横盘整理，那将增加价格上涨的可能性</font></li></ul></li><li>In general, strong bull trends break out beyond resistance and stall after the breakout. Legs within trading ranges will get close to the resistance level and start to go sideways just under it.<ul><li><font color="gray">一般来说，强劲的牛市趋势会突破阻力并在突破后停滞。交易区间内的K线将接近阻力位并开始在其下方横盘整理</font></li></ul></li><li>Overall, it will be important to see what kind of pullback the Bulls get. Bears need to do more and demonstrate strength before they will be able to develop a credible swing short. One way they could do that is to make the market go sideways and form a lower high with the February 2nd high.<ul><li><font color="gray">总的来说，重要的是要看看多头会得到什么样的回调。空头需要做更多并展示实力，然后才能发展出可靠的摆动空头。他们可以做到这一点的一种方法是让市场横盘整理并与2/2的高点形成一个较低的高点</font></li></ul></li></ul><h3 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h3><ul><li>Emini is up 6 points in the overnight Globex session.<ul><li><font color="gray">Emini 在隔夜交易时段上涨6点</font></li></ul></li><li>The Globex market rallied in the early morning hours after going sideways for several bars last night.<ul><li><font color="gray">市场在昨晚横盘整理几个柱线后，在清晨反弹</font></li></ul></li><li>Traders should assume that today will have a lot of trading range price action. This means traders should pay close attention to the open of the day, as it will likely be an important magnet today.<ul><li><font color="gray">交易者应该假设今天会有很多交易区间价格行动。这意味着交易者应密切关注当天的开盘，因为它可能是今天的重要磁体</font></li></ul></li><li>The bulls will probably not get another bull trend day today, so if there is an early morning rally, traders will look to sell the rally similar to yesterday.<ul><li><font color="gray">多头今天可能不会再出现牛市趋势日，因此如果出现清晨反弹，交易员将寻求卖出与昨天类似的反弹</font></li></ul></li><li>As always, most trades should wait for 6-12 bars before placing a trade unless they are comfortable with limit orders.<ul><li><font color="gray">与往常一样，大多数交易者在下单前应等待 6-12 根柱线，除非他们对限价订单感到满意</font></li></ul></li><li>Most traders should try and catch the opening swing trade that usually forms a double top/bottom or a wedge top/bottom. The swing trade typically begins before the end of the second hour.<ul><li><font color="gray">大多数交易者应该尝试抓住通常形成双顶/双底或楔形顶/底的开盘摆动交易。波段交易通常在第二个小时结束前开始</font></li></ul></li><li>Overall, traders should assume that the bulls will probably be disappointed today, which means the market will probably get a close below the open or a weak bull bar.<ul><li><font color="gray">总的来说，交易者应该假设多头今天可能会失望，这意味着市场可能收盘价低于开盘价或形成小阳线</font></li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230404-SP500-Emini-5-Min-Yesterday-Buy-Climax-Expect-2hr-Sideways-Down-768x432.png" alt="Emini 5 Min"></p><hr><p><a href="https://www.brookstradingcourse.com/analysis/emini-final-day-of-month/">原文链接-Brooks</a></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-4</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-4/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有一个问题的提出为我指明了正确的道路，那就是，用各种不同语言表达出来的“好”这个指称在语源学方面究竟具有什么样的意义：在这里我发现，这些指称统统都可以回溯到同一个概念的转化上，——普遍来看，无论哪里，<font color="red">“高贵”、“高尚”都是社会等级意义上的根本概念，由此就必然转化出具有“心灵高贵”和“高尚”等含义的“好”，具有“心灵崇高”和“心灵拥有特权”等含义的“好”：而这种演化总是与另一种演化并行发展的，即“卑贱”、“粗俗”、“低等”等词汇最终被转化成“坏”这一概念。</font><br>对于后一种情况而言，最有说服力的例子就是德文单词“坏”（schlecht）本身：它与“朴素”（schlicht）曾是通用的概念——试比较“schlechtweg”［直截了当地，直译：朴素的道路］和“schlechterdings”［实在地，直译：朴素的东西］两个单词——它最初指称的就是朴素的男子，<font color="orange">当时的人们还不会用怀疑的眼神斜睨这样的粗鄙男子，而只是用来指称高贵者的对立面。直到很久以后，大约是在三十年战争时期，这个词的含义才转移到了今天通用的含义。</font>——对我来说，这一点似乎是对道德谱系的一个本质性的洞见；而这一洞见之所以这么晚才被发现，就在于<font color="orange">现代世界内部的民主性偏见对所有起源问题都施加了阻碍性的影响</font>。这里还需要稍加指出的是，<font color="orange">这种影响甚至还渗透到表面上看来最客观的自然科学和生理学领域</font>。<br>臭名昭著的巴克尔案例表明，这种偏见一旦失控到了仇恨的地步，它尤其会对道德与历史造成多么大的危害。来自英国的现代精神中的平民主义再次在它的故土上爆发，激烈得如同一座岩浆迸发的火山，并且伴随着迄今为止所有火山都曾发出过的那种令人扫兴的、音量过大的、庸俗粗鄙的鼓噪。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-3</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-3/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>其次，<font color="orange">那种关于“好”的价值判断起源的假设是没有历史依据的</font>，即使对此完全抛开不谈，该假设本身也包含了心理学上的荒谬。据说，无私行为的有用性是其得到赞扬的本源，而该本源却又被人忘记了：——怎么可能会发生忘记的情况呢？难道是这种行为的有用性曾在某一时期中断过？<br>情况恰恰相反：这种有用性在任何时代都是习以为常的，并且总是不断地被人重新强调；因此，它不是从意识中消失了，不是被忘记了，而是肯定越来越清晰地烙印在意识中。<br>而另外一种与之相反的理论则比它不知道要理性多少倍（但是也不会更为真实——），例如，其代表人物赫伯特·斯宾塞认为：“好”的概念与“有用”、“实用”等概念在本质上是相通的，于是人类在“好”与“坏”的判断中，恰恰就是对人类那些关于有利—实用与有害—不实用的经验进行了总结和确认，这些经验是未被遗忘和无法遗忘的。按照这种理论，“好”就是自古以来被证明为有用的东西：因此，可以断言其具有“最高级别”的和“自在自为”的价值效用。<br>如上所述，<font color="orange">这种解释的思路是错误的</font>，但是至少这种解释本身是理性的，并且在心理学上是站得住脚的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-2</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-2/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在这些研究道德的历史学者那里，支配他们精神的可能是一些善良的精灵。向这些精灵们致以崇高敬意！然而，遗憾的是，这些精灵自身却缺乏历史精神，而他们恰恰遭到了所有支配历史的善良精灵们的遗弃！从本质上而言，这些精灵们的思维与陈旧的哲人习俗一样，都是非历史的。这一点毋庸置疑。<br>当他们试图确定“善”这一概念兼判断的起源时，其道德谱系之拙劣从一开始就暴露无遗。他们晓谕众人说：“人们最初是从无私行为的服务对象方面，也就是该行为对服务对象有用的角度来赞许这一无私行为的，并称其为‘好’；后来人们忘记了这种赞许的起源，同时由于无私的行为在习惯上总是被赞扬为好，因此它也就直接被认为是好的——就好像这种行为本身就是好的一样。”<br>人们立刻看到：第一段引言就已经包含了那些过于敏感的英国心理学家们全部的典型特征，——我们发现了“有用”、“忘记”、“习惯”和结尾处的“谬误”等词语，所有这一切统统都被用来支撑某种声望，而迄今为止，上等人一直都自豪于拥有此种声望，就好像拥有某种人类的特权一般。此种自豪理应被羞辱，此种声望理应被贬值：但这一点是否已经实现了呢？……<br>首先，目前在我看来，这种理论很显然是在错误的地方寻找和设定“好”这一概念的原初发生地：<font color="orange">对“好”的判断并非起源于那些受益于“善行”的人！ 事实上，<font color="red">那些“好人”自己才是这一判断的起源</font>，也就是说那些高贵的、有权势的、上层的和高尚的人们认为并判定，他们自身以及他们的行为是好的，即属于第一等级的，与他们相对的则是低下的、下贱的、卑劣的群氓。他们从这种<font color="red">保持等级差别的激情中为自己获取了创造价值并彰显这些价值的权利</font>：行为的有用性跟他们有什么关系！</font><br><font color="red">最高级别的价值判断就是要确定等级并突出等级</font>，而对于这样一种迸发的激情而言，有利性的观点恰恰是极其陌生且不合时宜的：这种激情正是在这里遭遇到了那种以工于心计、锱铢必较为前提的低级热情的对立——不是一次，不是例外，而是永久。<font color="orange">高贵的激情和保持等级差别的激情，正如所言，这就是某个上等的统治阶层在与低贱阶层、“下等人”发生关系时所具有的持续的、主导性的总体感觉与基本感觉——这就是“好”与“坏”相对立的起源。</font>（<font color="orange">主人拥有赐名的权利，而这一权利后来逐渐发展到，人们允许自己将语言的起源本身理解为统治者的权力表达</font>：他们说：“这叫什么，那叫什么”，<font color="orange">他们用声音给每一物、每一事打上烙印，并通过这种方式似乎要将它们占为己有。</font>）<br>正是因为这样的起源，所以<font color="red">“好”这个词从一开始就与“无私的”行为完全没有必然的联系</font>：那只是那些<font color="orange">道德谱系学家的迷信而已</font>。<br><font color="red">只有到了贵族的价值判断走向衰亡的时期，“自私”与“无私”的尖锐对立才逐渐被强加给人的良知</font>，——用我的话说，<font color="orange">这是一种群体本能，<font color="red">这种本能伴随着上述对立而最终获得了表达自己（也可以是不断表达自己）的机会</font>。然后又经过了很长时间，这种本能才<font color="red">在一定程度上变成了主宰</font>，道德的声望才与上述对立紧密结合在一起</font>（例如，如今的欧洲正是这样：<font color="orange">现在占主导地位的就是这样一种偏见，它把“道德的”、“无私的”、“公正的”视为同等价值的概念，而它在人们头脑中的影响力已经可以与某种“固定观念”和脑部疾病相媲美</font>）。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-1善与恶,好与坏-1</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-1/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-1-shan-yu-e-hao-yu-pi-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>人们理应感谢英国心理学家们所做的迄今惟一的探索道德发生史的尝试。——他们连同其自身给我们留下了不小的疑团；我要承认，他们自身就是活生生的疑团，他们甚至因此比他的论著更为本质——他们本身就很有意思！这些英国心理学家——他们究竟要干什么？人们发现他们总是自觉或不自觉地从事同样的工作，即把我们内心世界的partie honteuse 暴露出来，并且在当中寻找真正有效用的、引领性的、对于发展具有关键意义的东西，而这正是人的理智自尊所最不希望发现的部分（譬如，习惯的vis inertiae，健忘，一种盲目和偶然的观念网络和观念机制，或者是某种纯粹的被动性，机械性，生物反射性，物理分子以及彻底的愚钝）——究竟是什么驱使这些心理学家径直走向这条道路的？<br>难道是一种人类所具有的秘密的、恶毒的、卑鄙的、或许人自己都不愿意承认的自我贬低本能？或者是一种悲观的猜疑，是对失望的、黯然失色的，业已变得愤愤不平和简单幼稚的理想主义者的怀疑？抑或是对基督教（和柏拉图）一种渺小的、隐秘的，或许从未跨过意识门槛的敌视和憎恨？也许是对陌生的事物、对令人头疼的悖论、对存在本身的可疑与荒诞的一种贪婪的嗜好？<br>或者，最后——这是一种综合的东西，其中既有一些卑鄙恶劣，也有一些阴郁灰暗，既有一些反基督教的倾向，也有一些对异域调味品的渴望和需求？……但有人对我说，这些人简直就像一群衰老的、冷血的、乏味的青蛙，它们在人的身旁爬行跳跃，并且爬进、跳进了人体内部，就好像在它们自己的天地里——在一个沼泽里——那样得心应手。<br>我并不愿意听到，而且更不会相信这种论调；如果允许人在不可能知情的情况下表达愿望，那么，我衷心希望他们的情况恰恰与此相反，——希望这些灵魂的研究者与用显微镜观察灵魂的人从根本上是勇敢、大度、骄傲的动物，他们懂得抑制自己的感情和痛楚，并且业已把自己培养成了能够为真理而牺牲一切心愿的人——<strong>为了任何真理，甚至是为了朴素的、苦涩的、丑陋的、令人厌恶的、非基督教的、不道德的真理……因为确实存在着这样的真理。</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan/</url>
      
        <content type="html"><![CDATA[<h2 id="1-我们从未寻找过自己">1. 我们从未寻找过自己</h2><blockquote><p><font color="red">我们并无自知之明。我们是认识者，但我们并不认识自己。原因很明显：我们从未寻找过自己</font>，——因此又怎么可能发生我们突然有一天发现自己的事呢？有人曾言：“须知你的珍宝在那里，你的心也在那里”，此言甚是，我们的财宝就在我们认识的蜂巢那里。我们天生就是精神世界里的蜜蜂，振翅撷蜜，营营嗡嗡，忙忙碌碌，我们的心里真正关心的只有一件事——一定要带东西“回家”。<br>至于生命，即所谓的“体验”（Erlebnisse），我们当中曾有谁于此认真对待？抑或曾有谁于此耗费光阴？我担心，我们在这些事情上从来都是心不在焉：我们的心没有放在那里，甚至我们的耳朵也不在那里！我们更像是一个心不在焉的教徒，完全陷入自我的沉思当中，教堂正午的十二下响亮钟声传至耳际，突然将他惊醒，他自问道：“究竟是什么在敲响？”而我们有时也会在某事之后摸摸自己的耳朵，非常惊慌而且非常尴尬地问道：“我们究竟体验到什么？”甚至还会问：“我们究竟是谁？”在此之后，我们会开始重新点数我们的体验中，我们的生活中，我们的存在中出现的全部的所谓的“十二下令人战栗的敲击”——很遗憾，我们数错了……我们注定对自己感到陌生，我们不了解自己，我们必定要把自己看错。<br>有一个句子对于我们是永恒真理：“离每个人最远的人就是他自己”。——我们对于自身而言并不是“认识者”……</p></blockquote><h2 id="2-我对于我们道德偏见的起源的思考">2. 我对于我们道德偏见的起源的思考</h2><blockquote><p>我对于我们道德偏见的起源的思考——这篇战斗檄文所探讨也正是这个问题——最初曾简要地、暂时性地表述在一本格言集中，即《人性的、太人性的——一本献给自由精神的书》。该书最初撰写于意大利的索伦特（Sorrent），时值冬季，冬天让我停住脚步，就像一个漫游者那样驻足，俯瞰我的精神业已穿越的那个广阔而又危险的国度。那是1876至1877年的冬天，而这些思考本身还要更早。现在的这本论著基本上重新吸收了同样的思想——我们希望，两本论著之间漫长的间隔能让这些思想更成熟、更明晰、更坚定、更完善。我迄今仍在坚持的这些思想，在此期间已经更加相互依赖、相互交织、相互融合，这也增加了我内心的乐观信念。我的这些思想从一开始就不是个别、随意、偶然产生的，而是来自一个共同的根源，来自一个认识的基本意志（Grundwillen der Erkenntniss），这一基本意志在深处发号施令，表达越来越明确，要求也越来越明确。因为仅此一点就已经与一位哲人的身份相吻合了。我们在任何地方都没有孤立地存在的权利，我们既不能孤立地犯错误，也不能孤立地说中真理。准确地说，正如一棵树必然结出果实一样，我们的思想、我们的价值、我们的肯定与否定、我们的假设与疑惑也是因为这种必然性而产生。它们休戚相关，彼此联系，又都是同一个意志、同一份健康、同一片地产，同一颗太阳的证明。——我们结出的这些果实是否合乎你们的胃口？——但是这又和那些树有什么相干！这又和我们哲人有什么关系！</p></blockquote><h2 id="3-什么才是我们的善与恶的起源">3. 什么才是我们的善与恶的起源</h2><blockquote><p>虽然我不愿意承认，但是在我心中总有一个自在的疑虑——它牵涉到道德，牵涉到迄今所有土地上一切被当作道德来颂扬的东西——这个疑虑在我的生命中出现得如此之早，如此之自发，如此之不可遏止，如此之有悖于我的环境、年龄、榜样、出身，以至于我几乎有权把它称为我的A priori——也正因为这一疑虑，我的好奇与质疑都不得不渐渐停留在这样一个问题上：<font color="red">究竟什么才是我们的善与恶的起源</font>。事实上，在我还是一个十三岁的孩子时，关于恶的起源问题就已经在困扰我了：在那个“心里半是儿嬉，半是上帝”的年纪，我把我的第一篇文字游戏和第一篇哲学习作献给了这个问题——至于我那时对于这一问题的“解答”，我很合理地将荣耀给了上帝，将他作为恶之父。这难道就是我的“A priori”想要我做的事情？那个新生的、不道德的（unmoralisch），至少是非道德的（immoralistisch）“A priori”！还有那根源于它的无比清晰的“范畴律令”（der kategorische Imperativ），这“范畴律令”是那么地反康德、那么地神秘，而在此期间，我却一再倾听于它，并且不仅仅是倾听……幸运的是，我逐渐学会了将神学偏见与道德偏见加以区分，而不是在世界的背后寻找恶的起源。<br>一点史学和哲学上的训练，包括天生对于心理学问题的挑剔意识，这些很快就把我的问题转变成了另外一个：<font color="red">人类是在什么条件下为自身发明了善与恶的价值判断？</font>而这些价值判断本身又有什么价值？迄今为止，它们是阻碍还是促进了人类的发展？它们是否乃是生活困顿、贫乏与蜕化的标志？还是恰恰相反，在它们身上反映出的乃是生活的充盈、强力与意志，抑或是生活的勇气、信心和未来？——对于这些问题，我已经找到并且勇于找到某些答案，我对各个时代、民族和个人的等级进行了区分，对我的问题分门别类，从答案中又推引出新的问题、新的研究、新的猜测与新的可能性：直到我终于拥有了一片属于自己的国度，一块属于自己的土地，一个完整的、沉默的、却又不断成长的、生机勃勃的世界，就像是无人能够预知的神秘花园……啊，我们这些人是多么幸福，假如我们懂得长时间沉默的话！……</p></blockquote><h2 id="4-最初激发我公布关于道德起源假设的">4. 最初激发我公布关于道德起源假设的</h2><blockquote><p>最初激发我公布自己关于道德之起源的假设的，是一本清楚、洁净、聪明而且极具天才的小册子。在这本小册子里，我第一次明确地遭遇到一种逆向且反常的处理各种谱系假说的方式，真正的英国方式，它吸引着我——那吸引力里面包含了一切相对及相反的因素。这本小册子的题目是《道德感觉的起源》，作者是保罗·雷伊博士，1877年出版。我或许从未读到过这样一本书，里面的每一个句子、每一个结论，我都无法苟同，也包括这整本书：但是我读书时的心情却毫无烦恼与急躁。在之前提到的那本我当时正在撰写的集子里面，我偶然，但也并非偶然地引用了这个小册子里面的句子，并非是为了反驳它——我能用反驳来创建什么呢！——而是出于一种积极的精神，用可能性来代替非可能性，也可能是用一种错误来代替另一种错误。<br>正如前文所述，当时是我第一次将关于道德起源的假设公之于众，书里面那些文章都是探讨这些假设的。那时的我笨拙得就好像在最后还要对自己掩饰某些东西一样，我还无法自如地表达自己，也没有为这些特定的东西找到一种特定的语言，我还会摇摆不定，甚至重复以前的错误。<br>在细节方面，读者可以比较我在《人性的，太人性的》一书第51页关于<font color="orange">善与恶的双重来源的阐述（即分别来源于贵族阶层与奴隶阶层的善与恶）</font>；第119页及随后几页中关于<font color="orange">禁欲主义道德的价值与起源</font>；第78页，第82页，第二卷第35页上关于<font color="orange">“习俗的道德性”（Sittlichkeit der Sitte），那是更为古老且原始的道德形式，它与利他主义的价值评判方式有着天壤之别</font>（而雷伊博士以及所有英国道德谱系学家都把后者视作基本的道德评价方式）；该书第74页，《漫游者和他的影子》第29页，《朝霞》第99页中关于<font color="orange">正义的起源乃是由于各个平等力量之间的一种平衡（力量均衡乃是一切契约、因此也是一切权利的前提）</font>；《漫游者和他的影子》第25和34页关于<font color="orange">刑罚的起源，即恐怖对于刑罚而言既非本质性也非本原性的目的（正如雷伊博士所言，恐怖的目的只在特定的情况下才用于刑罚，但始终是次要的和附加的）。</font></p></blockquote><h2 id="5-道德的价值">5. 道德的价值</h2><blockquote><p>其实，无论是来自于我本人还是其他人的关于道德起源的假说（或者，更为确切地说：关于道德起源的假设只是达到某一目的的诸多手段之一），对于那时的我而言，都远远没有另外一些事情来得重要。对我来说，<font color="red">道德的价值</font>才是我真正关心的东西，——在这个问题上，我不得不几乎完全依靠自己一个人的力量来同我那伟大的老师叔本华论战，那本书，以及那本书的热情与暗中的异议，都如同当面向叔本华求教一样（——因为那本书也是一篇“论战檄文”）。那本书特别探讨了“无私”的价值和同情本能、自我否定本能与自我牺牲本能的价值，恰恰是叔本华美化了、神化了这些东西，并使之超验化，直到最终他把它们视为“价值自体”（Werthe an sich），并且在此基础上否定生活和自我。但是，我的内心深处恰恰是针对这些本能产生了越来越根本性的质疑，一种越来越深刻的怀疑！<br>在这里，<font color="orange">我看到了人类的巨大危险，它带给人类最崇高的引诱与诱惑</font>——人类将被引向何处呢？走向虚无？——正是在这里，我看到了末日的来临，看到了停滞，看到了回顾往事的倦怠，看到了反对生命的意志，看到了关于临终疾病的征兆，它温柔而又忧伤：<font color="orange">这种同情式的道德传播得越来越广</font>，甚至连哲人们也被波及，并因此染病。<br>我们欧洲文化业已变得非常可怕，而据我理解，这种道德就是它最为可怕的症状，是我们文化走向新佛教的弯路？这弯路将通向欧洲人佛教？通向——虚无主义？……现代哲人偏爱同情并对其评价过高乃是一件新鲜事，以往的哲人们都一致同意，同情毫无价值。我只举柏拉图、斯宾诺莎、拉罗什福科与康德四人为例，四人的思想可谓截然不同，但在一个问题上他们是一致的，那就是：<font color="red">藐视同情</font>。</p></blockquote><h2 id="6-我们必须批判道德的价值">6. 我们必须批判道德的价值</h2><blockquote><p><font color="orange">同情及同情式道德</font>（Mitleid und Mitleids-Moral）的价值问题（——我是这一<font color="orange">可耻的现代情感脆弱化倾向</font>的反对者——），乍看之下只是个孤立的问题，是一个自在的问号；但是，如果有谁在这一问题上坚持下去，并且学会提出问题，那么他就会得到与我相同的经验：——一个广阔的新远景会呈现在他眼前，一种新的可能性会将他紧紧抓住，让他头晕目眩，各种各样的猜疑、质疑、恐惧向他袭来，对道德、对于一切道德的信仰就会开始动摇——最终他就会毫不掩饰地提出一个新的要求。<br>现在让我们大声把它说出来，这个新要求：<font color="red">我们必须批判道德的价值，必须首先对这些道德价值本身的价值提出疑问——此外，还必须对这些价值得以产生、发展及其重心得以发生偏移<font color="orange">（道德被视作结果、症状、面具、伪善、疾病、误解；但道德也会被视作原因、解药、兴奋剂、阻碍和毒药）</font>的条件与情况加以认识</font>。<br>到目前为止，这样的一种认识既不存在，甚至也没有得到人们的渴求。<font color="orange">人们把这些道德价值本身的价值看作是现成的、事实存在的和超越一切质疑的；人们迄今为止丝毫没有怀疑过和动摇过“善”比“恶”价值更高的观念，而所谓“价值更高”完全是从对于人类（包括人类未来）有促进、助益与效用的意义上来说的。但是假如真相恰恰与此相反，情况会怎样呢？</font>假如在“善”中也包含着衰落的征兆，包含着某种危险、诱惑和毒药，还包含着以牺牲未来为代价换取现在满足的麻醉剂的话，情况会怎样呢？也许会变得更舒适，更安全，但也更卑微、更低级？……<font color="orange">假如人类永远无法企及那原本可以达到的强大与卓越的顶点的话，那么，是否恰恰就是因为道德的罪过呢？那么，是否恰恰说明道德才是危险中的危险呢？</font>……</p></blockquote><h2 id="7-轻松愉快地对待这些道德问题">7. 轻松愉快地对待这些道德问题</h2><blockquote><p>自从这一远景呈现在我眼前之后，就足以使我自己有充足的理由去寻找博学的、勇敢的和勤奋的同志（我今天仍在寻找）。现在需要做的就是用全新的问题和崭新的眼光去探索那广阔的、遥远的并且如此隐蔽的道德王国——那是真正存在过的，真正生活过的道德——这难道不就是几乎意味着发现这个王国吗？……如果在这个方面，我除了其他人之外，还想到了之前提到过的雷伊博士，那是因为我丝毫没有怀疑过，为了找到答案，他的问题从本质上就会迫使他采用一种更为正确的方法论。在这个问题上，我是否骗了自己？不管怎样，我那时的愿望就是，为这样一位敏锐且公正的观察者指出一个更好的方向，一个可以真正书写道德历史的方向，并且及时地警告他当心那种英国式的、毫无方向可言的蓝色假说。显而易见，对于道德谱系学家而言，那种颜色必然要比蓝色重要百倍：那就是灰色，也就是说，那些有证据记载的、可以真实确定的、真实存在过的东西，简言之，那是有关人类整个漫长道德历史的难以辨认的象形文字！——雷伊博士对此一无所知，但他读过达尔文的书：——所以在他的假设当中，达尔文式的野兽与最时髦的、谦逊得“已经不会撕咬”的“被道德娇惯者”（Moral-Zärtling），用一种至少颇具趣味性的方式彬彬有礼地握手言欢。后者的脸上显现出某种善良的和敏感的麻木与冷漠，其中还夹杂着一丝悲观与倦怠：好像根本不值得如此认真对待所有这些东西——这些道德问题。<br>而与之相反，在我看来，似乎根本不存在比这些道德问题更值得认真对待的事情了；也许有朝一日人们获得许可，可以<font color="orange">轻松愉快地对待这些道德问题</font>，那时的人们将会获得何等的报偿呀。<font color="orange">轻松愉快本身——或者用我自己的话说，就是快乐的科学——就是一种报偿：它是对一种长期的、勇敢的、勤奋的、隐秘的严肃工作的报偿</font>，当然并非每个人都可以胜任这项工作。如果有一天，我们由衷地说：<font color="orange">“继续前进！我们的旧道德将会进入喜剧之列！”</font>，这就说明，那时的我们已经为这部关于<font color="orange">“灵魂的命运”的酒神戏剧</font>找到了新的复杂情节与可能性——：而酒神也一定会利用这些情节与可能性，关于这一点，人们完全可以打赌。<font color="orange">酒神，他是描写我们存在的伟大的、古老的、永恒的喜剧诗人！</font>……</p></blockquote><h2 id="8-反刍">8. 反刍</h2><blockquote><p>如果有人读不懂本文，而且觉得这些言论听起来很刺耳，那么在我看来，这不一定要归咎于我。这篇文章已经足够清楚，当然有一个前提，我所设定的前提是，人们首先读过我以前的论著，并且在阅读时肯下功夫：事实上，那些论著并不易懂。例如我的《扎拉图斯特拉》，如果有人读了这本书，却未曾被里面的每一句话所深深伤害，同时也未曾为之深深着迷，那么这样的人我绝不会承认他读懂了。只有上述情况真的发生了，那样的读者才有特权分享那本书得以产生的那欢乐祥和的居所，并且怀着敬畏的心情分享它的光明、辽远、博大与精确。<br>此外，格言的形式也会造成困难：原因是人们如今不够重视这种形式。一个经过精心打造与淬炼的格言，不可能仅凭简单诵读而被“解密”；它还需要某种解释的艺术才能开始被解读。我在本书第三章提供了一个我在这种情况下可以将之称为“解读”的范例：——那一章以一个格言开头，而整章的内容都是对这段格言的诠释。当然，为了能够以类似的方式把阅读作为艺术来加以练习，首先还必须做一件事，这件事恰恰在如今已经被人们所荒疏——所以“读懂”我的书还需要时间——那就是人们绝不能像“现代人”那样，而是必须像奶牛一样：学会<font color="orange">反刍</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-8</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-8/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>如果有人读不懂本文，而且觉得这些言论听起来很刺耳，那么在我看来，这不一定要归咎于我。这篇文章已经足够清楚，当然有一个前提，我所设定的前提是，人们首先读过我以前的论著，并且在阅读时肯下功夫：事实上，那些论著并不易懂。例如我的《扎拉图斯特拉》，如果有人读了这本书，却未曾被里面的每一句话所深深伤害，同时也未曾为之深深着迷，那么这样的人我绝不会承认他读懂了。只有上述情况真的发生了，那样的读者才有特权分享那本书得以产生的那欢乐祥和的居所，并且怀着敬畏的心情分享它的光明、辽远、博大与精确。<br>此外，格言的形式也会造成困难：原因是人们如今不够重视这种形式。一个经过精心打造与淬炼的格言，不可能仅凭简单诵读而被“解密”；它还需要某种解释的艺术才能开始被解读。我在本书第三章提供了一个我在这种情况下可以将之称为“解读”的范例：——那一章以一个格言开头，而整章的内容都是对这段格言的诠释。当然，为了能够以类似的方式把阅读作为艺术来加以练习，首先还必须做一件事，这件事恰恰在如今已经被人们所荒疏——所以“读懂”我的书还需要时间——那就是人们绝不能像“现代人”那样，而是必须像奶牛一样：学会<font color="orange">反刍</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-7</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-7/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自从这一远景呈现在我眼前之后，就足以使我自己有充足的理由去寻找博学的、勇敢的和勤奋的同志（我今天仍在寻找）。现在需要做的就是用全新的问题和崭新的眼光去探索那广阔的、遥远的并且如此隐蔽的道德王国——那是真正存在过的，真正生活过的道德——这难道不就是几乎意味着发现这个王国吗？……如果在这个方面，我除了其他人之外，还想到了之前提到过的雷伊博士，那是因为我丝毫没有怀疑过，为了找到答案，他的问题从本质上就会迫使他采用一种更为正确的方法论。在这个问题上，我是否骗了自己？不管怎样，我那时的愿望就是，为这样一位敏锐且公正的观察者指出一个更好的方向，一个可以真正书写道德历史的方向，并且及时地警告他当心那种英国式的、毫无方向可言的蓝色假说。显而易见，对于道德谱系学家而言，那种颜色必然要比蓝色重要百倍：那就是灰色，也就是说，那些有证据记载的、可以真实确定的、真实存在过的东西，简言之，那是有关人类整个漫长道德历史的难以辨认的象形文字！——雷伊博士对此一无所知，但他读过达尔文的书：——所以在他的假设当中，达尔文式的野兽与最时髦的、谦逊得“已经不会撕咬”的“被道德娇惯者”（Moral-Zärtling），用一种至少颇具趣味性的方式彬彬有礼地握手言欢。后者的脸上显现出某种善良的和敏感的麻木与冷漠，其中还夹杂着一丝悲观与倦怠：好像根本不值得如此认真对待所有这些东西——这些道德问题。<br>而与之相反，在我看来，似乎根本不存在比这些道德问题更值得认真对待的事情了；也许有朝一日人们获得许可，可以<font color="orange">轻松愉快地对待这些道德问题</font>，那时的人们将会获得何等的报偿呀。<font color="orange">轻松愉快本身——或者用我自己的话说，就是快乐的科学——就是一种报偿：它是对一种长期的、勇敢的、勤奋的、隐秘的严肃工作的报偿</font>，当然并非每个人都可以胜任这项工作。如果有一天，我们由衷地说：<font color="orange">“继续前进！我们的旧道德将会进入喜剧之列！”</font>，这就说明，那时的我们已经为这部关于<font color="orange">“灵魂的命运”的酒神戏剧</font>找到了新的复杂情节与可能性——：而酒神也一定会利用这些情节与可能性，关于这一点，人们完全可以打赌。<font color="orange">酒神，他是描写我们存在的伟大的、古老的、永恒的喜剧诗人！</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-6</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-6/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-6/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="orange">同情及同情式道德</font>（Mitleid und Mitleids-Moral）的价值问题（——我是这一<font color="orange">可耻的现代情感脆弱化倾向</font>的反对者——），乍看之下只是个孤立的问题，是一个自在的问号；但是，如果有谁在这一问题上坚持下去，并且学会提出问题，那么他就会得到与我相同的经验：——一个广阔的新远景会呈现在他眼前，一种新的可能性会将他紧紧抓住，让他头晕目眩，各种各样的猜疑、质疑、恐惧向他袭来，对道德、对于一切道德的信仰就会开始动摇——最终他就会毫不掩饰地提出一个新的要求。<br>现在让我们大声把它说出来，这个新要求：<font color="red">我们必须批判道德的价值，必须首先对这些道德价值本身的价值提出疑问——此外，还必须对这些价值得以产生、发展及其重心得以发生偏移<font color="orange">（道德被视作结果、症状、面具、伪善、疾病、误解；但道德也会被视作原因、解药、兴奋剂、阻碍和毒药）</font>的条件与情况加以认识</font>。<br>到目前为止，这样的一种认识既不存在，甚至也没有得到人们的渴求。<font color="orange">人们把这些道德价值本身的价值看作是现成的、事实存在的和超越一切质疑的；人们迄今为止丝毫没有怀疑过和动摇过“善”比“恶”价值更高的观念，而所谓“价值更高”完全是从对于人类（包括人类未来）有促进、助益与效用的意义上来说的。但是假如真相恰恰与此相反，情况会怎样呢？</font>假如在“善”中也包含着衰落的征兆，包含着某种危险、诱惑和毒药，还包含着以牺牲未来为代价换取现在满足的麻醉剂的话，情况会怎样呢？也许会变得更舒适，更安全，但也更卑微、更低级？……<font color="orange">假如人类永远无法企及那原本可以达到的强大与卓越的顶点的话，那么，是否恰恰就是因为道德的罪过呢？那么，是否恰恰说明道德才是危险中的危险呢？</font>……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-5</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-5/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>其实，无论是来自于我本人还是其他人的关于道德起源的假说（或者，更为确切地说：关于道德起源的假设只是达到某一目的的诸多手段之一），对于那时的我而言，都远远没有另外一些事情来得重要。对我来说，<font color="red">道德的价值</font>才是我真正关心的东西，——在这个问题上，我不得不几乎完全依靠自己一个人的力量来同我那伟大的老师叔本华论战，那本书，以及那本书的热情与暗中的异议，都如同当面向叔本华求教一样（——因为那本书也是一篇“论战檄文”）。那本书特别探讨了“无私”的价值和同情本能、自我否定本能与自我牺牲本能的价值，恰恰是叔本华美化了、神化了这些东西，并使之超验化，直到最终他把它们视为“价值自体”（Werthe an sich），并且在此基础上否定生活和自我。但是，我的内心深处恰恰是针对这些本能产生了越来越根本性的质疑，一种越来越深刻的怀疑！<br>在这里，<font color="orange">我看到了人类的巨大危险，它带给人类最崇高的引诱与诱惑</font>——人类将被引向何处呢？走向虚无？——正是在这里，我看到了末日的来临，看到了停滞，看到了回顾往事的倦怠，看到了反对生命的意志，看到了关于临终疾病的征兆，它温柔而又忧伤：<font color="orange">这种同情式的道德传播得越来越广</font>，甚至连哲人们也被波及，并因此染病。<br>我们欧洲文化业已变得非常可怕，而据我理解，这种道德就是它最为可怕的症状，是我们文化走向新佛教的弯路？这弯路将通向欧洲人佛教？通向——虚无主义？……现代哲人偏爱同情并对其评价过高乃是一件新鲜事，以往的哲人们都一致同意，同情毫无价值。我只举柏拉图、斯宾诺莎、拉罗什福科与康德四人为例，四人的思想可谓截然不同，但在一个问题上他们是一致的，那就是：<font color="red">藐视同情</font>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-4</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-4/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最初激发我公布自己关于道德之起源的假设的，是一本清楚、洁净、聪明而且极具天才的小册子。在这本小册子里，我第一次明确地遭遇到一种逆向且反常的处理各种谱系假说的方式，真正的英国方式，它吸引着我——那吸引力里面包含了一切相对及相反的因素。这本小册子的题目是《道德感觉的起源》，作者是保罗·雷伊博士，1877年出版。我或许从未读到过这样一本书，里面的每一个句子、每一个结论，我都无法苟同，也包括这整本书：但是我读书时的心情却毫无烦恼与急躁。在之前提到的那本我当时正在撰写的集子里面，我偶然，但也并非偶然地引用了这个小册子里面的句子，并非是为了反驳它——我能用反驳来创建什么呢！——而是出于一种积极的精神，用可能性来代替非可能性，也可能是用一种错误来代替另一种错误。<br>正如前文所述，当时是我第一次将关于道德起源的假设公之于众，书里面那些文章都是探讨这些假设的。那时的我笨拙得就好像在最后还要对自己掩饰某些东西一样，我还无法自如地表达自己，也没有为这些特定的东西找到一种特定的语言，我还会摇摆不定，甚至重复以前的错误。<br>在细节方面，读者可以比较我在《人性的，太人性的》一书第51页关于<font color="orange">善与恶的双重来源的阐述（即分别来源于贵族阶层与奴隶阶层的善与恶）</font>；第119页及随后几页中关于<font color="orange">禁欲主义道德的价值与起源</font>；第78页，第82页，第二卷第35页上关于<font color="orange">“习俗的道德性”（Sittlichkeit der Sitte），那是更为古老且原始的道德形式，它与利他主义的价值评判方式有着天壤之别</font>（而雷伊博士以及所有英国道德谱系学家都把后者视作基本的道德评价方式）；该书第74页，《漫游者和他的影子》第29页，《朝霞》第99页中关于<font color="orange">正义的起源乃是由于各个平等力量之间的一种平衡（力量均衡乃是一切契约、因此也是一切权利的前提）</font>；《漫游者和他的影子》第25和34页关于<font color="orange">刑罚的起源，即恐怖对于刑罚而言既非本质性也非本原性的目的（正如雷伊博士所言，恐怖的目的只在特定的情况下才用于刑罚，但始终是次要的和附加的）。</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-3</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-3/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>虽然我不愿意承认，但是在我心中总有一个自在的疑虑——它牵涉到道德，牵涉到迄今所有土地上一切被当作道德来颂扬的东西——这个疑虑在我的生命中出现得如此之早，如此之自发，如此之不可遏止，如此之有悖于我的环境、年龄、榜样、出身，以至于我几乎有权把它称为我的A priori——也正因为这一疑虑，我的好奇与质疑都不得不渐渐停留在这样一个问题上：<font color="red">究竟什么才是我们的善与恶的起源</font>。事实上，在我还是一个十三岁的孩子时，关于恶的起源问题就已经在困扰我了：在那个“心里半是儿嬉，半是上帝”的年纪，我把我的第一篇文字游戏和第一篇哲学习作献给了这个问题——至于我那时对于这一问题的“解答”，我很合理地将荣耀给了上帝，将他作为恶之父。这难道就是我的“A priori”想要我做的事情？那个新生的、不道德的（unmoralisch），至少是非道德的（immoralistisch）“A priori”！还有那根源于它的无比清晰的“范畴律令”（der kategorische Imperativ），这“范畴律令”是那么地反康德、那么地神秘，而在此期间，我却一再倾听于它，并且不仅仅是倾听……幸运的是，我逐渐学会了将神学偏见与道德偏见加以区分，而不是在世界的背后寻找恶的起源。<br>一点史学和哲学上的训练，包括天生对于心理学问题的挑剔意识，这些很快就把我的问题转变成了另外一个：<font color="red">人类是在什么条件下为自身发明了善与恶的价值判断？</font>而这些价值判断本身又有什么价值？迄今为止，它们是阻碍还是促进了人类的发展？它们是否乃是生活困顿、贫乏与蜕化的标志？还是恰恰相反，在它们身上反映出的乃是生活的充盈、强力与意志，抑或是生活的勇气、信心和未来？——对于这些问题，我已经找到并且勇于找到某些答案，我对各个时代、民族和个人的等级进行了区分，对我的问题分门别类，从答案中又推引出新的问题、新的研究、新的猜测与新的可能性：直到我终于拥有了一片属于自己的国度，一块属于自己的土地，一个完整的、沉默的、却又不断成长的、生机勃勃的世界，就像是无人能够预知的神秘花园……啊，我们这些人是多么幸福，假如我们懂得长时间沉默的话！……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-2</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-2/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我对于我们道德偏见的起源的思考——这篇战斗檄文所探讨也正是这个问题——最初曾简要地、暂时性地表述在一本格言集中，即《人性的、太人性的——一本献给自由精神的书》。该书最初撰写于意大利的索伦特（Sorrent），时值冬季，冬天让我停住脚步，就像一个漫游者那样驻足，俯瞰我的精神业已穿越的那个广阔而又危险的国度。那是1876至1877年的冬天，而这些思考本身还要更早。现在的这本论著基本上重新吸收了同样的思想——我们希望，两本论著之间漫长的间隔能让这些思想更成熟、更明晰、更坚定、更完善。我迄今仍在坚持的这些思想，在此期间已经更加相互依赖、相互交织、相互融合，这也增加了我内心的乐观信念。我的这些思想从一开始就不是个别、随意、偶然产生的，而是来自一个共同的根源，来自一个认识的基本意志（Grundwillen der Erkenntniss），这一基本意志在深处发号施令，表达越来越明确，要求也越来越明确。因为仅此一点就已经与一位哲人的身份相吻合了。我们在任何地方都没有孤立地存在的权利，我们既不能孤立地犯错误，也不能孤立地说中真理。准确地说，正如一棵树必然结出果实一样，我们的思想、我们的价值、我们的肯定与否定、我们的假设与疑惑也是因为这种必然性而产生。它们休戚相关，彼此联系，又都是同一个意志、同一份健康、同一片地产，同一颗太阳的证明。——我们结出的这些果实是否合乎你们的胃口？——但是这又和那些树有什么相干！这又和我们哲人有什么关系！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-0前言-1</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-1/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-0-qian-yan-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">我们并无自知之明。我们是认识者，但我们并不认识自己。原因很明显：我们从未寻找过自己</font>，——因此又怎么可能发生我们突然有一天发现自己的事呢？有人曾言：“须知你的珍宝在那里，你的心也在那里”，此言甚是，我们的财宝就在我们认识的蜂巢那里。我们天生就是精神世界里的蜜蜂，振翅撷蜜，营营嗡嗡，忙忙碌碌，我们的心里真正关心的只有一件事——一定要带东西“回家”。<br>至于生命，即所谓的“体验”（Erlebnisse），我们当中曾有谁于此认真对待？抑或曾有谁于此耗费光阴？我担心，我们在这些事情上从来都是心不在焉：我们的心没有放在那里，甚至我们的耳朵也不在那里！我们更像是一个心不在焉的教徒，完全陷入自我的沉思当中，教堂正午的十二下响亮钟声传至耳际，突然将他惊醒，他自问道：“究竟是什么在敲响？”而我们有时也会在某事之后摸摸自己的耳朵，非常惊慌而且非常尴尬地问道：“我们究竟体验到什么？”甚至还会问：“我们究竟是谁？”在此之后，我们会开始重新点数我们的体验中，我们的生活中，我们的存在中出现的全部的所谓的“十二下令人战栗的敲击”——很遗憾，我们数错了……我们注定对自己感到陌生，我们不了解自己，我们必定要把自己看错。<br>有一个句子对于我们是永恒真理：“离每个人最远的人就是他自己”。——我们对于自身而言并不是“认识者”……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德的谱系-PDF</title>
      <link href="/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-pdf/"/>
      <url>/2023/04/07/dao-de-de-pu-xi/dao-de-de-pu-xi-pdf/</url>
      
        <content type="html"><![CDATA[<p>PDF：<a href="/download/book/%E9%81%93%E5%BE%B7%E7%9A%84%E8%B0%B1%E7%B3%BB.pdf">道德的谱系.pdf</a></p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 道德的谱系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-masonry-自适应瀑布流</title>
      <link href="/2023/04/06/coding/vue-masonry-zi-gua-ying-pu-bu-liu/"/>
      <url>/2023/04/06/coding/vue-masonry-zi-gua-ying-pu-bu-liu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> vue-masonry <span class="token parameter variable">--save</span> <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-con<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-masonry</span> <span class="token attr-name">fit-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">transition-duration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1s<span class="token punctuation">"</span></span> <span class="token attr-name">item-selector</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.card<span class="token punctuation">"</span></span> <span class="token attr-name">origin-left</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-masonry-tile</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(val) in data_obj<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>val['name']<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>n-card</span>  <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>val['name']<span class="token punctuation">"</span></span> <span class="token attr-name">hoverable</span> <span class="token punctuation">&gt;</span></span>                <span class="token comment">&lt;!-- ...... --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>n-card</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.card-con</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.card</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>页面初次加载时，当请求数据很多的时候，由于数据还不全，所以可能会出现瀑布流的错位，这就需要我们在数据加载完之后，手动触发瀑布流的重加载，在此期间可以使用加载组件的<code>loading</code>，让页面显示转圈</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    loading <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> data_obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>            num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span>            apis<span class="token punctuation">.</span>capital_service_apis<span class="token punctuation">.</span><span class="token function">query_k_json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                <span class="token comment">// params</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                data_obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'res'</span><span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>                num <span class="token operator">=</span> num <span class="token operator">-</span> <span class="token number">1</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        loading <span class="token operator">=</span> <span class="token boolean">false</span>        _this<span class="token punctuation">.</span><span class="token function">$redrawVueMasonry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data_obj<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-PySocks-设置网络代理</title>
      <link href="/2023/04/06/coding/python-pysocks-she-zhi-wang-luo-dai-li/"/>
      <url>/2023/04/06/coding/python-pysocks-she-zhi-wang-luo-dai-li/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> PySocks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="单链接代理">单链接代理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sockss <span class="token operator">=</span> socks<span class="token punctuation">.</span>socksocket<span class="token punctuation">(</span><span class="token punctuation">)</span> s<span class="token punctuation">.</span>set_proxy<span class="token punctuation">(</span>socks<span class="token punctuation">.</span>SOCKS5<span class="token punctuation">,</span> <span class="token string">"localhost"</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span> <span class="token comment"># 走代理发 HTTP 请求</span>s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"www.somesite.com"</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>sendall<span class="token punctuation">(</span><span class="token string">"GET / HTTP/1.1 ..."</span><span class="token punctuation">)</span><span class="token keyword">print</span> s<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="项目无侵入代理">项目无侵入代理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> socket<span class="token keyword">import</span> socks<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requestsocks<span class="token punctuation">.</span>setdefaultproxy<span class="token punctuation">(</span>socks<span class="token punctuation">.</span>SOCKS5<span class="token punctuation">,</span> <span class="token string">"localhost"</span><span class="token punctuation">,</span> <span class="token number">10808</span><span class="token punctuation">)</span>socket<span class="token punctuation">.</span>socket <span class="token operator">=</span> socks<span class="token punctuation">.</span>socksocketdata <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">"http://www.youtube.com"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask-判断环境依赖</title>
      <link href="/2023/04/06/coding/flask-pan-duan-huan-jing-yi-lai/"/>
      <url>/2023/04/06/coding/flask-pan-duan-huan-jing-yi-lai/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'ENV'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'development'</span><span class="token punctuation">:</span>    logging<span class="token punctuation">.</span>log<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f'配置开发环境....'</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 改为生产环境</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">FLASK_ENV</span><span class="token operator">=</span>production<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask-pre_request-参数校验</title>
      <link href="/2023/04/05/coding/flask-pre-request-can-shu-xiao-yan/"/>
      <url>/2023/04/05/coding/flask-pre-request-can-shu-xiao-yan/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pre_request<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pre_request <span class="token keyword">import</span> pre<span class="token punctuation">,</span> Rulefields <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"param1"</span><span class="token punctuation">:</span> Rule<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">"param1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"param2"</span><span class="token punctuation">:</span> Rule<span class="token punctuation">(</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">"param2"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/app/query"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"post"</span><span class="token punctuation">,</span> <span class="token string">"get"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@pre<span class="token punctuation">.</span>catch</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    param1 <span class="token operator">=</span> param<span class="token punctuation">(</span><span class="token string">"param1"</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span>    param2 <span class="token operator">=</span> param_list<span class="token punctuation">(</span><span class="token string">"param2"</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">param</span><span class="token punctuation">(</span>field<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"GET"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span>field<span class="token punctuation">)</span>    <span class="token keyword">elif</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"POST"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> request<span class="token punctuation">.</span>json<span class="token punctuation">.</span>get<span class="token punctuation">(</span>field<span class="token punctuation">)</span>    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">"不支持这种请求方法"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">param_list</span><span class="token punctuation">(</span>field<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"GET"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>getlist<span class="token punctuation">(</span>field<span class="token punctuation">)</span>    <span class="token keyword">elif</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">"POST"</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> request<span class="token punctuation">.</span>json<span class="token punctuation">.</span>get<span class="token punctuation">(</span>field<span class="token punctuation">)</span>    <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">"不支持这种请求方法"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-logging-自动打印方法入口日志</title>
      <link href="/2023/04/05/coding/python-logging-zi-dong-da-yin-fang-fa-ru-kou-ri-zhi/"/>
      <url>/2023/04/05/coding/python-logging-zi-dong-da-yin-fang-fa-ru-kou-ri-zhi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> functools <span class="token keyword">import</span> wraps<span class="token keyword">import</span> logging<span class="token keyword">def</span> <span class="token function">fun_log</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token decorator annotation punctuation">@wraps</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        logging<span class="token punctuation">.</span>log<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>func<span class="token punctuation">.</span>__name__<span class="token punctuation">}</span></span><span class="token string"> called. args: </span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">}</span></span><span class="token string">, kwargs: </span><span class="token interpolation"><span class="token punctuation">{</span>kwargs<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@fun_log</span><span class="token keyword">def</span> <span class="token function">fun_xxxx</span><span class="token punctuation">(</span>param1<span class="token punctuation">,</span> param2<span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-lru_cache-每日自动清理缓存</title>
      <link href="/2023/04/05/coding/python-lru-cache-mei-ri-zi-dong-qing-li-huan-cun/"/>
      <url>/2023/04/05/coding/python-lru-cache-mei-ri-zi-dong-qing-li-huan-cun/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> functools <span class="token keyword">import</span> wraps<span class="token keyword">import</span> logging<span class="token keyword">import</span> utils<span class="token punctuation">.</span>date_utils <span class="token keyword">as</span> date_utils<span class="token keyword">class</span> <span class="token class-name">TodayCacheManager</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    _date_pattern <span class="token operator">=</span> <span class="token string">'%Y-%m-%d'</span>    _today <span class="token operator">=</span> date_utils<span class="token punctuation">.</span>now_date_str<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@staticmethod</span>    <span class="token keyword">def</span> <span class="token function">is_today</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> TodayCacheManager<span class="token punctuation">.</span>_today <span class="token operator">==</span> date_utils<span class="token punctuation">.</span>now_date_str<span class="token punctuation">(</span>TodayCacheManager<span class="token punctuation">.</span>_date_pattern<span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@staticmethod</span>    <span class="token keyword">def</span> <span class="token function">reset_today</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        TodayCacheManager<span class="token punctuation">.</span>_today <span class="token operator">=</span> date_utils<span class="token punctuation">.</span>now_date_str<span class="token punctuation">(</span>TodayCacheManager<span class="token punctuation">.</span>_date_pattern<span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@staticmethod</span>    <span class="token keyword">def</span> <span class="token function">clear_cache_if_not_today</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> TodayCacheManager<span class="token punctuation">.</span>is_today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            func<span class="token punctuation">.</span>cache_clear<span class="token punctuation">(</span><span class="token punctuation">)</span>            TodayCacheManager<span class="token punctuation">.</span>reset_today<span class="token punctuation">(</span><span class="token punctuation">)</span>            logging<span class="token punctuation">.</span>log<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f'Cache cleared for </span><span class="token interpolation"><span class="token punctuation">{</span>func<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">daily_cache_manager</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token decorator annotation punctuation">@wraps</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        TodayCacheManager<span class="token punctuation">.</span>clear_cache_if_not_today<span class="token punctuation">(</span>func<span class="token punctuation">)</span>        <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">now_date_str</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> datetime<span class="token punctuation">.</span>date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@daily_cache_manager</span><span class="token decorator annotation punctuation">@lru_cache</span><span class="token punctuation">(</span>maxsize<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span> typed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">func_xxx</span><span class="token punctuation">(</span>param1<span class="token punctuation">,</span> param2<span class="token punctuation">,</span> param3<span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><p>同样的思路，可以扩展为自定义的清理规则</p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-stockstats-股票分析</title>
      <link href="/2023/04/05/coding/python-stockstats-gu-piao-fen-xi/"/>
      <url>/2023/04/05/coding/python-stockstats-gu-piao-fen-xi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> stockstats<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> stockstats<span class="token keyword">def</span> <span class="token function">stockstats_default</span><span class="token punctuation">(</span>old_df<span class="token punctuation">)</span><span class="token punctuation">:</span>    ss <span class="token operator">=</span> stockstats<span class="token punctuation">.</span>StockDataFrame<span class="token punctuation">.</span>retype<span class="token punctuation">(</span>old_df<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'close'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> old_df<span class="token punctuation">:</span>        <span class="token keyword">return</span> old_df    <span class="token keyword">elif</span> <span class="token string">'volume'</span> <span class="token keyword">in</span> old_df<span class="token punctuation">:</span>        df <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">,</span> <span class="token string">'close'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'volume'</span><span class="token punctuation">,</span>                 <span class="token string">'tr'</span><span class="token punctuation">,</span> <span class="token string">'atr'</span><span class="token punctuation">,</span> <span class="token string">'close_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_5_sma'</span><span class="token punctuation">,</span> <span class="token string">'close_20_sma'</span><span class="token punctuation">,</span> <span class="token string">'close_60_sma'</span><span class="token punctuation">,</span> <span class="token string">'close_120_sma'</span><span class="token punctuation">,</span>                 <span class="token string">'close_200_sma'</span><span class="token punctuation">,</span>                 <span class="token string">'close_20_sma_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_60_sma_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_120_sma_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_5_ema'</span><span class="token punctuation">,</span>                 <span class="token string">'close_20_ema'</span><span class="token punctuation">,</span> <span class="token string">'close_60_ema'</span><span class="token punctuation">,</span> <span class="token string">'close_120_ema'</span><span class="token punctuation">,</span> <span class="token string">'close_20_ema_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_200_ema'</span><span class="token punctuation">,</span>                 <span class="token string">'macd'</span><span class="token punctuation">,</span> <span class="token string">'macds'</span><span class="token punctuation">,</span> <span class="token string">'macdh'</span><span class="token punctuation">,</span> <span class="token string">'kdjk'</span><span class="token punctuation">,</span> <span class="token string">'kdjd'</span><span class="token punctuation">,</span> <span class="token string">'kdjj'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        df <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">,</span> <span class="token string">'close'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'low'</span><span class="token punctuation">,</span>                 <span class="token string">'close_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_5_sma'</span><span class="token punctuation">,</span> <span class="token string">'close_20_sma'</span><span class="token punctuation">,</span> <span class="token string">'close_60_sma'</span><span class="token punctuation">,</span> <span class="token string">'close_120_sma'</span><span class="token punctuation">,</span> <span class="token string">'close_200_sma'</span><span class="token punctuation">,</span>                 <span class="token string">'close_20_sma_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_60_sma_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_120_sma_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_5_ema'</span><span class="token punctuation">,</span>                 <span class="token string">'close_20_ema'</span><span class="token punctuation">,</span> <span class="token string">'close_60_ema'</span><span class="token punctuation">,</span> <span class="token string">'close_120_ema'</span><span class="token punctuation">,</span> <span class="token string">'close_20_ema_-1_d'</span><span class="token punctuation">,</span> <span class="token string">'close_200_ema'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'rate_sma20'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_20_sma'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_20_sma'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_20_sma_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema20'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_20_ema'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_20_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_20_ema_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_sma60'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_60_sma'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_60_sma'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_60_sma_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema60'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_60_ema'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_60_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_60_ema_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_sma120'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_120_sma'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_120_sma'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_120_sma_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema120'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_120_ema'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_120_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_120_ema_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_sma200'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_200_sma'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_200_sma'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_200_sma_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema200'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close_200_ema'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close_200_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'close_200_ema_-1_d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    ss <span class="token operator">=</span> stockstats<span class="token punctuation">.</span>StockDataFrame<span class="token punctuation">.</span>retype<span class="token punctuation">(</span>df<span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema20_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'rate_ema20'</span><span class="token punctuation">,</span> <span class="token string">'rate_ema20_5_ema'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'rate_ema20_5_ema'</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema60_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'rate_ema60'</span><span class="token punctuation">,</span> <span class="token string">'rate_ema60_5_ema'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'rate_ema60_5_ema'</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema120_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'rate_ema120'</span><span class="token punctuation">,</span> <span class="token string">'rate_ema120_5_ema'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'rate_ema120_5_ema'</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'rate_ema200_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ss<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'rate_ema200'</span><span class="token punctuation">,</span> <span class="token string">'rate_ema200_5_ema'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'rate_ema200_5_ema'</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'h_rate_ema20_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'rate_ema20_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span>    df<span class="token punctuation">[</span><span class="token string">'h_rate_ema60_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'rate_ema60_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span>    df<span class="token punctuation">[</span><span class="token string">'h_rate_ema120_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'rate_ema120_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span>    df<span class="token punctuation">[</span><span class="token string">'h_rate_ema200_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'rate_ema200_5_ema'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span>    df<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> df<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> stockstats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile-Nginx部署静态页面</title>
      <link href="/2023/04/05/yun-wei/dockerfile-nginx-bu-shu-jing-tai-ye-mian/"/>
      <url>/2023/04/05/yun-wei/dockerfile-nginx-bu-shu-jing-tai-ye-mian/</url>
      
        <content type="html"><![CDATA[<h2 id="Dockerfile"><code>Dockerfile</code></h2><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> nginx:stable-alpine-slim</span><span class="token instruction"><span class="token keyword">COPY</span> ./dist /usr/share/nginx/html</span><span class="token instruction"><span class="token keyword">COPY</span> ./default.conf /etc/nginx/conf.d/</span><span class="token instruction"><span class="token keyword">RUN</span> chmod -R 755 /usr/share/nginx/html</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"nginx"</span>, <span class="token string">"-g"</span>, <span class="token string">"daemon off;"</span>]</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="default-conf"><code>default.conf</code></h2><pre class="line-numbers language-config" data-language="config"><code class="language-config">server {    listen       80;    server_name  localhost;    location / {        root   /usr/share/nginx/html;        index  index.html index.htm;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dockerfile </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite-axios-解决跨域</title>
      <link href="/2023/04/05/coding/vite-axios-jie-jue-kua-yu/"/>
      <url>/2023/04/05/coding/vite-axios-jie-jue-kua-yu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">const</span> api <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">'/api'</span><span class="token punctuation">,</span>    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">'Accept'</span><span class="token operator">:</span> <span class="token string">'application/json'</span><span class="token punctuation">,</span> <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/json;charset=utf-8'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>vite.config.js</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token string-property property">"/api"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token comment">// target: "http://xxxxxxx.xyz:15000",</span>            <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">"http://127.0.0.1:15000"</span><span class="token punctuation">,</span>            <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token function-variable function">rewrite</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\/api</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask-解决跨域</title>
      <link href="/2023/04/05/coding/flask-jie-jue-kua-yu/"/>
      <url>/2023/04/05/coding/flask-jie-jue-kua-yu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> flask_cors<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 两种方式</span><span class="token comment"># 全局</span>CORS<span class="token punctuation">(</span>app<span class="token punctuation">,</span> supports_credentials<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># 包装在 @app.route 之上</span><span class="token decorator annotation punctuation">@cross_origin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-天净沙·春燕</title>
      <link href="/2023/04/05/zuo-pin/shi-ci-tian-jing-sha-chun-yan/"/>
      <url>/2023/04/05/zuo-pin/shi-ci-tian-jing-sha-chun-yan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>天净沙·春燕</p><p>日暮西山新雨，燕子花柳旧曲，吹落梧桐醉语。羁旅几许，惹得青丝万缕。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DockerSwarm-更新镜像和容器</title>
      <link href="/2023/04/05/yun-wei/dockerswarm-geng-xin-jing-xiang-he-rong-qi/"/>
      <url>/2023/04/05/yun-wei/dockerswarm-geng-xin-jing-xiang-he-rong-qi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token function">service</span> update <span class="token parameter variable">--image</span> xxxx_image_name xxxx_container_name<span class="token function">docker</span> <span class="token function">service</span> update xxxx_container_name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DockerCompose-更新镜像和容器</title>
      <link href="/2023/04/05/yun-wei/dockercompose-geng-xin-jing-xiang-he-rong-qi/"/>
      <url>/2023/04/05/yun-wei/dockercompose-geng-xin-jing-xiang-he-rong-qi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker-compose</span> pull<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-echarts-整合</title>
      <link href="/2023/04/05/coding/vue-echarts-zheng-he/"/>
      <url>/2023/04/05/coding/vue-echarts-zheng-he/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> echarts vue-echarts <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>main.js</code> 按需引入:</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span>createApp<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span><span class="token keyword">import</span> <span class="token string">'./assets/main.css'</span><span class="token keyword">import</span> ECharts <span class="token keyword">from</span> <span class="token string">'vue-echarts'</span><span class="token keyword">import</span> <span class="token punctuation">{</span>use<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"echarts/core"</span><span class="token punctuation">;</span><span class="token comment">// 手动引入 ECharts 各模块来减小打包体积</span><span class="token keyword">import</span> <span class="token punctuation">{</span>    CanvasRenderer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'echarts/renderers'</span><span class="token keyword">import</span> <span class="token punctuation">{</span>    BarChart<span class="token punctuation">,</span> PieChart<span class="token punctuation">,</span> LineChart<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'echarts/charts'</span><span class="token keyword">import</span> <span class="token punctuation">{</span>    LegendComponent<span class="token punctuation">,</span> TitleComponent<span class="token punctuation">,</span>    GridComponent<span class="token punctuation">,</span>    TooltipComponent<span class="token punctuation">,</span> MarkPointComponent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'echarts/components'</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    LegendComponent<span class="token punctuation">,</span> TitleComponent<span class="token punctuation">,</span>    CanvasRenderer<span class="token punctuation">,</span> BarChart<span class="token punctuation">,</span> PieChart<span class="token punctuation">,</span> LineChart<span class="token punctuation">,</span>    GridComponent<span class="token punctuation">,</span> TooltipComponent<span class="token punctuation">,</span> MarkPointComponent<span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'v-chart'</span><span class="token punctuation">,</span> ECharts<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用时，使用<code>v-chart</code>标签，传入<code>option</code>参数即可<br>值得注意的是，<code>v-chart</code>标签及其外层标签需要设置<code>css</code>才能正常显示，比如：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-line-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-chart</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table-line-chart<span class="token punctuation">"</span></span> <span class="token attr-name">:option</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chartOptions<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style scoped&gt;.table-line-chart-container</span> <span class="token punctuation">{</span>    <span class="token comment">/* 外层需要使用绝对定位，本层使用相对定位 */</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.table-line-chart</span> <span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">}</span>&lt;/style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-chroma-js-色阶操作</title>
      <link href="/2023/04/05/coding/javascript-chroma-js-se-jie-cao-zuo/"/>
      <url>/2023/04/05/coding/javascript-chroma-js-se-jie-cao-zuo/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> chroma-js <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> chroma <span class="token keyword">from</span> <span class="token string">'chroma-js'</span><span class="token keyword">const</span> chroma_scale_green <span class="token operator">=</span> chroma<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'White'</span><span class="token punctuation">,</span> <span class="token string">'green'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 现成的色阶</span>chroma<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token string">'Spectral'</span><span class="token punctuation">)</span>chroma<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token string">'RdPu'</span><span class="token punctuation">)</span><span class="token comment">// 反转色阶</span>chroma<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token string">'RdPu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">domain</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 参数取值范围: 0-1</span><span class="token comment">// 返回十六进制字符串</span><span class="token function">chroma_scale_green</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 返回rgb数组</span><span class="token function">chroma_scale_green</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 使用log函数使颜色变化变缓</span><span class="token function">chroma_scale_green</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript-dayjs-时间操作及格式化</title>
      <link href="/2023/04/05/coding/javascript-dayjs-shi-jian-cao-zuo-ji-ge-shi-hua/"/>
      <url>/2023/04/05/coding/javascript-dayjs-shi-jian-cao-zuo-ji-ge-shi-hua/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> dayjs <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> dayjs <span class="token keyword">from</span> <span class="token string">"dayjs"</span><span class="token punctuation">;</span><span class="token comment">// 获取三个月前的一个日期并格式化</span><span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'month'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"YYYY-MM-DD"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-security-用户权限认证</title>
      <link href="/2023/04/04/coding/spring-security-yong-hu-quan-xian-ren-zheng/"/>
      <url>/2023/04/04/coding/spring-security-yong-hu-quan-xian-ren-zheng/</url>
      
        <content type="html"><![CDATA[<p>update:<br><font color="red">自<code>Security5</code>之后，官方建使用<code>ReactiveUserDetailsService</code>支持响应式API，或使用<code>UserDetailsRepository</code>支持传统Servlet API。</font></p><hr><p>在应用层面上，<code>spring security</code> 权限认证拦截的核心是 <code>UserDetailsService</code> 接口，该接口返回 <code>UserDetails</code> 接口，并用于 <code>@PreAuthorize</code> 方法注解的权限认证。所以，实现这两个接口，就可以实现权限认证的功能了。</p><p><a href="https://github.com/jxch-study/study-starter-security">GitHub仓库地址</a></p><h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mariadb.jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mariadb-java-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库">数据库</h2><p>docker-compose.yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>   <span class="token key atrule">mariadb</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mariadb    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai      <span class="token key atrule">MARIADB_ROOT_PASSWORD</span><span class="token punctuation">:</span> demo      <span class="token key atrule">MARIADB_DATABASE</span><span class="token punctuation">:</span> demo      <span class="token key atrule">MARIADB_USER</span><span class="token punctuation">:</span> demo      <span class="token key atrule">MARIADB_PASSWORD</span><span class="token punctuation">:</span> demo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>table.sql</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> capital<span class="token punctuation">.</span>permission<span class="token punctuation">(</span>    id              <span class="token keyword">bigint</span> <span class="token keyword">auto_increment</span>        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>    permission_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    permission_url  <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    parent_id       <span class="token keyword">bigint</span>       <span class="token boolean">null</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> permission_pk2        <span class="token keyword">unique</span> <span class="token punctuation">(</span>permission_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">index</span> permission_permission_name_index    <span class="token keyword">on</span> capital<span class="token punctuation">.</span>permission <span class="token punctuation">(</span>permission_name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> capital<span class="token punctuation">.</span>role<span class="token punctuation">(</span>    id        <span class="token keyword">bigint</span> <span class="token keyword">auto_increment</span>        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>    role_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    role_desc <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> role_pk2        <span class="token keyword">unique</span> <span class="token punctuation">(</span>role_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">index</span> role_role_name_index    <span class="token keyword">on</span> capital<span class="token punctuation">.</span>role <span class="token punctuation">(</span>role_name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> capital<span class="token punctuation">.</span>role_permission<span class="token punctuation">(</span>    role_id       <span class="token keyword">bigint</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    permission_id <span class="token keyword">bigint</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>role_id<span class="token punctuation">,</span> permission_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> capital<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">(</span>    id       <span class="token keyword">bigint</span>             <span class="token operator">not</span> <span class="token boolean">null</span>        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>    username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>       <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    password <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>       <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    <span class="token keyword">status</span>   <span class="token keyword">smallint</span> <span class="token keyword">default</span> <span class="token number">1</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> user_pk2        <span class="token keyword">unique</span> <span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">index</span> user_username_index    <span class="token keyword">on</span> capital<span class="token punctuation">.</span><span class="token keyword">user</span> <span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> capital<span class="token punctuation">.</span>user_role<span class="token punctuation">(</span>    user_id <span class="token keyword">bigint</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    role_id <span class="token keyword">bigint</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> role_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> capital<span class="token punctuation">.</span>role <span class="token punctuation">(</span>id<span class="token punctuation">,</span> role_name<span class="token punctuation">,</span> role_desc<span class="token punctuation">)</span><span class="token keyword">values</span>  <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token string">'管理员'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> capital<span class="token punctuation">.</span>permission <span class="token punctuation">(</span>id<span class="token punctuation">,</span> permission_name<span class="token punctuation">,</span> permission_url<span class="token punctuation">,</span> parent_id<span class="token punctuation">)</span><span class="token keyword">values</span>  <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'全部'</span><span class="token punctuation">,</span> <span class="token string">'all'</span><span class="token punctuation">,</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> capital<span class="token punctuation">.</span>role_permission <span class="token punctuation">(</span>role_id<span class="token punctuation">,</span> permission_id<span class="token punctuation">)</span><span class="token keyword">values</span>  <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> capital<span class="token punctuation">.</span><span class="token keyword">user</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> <span class="token keyword">status</span><span class="token punctuation">)</span><span class="token keyword">values</span>  <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token string">'$2a$10$5htW2zeFNwk7l2yjlAqO6ue4n/BnLdrZEeM8Cx/.UEJRGHsQJG7NW'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> capital<span class="token punctuation">.</span>user_role <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> role_id<span class="token punctuation">)</span><span class="token keyword">values</span>  <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>application.yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mariadb<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/demo<span class="token punctuation">?</span>useSSL=false<span class="token important">&amp;serverTimezone=Asia/Shanghai</span>    <span class="token key atrule">username</span><span class="token punctuation">:</span> demo    <span class="token key atrule">password</span><span class="token punctuation">:</span> demo    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.mariadb.jdbc.Driver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="PO">PO</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"permission"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PermissionDO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> permissionName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> permissionUrl<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> parentId<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"role"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RoleDO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> roleName<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> roleDesc<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"role_permission"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RolePermissionDO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> roleId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> permissionId<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"user_role"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRoleDO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> userId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> roleId<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>UserDO</code>实现<code>UserDetails</code>接口（简洁写法，违背了单一职责原则，这里只是Demo，应该让<code>UserDetails</code>获取并持有<code>UserDto</code>）</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDO</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetails</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">&gt;</span></span> authorityList<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> authorityList<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAccountNonExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAccountNonLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isCredentialsNonExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="DAO">DAO</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PermissionDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PermissionDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RoleDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RolePermissionDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RolePermissionDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRoleDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Service">Service</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PermissionService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PermissionDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RolePermissionService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RolePermissionDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RoleService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRoleService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PermissionServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PermissionDao</span><span class="token punctuation">,</span> <span class="token class-name">PermissionDO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">PermissionService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RolePermissionServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RolePermissionDao</span><span class="token punctuation">,</span> <span class="token class-name">RolePermissionDO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">RolePermissionService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RoleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleDao</span><span class="token punctuation">,</span> <span class="token class-name">RoleDO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">RoleService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRoleServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleDao</span><span class="token punctuation">,</span> <span class="token class-name">UserRoleDO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">UserRoleService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDao</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="security-config">security config</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableMethodSecurity</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserDetailsService</span> userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">AuthenticationManager</span> <span class="token function">authenticationManager</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">HttpSecurity</span> httpSecurity<span class="token punctuation">,</span> <span class="token class-name">BCryptPasswordEncoder</span> passwordEncoder<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token comment">// 设置认证方式</span>        <span class="token keyword">return</span> httpSecurity<span class="token punctuation">.</span><span class="token function">getSharedObject</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">userDetailsService</span><span class="token punctuation">(</span>userService<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span>passwordEncoder<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">CorsRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 跨域问题</span>        registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedHeaders</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span><span class="token string">"GET"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedOrigins</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="认证">认证</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDetailsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">PermissionService</span> permissionService<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserRoleService</span> userRoleService<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RolePermissionService</span> rolePermissionService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">UserDetails</span> <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UsernameNotFoundException</span> <span class="token punctuation">{</span>        <span class="token class-name">UserDO</span> user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UsernameNotFoundException</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">&gt;</span></span> authorityList <span class="token operator">=</span> userRoleService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleDO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserRoleDO</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>userRoleDO <span class="token operator">-&gt;</span> rolePermissionService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RolePermissionDO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">RolePermissionDO</span><span class="token operator">::</span><span class="token function">getRoleId</span><span class="token punctuation">,</span> userRoleDO<span class="token punctuation">.</span><span class="token function">getRoleId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token operator">::</span><span class="token function">stream</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>rolePermissionDo <span class="token operator">-&gt;</span> permissionService<span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PermissionDO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">PermissionDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> rolePermissionDo<span class="token punctuation">.</span><span class="token function">getPermissionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>rolePermissionDo <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">(</span>rolePermissionDo<span class="token punctuation">.</span><span class="token function">getPermissionUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">setAuthorityList</span><span class="token punctuation">(</span>authorityList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试Controller">测试Controller</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SSTestController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">"hasAuthority('all')"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"欢迎访问"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-security-解决跨域问题</title>
      <link href="/2023/04/04/coding/spring-security-jie-jue-kua-yu-wen-ti/"/>
      <url>/2023/04/04/coding/spring-security-jie-jue-kua-yu-wen-ti/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@EnableMethodSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">CorsRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedHeaders</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span><span class="token string">"GET"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">allowedOrigins</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring-security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus-修改SqlSessionFactory</title>
      <link href="/2023/04/04/coding/mybatis-plus-xiu-gai-sqlsessionfactory/"/>
      <url>/2023/04/04/coding/mybatis-plus-xiu-gai-sqlsessionfactory/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@Primary</span>    <span class="token keyword">public</span> <span class="token class-name">SqlSessionFactory</span> <span class="token function">sqlSessionFactory</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> datasource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">MybatisSqlSessionFactoryBean</span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisSqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bean<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>datasource<span class="token punctuation">)</span><span class="token punctuation">;</span>        bean<span class="token punctuation">.</span><span class="token function">setMapperLocations</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token string">"classpath*:mapper/**.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus-自动ORM编码</title>
      <link href="/2023/04/04/coding/mybatis-plus-zi-dong-orm-bian-ma/"/>
      <url>/2023/04/04/coding/mybatis-plus-zi-dong-orm-bian-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="依赖">依赖</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mariadb.jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mariadb-java-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="PO">PO</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDO</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="DAO">DAO</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Mapper</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Service">Service</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDao</span><span class="token punctuation">,</span> <span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="otherServices">otherServices</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token keyword">public</span> <span class="token keyword">class</span> otherServiceImpl <span class="token keyword">implements</span> otherService <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">UserDO</span> <span class="token function">findUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getone</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">UserDO</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven-配置项目编码方式</title>
      <link href="/2023/04/04/coding/maven-pei-zhi-xiang-mu-bian-ma-fang-shi/"/>
      <url>/2023/04/04/coding/maven-pei-zhi-xiang-mu-bian-ma-fang-shi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven-配置JDK版本</title>
      <link href="/2023/04/04/coding/maven-pei-zhi-jdk-ban-ben/"/>
      <url>/2023/04/04/coding/maven-pei-zhi-jdk-ban-ben/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite-自动引入UI组件</title>
      <link href="/2023/04/03/coding/vite-zi-dong-yin-ru-ui-zu-jian/"/>
      <url>/2023/04/03/coding/vite-zi-dong-yin-ru-ui-zu-jian/</url>
      
        <content type="html"><![CDATA[<p>安装插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> unplugin-vue-components <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>vite.config.ts</code>(以<code>NaiveUi</code>为例):</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">'@vitejs/plugin-vue'</span><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">'path'</span><span class="token keyword">import</span> ViteComponents <span class="token keyword">from</span> <span class="token string">'unplugin-vue-components/vite'</span><span class="token keyword">import</span> <span class="token punctuation">{</span>NaiveUiResolver<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'unplugin-vue-components/resolvers'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        base<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>        plugins<span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function">ViteComponents</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                resolvers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">NaiveUiResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        resolve<span class="token operator">:</span> <span class="token punctuation">{</span>            alias<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>                find<span class="token operator">:</span> <span class="token string">'@'</span><span class="token punctuation">,</span>                replacement<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'src'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        server<span class="token operator">:</span> <span class="token punctuation">{</span>            open<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-诗句-励志-1</title>
      <link href="/2023/04/03/bi-ji/zhai-chao-shi-ju-li-zhi-1/"/>
      <url>/2023/04/03/bi-ji/zhai-chao-shi-ju-li-zhi-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>行到水穷处，坐看云起时<br>山穷水复疑无路，柳暗花明又一村<br>会当凌绝顶，一览众山小<br>人生如逆旅，我亦是行人<br>知其不可奈何而安之若命<br>吾生也有涯，而知也无涯，以有涯随无涯，殆矣<br>人宁愿意义虚无，也不愿空无意义<br>在任何时候总有与你同样聪明的人做出与你相反的判断<br>世无常贵，事无常师<br>反以知彼，覆以知己</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-格言联璧-名句-5</title>
      <link href="/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-5/"/>
      <url>/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>古之名望相近则相得，今之名望相近则相妒<br>孝莫辞劳，转眼便为人父母；善因望报，回头但看尔儿孙<br>理欲交争，肺腑成为吴越。物我一体，参商终是兄弟<br>政令之所重者人才，国家之所重者元气<br>父母所欲为者，我继述之；父母所重念者，我亲厚之<br>兄弟和其中自乐，子孙贤此外何求<br>造物所忌，曰刻曰巧；万类相感，以诚以忠<br>入瑶树琼林中皆宝，有谦德仁心者为祥<br>行垢不湔，德缺不补，对天岂无愧心<br>内不欺己，外不欺人<br>何思何虑，居心当如止水；勿取勿忘，为学当如流水<br>存养宜冲粹，近春温；省察宜谨严，近秋肃<br>惩忿如摧山，窒欲如填壑；惩忿如救火，窒欲如防水<br>奢者富不足，俭者贫有余。奢者心常贫，贫者心常富<br>蚕茧蛛丝，蚁封蚓结，儿女子之经营<br>慎言动于妻子仆隶之间，检身人于食息起居之际<br>宽厚者，毋使人有所恃；精明者，不使人有所容<br>富儿因求宦倾赀，污吏以黩货失职<br>问消息于蓍龟，疑团空结；祈福祉于奥灶，奢想徒劳<br>圣贤学问是一套，行王道必本天德；后世学问是两截，不修己只管治人<br>理以心得为精，故当沈潜，不然耳边口头尔<br><font color="red">信不足则多言</font><br><font color="red">立党羽，不如昭信义</font><br>孝子百世之宗，仁人天下之命<br>圣人敛福，君子考祥；作德日休，为善最乐<br>听断之官，成心必不可有；任事之官，成算必不可无<br>做大官底是一样家数，做好人底是一样家数<br>知足常乐，能忍自安<br>休诿罪于气化，一切责之人事。休过望于世间，一切求之我身<br>亲兄弟析箸，璧合翻作瓜分。士大夫爱钱，书香化为铜臭<br><font color="red">一能胜千，君子不可无此小心。吾何畏彼，丈夫不可无此大志</font><br>安莫安于知足，危莫危于多言<br>人之心胸，多欲则窄，寡欲则宽<br><font color="red">惟有主，则天地万物自我而立；必无私，斯上下四旁咸得其平</font><br>茹素虽佛氏教也，好生非上天意乎<br>志之所趋，无远勿届，穷山距海，不能限也<br>对痴人莫说梦话，防所误也；见短人莫说矮话，避所忌也<br>有违言为信，践言为非信者<br>情爱过义，子孙之灾也<br>勤俭治家之本，忠孝齐家之本，谨慎保家之本，诗书起家之本，积善传家之本<br>饱肥甘衣轻暖，不知节者损福<br>广积聚骄富贵，不知止者杀身<br><font color="red">戒久睡，久睡倦神</font><br>慨夏畦之劳劳，秋毫无补；悯冬烘之贸贸，春恩广覃<br>四海和平之福，只是随缘。一生牵惹之劳，总因好事<br>口不妄言，君子所以存诚<br>志之所向，无坚不入，锐兵固甲，不能御也<br>天下无不可化之人，但恐诚心未至；天下无不可为之事，只怕立志不坚</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 格言联璧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-格言联璧-名句-4</title>
      <link href="/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-4/"/>
      <url>/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>敬守此心，则心定；敛抑其气，则气平<br>富以能施为德，贫以无求为德，贵以下人为德，贱以忘势为德<br>要得富贵福泽，天主张由不得我。要做贤人君子，我主张由不得天<br><font color="red">爱惜精神，留他日担当宇宙。蹉跎岁月，尽此身污秽乾坤</font><br>为善最乐，读书便佳<br>富贵家不肯从宽，必遭横祸；聪明人不肯学厚，必殀天年<br><font color="red">海阔从鱼跃，天空任鸟飞</font><br>事以典故为据，故当博洽，不然臆说杜撰也<br>敬为千圣授受真源，慎乃百年提撕紧钥<br>祸到休愁，也要会救；福来休喜，也要会受<br>庙堂之上，以养正气为先；海宇之内，以养元气为本<br><font color="red">凡为外所胜者，皆内不足；凡为邪所夺者，皆正不足</font><br>只一事不留心，便有一事不得其理；只一物不留心，便有一物不得其所<br>古之从仕者养人，今之从仕者养己<br>未用兵时，全要虚心用人；既用兵时，全要实心活人<br>治家严家乃和，居乡恕乡乃睦<br><font color="red">直不犯祸，和不害义</font><br>困辱非忧，取困辱为忧。荣利非乐，忘荣利为乐<br>接人要和中有介，处事要精中有果，认理要正中有道通<br>意粗性躁，一事无成。心平气和，千祥骈集<br><font color="red">喜闻人过，不若喜闻己过；乐道己善，何如乐道人善</font><br><font color="red">在事者，当置身利害之外；建言者，当设身利害之中</font><br>人属寒微，要思矜礼他，着不得一毫傲睨的气象<br>果决人似忙，心中常有余闲。因循人似闲，人中常有余忙<br>俗语近于市，纤语近于娼，诨语近于优<br><font color="red">岂能尽如人意，但求不愧我心</font><br>能改过，则天地不怒。能安分，则鬼神无权<br>居官先厚民风，处事先求大体<br>事属暖昧，要思回护他，着不得一点攻讦的念头<br>名誉自屈辱中彰，德量自隐忍中大<br><font color="red">荆棘满野，而望收嘉禾者愚；私念满胸，而欲求福应者悖</font><br>心术不可得罪于天地，言行要留好样与儿孙<br>肆傲者纳侮，诲过者长恶，贪利者害己，纵欲者戕生<br><font color="red">作恶事须防鬼神知，干好事莫怕旁人笑</font><br>作德日休，是谓福地；居易俟命，是谓洞天<br>藏书可以邀友，积德可以邀天<br><font color="red">于福作罪，其罪非轻；于苦作福，其福最大</font><br>洁己方能不失己，爱民所重在亲民<br>供人欣赏，侪风月于烟花，是曰亵天<br><font color="red">宇宙内事，乃己分内事；己分内事，乃宇宙内事</font><br>舍事功更无学问。求性道不外文章<br>事事难上难，举足常虞失坠；件件想一想，浑身都是过差<br>怒宜实力消融，过要细心检点<br>经济出自学问，经济方有本源；心性见之事功，心性方为圆满<br>一庭之内，自有至乐；六经以外，别无奇书<br>逞我机锋，借诗书以戏谑，是名侮圣<br>罪莫大于亵天，恶莫大于无耻；苛刻心术之恶，过莫大于深险<br>衣垢不湔，器缺不补，对人犹有惭色<br><font color="red">盛者衰之始，福者祸之基</font><br>国家立法，不可不严。有司行法，不可不恕</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 格言联璧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-格言联璧-名句-3</title>
      <link href="/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-3/"/>
      <url>/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>处事须留余地，责善切戒尽言<br>以耐事了天下之多事，以无心息天下之争心<br>读书贵能疑，疑乃可以启信。读书在有渐，渐乃克底有成<br>只是心不放肆，便无过差。只是心不怠忽，便无逸志<br>临事须替别人想，论人先将自己想<br><font color="red">以镜自照见形容，以心自照见吉凶</font><br>人性中不曾缺一物，人性上不可添一物<br>看书求理，须令自家胸中点头。与人谈理，须令人家胸中点头<br><font color="red">不为过三字，昧却多少良心；没奈何三字，抹却多少体面</font><br>静能制动，沈能制浮。宽能制褊，缓能制急<br>观天地生物气象，学圣贤克己工夫<br>贫贱是苦境，能善处者自乐；富贵是乐境，不善处者更苦<br>谈人之善，泽于膏沐；暴人之恶，痛于戈矛<br>人未己知，不可急求其知；人未己合，不可急与之合<br>勿施小惠伤大体，毋借公道遂私情<br>心志要苦，意趣要乐。气度要宏，言动要谨<br>勤能补拙，俭以养廉<br>尽前行者地步窄，向后看者眼界宽<br>阿谀取容，男子耻为妾妇之道。本真不凿，大人不失赤子之心<br>穷达有命，吉凶见人<br>省费医贫，恬退医躁，独卧医淫，随缘医愁，读书医俗<br>以鲜花视美色，则孽障自消；以流水听弦歌，则性灵何害<br>当厄之施甘于时雨，伤心之语毒于阴冰<br>能容小人是大人，能培薄德是厚德<br><font color="red">居处必先精勤，乃能闲暇。凡事务求停妥，然后逍遥</font><br><font color="red">毋毁众人之名，以成一己之善。毋没天下之理，以护一己之过</font><br><font color="red">实处着脚，稳处下手</font><br>兄弟争财，父遗不尽不止；妻妾争宠，夫命不死不休<br>盖世功劳，当不得一个“矜”字。弥天罪恶，当不得一个“悔”字<br>古之学者得一善言，附于其身；今之学者得一善言，务以悦人<br>万理澄彻，则一心愈精而愈谨。一心凝聚，则万理愈通而愈流<br>语言间尽可积德，妻子间亦是修身<br>吉凶祸福，是天主张。毁誉予夺，是人主张。主身行己，是我主张<br>位尊身危，财多命殆<br><font color="red">天下无不是的父母，世间最难得者兄弟</font><br>读书者不贱，力田者不饥。积德者不倾，择交者不败<br>天德只是个无我，王道只是个爱人<br><font color="red">真圣贤决非迂腐，真豪杰断不粗疏</font><br>防欲如挽逆水之舟，才歇手便下流。力行如缘无枝之树，才住脚便下坠<br>以仁义存心，以勤俭作家，以忍让接物<br><font color="red">恩怕先益后损，威怕先松后紧</font><br>无事时戒一“偷”字，有事时戒一“乱”字<br>律身惟廉为宜，处世以退为尚<br>俭则约，约则百善俱兴；侈则肆，肆则百恶俱纵<br><font color="red">欲理会七尺，先理会方寸；欲理会六合，先理会一腔</font><br>径路窄处，留一步与人行；滋味浓处，减三分让人嗜<br>飘风不可以调宫商，巧妇不可以主中馈，词章之士不可以治国家<br><font color="red">人褊急，我受之以宽宏；人险仄，我待之以坦荡</font><br>工于论人者，察己常阔疏；狃于讦直者，发言多弊病<br><font color="red">不蹈无人之室，不入有事之门，不处藏物之所</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 格言联璧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-格言联璧-名句-2</title>
      <link href="/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-2/"/>
      <url>/2023/04/01/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>穷寇不可追也，遁辞不可攻也，贫民不可威也<br>见人不是，诸恶之根，见己不是，万善之门<br>热闹荣华之境，一过辄生凄凉。清真冷淡之为，历久愈有意味<br>古今来许多世家，无非积德。天地间第一人品，还是读书<br>善用威者不轻怒，善用恩者不妄施<br>事到手，且莫急，便要缓缓想；想到时，切莫缓，便要急急行<br>静以修身，俭以养德。入则笃行，出则友贤<br>作本色人，说根心话，干近情事<br><font color="red">知足常足，终身不辱；知止常止，终身不耻</font><br>怒如火，不遏则燎原；欲如水，不遏则滔天<br>不让古人，是谓有志；不让今人，是谓无量<br>读书为身上之用，而人以为纸上之用<br>执法如山，守身如玉，爱民如子，去蠹如仇<br>小人专望受人恩，受过辄忘；君子不轻受人恩，受则必报<br>书有未曾经我读，事无不可对人言<br>至乐无如读书，至要莫如教子<br><font color="red">福莫大于无祸，祸莫大于邀福</font><br>大智兴邦，不过集众思；大愚误国，只为好自用<br><font color="red">任难任之事，要有力而无气；处难处之人，要有知而无言</font><br>待小人宜宽，防小人宜严<br>无欲之谓圣，寡欲之谓贤，多欲之谓凡，徇欲之谓狂<br><font color="red">律己宜带秋气，处世须带春风</font><br>有真才者，必不矜才。有实学者，必不夸学<br>天下之势，以渐而成；天下之事，以积而居<br><font color="red">强不知以为知，此乃大愚；本无事而生事，是谓薄福</font><br>处逆境心，须用开拓法。处顺境心，要用收敛法<br>物忌全胜，事忌全美，人忌全盛<br>一时劝人以言，百世劝人以书<br><font color="red">有作用者，器宇定是不凡。有智慧者，才情决然不露</font><br>以虚养心，以德养身，以仁养天下万物，以道养天下万世<br><font color="red">心不欲杂，杂则神荡而不收；心不欲劳，劳则神疲而不入</font><br>对愁人勿乐，对哭人勿笑，对失意人勿矜<br>寡欲故静，有主则虚<br>必有容，德乃大；必有忍，事乃济<br>聪明者，戒太察。刚强者，戒太暴。温良者，戒无断<br>喜来时一检点，怒来时一检点，怠惰时一检点，放肆时一检点<br>毋以小嫌疏至戚，毋以新怨忘旧恩<br>倚势欺人，势尽而为人欺；恃财侮人，财散而受人侮<br>彼之理是，我之理非，我让之；彼之理非，我之理是，我容之<br><font color="red">大着肚皮容物，立定脚跟做人</font><br><font color="red">闻恶不可遽怒，恐为谗人泄忿；闻善不可就亲，恐引奸人进身</font><br>炎凉之态，富贵其于贫贱；嫉妒之心，骨肉其于外人<br>待人三自反，处世两如何<br>涵养冲虚，便是身世学问。省除烦恼，何等心性安和<br><font color="red">公生明，诚生明，从容生明</font><br>居安虑危，处治思乱<br>丈夫之高华，只在于道德气节。鄙夫之炫耀，但求诸服饰起居<br>古之君子病其无能也，学之；今之君子耻其无能也，讳之<br>身在天地后，心在天地前；身在万物中，心在万物上<br><font color="red">世事让三分，天空地阔。心田培一点，子种孙收</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 格言联璧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230401-低级权力与权力补偿</title>
      <link href="/2023/04/01/ri-ji/ri-ji-20230401-di-ji-quan-li-yu-quan-li-bu-chang/"/>
      <url>/2023/04/01/ri-ji/ri-ji-20230401-di-ji-quan-li-yu-quan-li-bu-chang/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="fd5c2873eeca9b34d6037041f0e74255a84a929cfccb907fbbb1b9175210d46a">775986d9acbb0b15ae59994c4d3eed102c5cde7af6b3d56c93a136409fbbf3abf9afbdf1728ecc73ce0c9888cac4ca16d9c7fc1fedfc80fba2c453f1add7075d23dcfbfaf3cdab79abdcdf968a3cd372939624b41b4bb891135e1b730d969b5df83d09f7cbb32659dfa782d8574abb64ae4cbfb4148d79534e476ede88f51b29ba5ceb1e60a28697d596be07cb17881905ce93dd9402e409cf19578df24d8bebd8025c464567513eb1806f1d00a8edb7f692682f4e837f3f11fb5aabfe3de2d932ba2121f17e888c77cf356878ff71252778ca98019988b0431d599fa142103d1b569ed445d7fa12032a15590e7e95ca0207001719c13ee7c3bac03348af488ccb153d1369fe43e4d09c4e110da2f3608b745fcaa61b0e5b7c990ee24da905fe716f2d7aa07a1bc4b48e1b50612e350ef776fb85490e9d4bb56e912fd4da08ad7a789fe243f4191e9dbca9c7204841259ca804f84f48a826e8cff1c9dbd4af8d1895dae8ac65a1d91bacc37958c8a5a39a962d754d8ef359c4f7fd5ba01156c449d838fc0621f03a6abf4d0be04ef5f64be47008da54c07b911ccde4016fde5ac2fb21dc57ffc65f23a46e6c5d4bbde5212ec9bdb5b96f17713813ff28e9fbd92a7fdc8f5950e4f4e2bd0b3c43420eb3043aa0495cde4769672cce7282e6868409152fcb4a7b1e6ab63f0556073d9283f9e25e7989ebb0271b9177ddc35710e5f1894493b67d848e0da3a346cf9c98738e0939ec044e2b68456646fc3d961491dc2fd323c4d208d0a50fb6018c136e6b951c64923bfe922a6e61cb3d15171fe6c96491263e28a3f1c5a550f05f07cffddbe7b31b6ef4b930437c7b06df224e7cdc8e774308148adee2e0159b302864e9cc14464362b3e12b1c5e77af1328c74ca08a8a2bad3c4f73e0c969d67479eec703f3acaa7a070c01506580e636cd638cb30b076a9945acfd8a7438c1e317ca6f77f33fa2a59410558f6ae85e22372db1fe3da971107427efe79821fd0399103853a8547f3f2ca4cd3f30a1177d1ed1b0ec637244f0b2ea75e98ef88dfae67088e3e44c841062325fb47ab74240824131486a09ca2246d3ddf00f410dd4b1fdd66144cbba7fc203016269d68d2149a31bf7b032f37b47f4bbc8574dcae800c6a9e2969023e9c43d5e004c9fc7866d41b6da54154bfabc57f451e95597bdef9fb038b69e5acd7c35e7becedca25b2eebc2f53d7da991d6f8ea44185f4c3f907d440cb86fc33d445aefa6d81f86214c9f307e9d4e63ed9eb4e1c89456320c5723d3d159835367568ecc17ddcf3903697202e4c5ebd341e5645b0658ea756b6dc7123a9c431ab72fdcfc6b26d32a69289baa1a775d670b141bb8545081bbd75e26656b27f6495233802e4f5e7334ea2d1ad15b231fe4307f0e1262e0445959768a04f8537f494f1c78d13e78cd87bbdadf8c7e4fe6783b36c920d715c2f234a271eb7a8489d9b30560e0a61ce95e0c92529722298636457c7dc900b88b174b3f42ff2246b5e05cdcb5b47c370f9718786227465fafa0bad9379f158ae4f6948c71a670d51045d940398b10c0dd4c2a97018cc37c30185b6093d30f4c9f9d3b2bfca088a9f416caad164f23341486b57ad368c2382ae8ca3263b56c1f8528fd7890476808237b55f754adec4a8471989a8e3510d3d1cb5a6cb569278d4cf9cb187349c0a1c91188663882ac948d0f17c263262b0499136fa475693849437cfaa568b80b63437925fef03153746058cdf0240dd88c366822ba8710f9f17c5442f6b1e0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-鬼谷子-名句</title>
      <link href="/2023/04/01/bi-ji/zhai-chao-gui-gu-zi-ming-ju/"/>
      <url>/2023/04/01/bi-ji/zhai-chao-gui-gu-zi-ming-ju/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">春生、夏长、秋收、冬藏，天之正也</font><br>智用于众人之所不能知，而能用于众人之所不能见<br>故知之始己，自知而后知人也<br>审定有无与其实虚，随其嗜欲以见其志意<br>以阳求阴，苞以德也；以阴结阳，施以力也<br>牧之不审，得情不明；得情不明，定基不审<br><font color="red">欲多则心散，心散则志衰，志衰则思不达</font><br>变化无穷，各有所归<br>智贵不妄，听贵聪，智贵明，辞贵奇<br><font color="red">逆之者，虽成必败</font><br><font color="red">养志之始，务在安己</font><br>相益则亲，相损则疏<br>静和者养气，养气得其和<br>愚者易蔽也，不肖者易惧也，贪者易诱也<br>无目者，不可示以五色，无耳者，不可告以五音<br>经起秋毫之末，挥之于太山之本<br>言多必有数短之处，议其短验之<br><font color="red">几者不晚，成而不拘，久而化成</font><br>捭之者，料其情也；阖之者，结其诚也<br>出言则欲听，举事则欲成<br>禽兽知用其所长，而谈者知用其所用也<br>外亲而内疏者说内，内亲而外疏者说外<br>势败者，不可神肃察也<br>有守之人，目不视非、耳不听邪<br>谋莫难于周密，说莫难于悉听，事莫难于必成<br>量权不审，不少强弱轻重之称；揣情不审，不知隐匿变化之动静<br>见其谋事，知其志意<br>有近而不可见，有远而可知<br>摩之在此，符之在彼，从而用之，事无不可<br>以反求复，观其所托<br>日进前而不御，遥闻声而相思<br>不出户而知天下，不窥牖而见天道<br>用赏贵信，用刑贵正<br>强郄既斗，称胜者，高其功，盛其势<br>振穷趋急，施之能言厚德之人<br>捭阖者，以变动阴阳，四时开闭，以化万物<br>口者，心之门户也；心者，神之主也<br>阴阳其和，终始其义<br>阳动而行，阴止而藏；阳动而出，阴隐而入<br>耳目者，心之佐助也，所以窥间见奸邪<br>物有自然，事有合离<br><font color="red">反以观往，覆以验来；反以知古，覆以知今；反以知彼，覆以知己</font><br>人言者，动也；己默者，静也<br>阴虑可否，明言得失，以御其志<br>远而亲者，有阴德也。近而疏者，志不合也<br>化转环属，各有形势，反覆相求，因事为制<br>古之大化者，乃与无形俱生<br>审察其所先后，度权量能，校其伎巧短长<br>为善者，君与之赏；为非者，君与之罚<br><font color="red">世无常贵，事无常师</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA-图表分析-0.资源下载</title>
      <link href="/2023/04/01/jie-ge-xing-wei-jiao-yi-xi-tong/pa-tu-biao-fen-xi-0.zi-yuan-xia-zai/"/>
      <url>/2023/04/01/jie-ge-xing-wei-jiao-yi-xi-tong/pa-tu-biao-fen-xi-0.zi-yuan-xia-zai/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.brookstradingcourse.com/price-action-trading-books/">下载链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Photoshop-图层解锁与锁定</title>
      <link href="/2023/04/01/coding/photoshop-tu-ceng-jie-suo-yu-suo-ding/"/>
      <url>/2023/04/01/coding/photoshop-tu-ceng-jie-suo-yu-suo-ding/</url>
      
        <content type="html"><![CDATA[<p>上锁的话，点击图层图标栏的小锁就可以了<br>解锁的话，也可以这样操作</p><p>其他解锁方式：</p><ol><li>点击图层的小锁</li><li><font color="orange">如果无法解锁，就需要改变图像模式为“RGB颜色”，然后再进行解锁</font><ul><li><font color="red">图像 -&gt; 模式 -&gt; RGB颜色</font></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Photoshop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230331-Brooks-S&amp;P Emini</title>
      <link href="/2023/04/01/shi-chang-fen-xi/shi-chang-fen-xi-20230331-brooks-sp-emini/"/>
      <url>/2023/04/01/shi-chang-fen-xi/shi-chang-fen-xi-20230331-brooks-sp-emini/</url>
      
        <content type="html"><![CDATA[<p><font color="red">Trading Update: Friday March 31, 2023</font></p><h2 id="font-color-green-S-P-Emini-pre-open-market-analysis-font"><font color="green">S&amp;P Emini pre-open market analysis</font></h2><h3 id="font-color-red-Emini-daily-chart-font"><font color="red">Emini daily chart</font></h3><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230331-Emini-Daily-Chart-3.30.23-768x432.jpg" alt="Emini daily chart"></p><ul><li>Today is the final day of month. The bulls have <strong>a bull reversal bar, closing near their high</strong>. The bulls will want another bull trend day and <strong>paint as little of a tail above the current monthly chart bar as possible</strong>. The bears want the opposite. They want to create as much damage to the current bar on the monthly chart.<ul><li><font color="gray">今天是月末最后一天。形成一根多头反转K线，收在高点附近。多头希望造成一个多头趋势交易日，尽可能缩短在月线图上的上影线。空头的想法相反，他们想在月线图上造成更强的卖压</font></li></ul></li><li>The Emini <strong>gapped up yesterday and closed above the March 22nd high</strong>. Although yesterday was a bear close, this is a sign of <strong>bullish strength</strong>.<ul><li><font color="gray">Emini 昨日跳空并收于3/22高点上方。尽管昨天是熊市收盘，但这是看涨力量的迹象</font></li></ul></li><li>The bulls want to create a <strong>measuring gap and trap the limit order bears selling</strong>, betting on a failed bull breakout.<ul><li><font color="gray">多头希望形成一个测量缺口和一个以限价单买入的押注多头突破失败的空头陷阱</font></li></ul></li><li>The bears need to prevent the bulls from getting another bull bar today. If the bulls can get another <strong>strong close</strong> today, it will increase the chances of <strong>a measured move</strong> from the March 13th low to the March 22nd high, projecting up to <strong>around 4,300</strong>.<ul><li><font color="gray">空头今天需要阻止多头形成一根阳线，如果多头今天能再次强势收盘，将提高从3/13低点到3/22高点的趋势延续的可能，预计涨到4300左右</font></li></ul></li><li>There is a <strong>bear trendline around 4,140</strong>, and the market may have to <strong>test it</strong>.<ul><li><font color="gray">市场可能会测试4140左右处的空头趋势线</font></li></ul></li></ul><h3 id="font-color-red-Emini-5-minute-chart-and-what-to-expect-today-font"><font color="red">Emini 5-minute chart and what to expect today</font></h3><ul><li>Emini is <strong>up 13 points in the overnight</strong> Globex session.<ul><li><font color="gray">Emini 隔夜交易上涨了13点</font></li></ul></li><li>The Market has been in <strong>a tight bull channel</strong> on the Globex 60-minute chart since March 28th.  Yesterday’s <strong>overnight session spent much time going sideways</strong>.<ul><li><font color="gray">自3/28以来，市场在60分钟图上一直处于窄幅上升通道中，昨天的隔夜交易花了很多时间进行横盘整理</font></li></ul></li><li>Traders should expect a <strong>trading range</strong> open. This means that most traders should <strong>wait for the first 6-12 bars</strong> before placing a trade.<ul><li><font color="gray">交易者预计会出现一个交易区间，这意味着大多数交易者在进行交易之前应该等待 6-12 根K线</font></li></ul></li><li>Most traders should wait for the opening swing trade that usually forms before the end of the <strong>2nd hour</strong> after forming <strong>a double top/bottom or a wedge top/bottom</strong>.<ul><li><font color="gray">大多数交易者会等待在第2小时结束前形成的双顶/双底或楔形顶/底处进行摆动交易</font></li></ul></li><li>The most important thing to remember on the open is to be <strong>patient</strong> and not too eager to trade. There are <strong>often several reversals</strong>, so traders should <strong>wait for a clear breakout with follow-through</strong> if they want to trade breakouts.<ul><li><font color="gray">在开盘时要记住的最重要的事情是要有耐心，不要太急于交易。经常会发生几次反转，因此交易者应该等待出现明显的突破形态再跟进突破交易</font></li></ul></li><li>Today is <strong>the end of the quarter, Month, and week</strong>. This will create the potential for <strong>a surprise move</strong>, up or down late in the day. Traders should be prepared for anything.<ul><li><font color="gray">今天是季度末、月末和周末。这将可能导致在当天晚些时候出现意外上涨或下跌。交易者应该为任何事情做好准备</font></li></ul></li></ul><h2 id="font-color-red-Yesterday’s-Emini-setups-font"><font color="red">Yesterday’s Emini setups</font></h2><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230331-SP500-Emini-5-Min-HH-Then-LH-Double-Top-and-Spike-and-Channel-Bear-Trend-768x432.png" alt="Emini 5 Min"></p><p><img src="/static/trade/Brooks-%E8%BD%AC%E8%BD%BD/20230331Encyclopedia-Emini-HH-Then-Spike-and-Channel-Bear-Trend-768x432.png" alt="Emini 5 Min - Detailed"></p><hr><p><a href="https://www.brookstradingcourse.com/analysis/emini-final-day-of-month/">原文链接-Brooks</a></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
            <tag> Brooks-转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计划-知识类技能树</title>
      <link href="/2023/03/26/ri-ji/ji-hua-zhi-shi-lei-ji-neng-shu/"/>
      <url>/2023/03/26/ri-ji/ji-hua-zhi-shi-lei-ji-neng-shu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="dbf672d4dbe8d9006ba8798ade1dfde7b4fa304a260659d2332d210d2af16b4c">775986d9acbb0b15ae59994c4d3eed107a0dee96be6f19c214e83c83f2804c8362d2c48d4a17097eb690bd41e8dbafd57a6fb9b25ef735be2c9d1345295e04f1972685b044ad4d9a0c911108aa27188df7d07dcb4461521f68d10168bf476f22d37b73a3c6207024ecad4400c056e68c9ff7717ec18ef419656bec48a0aca104c4a07f48336a62d6fd3c822b77482d07a5a7e89c482e7ce6f53af8faeb70635923a5715356f108e7907aff362f3fca3f966a207fe9df343207c659e34bf7ed15afdc0808a187a2745e1ae61d7cb5d4aaa9396b6862f43ce474f59dad56f86e5f35dcece29563f9dbc8eff1dcd4288ba93984943efd8d50ee161f46006098fd8f1b9f1a14919201a67483dfb7abb7987cdad5956ab423574c7b5f94964ef0fc87b748aad4c9235ba377e306fd689e6b3abcb9ce67e157da99b00d7583e41524bca8bc3fc2f60a5c5ef09f66db6aa93ff2a1f715a0ba032705e4309f669b6230c2359988d485cab16200e1c36eb95540c486a313484ca92b89fa783ab02d8851eae7fbbdd3e5ac4ed28fafa597219cc61653003f58763f9c8f7443e5529ea067a08f9626559a6a491545fda37a6bcb733c254b1d15936c2f01d21b25246e4ac8d9038bcfedab548674200a7da12f9df159c8c1ecf2559cbd4be34be31cc1eb2e0bb92e638ef476f2cb9695f3a0a288d63d73d57fc9be14edc4077e577a43c81e73d462719fd19048534fe6d69eba3506a078a06ea0b7fc09e987c3df4bb790418490376c2f7bb5ec25abd3dc67f3d6ecf324bf7e45b3c3752a12fdafdda9e00488e32521afcd2a4ed0b12fb273f2bfc5478d155a2484aacf19ca923d3c6080532769cc72a6b61b88f55c8900d07eec62790fc5e449fd4cf12acf44504afde3b5b18f7b87342c6b853cb94640fbad8c95b8abd274de38739fb8dbf0e5ae81d442faf2460a525e2cb44e77f23588c73f5e69d152db72cc28082ac0cbf5afbb9a77c6c1144777390a4026cbd1f2e20d5b35e8ad3d0e2db4fbfcf3156ac8f0f7600d7aa683cae1b8305c54d3bb95fb59e61c4d4d17e623ea0796705c14047c8721119e64125ca079f4cd82a807a63075fb0ffd381bb755b0008b4a909985319ad2592b9a441439d8ac005cf46e1a23b4a1f2213274be114f27c55cdacf13bd91cdf43d9eb66c77995da91296286652fb98c7fd56e11b93c9426ff38d67fcfbdad95ce0893c6dd3bdeca8b7cdf573ebce0be6f30fe5f5d9337c5f4c58f9ef9946c962ce9f02771d148fd46693d13627fd5429608fe0c79d9887467d26b88daef115f0d0c636254127b61e9bb18b3451cc41e6c1e4f2efa0692253b227f387718e804758bf1c656381d7e60db197cb037445524744bb720b195dcfe22d1f8d7a40ee0122d1dbb9cc0f69892f1ff2a3159657d0e58642aa41ffb9fc34afd29fdb73effdf93d272d4b8b81670c72da6d63f7ade1df1a0bbc9bacf7ff2bab186ac0ecb3d96d5602ad00b062e96926f84a8de432a4bf3ca922daf26317731187f13912ea527725d1127721c372cac956a98f7f3fab00992a4e347796943a8f92f743ebbdc54900c03ae16e9e6ff820dae2cebb45a85d7a0b4d83e31d08168db719e211e934ff08fd3b78305a787178487e94c15f0618b96816d2965a883723dbc0e1acef7c52653c30e65fef6fe1735d784d9c6e12a561e5191794d21a19c13aaa9beac1881b31fde85005f038745f0a397161b9211a61d689686b54e60d9ee63243f53ecb0038dfed4eb99971936aa1e20606020a2b1f89fbcfad1598b9e4466ded99ae0260d4edd510787140f4c41fa3cd9c59ee4d91399c70b71f97055290d0769b17e4795a5a3987f3d8ba6734a8a62e90b0582c89f20448a256ef767420047f4b16743e2fd527c50fa1031788b5336ddc5684cef6ba3358a38e098c01d2e61a8757bffae1990580e3e8792b13f1fced5e4c888cd0453d540d1c5b0cb61e8bd40eec5397c8cee22b00e1e974ecf01d55db2a1cbf6676e2a5ba58c413b6884562ecaa77ef7876bb3282bda2533aa260bbf11c74d4be6f44506019798eef39d55f5e0dc4b8707de2ea78f29c2253ee7ce1f9445239b7afad279a7926b340bd98491d663ffd20537acedc5fa5baecd9ea898077060359c45619283cdd8c1648e8d0648fdfcf2808e7a1b27b2baa341a228708d060e7b10d8d026f62e66807443bbefa8ff6fd1254a9fceb31db823d72e559476ebfdec1da6c26e456c1d60cc0619be8c605459665a13d6eba7808d3322e647428af1bf9641f8e3c756d560db888e140ef6c0ad304d9408f7e8623a1d4b6475589ff3eaf9e1065fadaf7f89e688a7796b05a51d90073bea585af171c16128ebdf0cb6dc9f7bef176238f22f4db2019de7fe29ee0093f4155b27de46883e1c67ad94d3666f5cd481d4a45eb30305a93665984113e7c0c129bfdda2c121580dd8e6aaee0652792bf3995591d56cbe58ff06806cba6a38617ac405dde7e31e1a4e033bbab29736ba8a0b8296521906e87cecacc306bc32a80fde031cec28baf21bcdaeb1c358b4d3ad77231785dc36627fc25250607e3ddbeb3dc7038ae9893cddba62c19fa8407dd58dbbc3ff49c83300121f2317fb4dbb1eeff358028d684864cbaf26b57ec6171e9cb26c9e4e0425c049c56ccf8ea4b01f29fc7dd14ad3498bbe302c4cf0bf9586ef2a50b4ebe38bbf2fb93c5a4c1de63d899f8f0e3a9eee3d692a29a93b4298a6644fa586834dc608e351f7db201b259ceb7228023444feecea81666dd26e561db5a194ce57d224cf3c40d4b324b7efa3fc445d6eda67b0d1b86defc8e74ea75db2e131540d0ce8755b221e2f9f20719b02d08780019199230b91ec1dd24f2e80d8311879a4bb79e210df493f44f597b151ebd4c851e1288f837d16205049757aa6b698a2f2ed1b3ebfe1f1311114c5b5b18c834cfc5df7edb4bdbe39f8e215c201bcc69837072cbc8dc91e726c931e41cd64b57b2de2af40b40f5e6db72c832736a225d519537f96c0a52bb5b2945e20aaba6618a813579e34da6aa904de8b8b1a620a58ab9bcb1fa4256e525268b1e54726267dd25a6c8efe7540db314d662128f87dd57427095758f786cabe7c3995005e962c45a23bf9a2df0b40981ab8e812e4e4c8f733333933849e07599d9b6ed71f65ca8b2e66ad415c1fd82eb84ce7e712096dc1d06411d266b0448bde17a2b675ad0a14856651d99a1a86362b5743c6a5d6d7e492108f3d3fd64c83fbfcda8822b4cc76fda50d080e8ad793ad170cdc0e4c18ea5bc113ce17ec2e2630c1160b80490f68b865918dad890995964aaed02cb6d45c9e809a70867a5ea8ba302f5c4a8134b77915d778b80d7bbe42a8dad1fbc077fb479c66f25e7627eec426b6c801add361991046a754d9d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-导出最简项目依赖</title>
      <link href="/2023/03/26/coding/python-dao-chu-zui-jian-xiang-mu-yi-lai/"/>
      <url>/2023/03/26/coding/python-dao-chu-zui-jian-xiang-mu-yi-lai/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装 pipreqs</span>pip <span class="token function">install</span> pipreqs<span class="token comment"># 导出项目依赖到 requirements.txt</span>pipreqs ./ <span class="token parameter variable">--encoding</span><span class="token operator">=</span>utf-8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装项目所有依赖包</span>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell-screen虚拟终端</title>
      <link href="/2023/03/26/coding/shell-screen-xu-ni-zhong-duan/"/>
      <url>/2023/03/26/coding/shell-screen-xu-ni-zhong-duan/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看已有的 session</span><span class="token function">screen</span> <span class="token parameter variable">-ls</span><span class="token comment"># 创建一个 session</span><span class="token function">screen</span> <span class="token parameter variable">-S</span> <span class="token variable">$session</span><span class="token comment"># 进入一个 session</span><span class="token function">screen</span> <span class="token parameter variable">-r</span> <span class="token variable">$session</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Ctrl + A + D</code> 组合键退出当前 session</p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解-破解JetBrains全家桶</title>
      <link href="/2023/03/26/coding/po-jie-po-jie-jetbrains-quan-jia-tong/"/>
      <url>/2023/03/26/coding/po-jie-po-jie-jetbrains-quan-jia-tong/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://github.com/libin9iOak/ja-netfilter-all/archive/refs/heads/main.zip">下载ja-netfilter破解包</a>并解压<ul><li>或使用 <code>git clone https://github.com/libin9iOak/ja-netfilter-all.git</code> 克隆下来， <code>git pull</code> 更新</li></ul></li><li>去安装目录的 <code>bin</code> 文件夹中编辑 <code>.exe.vmoptions</code> 文件（比如 <code>idea64.exe.vmoptions</code>）</li><li>添加以下信息 (新版不需要这一步，可以跳过)</li></ol><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">-javaagent</span><span class="token punctuation">:</span><span class="token value attr-value">/path/to/ja-netfilter.jar</span><span class="token comment"># java17+ 需要添加以下属性</span><span class="token key attr-name">--add-opens</span><span class="token punctuation">=</span><span class="token value attr-value">java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><span class="token key attr-name">--add-opens</span><span class="token punctuation">=</span><span class="token value attr-value">java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>执行<code>\path\to\ja-netfilter]\scripts\</code> 文件夹中的破解脚本<ul><li>比如windows下对所有用户进行安装：<code>\path\to\ja-netfilter]\scripts\install-all-users.vbs</code></li></ul></li><li>退出账户登录</li><li><a href="https://3.jetbra.in/">获取激活码</a></li></ol><p><font color="red">如果使用的是 Toolbox App，所以每次更新程序，都需要找到最新的安装目录，然后重复第2步</font></p><hr><p><a href="https://github.com/libin9iOak/ja-netfilter-all#readme">参考文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>proxifier-注册码</title>
      <link href="/2023/03/25/coding/proxifier-zhu-ce-ma/"/>
      <url>/2023/03/25/coding/proxifier-zhu-ce-ma/</url>
      
        <content type="html"><![CDATA[<p><code>L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C</code> (Portable Edition)<br><code>5EZ8G-C3WL5-B56YG-SCXM9-6QZAP</code> (Standard Edition)<br><code>P427L-9Y552-5433E-8DSR3-58Z68</code> (MAC)</p><hr><p><a href="https://www.proxifier.com/download/">proxifier下载页面</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxifier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-下载内部文件</title>
      <link href="/2023/03/24/coding/hexo-xia-zai-nei-bu-wen-jian/"/>
      <url>/2023/03/24/coding/hexo-xia-zai-nei-bu-wen-jian/</url>
      
        <content type="html"><![CDATA[<ol><li><code>_config.yml</code> 文件内修改属性 <code>post_asset_folder: true</code></li><li>在 <code>source</code> 文件夹内创建下载目录 <code>download</code></li><li>下载链接：<code>[xxxxxx](/download/xxxxxx)</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解-MATLAB的安装与破解</title>
      <link href="/2023/03/24/coding/po-jie-matlab-de-an-zhuang-yu-po-jie/"/>
      <url>/2023/03/24/coding/po-jie-matlab-de-an-zhuang-yu-po-jie/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="#ISO">下载所需版本Matlab的ISO完整版</a></li><li>装载ISO</li><li>将虚拟DVD驱动器暂时加入杀软的排除项（安装后可以取消掉这个排除项）</li><li><code>setup.exe</code></li></ol><h2 id="2022">2022+</h2><ol><li>选择 “高级选项-&gt;我有文件安装密钥”</li><li>文件密钥： <code>05322-36228-06991-12654-51812-34369-14072-44298-22786-36732-05503-35033-50900-29808-05166-12170-05630-02560-02687-62114-45079-42917-06281-13007-19512-18270</code></li><li>文件许可证：<a href="/download/matlab2022+/license.lic">license.lic</a></li><li>安装完成后将 <a href="/download/matlab2022+/libmwlmgrimpl.dll">libmwlmgrimpl.dll</a> 文件复制替换到安装目录(<code>...\Matlab\bin\win64\matlab_startup_plugins\lmgrimpl</code>)</li><li>将 <a href="/download/matlab2022+/license.lic">license.lic</a> 文件复制到安装目录 <code>...\Matlab\licenses</code></li></ol><p>其他激活过程：</p><ul><li>如果启动时提示激活，请选择 “在不联网情况手动激活 -&gt; 下一步 -&gt; 输入许可证文件完整路径 -&gt; 然后在字段输入许可证完整路径：<code>...\Matlab\licenses\license.lic</code>”</li><li>可直接执行<code>...\Matlab\bin\win64\activate_matlab.exe</code>进行激活，后续操作同上一条</li><li><font color="red">如果更新了MATLAB，请重复上述第4步</font></li></ul><hr><h2 id="span-id-ISO-Matlab-ISO-下载列表-span"><span id="ISO">Matlab ISO 下载列表</span></h2><p><a href="https://www.123pan.com/s/6xvZVv-03OYH.html">Matlab913_R2022b_Win64.iso</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解 </tag>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解-破解Adobe全家桶</title>
      <link href="/2023/03/23/coding/po-jie-po-jie-adobe-quan-jia-tong/"/>
      <url>/2023/03/23/coding/po-jie-po-jie-adobe-quan-jia-tong/</url>
      
        <content type="html"><![CDATA[<ol><li>下载 <a href="https://github.com/cw2k/Adobe-GenP/releases">Adobe-GenP</a></li><li>参考<a href="https://github.com/cw2k/Adobe-GenP#readme">文档</a>进行破解<ol><li>先选择 <code>Custom Path</code> 按钮，指定需要破解的软件的目录</li><li>再选择 <code>Search Files</code> 按钮，自动扫描需要破解的文件</li><li>最后点击药丸💊图标按钮，进行自动破解</li></ol></li></ol><hr><p>最好把Adobe-GenP的文件夹放到<font color="orange">杀毒软件的排除目录</font>中，以免被杀软误删<br><font color="red">个人感觉疑似存在官方支持，破解之后不要用于商业用途，不要在公司内部使用</font></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PI-树莓派(raspberry pi)升级固件</title>
      <link href="/2023/03/23/coding/pi-shu-mei-pai-raspberry-pi-sheng-ji-gu-jian/"/>
      <url>/2023/03/23/coding/pi-shu-mei-pai-raspberry-pi-sheng-ji-gu-jian/</url>
      
        <content type="html"><![CDATA[<p>在<a href="https://github.com/raspberrypi/rpi-imager/releases">官方树莓派镜像烧录器</a>中：</p><ol><li>选择 <code>Misc utility images</code> -&gt; <code>Bootloader</code> -&gt; <code>SD Card Boot</code>(或 <code>USB Boot</code>)</li><li>将烧录好的<code>SD Card</code>或<code>USB</code>插入树莓派</li><li>启动电源，直至绿灯规律闪烁，说明升级成功，关闭电源即可</li></ol>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBS-使用VBS静默运行脚本(开机自启)</title>
      <link href="/2023/03/23/coding/vbs-shi-yong-vbs-jing-mo-yun-xing-jiao-ben-kai-ji-zi-qi/"/>
      <url>/2023/03/23/coding/vbs-shi-yong-vbs-jing-mo-yun-xing-jiao-ben-kai-ji-zi-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="创建vbs文件">创建vbs文件</h2><pre class="line-numbers language-visual-basic" data-language="visual-basic"><code class="language-visual-basic"><span class="token keyword">set</span> ws<span class="token operator">=</span>WScript<span class="token punctuation">.</span>CreateObject<span class="token punctuation">(</span><span class="token string">"WScript.Shell"</span><span class="token punctuation">)</span>ws<span class="token punctuation">.</span>Run <span class="token string">"E:\bin\xxx.bat"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token comment">' 如果使用的是powershell脚本</span>ws<span class="token punctuation">.</span>Run <span class="token string">"E:\bin\xxx.ps1"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="开机自启">开机自启</h2><p>创建vbs文件的快捷方式，放到启动目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># win+r</span>shell:startup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230321-强人思维改造</title>
      <link href="/2023/03/21/ri-ji/ri-ji-20230321-qiang-ren-si-wei-gai-zao/"/>
      <url>/2023/03/21/ri-ji/ri-ji-20230321-qiang-ren-si-wei-gai-zao/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="cc032dc455fabdcb9cb6d7f09fd1d511266d955635db148f164c66726b4b4619">775986d9acbb0b15ae59994c4d3eed10550046652a2c975eacf0b2c2858bc4135f5f8fc1c0d5ad0e4111f2e0acd8574c288054ac3adf5d05d98edc37a198ea78e4c8330acbf2d51b3b6f1048bb253d6f523ef64e2722500279642dd7ffa0c8f7848dfcf998489b6c17cb126398c919fa1e74c492fd33112b663b4dde86d999144d1fe5c41c39e13204a7938819d52e1aa1c0da3656a4affca1dfd29097c0d185702b6e21995bc33a98cc8ad40005a1db1323d5f63e5cbffb29af3c51a6c9a8ccd4a95ddadc3be3ec5413b370411a75d278bc324430705233620d0a190af7ac286d724dcda7a3d860ba1c50c38ec28d1828875c77e697d00de951155f744d4402d5365d533406e7928581e03e9cb07be15c36382b912b1024cfbdc161a6f9248ae149bc3f162b1009514256096f5dbe9968f4b43bfc303a812c5ff1dfe8424dcd0e2e38999b9a47a642b41aaec544d455804883245ccd884e8a24362b1aee3b8d937fa3ae32ae9c91f530d123e63fa9377095f6d6b6a4e802b6e72938a4fcd03acf69d632d292a8836192925b96b4c5f8ecf20b4eba944d18d87a6a8a9ebf7cd251e09bb0a22ddeaf882da55538ac8509081e781004bb429c2008b123a6e327d2ee25b1858f0490a4fee6d7fed040d39311ded066b205debddf0a34a7c8b9fecce043772162dc1fd4fd5c64f60ce39a27ce28916ef3e233090df425b554b39977e27a5dcfaac39d1684098e1c628b6885e00c5954c711cef8b03999f307531d73f1c8e2fd0d513c3fb6b2afc3c96ec78b6b9ea674c3a4c19ce6632c4cafb13eea90ebfa4dbffb36c240ea4103612aa846b738d6f32d53b182dfd87a5b8152e0002c85b762885853ce17ae97363f9ca588047e0e59e81cdf94efd03db5bc4a5148e67cda1aee730696006ceeecb888295df89224a16737384eee9a3098427265226039b1f60b58c1b4d2a24ddf995fe10260531f2b1495f91cbaaa785f67d1608be7977f57e3c7d5e3c30dbf633b3db05bc3b70eb97dcd86a86116c0577c620c0f42a5b954db977ac6262b44fcc17442da5c2aee6e1dd7bf57897869575e2f9a0f186bbdfe999d9dddf0a82c1e11b61fa5c5d139fd1e75f08deff0275962aa2a4af23a43e26d4e70dd5d089d1865d676f4dbb9b7595e40f0724d21cf22784f8221f91ba0ca562630c5215c26e4fee8cd720b8ccb7aff6bd0dceb183975865d35fdb09b82dbe0f94b440beb618c468be2a3c869a67f25b7d53e84a32d169c826e7699ffe02892ef569464051274822076987b56754518e1f4b5bf81952bc3ff80d1b5bbe5d86d7cca7d9a5d52758ae51c0e223762efae2238a5fceac253730b4f3a1ef489f9f6e305f6014287e11ff84037f7f06ddc8fb54e2d4ccd99ad7bcd114da67a80f35ceb2fda0c70b4e67b5136fe525bf27d086de80d0bf64ed6c84e57933d81719c124c41c0d5e6c53747544e93131b5c34b7b69e07762c8ddf5956c20282bca2e43d65d4b2581fde2aa28a12f573450e74145534967f7baee87095e9f6499ef04c30fe6fcbd1814d3deca614e1643381ed80e45873295ca77b24f1ec746c578797ba6b0860d33002ff03dcf6c577e2b72a4f4dfcb240127901ce2267f8401dedc76c210fc6aaf84734fc06e6fb13a4c1c80f17c6138d5c8213a277e7d2f0bc82d700fb57d5cce643c7b3a71d70a25ee17bdf469fb551de448c16f909059c0632711c390b1a165568a76c6de0a7dd54f0c7db226206aec61016d2eb6fa05f50191ab47fc0dd82d6dc7bd20a47d2d71d112ed2126789c8fbf636bd6e100f2062fcd893580c548e75888462a187661dbb2ce45a1151434aa8498758ea285b3f9a2c78a762a685abb9fd07515d7e589fb6c10e1718e3ae80fe79074c8351430f518f2a9727265db90ecf4e4f6602aa710645a4809032c65008992f7a3eee474416e149cd71b28f4b27117c798521c1f179bb8eee85a5c0cf6d4edeeea01253fe279499906f0c7af91e548baaac4d56899993f8731bfda03a030859d53bdcb76a3c85a29111dfff3940ffba821fbc4bf2eaf32ce5db9e448586e7a96f2ef10cabba8bcae50385bbf240d6b175c1c51cf37cc604fb07d40a870625ef5d18cf709b35e45c5117cba77ac857d4fdff2d3a0503ca20e49268b4c174b2f518e97c50fd626437270b6272bdee762ac9f228560e181ca4566e2ae4c729313a1347dbc587880f9727771cfbaee4c3f49ea9c82e4ac8b53f5af122db1a3f3a50b344fad90c87ef8bc6b617bfb9d91c5d9ed88faccbc0aaf3916e4c39f0b342fdd6477b1af4b9b70b0ecc887ccd236ef220bc864e2b9826fc4c72960e9aea43955540a475674ffc9eca701946b7bd1491b51eec0ba2150c734bfd8d1f04efc065b6cbe50bb98fc7cbc240b1f07e4ae7c2cabcd8d0dfd454982409778791336e494e2dd4684fefe139bebb113225009071123d1212e6575414552aa762bb2d9a311a9ea522f931db03426750ebd38c1f25f28145d9a88d865064141587c6e109bf9cde00bb7926d4ef08a4689756a0939168b39942e363852cd485f91b5dd071239a3905fe06d30aad50dfa2cfbc708f07516f0dc6c089874b4be54ef45f5b3ad5ad9b39639cefa6d1f32f6eb7e5e96c7e8bd53e8ae239621eed15290f24bc94d235da384a2c74660e75931ef2ba947f277e48c2fa36f224cb22ea93f269f12f36e85485677b597b3a7dd1efddbb53fbe18268557f49c05c073ea41b47dde23b9ff718423a14c528b36ed7b38cbfcdeffccda0cdcf5f9780cc48a42b14e9ccb391a0348c41dc2d64b0fe17add6251a0ed7f947bc14e41c85f0b0e4f64b5d51d73858f3d426c58750cfab120c944a069670b214ae04e5f4bd64d1c10949f1f902cee4a53a13b66c8983a8118065ec5ecfa41a085f89c6c549f254df59fb3aedf15c13028802e82c4b2f2f97c50cd128c6784edc1e0ab909b4cc47f29043cd0f2d8e6c5df85a0325b332259f9c0be71f53bbfe9ec8dc2d32c5753f8cd7f9466301cd4cc09a83bc85b330b2dfda31dec79658d4f3a0969167e9c6faee51fb16b102fa7f50518d5d3082d5ab0879a6dcad0e117a8847c83d5247eaab62bab20e449a631abf0abe3781a174f1177f3ff5a7420ed78b67c05100c6b17a1f9ce7da3e98496e2c3fac51c237e8e330ea91ae6829e3f9b56973ed165baaaeb9e225678b17c3bccc0d563138253709e89819f52d7484cda96c5875d966d8cdcef6dfa494897dda50da654179f5251ece1a1cfae9e607a429dc02358274e1cdf0cddda9abd92db139bfdaa43aaec5ba2de1ef6bcafd01308d06c26c7c6785d78713d6422a5f66e9d93c50cf19b1c974d01954f8484edec8395cae14ffe9c0ca2b3ee33bf1c9afb06a3db589a5372042534184c176a9a0820c1438f8d0a38af6ec2004b0a805f07158e18016fbbe3238293095b675853d90202e7de3f5917f5c46a3c8b5387edec723eab108352105396863c0052ad859dd11d8454b3bf4ed27b163e1e3c8017fda095395f8999649e497cf1919226c2b006eaaee818d4e18bab9c7b2b2c98c365194eb5a4fbfe07db264978de3c018f31443ff4a0d691535c5aa410234803e281950314ac422e569b1bcdd5bb8f38c101838371fa9a8577a22546d30d24a46348e45d9c34d9d9bf61efd544c123e80ea6cc7291d9a750cf02a07d47bbee749f687f43872ff4c7a54190d689f249b7d66f79af700d30ad536172c50ffdddae5dfae30428714b1f3c9fd2f0dce3f37d09ae82b2d166364e0769eaab4beffa075e5180cfbad18abe1331d4ba8fd1c514cc6aaaa2b90d50116ef7d505aaf9fef896b4984e8f88d30bd1aa459cac07b97f6447330b7bc512083e0dddfb46456f9e087fc96071e2baf4256defcd7be34c483888d5b4da4bdf709ece2d9be86e967839106590c57af7085c08b65a90033c78b0120f32f742aa2686ed37e3c18e4b8f07b7a3bf876f29551c71f173634c85ff52e7d6ed3aec2f948cb074d120ed493b02977c93f548b649bfae6247331895054fce3f28fd5e43793891ea560cd3cf2c1e7221e87b6a6d41d64c54cb27e05d7c21c5387fc00c9553d450eceb344e411ea8c5dc9b6b91a3610be19f9ef6280f8b77e4e7fd99838b464bbbb9f175e17c3f20583a0f75b793ed1e774cd186418b220a36e329f86fe0ecd72d7816c147d411616f0d20f7aaeef047ce3d72a07ee1bae3f2e3c8894bfa6647319704cdf6d1d4fb9814615156a8afc1c830687cc349d2d5f56fbc67d194dd2cd14a0fca3725decb0724e8d950805a126379790b35b45cbedf338d96049df5f6d569d1c27f50e1db1add2d97ececc6343c40f07c53de745ced1bd56013dfa260d7d21e8b2e97d9bcc1eccc8c73df8a54a85ac34e14b9b029c0f2e2ea9d8d7ad15d1e3e57ad2a2d0fb795a571f11c873e3ea6493ff813a166223eb5d59b979d5a61a6d2e290c8f058d90215966df2618286da87ac08e3500d8c3d8b58b58047ff202d1977da299a5288865a9b0774ef8af0e94fc4a77acae085d0ab593c03cbc6427144ca66341cd40f0ad80116f10edd503f5d371aca47877d9769efa26c693d86d384dd95ad99146c276aa93b21ce490c02f364313c9a1cb7a21ae6d1c604bf19c99d06784dd0b25e479e5017a1ae0757c95c458e802d2d92aa7849f34562b7eca8e23c156d2e41cb04d3c7c8986e0532491bcae6ac06351f0b9977bdf33b892935473a181141426833ec38d7ce49760b6881d0288efd04992ac7e063e8f6974e8ef378464c25aaf718d0ee0f1e457d5b4123267e00a5439796abe06e1789a6e8123834018c12c9c1acf2d488bf029d7028e4e1621f7065a98d9602bd2da4408af16b3b473ccc6d31cc8c270</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powershell-执行策略</title>
      <link href="/2023/03/19/coding/powershell-zhi-xing-ce-lue/"/>
      <url>/2023/03/19/coding/powershell-zhi-xing-ce-lue/</url>
      
        <content type="html"><![CDATA[<h2 id="执行策略">执行策略</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">"Restricted"是默认策略。    Restricted        - 默认执行策略。        - 允许单个命令运行，但不能运行脚本。        - 阻止所有脚本文件的运行，包括格式和配置文件 (.ps1xml)、模块脚本文件 (.psm1)           和 Windows PowerShell 配置文件 (.ps1)。    AllSigned        - 可以运行脚本。        - 要求所有脚本和配置文件由可信发布者签名，包括在本地计算机上编写的脚本。    - 在运行来自尚未分类为可信或不可信发布者的脚本之前进行提示。        - 运行来自 Internet 以外的源的未签名脚本及已签名但有恶意的脚本存在风险。      RemoteSigned        - 可以运行脚本。        - 要求可信发布者对从 Internet（包括电子邮件和即时消息程序）下载的脚本和配置文件          进行数字签名。    - 不要求对已经运行和已在本地计算机编写的脚本（不是从 Internet 下载的脚本）进行数      字签名。        - 面临运行已签名但有恶意的脚本带来的风险。    Unrestricted        - 可以运行未签名脚本。（面临运行恶意脚本所带来的风险。）        - 在运行从 Internet 下载的脚本和配置文件之前警告用户。    Bypass        - 不阻止任何执行项，不显示警告和提示。        - 此执行策略设计用于两种配置：一种是 Windows PowerShell 脚本内置于一个较大的          应用程序中；一种是 Windows PowerShell 成为拥有自身安全模型的某个程序的基础。    Undefined        - 当前作用域中未设置执行策略。        - 如果所有作用域中的执行策略为 Undefined，则有效执行策略为 Restricted，该策略          是默认执行策略。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常用命令">常用命令</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>get-executionpolicy</code></td><td>获取当前执行策略</td></tr><tr><td><code>get-executionpolicy -list</code></td><td>获取对当前会话起作用的所有执行策略<br>并按优先级顺序显示它们</td></tr><tr><td><code>get-executionpolicy -scope CurrentUser</code></td><td>获取用于当前用户作用域的执行策略</td></tr><tr><td><code>Set-ExecutionPolicy &lt; policy-name&gt;</code></td><td>更改执行策略</td></tr><tr><td><code>Set-ExecutionPolicy &lt; policy-name&gt; -scope &lt; scope&gt;</code></td><td>在特定作用域中设置执行策略</td></tr><tr><td><code>set-executionpolicy RemoteSigned</code></td><td>允许运行本地未签名的脚本</td></tr><tr><td><code>set-executionpolicy Undefined</code></td><td>删除本地计算机所有用户的执行策略<br>如果没有在任何作用域中设置执行策略，<br>则有效执行策略为 <code>Restricted</code>，该策略是默认执行策略</td></tr></tbody></table><p>可以使用 <code>PowerShell.exe</code> 的 <code>ExecutionPolicy</code> 参数为新的 Windows PowerShell 会话设置执行策略。该执行策略仅对当前会话和子会话起作用。设置的执行策略不存储在注册表中，而是存储在 <code>$PSExecutionPolicyPreference</code> 环境变量中。当设置了策略的会话关闭时，将删除该变量。<br>例如：<code>powershell.exe -executionpolicy -allsigned</code><br>在会话过程中，为该会话设置的执行策略优先于在注册表中为本地计算机或当前用户设置的执行策略。但是，它不会优先于使用组策略设置设置的执行策略。</p><hr><p>参考：<a href="https://technet.microsoft.com/zh-CN/library/hh847748.aspx">官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powershell-杀死占用端口的进程</title>
      <link href="/2023/03/17/coding/powershell-sha-si-zhan-yong-duan-kou-de-jin-cheng/"/>
      <url>/2023/03/17/coding/powershell-sha-si-zhan-yong-duan-kou-de-jin-cheng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 查找端口占用的PID</span>netstat <span class="token operator">-</span>ano <span class="token punctuation">|</span> findstr <span class="token variable">$port</span><span class="token comment"># 查看PID对应的进程信息</span>tasklist <span class="token punctuation">|</span> findstr <span class="token variable">$pid</span><span class="token comment"># 通过进程名称结束进程</span>taskkill <span class="token operator">/</span>f <span class="token operator">/</span>t <span class="token operator">/</span>im <span class="token variable">$name</span><span class="token comment"># 通过PID结束进程</span>taskkill <span class="token operator">/</span>f <span class="token operator">/</span>t <span class="token operator">/</span>pid <span class="token variable">$pid</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><table><thead><tr><th><code>taskkill</code>命令参数</th><th>说明</th></tr></thead><tbody><tr><td>/f</td><td>指定强制终止进程。</td></tr><tr><td>/t</td><td>终止指定的进程和由它启用的子进程。</td></tr><tr><td>/im   <code>imagename</code></td><td>指定要终止的进程的映像名称。通配符 '*'可用来指定所有任务或映像名称。</td></tr><tr><td>/pid  <code>processid</code></td><td>指定要终止的进程的 PID。使用 TaskList 取得 PID。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230317-什么可以拯救我</title>
      <link href="/2023/03/17/ri-ji/ri-ji-20230317-shi-me-ke-yi-zheng-jiu-wo/"/>
      <url>/2023/03/17/ri-ji/ri-ji-20230317-shi-me-ke-yi-zheng-jiu-wo/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="e0f9085a463344321d8816d79cde5b9b6c51a947295a2655b86715ff31166022">775986d9acbb0b15ae59994c4d3eed1068fc5aab459a70ff53ab22996fe3b43c4d4e5489018d0175daa550ef1f31343cf0c5c05cbabfdcf5b9efa3faad632f49e3c6ac7d2f227996fdef795c083c1baf090c85b8c2f8a7439aa30e44334fcb0b47e562488e0663654708af923e4bfc39fc43ddfb8e445825ede67edb7a33cdaa1d6ae0cba795ccc4cd837015e901649d6577d3c1ef3c6815c08a749a1e245b4d67847698b8d02cabb389b0d52a25f65871d7a4194659e444b44ae0acd23f9438ceaa735c87d2c81bb9ef7a6a3e699315c0ac17f893c919f609540794c0bea9bd9f50571f40a40ae864233957dee1840c8421429b5e503a45f29760c00c69774dee7d9c4bad8b32607e8dbaf4ba94448bd573e2fb0a4a65983b05f089248522884d242d958fbae41a0c0d62576329244310361477c36273a9be90508e3ede26e7a7339e865c2abc396c9fc8d394f13053077cf2432a0ae551159e753ddb49a00b600a5b334f9f2c88646f8a22be5f8d1afa5f8b1cdd85c4cfebce494f559fea18e097a24161955d7d805db5df601df6804e914e9f36e0e571e22f7184a0b39b17721d9b86db450ef3cbb55d34ed62a0b63dd177df3b54b689964612affc958de21e594702a132e0eb20286a094a815ad5c6ab73810cc828e2795f4413b58faada42c9b5e9ae422e54aedb4517893a9225c08fe969da0bcc0d34e75e18b39469208cb7ecad5e1ebbc56f6fa742d2e6b94f33506b5cee18cca00a24edc5af53588bd3c8e37d036c33013de0f606ce42ec634751430ff5880d3949392cb3ebc35d8326e6f5004998eb58ecbce12ca4b215f0b3834fc4965f4f43e4df274ab56a82d4429f3242353e374bf6efd5580cf1c8592f7ce9a269176d39e3106dd759da123820aa25779df0e9a06fce2e605bbff1dbd262949a5208b131817bcbed2cc58df2960d1ca56aa440c66a315f7351746ab739db34a72df087c0c2972ed0856964f10281b15562e17a08fb6fbb6fabaef2c749161921fad8e53858178c5fbddd5b0b8bee8af2a94ea346dac84c0a33d10967c583d91909f3c1a262bb58b18f354c0edb9cc958eb29c373e75c67fe0743512337c36c605a1b85b06c2a3a87cc7813780bdd784a4ac82d827bc7318c60281817fc7c81063701f7597882eb22b6841ee3f891fd97ea11cdf2cabbb8427714e65f81c6d2bb43b16c36cadb39fb5cf4dce4e13d12f9928cda473cb44f222b11bb85f218e58edc01cdfee1ba3e5f9078ae7ac9a35b9202dd8e2f478e57d24cbc63fb1a7f9d587a12acdecf4e17c822eafd6804eb510483bf435c640a2daf41659f6ca14d7858d1240133078adbd8e2df00f3200afe2231e7aba44d0d560564716cefa772f69b6a003d3311b2d02fa04580795503ab1a605c064de01a2272e9edfa7669f67aa8a94ea955171007d604568c2a062b3630fd693dfc1dad3fbcf6e7fb09258018e97989cc97636b5c53ebfe64fd0e503f249a994728af985ff1a00a96aada3910537e75c4c994229405ee606be61fc68d98a01e7975c2e2cab7e37bec34553c9dd4c74590e0d6ecfe0e39f133febca8106e93fcf81efec55565937586e0d4d313c03389feadf66ac3f0d709475e59caa9780ff5fcc18a6af82c01dfbcba6e2c14e10bd7d7392012f254a6c472e36518a924fbb8f1ce7c096b597c2ddb7fc610f06fb2d1fde36d3d3a7c40d4e17ec53ad249d4b11f0b35c269945b77f4a24e5693db4d22997cd469416fa96bbe0b7eb50a56bc996b29023151d9248f9f9867d9e88587673e6844efeb5fbeffb255c228342a8b474ad19198c64850b6c8189a000240ca86e41f8dd96006199a56e6b2467bc788473df94431b212bea5592933e37dd61a84dcf6fd8b345f20f890aa0c7e72e2e6e26a20977643d21cd3e764bae1ee848a9185e57e668ca489197ff403ee0c64f673c66fe0c891530e3484156c162a54fecc0a29a181152d5ec43e28ea6f84d505c618cf88f2976c1b4069c70cf187db4d8100e11e9db7df62aa88b4679750e62edf719836bec23746bbc832474215a83e1490604a80436c709b87f81834b3a89af4fb7254b261dca264f91dbc6c695e5baffe8f4e41c2e6579289af37fbfcadb97a13c78ff5c21737d6e3c96b9b9b3e2bb46d3fb7e5714c684b8313ac63fafd547a786a7d9f0f128b746171d49fdec699c29ac4f5d6971399b4dbe0b0ad3ba3e7edb2a0214702d80be0376377edb00474445e2df22e1d8de229319c7db399e50f716ffa097ec32ad2233eeb97c5673aab5bd4195e31429ab5526dc72977d9ddb3b9d7bd50f3ba3fd08ae8115a1f9bfe1fdfb135e97052de4b2bdc9337534887cd6bcbd6c22978d6671a70c139155ab81869af7908e86dfbed4d0b5af8d3003785093c19201e8a869152635e57092d063dc4f8d671c30b092f805334d755bee9a4ecc7e7345a4285f800b7e349506eba728024a9f34384049bf0f7b3bafb2dc544c915e909fbf913e4ad8fa541d837d816acc746de9d0b59b0aefd6e7a71bf3314ab3657d1025884d9075db7905bd5e5d32e6899ee7a123198ac5a1ae0e7582cf17a1f4a18e038b808ee9341f542f72de23e34175b54984f2f537b197e6857bcfe7c0d82ed4f68ee2fa124a1a2658687281f5cae6b154f88ad0981fd42fd3da4f5b2d94426a24765985cee0d0098e8adf40229045a9734e35b5c84c2881835d2c41d7d99281c9b243372352a091ef7bd5eeb185854ec6a09866611e592f5d205b5afd64d9fed38efaed741fdbaa62a10cb9a5420c03360668279489cac055b0087dbf9747c0368c1f1b443efbc00257891c3a89f1388b15b3e66d3c2844ab9f5e8a0a7dc1d52933d3fb2c2a1198712609a273da2c5555b767032bde5e64bd21547025b24614d81abf287c2047c6432381734226435d0670cec3b12f3c4a5596b5f768a369ebc77c7f6cb9a2a172c4fff6b6b6a74eb655a81e131dd567c37233fcf34eef829a98c26a70c20b10478bcdce14c5be74d8086cdd1cfd18dd6b7a737c7afb232d069766d7db68ae768f6338a7c8cda6040d99bd3042f9cd9ecdd03cb772212c9690de53ff71b42123aed59987489c7bcbacc8e42c1ad5b6134502dcd52866ece51e8141ad5228918cce2833bd827c287d6ad0dde30d3f729d1c2f0fd8f244b8b29a624250deb844783038588e10e995b1bcb928c1af55b64fbf3d5c3009899bc10e71b3d1893214b6486fb858895ef91d14a1c15df0a67054884a9869bc624b600b6d28da9a11e3ab97ccd03b3827ea9bdb15a17ffce300434cf14c02d0ccb47819fdf60538018653e0910ecb69befaee80faf743188a30936a179c27cb84d5dacad3c8ef6fc876a9e8a0c26ffb3c9a7891d3a7398ebd89240a0139888a50c01d392e805fa5103701282cd054c16f9a3f557c38dd0028942</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230317-人生没有意义</title>
      <link href="/2023/03/17/ri-ji/ri-ji-20230317-ren-sheng-mei-you-yi-yi/"/>
      <url>/2023/03/17/ri-ji/ri-ji-20230317-ren-sheng-mei-you-yi-yi/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="1edcf4b7085efedd80b096c4113d7da57d8255c6481c1cf8f1ad8ccd811aaf9e">775986d9acbb0b15ae59994c4d3eed108e49bf525b26a16d35432421802a92859f88d7cf7f731dc4d40f8fbaa494b8d74a69d0b8cc51e49fb0608a777a7d912c7c28d86186e2a1da3e5209386d132d4ad05e0e979bf481996accb50fddc4b3e90fe996c91162fa78cd5e7e0c01ba4768c57dd525032fa433d7be7b843f0406c1666654646a4eb096d45bfdd77dee4d0eee922d61762eb2095f42075a6b1036fc8c3b9bcdf76cbb40a8abbd69162f29d4277c9dc328ae31d36fed97cd37bd7ae21bb5b289f4ca7365138575018341e01edc9675988c3b1bb4891279a8c1800ae896fdcfdcbcdbba71611c40db0542342c7d8c0740cfb72af608da46eacf377ccfb3fb9629a4c3aeef5cb86443ba75de98217df418a22fb154d4ba68a9f0a710fde6b91dfe713a4fc00c7c641337d0f5051864be3921ad07bdcfa1f3219ffd9a21399a733aa551feb74d8538dbaa34f867badd01cc8789cbdf7433e9e57ced793ffc25627f49f9072e0050291fbbb753f3e5b167eeee351ba5de1356fb1be19f45cf7406ae49c1973cda312e4576e4eae18c7bcb172c39c0aa64846a4f3dcc44620cedb08a2412ef40074ef32770ddf12e41e12555dc8bd1c9eb6fdb319e89a55f56f782c6fcc8033b74337d9838b606b739885524abbb7d965e636410225a5931e02172d3f0b879580a39d9ab1fbcea320334a6894f3098092cb3d7fa2319dcdad9e4137e6aeb13ce4a06b1efb22137cef404f3222bd8b473d6ee98a190f35e44bd06dc57ce96511e13af832ba85efc766f1ee81bc4627ef0dd48dfc904a6992a168ee0eb999708114110c8534aeafb3f32131ad85d0c6ac78d2918e782c2b9a070f5786ed13b3e57afaca30aaafb7d29b3c52bf272b7649053ab2cfde9343b1f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powershell-后台命令</title>
      <link href="/2023/03/17/coding/powershell-hou-tai-ming-ling/"/>
      <url>/2023/03/17/coding/powershell-hou-tai-ming-ling/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 后台运行</span><span class="token function">Start-Job</span> <span class="token operator">-</span>ScriptBlock <span class="token punctuation">{</span>ping 8<span class="token punctuation">.</span>8<span class="token punctuation">.</span>8<span class="token punctuation">.</span>8<span class="token punctuation">}</span><span class="token comment"># 查看后台任务</span><span class="token function">Get-Job</span><span class="token comment"># 停止运行ID为1的后台任务</span><span class="token function">Stop-Job</span> <span class="token operator">-</span>Id 1<span class="token comment"># 将ID为1的后台任务从后台移除</span><span class="token function">Remove-Job</span> <span class="token operator">-</span>Id 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aria2-Aria2c+AriaNG安装</title>
      <link href="/2023/03/17/yun-wei/aria2-aria2c-ariang-an-zhuang/"/>
      <url>/2023/03/17/yun-wei/aria2-aria2c-ariang-an-zhuang/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://github.com/aria2/aria2/releases">下载 aria2c</a></li><li><a href="https://github.com/mayswind/AriaNg/releases/tag/1.3.3">下载 AriaNG-AllInOne</a></li><li>运行 <code>powersehll</code> 命令开启RPC服务</li></ol><pre class="line-numbers language-powersehll" data-language="powersehll"><code class="language-powersehll">aria2c --enable-rpc --rpc-allow-origin-all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>浏览器打开 <code>AriaNG</code> 里的 <code>index.html</code> 文件</li></ol><hr><p>后台运行 <code>aria2c</code> 命令（<a href="/2023/03/17/coding/powershell-hou-tai-ming-ling/" title="powershell-后台命令">powershell-后台命令</a>）：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Start-Job</span> <span class="token operator">-</span>ScriptBlock <span class="token punctuation">{</span>aria2c <span class="token operator">--</span><span class="token function">enable-rpc</span> <span class="token operator">--</span>rpc-allow-origin-all<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aria2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230312-爱情和婚姻</title>
      <link href="/2023/03/12/ri-ji/ri-ji-20230312-ai-qing-he-hun-yin/"/>
      <url>/2023/03/12/ri-ji/ri-ji-20230312-ai-qing-he-hun-yin/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="dd02264acfd710c6d9a49817953a7f1a12d545f948835f65ace7fb083e4f8d1e">775986d9acbb0b15ae59994c4d3eed101417c86bd2b7a2fe094c546156a7c52d6abc8874c7f0c85b512b8d33f3bd5cdeaa1e56493d722fb7e20b5905175599558e545794c85eab9c9406435be47b4286bde9066b588fab236b24c2100f0fbb71</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230310-爱情</title>
      <link href="/2023/03/10/ri-ji/ri-ji-20230310-ai-qing/"/>
      <url>/2023/03/10/ri-ji/ri-ji-20230310-ai-qing/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="d829c356a6ed2ad27d95865046b1665989d5bb11772aae624296d4147ee6f71e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA-0.引言-数K线</title>
      <link href="/2023/03/08/jie-ge-xing-wei-jiao-yi-xi-tong/pa-0.yin-yan-shu-k-xian/"/>
      <url>/2023/03/08/jie-ge-xing-wei-jiao-yi-xi-tong/pa-0.yin-yan-shu-k-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="数K线">数K线</h2><blockquote><p><font color="orange">有一个可靠的信号来判断上升趋势中或交易区间内的回撤走势已经结束，那就是当前K线的高点至少高于前一根K线的高点1个最小报价单位。数出此类现象发生的次数，就是“数K线”</font></p></blockquote><h2 id="高1高2-低1低2">高1高2&amp;低1低2</h2><blockquote><p><font color="orange">在上升行情或交易区间的横向或向下调整中，第一根高点高与前一根K线高点的K线被称为<strong>高1</strong></font>. <font color="red"><strong>高1</strong>终结了第一波横向或向下的调整走势，不过这一波调整可能只是一波更大规模调整的一部分</font>.。<font color="orange">如果市场没有立即转入升势，而是继续盘整或下跌，那么第二次出现的高点高于前一根K线高点的K线就是<strong>高2</strong></font>. <font color="red"><strong>高2</strong>终结了第二波横向或向下的调整</font></p></blockquote><h3 id="高1高2-低1低2-ABC">高1高2&amp;低1低2-ABC</h3><blockquote><p><font color="orange">上升趋势中的<strong>高2</strong>和下跌趋势中的<strong>低2</strong>相当于ABC调整。第一波是A，<font color="red"><strong>高1</strong>或<strong>低1</strong>是方向改变的B</font>，最后一波回调是C</font>。<font color="red">在上升行情的ABC回调中，终结C的是<strong>高2</strong>入场K线；在下跌行情的ABC回调中，终结C的是<strong>低2</strong>入场K线</font></p></blockquote><h2 id="高3低3-楔形">高3低3-楔形</h2><blockquote><p><font color="red">如果上升趋势的回调走势出现了第3波，那么终结这一波调整的就是<strong>高3</strong>，通常类似<strong>楔形牛旗</strong>；如果下降趋势的回调走势出现第3波，终结调整的就是<strong>低3</strong>卖出形态，通常是一种<strong>楔形熊旗</strong></font></p></blockquote><h2 id="高4">高4</h2><blockquote><p><font color="orange">有些上升行情中的调整可以进一步延伸并出现<strong>高4</strong>. <strong>高4</strong>的形成有时候是从<strong>高2</strong>开始的，只不过这个<strong>高2</strong>很快就夭折了，而是又出现两波下跌，形成<font color="red">第二个<strong>高2</strong></font>. 所以整个价格行为<font color="red">只是更高一个时间级别上的一个<strong>高2</strong>. 在其他情况下，<strong>高4</strong>是一轮小规模的“急速与通道”下降趋势</font>.，第一波或第二波向下推动为急速下跌，后面的向下推动走势构成一个下降通道。<font color="red">如果<strong>高4</strong>仍未能让市场恢复上升趋势，价格跌破其低点，那么市场就很可能不再是上升途中的回调，而是已经进入下跌趋势</font></font>。我们需要等待进一步的价格行为才能入场交易</p></blockquote><h2 id="低4">低4</h2><blockquote><p>低1、低2等也是一样的，只不过对应下跌行情或震荡行情中的调整。当下跌趋势或震荡行情发生横向或向上的调整，第一根低点低于前一根K线低点的K线为低1. 低1终结了第一波调整，但这一终结也可能非常短暂，比如只有一根K线。随后再次出现的类似情况分别为低2、低3和低4卖点。<font color="red">如果低4失败（即在触发低4做空信号之后，一根K线涨至低4信号K线的高点之上），那么价格行为所发出的信号是空头已经失去控制权</font>，<font color="orange">接下来市场要么进入双向交易模式、多空交替掌权，要么多头夺取控制权</font>。<font color="red">不论哪种情况，空头都可以用强力击穿一根上升趋势线的方式来宣告自己重新夺权</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA-0.引言-强势信号</title>
      <link href="/2023/03/07/jie-ge-xing-wei-jiao-yi-xi-tong/pa-0.yin-yan-qiang-shi-xin-hao/"/>
      <url>/2023/03/07/jie-ge-xing-wei-jiao-yi-xi-tong/pa-0.yin-yan-qiang-shi-xin-hao/</url>
      
        <content type="html"><![CDATA[<h2 id="强劲趋势">强劲趋势</h2><p>下面是强劲趋势通常具备的一些特征：</p><ul><li><strong>当天开盘大幅跳空</strong></li><li><strong>出现趋势性高点和低点</strong>（即趋势性摆动）</li><li><strong>大部分K线都是沿着趋势方向的趋势K线</strong></li><li><strong>连续数根K线的实体部分重叠度很低</strong><font color="gray">。比如说，在急速拉升行情中，许多K线的低点都处于或仅略微低于前一根K线的收盘。部分K线的低点处于和不低于前一根K线的收盘，所以那些试图在前一根K线收盘价位置挂限价单买入的交易者无法让自己的单子成交，不得不追高买入</font></li><li><strong>K线没有上下影线或非常短</strong><font color="gray">，反映出交易者的迫切心理。举例来说，在上升趋势中，如果一根多头趋势K线从低位开盘之后一路上攻，说明交易者在上一根K线收盘之后急切买入。如果这根K线收于最高点或附近，说明交易者在继续强力买进，因为他们预计这根K线收盘之后会有新的买盘进入。他们之所以愿意在K线收盘前买进，是担心如果等到收盘之后再买，买入价可能要高出1~2个最小报价单位</font></li><li><strong>偶尔会出现K线实体之间的跳空缺口</strong></li><li><strong>突破缺口以一根强趋势K线的方式发生在趋势的起点</strong></li><li><strong>出现测量缺口</strong><font color="gray">，即突破回测与突破点不发生重叠。比如说，一次多头突破的回撤行情没有跌至突破所发生的那根K线高点之下</font></li><li><strong>出现微型测量缺口</strong><font color="gray">，即有一根强趋势K线，而这根K线的前后两根K线之间存在缺口。比如说，在一轮上升行情中出现一根强多头趋势K线，其后一根K线的低点处于或高于其前一根K线的高点，这就是一个缺口，属于突破回测走势，为强势信号</font></li><li><strong>没有出现大型的高潮走势</strong></li><li><strong>没有出现太多长K线</strong>（甚至是长趋势K线）。相反，最<strong>长的K线往往出现在逆势运动中</strong>（比如上涨过程中的长阴或下跌过程中的长阳）<font color="gray">，将那些逆势交易者套牢，使之错过顺势交易机会。逆势建仓形态几乎总是要比顺势建仓形态看起来更舒服一些</font></li><li><strong>没有出现对趋势通道线的大幅过靶运动，而一些微小的假突破走势只是造成横向的调整</strong></li><li><strong>突破趋势线之后进入横向调整</strong></li><li><strong>出现失败的楔形或其他失败的反转形态</strong></li><li><strong>连续出现20根均线缺口K线</strong><font color="gray">（指连续20根或以上的K线没有触碰到均线）</font></li><li><strong>很难找到有利可图的逆势交易机会</strong></li><li><strong>出现为数不多的大致横向的小幅回调</strong><font color="gray">。比如说，如果Emini日均波幅为12个点，此类回调的幅度很可能低于3~4个点，而且市场往往连续运动5根或以上的K线之后才出现调整</font></li><li><strong>迫切感</strong><font color="gray">。你希望市场出现一波像样的趋势内回撤，但等了无数根K线还没有等到。相反，市场一直在缓慢地延续趋势行情</font></li><li><strong>回撤走势出现强势形态</strong><font color="gray">。比如说，上升趋势中的高1和高2回调出现强势多头反转K线，可以作为入场的信号K线</font></li><li><strong>在最强劲的趋势中，回撤行情所出现的往往是一些弱信号K线</strong><font color="gray">，使许多交易者不敢依据其入场，被迫追涨杀跌。比如说，在下跌趋势中，低2卖点的信号K线往往是2~3根大阳线之后出现的一根小阳线，有时候入场K线是外包阴线。</font><strong>在最强劲的趋势中，K线的收盘价、高点、低点，或实体全部处于趋势性状态</strong></li><li><strong>重复的两段式回撤构成顺势入场的机会</strong></li><li><strong>没有连续两根趋势K线收于均线另一侧的情况</strong></li><li><strong>趋势长途奔袭，突破多个阻力位，比如均线、前期摆动高点、趋势线，而且每次突破幅度都不小</strong></li><li><strong>对趋势急剧反转的尝试最终失败，没有延续性走势，而是演变成趋势方向的一次旗形调整</strong></li></ul><h2 id="向上突破">向上突破</h2><p>在向上突破走势中，越具备下述特征，说明突破可能越强：</p><ul><li>突破K线是一根长多头趋势K线（<strong>长阳</strong>），<strong>影线很短或没有影线</strong>。K线越长，突破成功的可能性就越大</li><li>如果长阳突破K线的成交量是最近其他K线平均<strong>成交量的10~20倍</strong>，那么<strong>买盘继续涌入</strong>和进一步出现<strong>等距上涨</strong>的可能性将会增加</li><li><strong>急速上涨行情幅度很大，持续多根K线，突破多个阻力位，比如均线、前期摆动高点、趋势线，而且每次突破幅度都不小</strong></li><li>在<strong>第一根突破K线</strong>形成过程中，价格大部分时间都在<strong>高点附近徘徊，回撤幅度很小</strong>（不到形成中K线高度的<strong>1/4</strong>）</li><li><strong>迫切感</strong><font color="gray">。你感觉自己必须买进，又想等出现回撤后再买，但回调一直没有出现</font></li><li><strong>突破之后的2~3根K线也是实体阳线</strong>，其实体长度至少相当于最近多根阳线和阴险实体的<strong>平均长度</strong>。即便实体较小，影线较长，如果<strong>后续K线（紧跟着突破K线之后的第二根K线）是长阳</strong>，那么趋势延续的概率依然比较高</li><li><strong>当向上突破走势击穿一个重要的前期摆动高点</strong>，如果交易者在摆动高点上方1个最小报价单位处挂单入场做多，行情涨幅足以让其获得<strong>刮头皮</strong>利润</li><li><strong>飙升行情</strong>。持续5~10根K线，而没有出现超过1根左右K线的回调</li><li><strong>飙升过程中1根或以上K线的低点与前一根K线的收盘持平</strong>，或仅低于前一根K线的收盘1个最小报价单位</li><li><strong>飙升过程中1根或以上K线的开盘高于前一根K线的收盘</strong></li><li><strong>飙升过程中1根或以上K线收于最高点</strong>，或收盘仅低于最高点1个最小报价单位</li><li>多头趋势K线后一根K线的低点处于或高于多头趋势K线前一根K线的高点，造成一个<strong>微型缺口</strong>，这是强势信号。<strong>这些缺口有时候会成为测量缺口</strong>。这种缺口可能代表极小时间级别上1浪高点与4浪低点的距离，因为根据艾略特波浪理论，<strong>1浪高点与4浪回调可以触碰但不能重叠</strong>。不过这一点对于交易而言并不是太重要</li><li>市场整体形态使得价格有可能向上突破，比如<strong>回调之后恢复先前趋势，或是强势突破下降趋势线之后以低点抬升或低点下降的方式测试前低</strong></li><li>市场<strong>最近几个交易日均为强多头趋势行情</strong></li><li>交易区间内出现<strong>越来越强的买压</strong>，其表现是出现许多较长的多头趋势K线，而且多头趋势K线明显比区间内的空头趋势K线更有力</li><li><strong>第一次回调仅发生在突破后的3根或以上K线之后</strong></li><li><strong>第一次回调仅持续1~2根K线，而且回调之前的那根K线并非强空头反转K线</strong></li><li><strong>第一次回调没有到达突破点</strong>，没有扫掉那些突破时建仓头寸的盈亏平衡止损</li><li><strong>突破走势逆转了近期多根K线的收盘和高点</strong>。比如说，市场处于一个下降通道，然后出现一根大阳线，这根突破K线的高点和收盘要高于最近5根甚至20根或以上的K线的高点和收盘。当大量K线被一根大阳线的收盘所反转，比起类似数量K线被其高点所反转，属于更强的看涨信号</li></ul><h2 id="向下突破">向下突破</h2><p>在向下突破走势中，越具备下述特征，说明突破可能越强：</p><ul><li>突破K线是一根长空头趋势K线（<strong>长阴</strong>），<strong>影线很短或没有影线</strong>。K线越长，突破成功的可能性就越大</li><li>如果长阴突破K线的成交量是最近其他K线平均<strong>成交量的10~20倍</strong>，那么<strong>卖盘继续涌入</strong>和进一步出现<strong>等距下跌</strong>的可能性将会增加</li><li><strong>急速下跌行情幅度很大，持续多根K线，突破多个支撑位，比如均线、前期摆动低点、趋势线，而且每次突破幅度都不小</strong></li><li>在<strong>第一根突破K线</strong>形成过程中，价格大部分时间都在<strong>低点附近徘徊，回撤幅度很小</strong>（不到形成中K线高度的<strong>1/4</strong>）</li><li><strong>迫切感</strong><font color="gray">。你感觉自己必须卖出，又想等出现回撤后再卖，但回撤一直没有出现</font></li><li><strong>突破之后的2~3根K线也是实体阴线</strong>，其实体长度至少相当于最近多根阳线和阴线实体的<strong>平均长度</strong>。即便实体较小，影线比较长，如果<strong>后续K线（紧跟着突破K线之后的第二根K线）是长阴</strong>，那么趋势延续的概率依然比较高</li><li><strong>当向下突破走势跌破一个重要的前期摆动低点</strong>，如果交易者在摆动低点下方1个最小报价单位处挂单入场做空，行情跌幅足以让其获得<strong>刮头皮</strong>利润</li><li><strong>急跌行情</strong>。持续5~10根K线，而没有出现超过1根左右K线的回调</li><li><strong>急跌过程中1根或以上K线的高点与前一根K线的收盘持平</strong>，或仅高于前一根K线收盘1个最小报价单位</li><li><strong>急跌过程中1根或以上K线的开盘低于前一根K线的收盘</strong></li><li><strong>急跌过程中1根或以上K线收于最低点</strong>，或收盘仅高于最低点1个最小报价单位</li><li>空头趋势K线后一根K线的高点处于或低于空头趋势K线前一根K线的低点，造成一个<strong>微型缺口</strong>，这是弱势信号。<strong>这些缺口有时候会成为测量缺口</strong>。这种 缺口可能代表极小时间级别上1浪低点与4浪高点的距离，因为根据艾略特波浪理论，<strong>1浪与4浪可以触碰但不能重叠</strong>。不过这一点对于交易而言并不是太重要</li><li>市场整体形态使得价格有可能向下突破，比如<strong>回调之后恢复先前趋势，或是强势跌穿上升趋势线之后以高点下降或高点抬升的方式测试前高</strong></li><li>市场<strong>最近几个交易日均为强空头趋势行情</strong></li><li>交易区间内出现<strong>越来越强的抛压</strong>，其表现是出现许多较长的空头趋势K线，而且空头趋势K线明显比区间内的多头趋势K线更有力</li><li><strong>第一次回调仅发生在突破后的3根或以上K线之后</strong></li><li><strong>第一次回调仅持续1~2根K线，而且回调之前的那根K线并非强多头反转K线</strong></li><li><strong>第一次回调没有到达突破点</strong>，没有扫掉那些突破时建仓头寸的盈亏平衡止损</li><li><strong>突破走势逆转了近期多根K线的收盘和低点</strong>。比如说，市场处于一个上升通道，然后出现一根大阴线，这根突破K线的低点和收盘要低于最近5根甚至20根或以上K线的低点和收盘。当大量K线被一根大阴线的收盘所反转，比起类似数量K线被其低点所反转，是更强的看跌信号</li></ul><h2 id="多头反转K线">多头反转K线</h2><p>一根多头反转K线的最低要求是收盘高于开盘（阳线实体），或收盘高于振幅中位。最强势的多头反转K线应该具有一个以上的下述特征：</p><ul><li><strong>开盘接近或低于前一根K线的收盘，收盘高于自身开盘，也高于前一根K线的收盘</strong></li><li><strong>下影线很长，大约为K线高度的1/3~1/2. 上影线很短或几乎不存在</strong></li><li><strong>与前一根或数根K线没有太多重叠</strong></li><li><strong>信号K线之后的那根K线不是十字星内包K线，而是强势入场K线（实体较长、影线较短的多头趋势K线）</strong></li><li><strong>收盘反转了1根以上K线的收盘和高点</strong>（即收于其上方）</li></ul><h2 id="空头反转K线">空头反转K线</h2><p>一根空头反转K线的最低要求是收盘低于开盘（阴线实体），或收盘低于振幅中位。最强势的空头反转K线应该具有一个以上的下述特征：</p><ul><li><strong>开盘接近或高于前一根K线的收盘，收盘大幅低于前一根K线的收盘</strong></li><li><strong>上影线很长，大约为K线高度的1/3~1/2. 下影线很短或几乎不存在</strong></li><li><strong>与前一根或数根K线没有太多重叠</strong></li><li><strong>信号K线之后的那根K线不是十字星内包K线，而是强势入场K线（实体较长、影线较短的空头趋势K线）</strong></li><li><strong>收盘反转了1根以上K线的收盘和低点</strong>（即收于其下方）</li></ul><h2 id="多头反转">多头反转</h2><p>强势多头反转的一些常见特征：</p><ul><li>出现一根<strong>强势多头反转K线</strong>，阳线<strong>实体很长，影线很短或没有影线</strong></li><li>随后的<strong>2~3根K线依然是实体阳线</strong>，且实体长度至少相当于最近多根阳线和阴线实体的<strong>平均长度</strong></li><li>急速拉升行情持续<strong>5~10根K线</strong>，而<strong>没有出现持续大约1根K线以上的回调</strong>。<strong>走势反转了多根K线、摆动高点和前期下跌趋势中的熊旗</strong></li><li>急速拉升行情中<strong>1根或以上K线的低点与前一根K线的收盘持平</strong>，或仅低于前一根K线收盘1个最小报价单位</li><li>急速拉升行情中<strong>1根或以上K线的开盘高于前一根K线的收盘</strong></li><li>急速拉升行情中<strong>1根或以上K线收于最高点</strong>，或仅低于最高点1个最小报价单位</li><li>整体形态使得反转有可能发生，比如市场<strong>强势突破下降趋势线之后以低点抬升或低点下降的方式测试前期低点</strong></li><li><strong>第一次回撤仅发生在3根或以上K线之后</strong></li><li><strong>第一次回撤仅持续1~2根K线，而且其前一根K线并非强势空头反转K线</strong></li><li><strong>第一次回撤没有到达交易者的入场位和扫掉其盈亏平衡止损</strong></li><li><strong>急速拉升行情长途奔袭，突破多个阻力位，比如均线、前期摆动高点、趋势线，每次突破幅度都不小</strong></li><li>在反转走势<strong>第一根K线形成过程中</strong>，价格大部分时间都在<strong>高点附近徘徊，回撤幅度小于形成中K线高度的1/4</strong></li><li><strong>迫切感</strong>。你感觉自己必须买入，想等回调之后再买，然而回调一直没有出现</li><li>信号K线为过去数根K线中的第二次反转尝试（<strong>二次信号</strong>）</li><li><strong>反转始于对旧有趋势的趋势通道线的过靶后反转</strong></li><li><strong>走势反转了一个重要的摆动低点（即击穿一个重要摆动低点之后反转走高）</strong></li><li><strong>高1和高2回撤做多形态的信号K线为强多头反转K线</strong></li><li><strong>一切都形成明确的趋势</strong>：收盘、高点、低点和实体</li><li><strong>回撤都很小，而且大致为横向调整</strong></li><li><strong>在此之前价格已经突破前期下降趋势线（即这并非首次表现出上涨动能）</strong></li><li><strong>测试下跌行情低点的走势动能很弱，表现为K线重叠度很高，而且其中很多是多头趋势K线</strong></li><li><strong>测试下跌行情低点的走势在均线和前期下降趋势线处失败</strong></li><li><strong>突破反转了近期多根K线的收盘和高点</strong>。比如说，市场处于一个下降通道，然后形成一根大阳线，这根突破K线的高点和收盘高于最近5根甚至20根或以上K线的高点和收盘。当大量K线被一根多头K线的收盘所反转，比起类似数量的K线仅被其高点所反转，属于更强的看涨信号</li></ul><h2 id="空头反转">空头反转</h2><p>强势空头反转的一些常见特征：</p><ul><li>出现一根<strong>强势空头反转K线</strong>，阴线<strong>实体很长，影线很短或没有影线</strong></li><li>随后的<strong>2~3根K线依然是实体阴线</strong>，且实体长度至少相当于最近多根阳线和阴线实体的<strong>平均长度</strong></li><li>急速下跌行情持续<strong>5~10根K线</strong>，而<strong>没有出现持续大约1根以上K线的回调</strong>。<strong>走势反转了多根K线、摆动低点和前期上升趋势中的牛旗</strong></li><li>急速下跌行情中<strong>1根或以上K线的高点与前一根K线的收盘持平</strong>，或仅高于前一根K线收盘1个最小报价单位</li><li>急速下跌行情中<strong>1根或以上K线的开盘低于前一根K线的收盘</strong></li><li>急速下跌行情中<strong>1根或以上K线收于最低点</strong>，或仅高于最低点1个最小报价单位</li><li>整体形态使得反转有可能发生，比如<strong>强势跌破上升趋势线之后以高点下降或高点抬升的方式测试前期高点</strong></li><li><strong>第一次回撤仅发生在3根或以上K线之后</strong></li><li><strong>第一次回撤仅持续1~2根K线，而且其前一根K线并非强势多头反转K线</strong></li><li><strong>第一次回撤没有到达交易者的入场位和扫掉其盈亏平衡止损</strong></li><li><strong>急跌行情长途奔袭，突破多个支撑位，比如均线、前期摆动低点、趋势线，每次突破幅度都不小</strong></li><li>在反转走势<strong>第一根K线形成过程</strong>中，价格大部分时间都在<strong>低点附近徘徊，回撤幅度小于形成中K线高度的1/4</strong></li><li><strong>迫切感</strong>。你感觉自己必须卖出，但想等回调之后再卖，然而回调一直没有出现</li><li>信号K线为过去数根K线中的第二次反转尝试（<strong>二次信号</strong>）</li><li><strong>反转始于对旧有趋势的趋势通道线的过靶后反转</strong></li><li><strong>走势反转了一个重要的摆动高点（即击穿一个重要摆动高点之后反转走低）</strong></li><li><strong>低1和低2回撤做空形态的信号K线为强空头反转K线</strong></li><li><strong>一切都形成明确趋势</strong>：收盘、高点、低点和实体</li><li><strong>回撤都很小，而且大致为横向调整</strong></li><li><strong>在此之前价格已经跌破前期上升趋势线（即市场并非首次表现出杀跌动能）</strong></li><li><strong>市场测试上升行情高点的走势动能很弱，表现为K线重叠度很高，而且其中很多是空头趋势K线</strong></li><li><strong>市场测试上升行情高点的走势在均线和前期上升趋势线处失败</strong></li><li><strong>突破反转了近期多根K线的收盘和低点</strong>。比如说，市场处于一个上升通道，然后形成一根大阴线，这根突破K线的低点和收盘均低于最近5根甚至20根或以上K线的低点和收盘。当大量K线被一根空头K线的收盘所反转，比起类似数量的K线仅被其低点所反转，属于更强的看跌信号</li></ul>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA-0.引言</title>
      <link href="/2023/03/07/jie-ge-xing-wei-jiao-yi-xi-tong/pa-0.yin-yan/"/>
      <url>/2023/03/07/jie-ge-xing-wei-jiao-yi-xi-tong/pa-0.yin-yan/</url>
      
        <content type="html"><![CDATA[<p>标色：<strong>特征（加粗）</strong>，<font color="red">规律（红色）</font>，<font color="orange">推理（橙色）</font>，<font color="green">计划（绿色）</font>，<font color="blue">心法（蓝色）</font></p><blockquote><p><font color="blue">如果市场在上涨，机构就会不停地买进，即便在那些你认为如果换做你肯定会将多头头寸止损的位置。你的任务就是跟随他们的步伐，亦步亦趋，而不是用各种逻辑来否认你眼前所发生的事情</font></p></blockquote><blockquote><p><font color="blue">所谓纪律，也就是做你不愿意做的事情。人天生具有好奇心，有一种尝试新事物的自然倾向，但顶级交易者会抵制这种诱惑</font></p></blockquote><blockquote><p><font color="red">大多数成功的反转走势都是先以强势动能突破趋势线，然后再掉头回测前面的极端价位</font><br><font color="green">你应该先等待趋势线突破，然后再看看回测前高（或前低）的走势是最终反转还是造成原有趋势的恢复</font></p></blockquote><blockquote><p>在日线图上，当市场出现过度抛售的时候，有时候成交量也会急剧放大。不过它们的可能性并不是那么强，不知得我去关注</p></blockquote><blockquote><p>要理解价格行为最有用的工具是<strong>趋势线与趋势通道线、前期高点与低点、突破与失败的突破、K线实体与影线的长度以及当前K线与前面数根K线的关系</strong>。尤其是<strong>将当前K线开盘、高点、低点和收盘与之前数根K线进行比较</strong></p></blockquote><blockquote><p><font color="blue">要想具备交易决策的能力，你必须习惯于在灰色雾霾中生存</font><br><font color="green">市场对联储的任务决定都可能有利好和利空两种解读。所以重要的是看市场在做什么，而不是联储在做什么</font></p></blockquote><blockquote><p><font color="blue">可以有一些原则性的规矩，但不存在绝对可靠的交易方法</font></p></blockquote><blockquote><p><font color="blue">不要为此感到烦恼，这就是现实，去接受它，去欣赏它的美丽</font><br><font color="red">不确定性是市场的地心力</font><br><font color="green">当你觉得没把握，就可以假定市场处于交易区间</font><br><font color="red">市场很快就会回到50%对50%的均衡状态</font>。在这种均衡状态下，多头和空头都感到似乎有利可图。即便在趋势中，在存在某种程度的方向确定性的时候，市场也会<font color="red">被吸往支撑和阻力区域</font>，然后不可避免地重回不确定性和形成交易区间，至少是在短时间内</p></blockquote><blockquote><p><font color="blue">走势图已经告诉我交易者在做什么</font><br><font color="blue">你唯一需要关注的是价格走势图。走势图会告诉你需要知道的一切</font><br><font color="blue">在重大市场行情预测方面，没有任何人准确率可以超过60%</font><br>单方面的陈述听起来总是让人觉得颇有几分道理，但其可靠性很少会高于50%</p></blockquote><blockquote><p><font color="orange">机构多头和空头每天都在不停地下单，这是市场方向永远不确定的原因</font></p></blockquote><blockquote><p><font color="blue">朋友和同事提供的建议更不要听</font></p></blockquote><blockquote><p><font color="red">当任何趋势以数量<strong>很少的K线跨越大量点数</strong>，即K线很长且相互之间重叠很少，最终都会出现<strong>回撤</strong>。此类趋势动能如此之强，以至于回撤之后概率更倾向于<strong>趋势恢复和测试趋势极端价位</strong>。通常情况下，<strong>只要回撤没有演变成反方向的新趋势和超越原初趋势的起点，极端价位将会被超越</strong>。大体上说，如果回撤幅度达到<strong>75%<strong>或更高，那么回撤之后市场</strong>重回先前趋势极端价位的概率将大幅下降</strong>。对于下跌趋势中的回撤，在这个时候，交易者最好把回撤看成<strong>新一轮</strong>上升趋势，而非对原有下跌趋势的调整</font></p></blockquote><blockquote><p><font color="red">熊市中的大幅反弹可能只是一个熊旗，除非随后出现一系列的低点抬升和高点抬升。它有可能接着出现一个牛旗并继续上涨</font>，<font color="green">但在上升趋势得到确认之前，你必须假定周线图上的大级别的趋势更加重要</font></p></blockquote><blockquote><p><font color="blue">唯一表里如一的东西就是图形，你所看到的就是真相。如果看不懂图形所发出的信号，就不要交易，等待进一步明确的信号，总会来的。一旦信号出现，你必须果断入场，承担起中的风险并执行你的交易计划</font></p></blockquote><blockquote><p><font color="blue">如果你的智商并非出类拔萃，你所需要的就是锻炼控制冲动的能力。正是冲动让其他人在投资中陷入困境。交易高手往往能 控制自己的 情绪，一贯地遵守自己制定的规则</font></p></blockquote><blockquote><p><font color="red">当市场处于趋势之中，大部分的反转尝试都会失败；当市场处于交易区间，大部分的突破尝试都会失败</font><br><font color="red">在交易中，刚发生的事情一遍一遍地重复发生的概率可能是75%或更高</font></p></blockquote><blockquote><p>“崩盘”一词主要用在日线图行情上，指短时间跌幅达到或超过 <font color="red"><strong>20%</strong></font> 以上的熊市<br><font color="blue">如果你能够克服情绪因素，就可以从各种“崩盘”行情中赚钱，因为在所有图形上，它们都表现出一种可交易的价格行为</font></p></blockquote><blockquote><p><font color="orange">任何形态都可以在较小时间级别中细分成标准价格形态，因此基于价格行为分析的交易决策方法适用于所有时间级别</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 交易学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230307-协调好长期利益和短期利益的平衡</title>
      <link href="/2023/03/07/ri-ji/ri-ji-20230307-xie-diao-hao-chang-qi-li-yi-he-duan-qi-li-yi-de-ping-heng/"/>
      <url>/2023/03/07/ri-ji/ri-ji-20230307-xie-diao-hao-chang-qi-li-yi-he-duan-qi-li-yi-de-ping-heng/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="4e00581461bf938bd188e6135f6e060ee80c9a69ff774d5ef588379eed55228c">775986d9acbb0b15ae59994c4d3eed1075ad306a951372002f773d4b2ec3a84ede4ebb8c9e6995d4b72baf080c6c87ac9e287ca0a2df8c81b96c33227b177f43063c5bae7092d3556eed04709e6434f9795d9fd8302d1ec39f94a93a3440bb0b46058d5663c3ef2828db4b6fb94c5899a4abb6aecc31aa0d453fb0b0ae23065b140da70852cdefc4427f2723db94c1658d89233c354687603ebb9dbd2d13162e0ffa1de221f51604fcfe8f500f2e1fe3bed3b644e48dcc826695512615ad95e87d8fcd8a95d8e3991f62beda796d3f439994ff0d1594963690c188576a9a5110396db24da8a1a4d3b08be3ad518b8a3569cebb524bf963e63b2d141eae43b91331ac6834bc42f7647a29e47ca29da3a570be4cb4e57dbde2d05c18c3cc6a3b9e2eb4d50c4c32d0934228925c53a936fd6c1a78a7abae7818d28c51888153ad1ce92c2b64c0bb620350f6f51faa50cb35d911a75dfb7f6d69a558ebd0b6d21c8cdc044f39474fdc99e54e159ebbca67b949b078e43428184789ee634b8cfc08adb30e667cab76f4aa0094fab70ca7fd781531ffcfeeef21d8bf03c70ffc21840b97d5172af59bc8f65fe464da1d2af9f24ccb9ee3e74b0438c515dd8f7071739cf9d8a87101935533105c385b4cac08b32faceaa87d85c3b2bcd1644ab57756890e0ed9f054c960a4aa2924a76d85b49254fda4ee6d92681a90ad01b44f1e3431d7ed9c20662c99fed79f01d4bb79d320b8a0b923235965e9df5a221eb0b3a7de80f103438572572026e1b4f52e1ee9424defa050d346b24d4b62cc119503e903d9d1a98ffcfe38fe3fa0d46eebd2e5423b0c29389d66dfa65367052661e8b465d621e6b186438ed5f7be3dbc3e17660000f3ea73d4655e2a926401529203b7f6a102383a606ffa19cd949150c28e813502569913ad632f5960c929aa9e66a6165e66bdf51475c574f1388d43da63ccb8fa646ddf25814091711e6d5ab257e68d93b0c20aa5978abcd54a1d20234768cbdb8521a7a986dea1ff15d9d310250eb4cf0956961ee33b1bef020eef1d82554f2297c29c40e230b043e5fcf291968ccc40eec2a8ebb353724ddba9e1610f2dafec8c4dce422dcb50acfb18129ce1743a0a052c2b754885799d40670906fbfbc73ed72ee3a3a366c2b8af7c8d6e66872fc6d9f2eb7a86e80ebf9ce92a2417a5c110995abf7c57b393ffd60c473345a65fb4f34a48eec8c9bf50055e0e6576a2261f646eb251bddd836c03aa1200dc7de4d1da46bad3374afbb7d1c1c55a7d56f0023629f4b0d120e0875a6e96ad73a46159a9e808d9ef109af8542b7a16d58f0d0b44c44bb26147e1f39f836cc352de21bf7702c2bc3348c401751d0a0ffd75b34a0000067d15bcb14f649d96454f06d7dbbf9e1d25763c9884730205a7ffc6127b2e06d848f639dc003780dbb3f6d185040427153de697f6a5de09d1efb8545e7c4c6351c8802bba23c6c8ee52a2a7b61cb43d5a331334b21d5e0c90612ba5a1f604953944af15dac72b91bfc91c1611be6d58872ba9fa9d3116a64b62ddfcb783789750952641fb07e7878e4924fa3cb6a24548efca72f288576bb776ce73f581b741cfb574c80e78cfa688f3be4963571235bf37ec72cb2982769e542ccf8d61c571cc68f6ac66b9d1984672cc83a2b8bc087ed6581f0045a92ba706ac311eb8d10c74153cd38dd44fd443efc8a026371d7e83488a9aab719183fa3afe0464db1ff1b1b045a29956e94a2409e0fc22d367645330ac34bae1f9bf1a850529dda3e69da19d699681e4990e68586dec0ba398fd42d2fe6bc10d38514e4515b2d2e9baecbc6cdf70dae6f9ae3dfa2c1e2528e7e420775db6590be146efe2bb2a42628edfcb205b2e908025e2462da6d4193a189126eba974b9b61cd392ba922d00ea1b00663f11f3a8806251b1582b0dd6d2f7219048ed302efee942f2939a3364</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络-Logistic回归</title>
      <link href="/2023/03/07/coding/shen-jing-wang-luo-logistic-hui-gui/"/>
      <url>/2023/03/07/coding/shen-jing-wang-luo-logistic-hui-gui/</url>
      
        <content type="html"><![CDATA[<p>分类算法，使 $0 &lt; h_\theta(x) &lt; 1$</p><h2 id="Sigmoid-function">Sigmoid function</h2><p>$$h_\theta(x)=g(\theta^Tx)$$<br>$$g(z)=\frac{1}{1+e^{-z}}$$</p><p><img src="../static/IT/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-Sigmoid.png" alt="Sigmoid"></p><p>也可以在$h_\theta(x)$中添加多项式回归来训练复杂情况</p><h2 id="代价函数">代价函数</h2><p>$$J(\theta)=\frac{1}{m}\sum_{i=1}^m cost(h_\theta(x^{(i)}),y^{(i)})$$<br>$$cost(h_\theta(x),y)=\frac{1}{2}(h_\theta(x)-y)^2$$</p><p>含义是出错的代价，比如在分类算法中：<br>$$cost(h_\theta(x^{(i)},y^{(i)}))=-\log(h_\theta(x)) \ if \ y=1$$<br>$$cost(h_\theta(x^{(i)},y^{(i)}))=-\log(1-h_\theta(x)) \ if \ y=0$$</p><p>当告诉对方绝对不可能出错而出错了的时候，代价是无穷大</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230307-维护和拓展社交圈</title>
      <link href="/2023/03/07/ri-ji/ri-ji-20230307-wei-hu-he-tuo-zhan-she-jiao-quan/"/>
      <url>/2023/03/07/ri-ji/ri-ji-20230307-wei-hu-he-tuo-zhan-she-jiao-quan/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="0b906f51b0a0490de7689f302d8d745b75f7108eba054424579438860cc24ff2">775986d9acbb0b15ae59994c4d3eed10602e615c00fc0a13595ae6f40461823497c114abe08043e29e73c8a4ab516cab02390d3a9d80c3e422cf9e029075b9e7b22d81381c6d7a3ff16ebd7880432678bebede4d3a3fd56a61c1bf945fde50f83db490c1a8a311b566080f469b2b19c58c85ab69fbc3187ad5255dea1cedae7b2c28b17c3235804b2242f7a24b5649ec31fa2c1f7c827e92f21aaec2ae0c7eeb21336f04eaebfe21a904069cdbeb72fbec57a0974ba117b8f19a859eda0ed981f3389d14b1b35570992eaa97733373d8bd66ede9031314b325c8a8af767e36d53e94af8c70840d54c13f1b97f42bd5b6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词-速记38000-1 [-vinc-=-vict-]-40词</title>
      <link href="/2023/03/06/ying-yu/ying-yu-dan-ci-su-ji-38000-1-vinc-vict/"/>
      <url>/2023/03/06/ying-yu/ying-yu-dan-ci-su-ji-38000-1-vinc-vict/</url>
      
        <content type="html"><![CDATA[<h2 id="vinc-vict-胜，征服">-vinc-=-vict- 胜，征服</h2><p>【词源】</p><ol><li>来源于拉丁语 <strong>vicere</strong> 战胜</li><li>来源典故：凯撒大帝 Caesar 平定庞培不下叛乱后，颁布的“三V文书”，即 <strong>Veni Vedi Vici</strong>, 为拉丁语，意为"I came, I saw, I conquered", 含义为“到、看、胜”，词根为它的变体，含义与之相同</li><li>来源于古罗马神话人 <strong>Victoria</strong>, 胜利女神</li></ol><p>【引申】战胜/胜利/征服/克服<br>【词根】 <strong>-neo-</strong> 新<br>【前缀】 <strong>pro-</strong> 向前； <strong>un-</strong> 否定； <strong>con-</strong> 强调，共同； <strong>e-</strong> 向外； <strong>post-</strong> 后； <strong>ex-</strong> 前任； <strong>in-</strong> 否定<br>【后缀】</p><table><thead><tr><th>名词后缀</th><th>形容词后缀</th><th>副词后缀</th><th>动词后缀</th></tr></thead><tbody><tr><td>-e</td><td>-ous</td><td>-ly</td><td>-ize</td></tr><tr><td>-al</td><td>-al</td><td></td><td></td></tr><tr><td>-ty</td><td>-ed</td><td></td><td></td></tr><tr><td>-ism 表抽象含义，……主义</td><td>-ing 表令……的</td><td></td><td></td></tr><tr><td>-or=-er 表人，-or表高阶人士</td><td>-ible=-able 表能……的</td><td></td><td></td></tr><tr><td>-ory</td><td>-ory</td><td></td><td></td></tr><tr><td>-an</td><td>-an</td><td></td><td></td></tr><tr><td>-im</td><td>-ate</td><td></td><td></td></tr><tr><td>-ation = -ate 形容词后缀 + -ion 名词后缀</td><td>-less 表否定</td><td></td><td></td></tr><tr><td>-ine</td><td></td><td></td><td></td></tr><tr><td>-ion</td><td></td><td></td><td></td></tr></tbody></table><p>【复合后缀】 <strong>-ibility=-ability</strong> = -ible + -i- + -ty = 把l和e交换，然后e变i加ity (为了符合发音规律，元音辅音隔开)</p><p>名词后缀：表人或表物<br>后缀双重词性的具体词性是由在句子中的成分决定<br>多个后缀，词性只由最后一个决定</p><hr><h3 id="font-color-red-province-font-n-省；领域；职权"><font color="red">province</font> n. 省；领域；职权</h3><p>pro- 向前 + -vinc- 征服-占有-统治-管理 + -e 名词后缀<br>典故：古罗马时期将征服后的土地划分为行政省份，除了中央以外最大的行政区</p><p><font color="orange">province-wide</font> adj. 全省的 adv. 全省地<br>合成词</p><p><font color="orange">provincial</font> adj. 省的；地方性的 n. 乡下人；外地人<br>发音结尾是 e 不发音，加新后缀顶掉<br>province + -i- 连字符 + -al 形容词或名词后缀</p><p><font color="orange">provincially</font> adv. 以地方；偏狭地<br>provincial + -ly 副词后缀</p><p><font color="orange">provinciality</font> n. 乡下习气；粗鄙，偏狭；地方特色<br>provincial + -ity 名词后缀</p><p><font color="orange">provincialism</font> n. 方言；地方风格；乡下习气<br>provincial + -ism 名词后缀，表……主义</p><h3 id="font-color-red-victor-font-n-胜利者"><font color="red">victor</font> n. 胜利者</h3><p>-vict- 胜利 + -or 名词后缀</p><p><font color="orange">victory</font> n. 胜利；成功；克服<br>-vict- 胜利 + -ory 名词后缀或形容词后缀</p><p><font color="orange">victorious</font> adj. 胜利的；凯旋的<br>victor + -i- 连字符 + -ous 形容词后缀</p><p><font color="orange">victoriously</font> adv. 获胜地；凯旋归来地<br>victorious + -ly 副词后缀</p><p><font color="orange">victorian</font> adj. 维多利亚女王时代的 n. 维多利亚时代<br>victoria 胜利女神 + -i- 连字符 + -an 名词后缀或形容词后缀</p><p><font color="orange">victorian-era</font> n. 维多利亚时代<br>合成词 victorian + era n. 时代</p><p><font color="orange">victorian-style</font> n. 维多利亚风格<br>合成词</p><p><font color="orange">late-victorian</font> adj. 维多利亚晚期<br>合成词</p><p><font color="orange">neo-victorian</font> adj. 新维多利亚的<br>合成词 -neo- 新 + victorian</p><h3 id="font-color-red-victim-font-n-受害者"><font color="red">victim</font> n. 受害者</h3><p>-vict- 征服-俘虏-罪人-受害者 + -im 名词后缀，表人</p><p><font color="orange">victimless</font> adj. 不侵害他人的，无受害人的（犯罪行为等）<br>victim + -less 形容词后缀，表否定</p><p><font color="orange">victimize</font> vt. 使受害；使牺牲；欺骗<br>victim + -ize 动词后缀</p><p><font color="orange">victimized</font> vt. 使受害；使牺牲；欺骗【动词的过去式和过去分词】<br>victimize + -ed 形容词后缀，此处表过去式和过去分词</p><p><font color="orange">victimization</font> n. 牺牲；欺骗<br>victimize + -ate + -ion 名词后缀 [ation 名词后缀]</p><p><font color="orange">victimizer</font> n. 施害者<br>victimize + -er 名词后缀，表人</p><h3 id="font-color-red-convince-font-vt-说服；使确信"><font color="red">convince</font> vt. 说服；使确信</h3><p>con- 强调，共同 + -vinc- 征服-使人信服-说服 + -e 动词后缀</p><p><font color="orange">convinced</font> adj. 确信的，信服的<br>convince + -ed 形容词后缀</p><p><font color="orange">unconvinced</font> adj. 不信服的；怀疑的<br>un- 否定 + convinced</p><p><font color="orange">convincing</font> adj. 令人信服的；有说服力的<br>convince + -ing 形容词后缀，表令……的</p><p><font color="orange">unconvincing</font> adj. 不足以令人相信的<br>un- 否定 + convincing</p><p><font color="orange">convincingly</font> adv. 令人信服地；有说服力地<br>convincing + -ly 副词后缀</p><p><font color="orange">unconvincingly</font> adv. 缺乏说服力地；无法令人信服地<br>un- 否定 + convincingly</p><h3 id="font-color-red-convict-font-n-囚犯-vt-证明……有罪；宣告……有罪"><font color="red">convict</font> n. 囚犯 vt. 证明……有罪；宣告……有罪</h3><p>con- 强调 + -vict- 征服-俘虏-罪人，囚犯-战胜者对战败者的裁定</p><p><font color="orange">conviction</font> n. 定罪<br>convict + -ion 名词后缀</p><p><font color="orange">ex-convict</font> n. 从前曾被判刑的人；[法]前科犯<br>ex- 前任 + convict</p><p><font color="orange">post-conviction</font> n. 定罪后救济<br>post- 后 + conviction</p><p><font color="orange">evict</font> vt. 驱逐；逐出<br>e- 向外 + -vict- 征服-占领-驱逐</p><p><font color="orange">eviction</font> n. 逐出；赶出；收回<br>evict + -ion 名词后缀</p><p><font color="orange">evicted</font> adj. 被驱逐的<br>evict + -ed 形容词后缀</p><p><font color="orange">evince</font> vt. 表明，表示；引起<br>e- 向外 + -vinc- 胜利-表明，显示 + -e 动词后缀</p><p><font color="orange">vincible</font> adj. 可征服的，易克服的<br>-vinc- 征服 + -ible=-able 形容词后缀，表能……的</p><p><font color="orange">invincible</font> adj. 无敌的；不能征服的<br>in- 否定 + vincible</p><p><font color="orange">invincibility</font> n. 无敌；不可战胜<br>invincible + -i- 连字符 + -ty 名词后缀<br><strong>复合后缀：-ible + -i- + -ty = 把l和e交换，然后e变i加ity [为了符合发音规律，元音辅音隔开] = -ibility=-ability</strong></p><p><font color="orange">vincristine</font> n. [药]长春新碱（一种抗肿瘤药）<br>-vinc- 征服-抗击 + -rist- 肿瘤 + -ine 名词后缀</p><hr><h2 id="单词表-40词">单词表 - 40词</h2><table><thead><tr><th>province</th><th>victor</th><th>victim</th><th>convince</th><th>convict</th></tr></thead><tbody><tr><td>province-wide</td><td>victory</td><td>victimless</td><td>convinced</td><td>conviction</td></tr><tr><td>provincial</td><td>victorious</td><td>victimize</td><td>unconvinced</td><td>ex-convict</td></tr><tr><td>provincially</td><td>victoriously</td><td>victimized</td><td>convincing</td><td>post-conviction</td></tr><tr><td>provinciality</td><td>victorian</td><td>victimization</td><td>unconvincing</td><td>evict</td></tr><tr><td>provincialism</td><td>victorian-era</td><td>victimizer</td><td>convincingly</td><td>eviction</td></tr><tr><td></td><td>victorian-style</td><td></td><td>unconvincingly</td><td>evicted</td></tr><tr><td></td><td>late-victorian</td><td></td><td></td><td>evince</td></tr><tr><td></td><td>neo-victorian</td><td></td><td></td><td>vincible</td></tr><tr><td></td><td></td><td></td><td></td><td>invincible</td></tr><tr><td></td><td></td><td></td><td></td><td>invincibility</td></tr><tr><td></td><td></td><td></td><td></td><td>vincristine</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 英语学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语单词 </tag>
            
            <tag> 速记38000 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230305-刻舟求剑,缘木求鱼</title>
      <link href="/2023/03/05/ri-ji/ri-ji-20230305-ke-zhou-qiu-jian-yuan-mu-qiu-yu/"/>
      <url>/2023/03/05/ri-ji/ri-ji-20230305-ke-zhou-qiu-jian-yuan-mu-qiu-yu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="b6e288ecd780d5501465c3cc817d375517250be8f0dc1c0c40cca62b2eb9e767">775986d9acbb0b15ae59994c4d3eed10f199514b0bca31621e02c42d537cf12f30214ed23a6c445ac132d45ee925d64f978aaf6efc22163750c91cf9a598ad93ad236fd7b9e11882c3828ee3c38ceb488dbc780075eb2ca97905f3b4540437d4f4af17e70c0fcba8b81b9e6b0d8c203effb07d1ac4aef1151dea28e2a0f149a82fd87f7281abd31f887cb9a40ef7e75895cf1c84ab152041754e1a7021462d8c6bb891f1928571a1282bec9e1a7287a2317a452100ffe755ed2b07a5575aea7c9de499ff4855cc5238b16a319b22dc38de5fbde5156ed0036e5b93518761ecf660466f8823c5373dd1a65695ffe182194cc5a073439c26e25ded3c71b4f30e3f98c14c7214d180d71fb222134a3b4e72b402c4e45a51e41d756044f32e589007b9594957706ae521c5424db21166242db0b5c06bac173d04ef5e6b2ce3ef739019e01e1ce808e09cc76c20ddedfb1e168ba42b738b84f4c6dc2329c6e8ef18d5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230305-如何克服感情中的情绪化冲动</title>
      <link href="/2023/03/05/ri-ji/ri-ji-20230305-ru-he-ke-fu-gan-qing-zhong-de-qing-xu-hua-chong-dong/"/>
      <url>/2023/03/05/ri-ji/ri-ji-20230305-ru-he-ke-fu-gan-qing-zhong-de-qing-xu-hua-chong-dong/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="03e2bac53ca7c230ebea9ab077a93f64543dfdbcbcb1436cc0f05f006434fc5d">775986d9acbb0b15ae59994c4d3eed10a2576ae08da32bbff9d75b1564c4b0735ac04a4ceea17c789d988ca7fe28712d67e33fe3cf982d74cae662b6f4844ea657962b0fcc367ac7ed8b2030abd83593529e293a584ea526f010859e8f2e490ac2e5afa639f455926c2ff12b84d7294ad6add803cc469ecc195ad8e1be37e78e0365dc232b42d44199d17d62e6b6138c19dc92b6c825dab4e783d43356ea494493870b8c21fa24c1a252f4e7a002f96a8087bf883dbd655582c6882e0a13b2b640bad060d644f635c9b8eec801ce6f5fc5df944440d02569f2b02d6b281da7e1c0202c5b1dc0e4107b8746d22a984fda03aa370eaa54d027fd64cc39e999170a72cfa75c9c8cc39402cdf1bfa62876e14ce6e466118512c80aa2cc21de67628f613d8118346d38e3f7ded49a1eb078651fd27e423c49d31e7028057443bb425f2ed01cb4bc2b8ed0868cbcc46fee214795487c7eea573f4659508c75620c481b4a53a71654d44e9294d736579b9f529a5b301bbe091b64e443f076273655c19b4cb98fdd02fdf3a351d640902de93334c57313d5bcf8263f67d897cface7efa34689fcb62c336b86374382b8e8c7de0af2ce2b175ad80abbafe42a2825920ac80f09ea0994a76e8577aa504d515a5ffa352a4ce16e5bc5f5229c7204ef5c5924fb1c7f973114946c11b1c41f5117e513df76db68f08efe22051714415c8da160a838a9c54d56e2cd482cae8ae945c8620aa03d74ea2ffe0c714fe6779c275296cb7973ed91b2347d68038ddb46fc692c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词-速记38000-0 [构词法]</title>
      <link href="/2023/03/05/ying-yu/ying-yu-dan-ci-su-ji-38000-0-gou-ci-fa/"/>
      <url>/2023/03/05/ying-yu/ying-yu-dan-ci-su-ji-38000-0-gou-ci-fa/</url>
      
        <content type="html"><![CDATA[<p>构词法：</p><ol><li>词根：单词的本义</li><li>前缀：表强调或方向</li><li>后缀：表词性，偶尔表含义</li><li>音变：发音相似，含义接近 [-vinc=-vict- 胜，征服]</li></ol><p>字母：元音 + 辅音</p><p>元音字母: a,e,i,o,u<br>半元音: y,w</p><p>元音字母功能：连字符。无意义，其中最常用: i,u</p><p>辅音字母：发音相似，可替换</p><hr><p>发音结尾是 e 不发音，加新后缀顶掉</p><p>后缀双重词性的具体词性是由在句子中的成分决定<br>多个后缀，词性只由最后一个决定</p>]]></content>
      
      
      <categories>
          
          <category> 英语学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语单词 </tag>
            
            <tag> 速记38000 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-AAPL</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-aapl/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-aapl/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-AAPL.png" alt="AAPL"></p><p>当前股价主要有两种走势：</p><ol><li>上破交易区间顶部，并在下降趋势线和下跌趋势起点处遇到强阻力（绿色走势）</li><li>回踩下跌趋势通道线或前低位，并得到支撑反弹（橙色走势），然后尝试突破交易区间顶部（蓝色走势）</li></ol><p>橙色走势的盈亏比是最高的，也是操作起来最方便的走势。<br>绿色走势的概率不如橙色走势高，因为之前已经有长影线一触碰到交易区间顶部股价就迅速下降，如果股价再次迅速高潮到交易区间顶部，那么大概率不会突破成功。</p><p>因此，主要关注橙色走势制定交易计划：</p><ol><li><font color="orange">在回踩下跌通道线或前低位得到有效支撑确认时，买入</font></li><li>在交易区间顶部突破失败时卖出</li><li>在突破交易区间顶部成功时，不加仓，观察其突破下跌趋势线和回测下跌趋势起点的情况，如无法继续突破，则卖出。</li><li>如果成功突破，也不加仓，因为还有好几个前高点的阻力位，如果突破失败，则卖出。</li></ol><p>至于绿色走势，因为上破交易区间会迅速面临下降趋势线，所以其操作难度和盈亏比都不好把握，可以建议主观放弃。<br>同理蓝色走势，不建议加仓，只需在阻力位突破失败时卖出。</p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-TSLA-W</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-tsla-w/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-tsla-w/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-TSLA-W.png" alt="TSLA-W"></p><p>很明显，特斯拉目前的股价并未突破下降趋势线，所以目前还不具备买入的交易价值。<br>股价要想上涨，第一步是要突破下降趋势线，即橙色走势。<br>而在橙色走势之前的黑色走势，不管是遇到支撑点还是阻力点都是具有不确定性的，故应该<font color="orange">主观放弃黑色走势的交易机会</font>，不管其在哪里获得支撑，在哪里获得阻力，我们只需<font color="orange">耐心等待股价向上突破下降趋势线</font>，即等待橙色走势的出现。</p><p>橙色走势会出现两种情况：</p><ol><li>无法突破颈线，回踩二次确认前低点位</li><li>突破颈线获得支撑确认后，回测下跌趋势起点</li></ol><p>因此入场点的交易计划是：</p><ol><li>耐心等待橙色走势上破下降趋势线</li><li>在橙色走势中，二次确认前低位活得有效支撑时，买入</li><li>在突破颈线的绿色走势中，得要突破的回踩有效支撑确认后，买入</li></ol><p>出场点是各交易区间的顶部<br>止损点是入场信号失败时</p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-AMZN-W</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-amzn-w/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-amzn-w/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-AMZN-W.png" alt="AMZN-W"></p><p>股价反转的必要条件是突破下降趋势线。<br>突破下降趋势线主要有两种走势：</p><ol><li>在前低位获得支撑后上破下降趋势线<br>1.1. 在颈线处获得支撑，回测下跌趋势起点（绿色走势）<br>1.2. 无法突破颈线，重新测试前低位的支撑，然后整理之后重新上破颈线（蓝色走势）</li><li>急速下破前低和下降通道线，并在下一个支撑位获得支撑，然后因动能耗尽而反转上破下降趋势线<br>2.1. 上破前低位（橙色走势），上破成功后继续上破颈线（蓝色走势）<br>2.2. 上破前低位失败，二次回踩确认支撑位，然后重新上破前低位（红色走势）</li></ol><p>由于亚马逊股价长期处于上涨状态，并且这四种走势极易形成交易区间。<br>所以综合考虑的情况下，宏观交易策略应该是<font color="orange">在股价突破下降趋势线之后，在关键支撑突破点位低买高卖</font>。</p><p>低买高卖交易计划（入场点）：</p><ol><li>绿色走势中，突破并回踩确认颈线有效后，买入</li><li>蓝色走势中，在二次确认前低位有效时，买入</li><li>橙色走势中，上破下降趋势线且转换为蓝色走势时，买突破</li><li>红色走势中，在支撑位确认有效时买入，并在转换为蓝色走势时，买突破</li></ol><p>出场点是各交易区间的顶部<br>止损点是各入场信号失败的底部</p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-601318-W [中国平安-沪深]</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-601318-w/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-601318-w/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-601318-W.png" alt="中国平安-沪深-W"></p><p>本轮下跌回测了上升趋势的起点，并且得到了有效支撑，由此得出一个大幅交易区间。<br>橙色走势回测下跌趋势起点的熊旗走势是大概率要发生的，但在此之前需要突破颈线。</p><p>很明显，股价已经突破了下跌趋势线，但是没有突破颈线（回测最后一波下跌趋势的起点），所以颈线将成为小交易区间的顶部。<br>而要想突破该交易区间，就需要二次回踩验证多头头寸盈亏平衡点或前低，才能验证市场对上涨的信心。</p><p>由此，可以得出交易计划：</p><ol><li>回测多头头寸盈亏平衡点并得到有效支撑时介入，在颈线处无法突破则卖出</li><li>突破颈线并得到回踩支撑确认时买入，在下跌趋势起点处卖出</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-META</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-meta/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-meta/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-META.png" alt="META"></p><p>股价已经突破下跌趋势线，并在颈线处遇到阻力，如果无法突破，就会形成绿色走势，即对前低进行二次确认，形成交易区间震荡。<br>也有可能直接突破颈线，对下跌趋势的起点进行回测，即熊旗形态。<font color="orange">两种走势短期概率相当。但橙色走势是必然要发生的</font>。</p><p>针对以上两种走势，制定的交易计划应该是：</p><ol><li>在股价回测前低得到有效支撑确认后买入，在颈线处无法突破时卖出</li><li>在股价突破颈线得到回踩确认后买入，在下跌趋势起点无法突破时卖出</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-BABA-W [阿里巴巴走势推演]</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-baba-w/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-baba-w/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-BABA-W.png" alt="BABA-W"></p><p>目前，股价已经突破下降趋势线，但无法突破颈线，并在颈线处大概率形成交易区间顶部。<br>同时，股价已经完成回测确认最低点，但是由于其无法突破颈线并形成交易区间，因此如果想要上破交易区间，那么就必须要对最低点进行二次确认。<br>所以<font color="orange">黑色走势是目前的高概率走势，而股价回测下跌趋势起点的蓝色走势是迟早要发生的</font>，其具体过程参考绿色走势，不断地突破阻力位，不断的形成新的交易区间进行震荡盘整。</p><p>所以目前最具有交易价值的走势是黑色走势，未来最具有交易价值的走势是蓝色走势。在综合考虑每个阶段具体的绿色走势，可以得出未来的宏观交易策略应该是低买高卖和买突破。</p><p>因此，基于以上走势推演的分析，可以制定一个比较安全的交易计划：</p><ol><li>在股价二次确认最低点得到有效支撑后介入</li><li>在突破每一次阻力位时加仓</li><li>在无法突破阻力位形成的交易区间顶部减仓</li><li>在无法突破阻力位形成的交易区间底部得到有效支撑后加仓</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-XBT-W [比特币周线走势推演]</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-xbt-w/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-xbt-w/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-XBT-W.png" alt="XBT-W"></p><p>在目前的交易区间震荡的走势中，可以推演出三种宏观走势：</p><ol><li>继续在交易区间中震荡</li><li>急速向下突破交易区间，测试前低位</li><li>向上突破交易区间，回测下跌趋势起点</li></ol><p>走势2和走势3是迟早要发生的，且概率相当。在盈亏比方面，走势3的盈亏比最高，其次是走势2，走势1的盈亏比最低。<br>介于交易区间上下突破的不确定性和三种走势盈亏比的综合考量，可以主动放弃交易区间内部的交易机会，只关注上下突破的行为制定交易计划。</p><p>因此，针对以上三种走势，一个比较安全务实的交易计划是：</p><ol><li>在回测确认前低位支撑有效时介入，在股价再次进入交易区间确认无法突破时卖出</li><li>在上破交易区间并回踩箱体顶部确认支撑有效时介入，在熊旗顶部确认无法突破阻力位时卖出</li></ol>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-000001-F10 [上证指数未来十年走势推演]</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-000001-f10/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-000001-f10/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-000001-F10.png" alt="上证指数-W"></p><p>上升趋势线与下降趋势线形成三角形结构，交易区间顶部又与上升趋势线形成了楔型结构。<br>按照三角形结构的特点，我们可以推演出黑色路径的走势，会形成第三次牛市小高潮。<br>而三角形结构在2027年左右面临突破：</p><ol><li>如果向下突破，则形成橙色走势，而橙色走势将在交易区间底部得到第一次强支撑，股价将在交易区间底部和下降趋势形成的楔型结构中来回震荡整理，等待十年后的突破。</li><li>如果向上突破，则形成绿色走势，而绿色走势又将在前高点与交易区间顶部之间形成新的交易区间，因为牛旗要回测上升趋势的起点。并很有可能在前高线与上升趋势线的牛旗结构中来回震荡，等待十年后的突破。</li></ol><p>因此，基于以上三种大概率走势，可以制定出一个长期的安全的交易计划：</p><ol><li>在黑色走势中，在上升趋势线的支撑处介入，在小高潮后卖出。</li><li>在黑色走势结束后，在上升趋势线的支撑处介入，支撑失败止损。</li><li>在绿色走势中，回测交易区间顶部得到支撑的有效确认后介入，在前高线卖出。</li><li>在橙色走势中，股价回测并有效确认交易区间底部时介入，在交易区间顶部或下降趋势线处卖出。</li></ol><p>以上计划只是针对获利最高、操作最便捷的高概率走势，进行制定的交易计划。<br>至于其他低概率走势，等遇到的时候再具体情况具体分析，随机应变即可。</p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230304-BPK.B [伯克希尔-巴菲特]</title>
      <link href="/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-bpk-b/"/>
      <url>/2023/03/04/shi-chang-fen-xi/shi-chang-fen-xi-20230304-bpk-b/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230304-BPK.B-W.png" alt="BPK.B-W"></p><p>从长期来看，伯克希尔大多时期都是上涨状态。<br>所以基于顺势交易的理念，我们的<font color="orange">宏观交易策略应该是逢低买入</font>，而非逢高卖空。</p><p><img src="../static/trade/20230304-BPK.B.png" alt="BPK.B"></p><p>不难看出，大概率会形成交易区间，并且回测前低，甚至测试强支撑位。<br>所以一个安全的交易计划是<font color="orange">在前低或强支撑位得到有效支撑时介入，失败时止损</font>。</p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230302-000001 [上证指数]</title>
      <link href="/2023/03/02/shi-chang-fen-xi/shi-chang-fen-xi-20230302-000001/"/>
      <url>/2023/03/02/shi-chang-fen-xi/shi-chang-fen-xi-20230302-000001/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230302-000001-D.png" alt="上证指数-D"><br>目前股价已经向上突破下降趋势线和颈线，并遇到了一个明显的压力位形成小幅的交易区间，那么就会出现三种情况：</p><ol><li>迅速的高潮反应到达交易区间顶部，然后由于动能不足而自然回落。</li><li>回踩测试下降趋势线和颈线，向上准备突破交易区间顶部。</li><li>回踩测试前低时，受交易区间的影响，迅速高潮到交易区间底部，然后重新向上反弹。</li></ol><p>主观认为情况2的概率要略高于情况1（但一切皆有可能），因为股价每次上破的时候都并未迅速突破区间顶部，反而形成大量影线，这说明卖压强烈，如果受交易区间的影响，股价回到交易区间底部，那么由于多次上破失败，股价大概率跌破交易区间底部，形成情况2的走势。</p><p>况且，<font color="orange">情况1并无交易价值，因为其盈亏比甚至不大于1。只能等待情况2或情况3的出现。</font></p><p><font color="orange">一个比较安全的交易计划是：在股价回测支撑位并得到有效支撑时介入，并在支撑失败时止损。鉴于颈线、下降趋势线和前低的位置过于集中，会导致多次止损的现象，可以只考虑在前低和交易区间底部的有效支撑介入，因为颈线离小交易区间太近，盈亏比不划算，故放弃。而下降趋势线的有效性不如前低，故也放弃。</font></p><p>做个假设，如果股价顺利突破交易区间顶部，就会开启一波上涨行情吗？</p><p><img src="../static/trade/20230302-000001-D2.png" alt="上证指数-D"></p><p>很明显，不会。<font color="orange">因为大交易区间顶部之前被连续三次上破失败，市场必须有充足的信心才能上破成功，而各大支撑位还未经过有效验证，所以就算上破，也必然不成功</font>。</p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>市场分析-20230302-QQQ</title>
      <link href="/2023/03/02/shi-chang-fen-xi/shi-chang-fen-xi-20230302-qqq/"/>
      <url>/2023/03/02/shi-chang-fen-xi/shi-chang-fen-xi-20230302-qqq/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/trade/20230302-%E5%85%A8%E7%90%83%E5%9B%9B%E5%A4%A7%E8%82%A1%E6%8C%87.png" alt="全球四大股指"><br>纵观全球四大股指，英国已经再创新高并且成功回踩确认突破成功；法国和德国也已在箱体上沿跃跃欲试，美国已经出现头肩底反转形态。因此我推断全球股票市场将要重新迎来春天，但是在春天到来之前，四大股指都有了明显的阶段性的回踩需求，也就是说，<font color="orange">这一轮即将到来的底部将是一个优质的入场点</font>。</p><p><img src="../static/trade/20230302-%E7%BE%8E%E8%82%A1%E5%9B%9B%E5%A4%A7%E6%8C%87%E6%95%B0.png" alt="美股四大指数"><br>同时，美国四大指数都已经出现头肩底的反转形态，这说明美股已经走出下跌趋势，即将迎来新一轮的上涨。</p><p><img src="../static/trade/20230302-%E7%BE%8E%E8%82%A1%E8%A1%8C%E4%B8%9A%E6%8C%87%E6%95%B0.png" alt="美股行业指数"><br>同时，美股各大行业也已走出下跌趋势。</p><p><img src="../static/trade/20230302-QQQ.png" alt="QQQ"><br>既然大环境下有一轮下跌需求，同时回踩确认后又有一波上升，那么如果就可以用来辅助推演QQQ的走势了。</p><p>可以安全交易的前提：</p><ol><li>连续三次无法突破箱体底部，证明了箱体底部的有效性</li><li>股价向上突破下降趋势线，证明已经走出下降趋势，并且需要进行回踩确认</li></ol><p>风险：</p><ol><li>股价回踩失败，反向突破箱体底部</li><li>股价回踩确认失败，反向向箱体底部突破</li></ol><p>安全的交易计划（<font color="orange">在股价上升的必经之路上，等着它</font>）：</p><ol><li>在股价回踩颈线并向上突破颈线之后介入，并在向下突破颈线后止损</li><li><font color="orange">在股价回踩交易区间底部介入，并在支撑失败后止损</font></li><li>在股价向上突破箱体顶部并回踩确认后介入，确认失败时止损</li></ol><p><font color="orange">市场可能会在惯性中维持交易区间的状态，所以计划2的成功率更高。</font></p>]]></content>
      
      
      <categories>
          
          <category> 交易笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社交-沟通技巧</title>
      <link href="/2023/03/01/bi-ji/she-jiao-gou-tong-ji-qiao/"/>
      <url>/2023/03/01/bi-ji/she-jiao-gou-tong-ji-qiao/</url>
      
        <content type="html"><![CDATA[<h2 id="围绕对方以及对方的兴趣点聊天">围绕对方以及对方的兴趣点聊天</h2><p>交互原则：一个人对我感兴趣，我也会对她产生好感<br>人的本性喜欢被关注被关心</p><h2 id="压力与支援的替换">压力与支援的替换</h2><p>树立某种压力，让自己成为对方的支援</p><blockquote><p>“放心啦，我怎么会生气呢？我一直说要多帮朋友，以后你需要帮忙尽管开口嘛，我们一起送你回家”</p></blockquote><p>竞争者变成了压力（添麻烦的人），而我变成了支援。</p><h2 id="FFC-赞美法则">FFC 赞美法则</h2><p>Feeling 感受 + Fact 事实 + compare 对比</p><blockquote><p>“你这个裙子真好看，颜色也很衬你的肤色，还显身材，我怎么觉得效果比卖家秀还好一点”</p></blockquote><h2 id="YES-AND-表达反对">YES + AND 表达反对</h2><blockquote><p>“没错，你说的也是，有时候我也觉得他们太不上进了，主要是人越大就越没朋友，我真的怕如果我失去他们，我就真的没有朋友了”</p></blockquote><p>不要用 BUT，转折词会迅速提高对方的警惕，呈现出对抗的状态，AND 不具有攻击性，没有站在对方的对立面，只是提出了自己的想法。</p><h2 id="利他同时利己">利他同时利己</h2><p>替对方考虑，把对方的利益和你拉到同一边，让他觉得为你付出也是一种利己。<br>我的利益 = 对方的利益 = 他的付出</p><blockquote><p>让一下，小心烫伤</p></blockquote><hr><p>社交也是生产力<br>核心：总是站在对方的角度考虑问题，虽然总是利己，但是感觉同时又在利他</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社交 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230301-你对什么感兴趣，就会成为什么人</title>
      <link href="/2023/03/01/ri-ji/ri-ji-20230301-ni-dui-shi-me-gan-xing-qu-jiu-hui-cheng-wei-shi-me-ren/"/>
      <url>/2023/03/01/ri-ji/ri-ji-20230301-ni-dui-shi-me-gan-xing-qu-jiu-hui-cheng-wei-shi-me-ren/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="45bd356cebfb4d4af88cc18ccd182802b3cc4ba780b2b494de9f87aec1b619d7">775986d9acbb0b15ae59994c4d3eed101417c86bd2b7a2fe094c546156a7c52d6abc8874c7f0c85b512b8d33f3bd5cde207ead425d7f188e0c0989838ca7aebdda55cda791999ce0299d4fc0d9310472f4703b019f4b8941efad957532fb174d9d112769fd76ccd63f75d9a076f50fcdb74870bff3939a5c4f18b7ef5fe839921c8d0be363d65d261fed1cc145620f86b9bae887ade0977924bc9f8b9c7fe2485c832382f0976f0a3b153eaf197a1f93a16345df2e7568bebb8871fbba488037a476f4c84c3005b8e91c81938806783791a14d74436f2106d1c99c071383b59c1162b0408ad76cd2c5c4b3c3554ec16c9067b1a1abfb263165d05d280a9ce4fdba67a7528c3e6aacecf11d196fadfee2a915869bd8617c24efac9c2f4e038bfbbec1e8ae20fec1913167a93a7c3acb99cce0d0d337f24bb327a33acc0608c8bd5b5996e1cd2443f3adfdee93f58807fae0447b593509ae54f95fa3842db3996eaacc35919f932b5a9d980926798fd66e5e180c103e7405948c26abc82caec40d80df4a6fd2f14b33ec1f8dc3e9be4e2fae50bb33ceac17211b7f8970ef70bce660c49bec9ea797f8bcc7a59e931bb7904332c1dcfca3182abcdcf19eae3d248fd39ddad030dbc9032c27a7ba9f25f08c45ef2344bd48061c56487da6e3c6d47ef2dabf339f63d23fd86fc7bf49e756068f851d06e82168c3c664d87d718e634551dbbdd36cb5737d7e9343878af73b63f8b155dd771ea63561f2f66c58e4c2bd28e5480e657649acabc0483a6c71e595e7301b26b372b16320b539ba95f363d5b5ab2591c4704cab3fe3f1d86e32dcf745edebb3bb64f068905b9f086e2e80b257b75a5d99881ebfd083b85b8ed364c58e83019a86ea6b35fc896b78242cb95738c544740b4868c7192f55c7128756e38d1bd66f4d78e74e6795e3c6a5592fccb8ad6caf6556c7c7b3ee642be028631e520d9612bb70f7c48bc5104e83d0606ab0dc1b6bdb83b3f2ad644c471eed132968cee23a0b2338d561b5b79fc4b1b79dc5c70c2694867447130b1818e04c0fdb1000406f22dfdc1c26afdf2689f364d4d234645ca1a3a41538b2926d6ec2ea8ceee6ab40c7156c3987f8076bca57a10e69cb043cf5a55fa87c13a4a6c3c4269e3dfda03f8d14fbb3f19211d4378f3dfaaaa1067bfb64a24cf22489c5385177604a1cbee8d3a9dfb47220f676b92363ce8d7843f4229768377cf951abbf2a7e262048996d92f7151904f8fdf2d91e271a19073db1b3f96b735f9378182b1aaae4178475392b357dab5aad972797b030e15a57dc5677eb1bc15f134d928bfdf6b060abc0152721e9f65f2869d13d7bb61811ec7ebda6012a15f560869e2e069ad48145007259f1bef83c3abae6f2b82578d8817cc4c05697aff97abcb2d7d19c81776b4f2931b58411c6033afdb8e29215947e844ac5d212a3dcaa002b0b8a6de88443b77427bf09233c541d4f47a7ef4ad262b7fbced45a9d61da9d0d66ead64437885149d08d7bd0d37652c0cbb94c6e791b5d717da2cb2e6b3832b554ee994904ffd142c045ea61fd90115bcf6dc1170c625fa586c9f1cbe1d7317f2f4495b896b16ca350bb5de95859a7fed270630fdd8cb6733170f412ad7d94c3df962014813233766545c8f1348c1c82ae5464fb292a601769e45e472074209173bbdd2e390af033d912a11aacba3f4c2e00770d5246b222e330dbf025f4314a2f54463807210cd2c2f659f73e4672720d3797b6d749f313deb7aa68a487cf0e2d59f7849ac8fcec69fc861a53697b4fee26017da61e90a62eb0d7a8f46ed4a81ba8b8f0bc833534d4689359b3dbe3b66c7c0b7469a7bde14f73d1d35fe9185cfa02f42770ec9ee52d3cd48b930bbe48d5e3d981b07d9ec2b9dde16298bc42909dc71f6723f1f8dc3633fe9faeeb04eec8ff2175e6f1a3cf6a09c640761830b71abcc563b5db1c963fcc10010f9960704b0fe579f946d2d11b42edb3732bc26701b54d180d783a8b9070a902004275a2518ed96e5e4742d9e2b4e9a1afdf9455c81648bb936373c94a11f81dbfdef8ab1a192708f2422924ef099219d8f1cdf4b43692fdef3e900fc409ec37c201fd994095694862620b5bbb9ce8f10ce996a6995e898afabff2163031e0909859aca3c10e88e3465d4cfd20e79845d2714f24a23dbb8f76a587323bc86573b728525f32ba11ae80b65c60498f87da39db2bf2b46fe706e579d40847feccf7b28729cb5566b13fa6ba79bbfccbc65874fcacc2ef743cc57e1c6169f1934ebd3450e2077fc92e255181e5b08863d2fd862c6f8c8975375c5836a334b5b3af05555cbe8577aa6f849ee61286b45f1d7fb197840755356c0615c51f53d315bb63ecbfb8496d1740377beb7d48dae561ee9f653acef6649a4b8cc89f1dccde2935201d4995d7d7445fe339dfaa675ee2e62758f58f6d7b7e517153c7a0a9b8848102398a49a738d332f7e972bb52d1bd4665d10804ba22970c6f76491a468c231f69254468255001903f8ac5eca0f22a970c0629dc2895fd136b74a6d18deb5a9d7ae48570a85233e45babc119037a176c143f636610b264e4678bfec1a1d1c3dd72e8d73e25d0f94265cf3410c31312952b6eaf6460ccdaeaf53216bd89d280f8b75290d07c3e865820c3fc7c6e68f79449a2680a6c0b0eab6ac87300f33727e15fccd70a82f90630c98cfe6ec149363b9a7aa249f484cd333ff0d4c162d22cd4546624b62fd55914dc843237186b8864fe0a3dd14f1142fe2c91fefbb5c6d0ba8f9c69ccf311e3785929f2f2938c7d6b7f34238a88c9d3e4428e32fab203117576ef7bd62b65ce22404964bd29d44299db24710840d323a00cd36a0d89287704246cb1951690bf2d6a885f108735c2a355150863d183303fba0eaf9ef75e76b3a86c650bf88f958650b79ff36cb537f95635198272bb5be8d3bda368e1ee9afd9edd61941f6b936eb325d2080ca4adb779f8e31a6aa58349d2ae134de386de4fef1db8b3fe23a9a7105fe96dd33ef7d4cfdd6811ea5879f1dfe05a6af9c3fc600f7bb868523e1edaff470171e8586838e7da255f278ee8f9bb7c394e8543030e3d6f7319e7b2866b06a8958c3551378e2daed152a251985c49b1e95aabbb3e02636eddb4190f62e2aa20d231417b6f184b4b36dc3ae55d3bdfd0afc253698014141f8cd59cc505c7f21cc5384686d44299dd02692221990d55e60fe22fe035a1a23838c4cbe9aa9c4075b5fb762f3c5c0dd173798e9d66be6f07da5e540600f17e655af18b0073fa871c6b08cc2107feaf345593b302aa2ab118ba302efc06bb81a6489c64d09c11cd09fb66c144e57dfabbbdba9c1ff7ce51de1e790ad932afa185257343aa7d7c3cfcf8790e793f53cab900ee7a07989260d5fbceecddc83fffa0bfb5014e1220e4aeb4bc09416bc9f5c560a7ec9faaa8079daef27df9c5f16091d727502bda104cd1b92c92045e731eb2d26f86557438e6e8f4ad681fd3484f355c90404fc9f5a4ffbd39eda3561794bc30795426e21fdb518ec71ad0856ea989d676eb13498b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230228-如何使用目前手头上的钱</title>
      <link href="/2023/02/28/ri-ji/ri-ji-20230228-ru-he-shi-yong-mu-qian-shou-tou-shang-de-qian/"/>
      <url>/2023/02/28/ri-ji/ri-ji-20230228-ru-he-shi-yong-mu-qian-shou-tou-shang-de-qian/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="dc621243b6a83268cb6276e52971917faadd2a8558c4998cf706c408ef18d35a">775986d9acbb0b15ae59994c4d3eed10d9b021faa5969ff4c1f9809b5d9b8093ae752826d4aca9d340a72a4df90e459556c14aaf5aed728b73bb43706634b82cd6a98fdc07d3524d49d4a527c86ca192488799de4b172518a3f38ef838e2a14ed519a4dd27fb1ed547679869ce7dc7a114901779baa07ce86523c1266e46d6ed4ecc0cfbf8e73e1b8a098dc0a9a04bbee0fd7aaa23954224e8568e49ed41766bbccd82f731093ea962ad93f61c5b8ff215be599eebb9bddf72db62f4373c8f84243bfb973e550b704679f4dce01c0e7a713c898aad92a2facd5ff79bd0d817d0586d137e83b14fd2d6dfabb3bd44c81313c73d65487723a693fa420fc12958f536eff410e76445061e28081a7e94a28b2848a8309fd9dac96564128defcd6cfc028d7bf49c6ca4c009b59e624a24d6a751447b9a44cca73454d544c1b8a13ddb4034eb0fd0ca354ccb8ba9ea910ba8b25eda665ff6f50fbc25bd2c5c6eb9fcb32855ceb26ff6afe0052cdec599c57585347fc3664cffbce5c2a8f8086dde8f2cb28b42a0381044e1009ae3077cf22f394bc80df5006d1fabd357968c162e59340ce4fd75cd90324521b1252317eb12ddd1dc1047fecc6e7b8ca8f5344d1ec5d649849c6fbabccf72497dca9e531990f87e4a9b7010ca15411b84b4e281b3a15e77d244f8b18c173df428d57e4857e3bc4dbffb096594caadc39ff5baff6cbf72c91a85f77b503f82c70f9de7526b6d42ee43b5ee260dafa0445843acad38a76d59c6f308f88f76e4d8957d825330cde1a31fcc72c267e51104852de4f6c1105a096eb2b26b2d2d24ed71b86f5f92f92a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230220-应急措施</title>
      <link href="/2023/02/20/ri-ji/ri-ji-20230220-ying-ji-cuo-shi/"/>
      <url>/2023/02/20/ri-ji/ri-ji-20230220-ying-ji-cuo-shi/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="daea6d77e2331ba1d784cae5e445bdf2ec6d8bb8693258c2d688de1b2e04b569">106e4c72383819ec24a98cd88ba2b4e35385398136a90eeb834544d8916a29cf16bc304cee7d0cc834f28d2c391825096a93224071b9f033e2177f4a0b859a47787ba758f722dc631542445f3bc55ae76b0978205ebc9f1f1dc676ea415b01cc2a615855465d3bc9d1d5d95f46e4dd35866ecbdf81c2594270fe18e2ea6b5ec3418fbe919b71b7fc4200a6c88833020ad59aed2c6666b5c3fc1745df2ba99fe7929a1a87f9ab0d47a6da06db0dfcc47b4742d34adc9b0309c22716f964e3d4c574ddd8964f47c95f6fa9e5c45eaab2e2140f63bf9e100aaea7e8171caae9ebc580ed07443f9150ffedf52654c6ff0c8ce6be9297c1c5a0f2f35e05be43457a37f08a33a687198affde6233654ed329cb71ab23e436854236467986be0eaf48c1e6e13db555a9cb49cd19a51b43b0d132846e9ebe6a4ad34abd18245b09d2720afe1ce351d6b5fbb7b9b673a81e40a447d7afc73e3d917c078092576a2a4f56511b6043c904764d3c330a7f84159f93967b623ef5d6351191cf383565627e0a8d6a75857010037e6c500f2313cbfe0d594a5e3b8b290bbb559eb58737cb16197a4a4b92ae26af8b56aeda52bbd8bdb26e1bbfee5a7ed8a374f1b1d4b8862e6f5a03236d4c866f89ff239a91e8308b4271181a48e840415570f3c043a05b7b893b1c2d5fabe71a892336fce8dc22e8cf69c9e2090c2044ddc1038820b65476e6091f75f9772d2d33797e44dad3cce79ebb7544c5e8814364ad699ada32b0602faa12cad27f02599b21b455f4c278845d923ac9c77a0cdab3b230883a5344ae95f0d84fe71baeb1d92a127b1d741f57d1802c0a1eef61b9450c93204cf13c8f5271dd8de744e214f6935b31b0e47474f07b12ca72b98542e2a6f7695c2f7483f0e7f3ed4370464bf78ee4975a169265f4c564b53682bc58a064ee38a45440e63bdd5e1dcd755636ab2b8cec176a9947eaa7aff9bd19bbe9792b28372bc4ae2b5e8fc0c8aaf05b7a67839eaec3254cfbf2f5f86a14a45e227406fd9358e9f97e561bd3f1e3603b5c4e840d2c6022e52e28001d9815cc5b6d4115f35054955b1b802ae26de9eae463637f99947fe6e2d47b2c7869811be1e85c881362ba9d0860aaf65bdfb839e8a555cab8580d763de33297ec0cb0dec48718b7c8927ff7c56c10d6b95928294c84c70c4ca678f25badeb9edb70b0facc4d89b659f22534b8dc2cb50a7d09e61f041c5eb1312fceb736f208b5c6ab0d69f8c7e4ecc54242b17d302f0c0083bea2719a9b441c65efade0124a7549a54c93d2dbac26cfea4a63c93bea86696a4761bf00127b401ae17f3a1e329d4f4e0b6170f54a390f641873e476a4eddebae03e15d82ed5368b58f2a67811483d41dd1828c8fc943b516dceac4032f109a3b920fe64e6d6a9b6998c9805aa16cdccfc59211f8a1aaed8a85273f3e2ebb2cbf7c128482c02cf7cf5d52874c1284922c6baf035535fd9a6bd586236ac46bb82dc482b4584ac2a5492ffce9731e2a3ab6770c2e18b10dbc3f14ca0f75946daa2baf380e216aa4cd5fa57e18941e9e140c5133bddf18f453a7f13ed96035e9be9a79ce2fc15b94c93cd6845b75294fe25c761cfd38a46c1e2ac13690d02f1e97c40690512f8d98ca5198c35bc52b95451dd315872302d6cd3a3b3f29795f6c3b67d6c0cb65174777546b95ad33b1f7213c09d0f7db72509633e8666aab55e9eafe8a50e388f35c4b8164cda88d5a6ccf7d86a4b6e35928a9083a6a88a03da68228a4db581869593751085e95e12709b2bd41ae7055a3bc71a33eac17624159c320d1d66cdb2dc98e7b413127d08d190d82ecb2c8caa80e647869d0d27791ff3a4a22e8c0d83427a27b7a02a8f06a1bcab10c08be5f7f0442e9d8f0d3c645403824dc2d255c535d9676e47642ae011f8349f1d4862fb8462656c0c3422930433c01a57fec9fa873f7086419c0afb6d125d3ed7c090dcf1c4b120c7a611c6e9cd6a6b68576c5324bda3c1a69c1ead77ac0dd2c374ef3f69412d3ba2c284abb5095924a21eb4b93a6ad2d479b83069111aab106867bb2c82d2892396063c814f547bf8e582733a4b4902b3dac284695a44f1b30f00a8e7c7809af9ba3862875e12a64e5d6af4ed9b21eba4c38cb49c85232f9b9791a27b9f32a1e29ed410f6d4182d276cae91041c35597ae2df6899854535c67b2a224791354b4de6b0a3cb5198ae2f7fa39fdf5ecf98b0f9445c991a251b28a70777a8261d3050e7cbd8631f1e3988f5db5a0c42d01ea4d8cbf9699ee9dc011e6bdc11762f0496e85bd5b80e5cb86c22279d92cfc64fbed54b7e130ed84f744295de7e8e0a3359d03e7c19bbdb2d50fb0da0e6cfc08b9f98b50537985c0304d9f5f7af3afea6084ebbb1d6f6347ea1fa45b8cb96d21e4a81161b1914e59069a6a61e22b29d44f3627bc3f96ca6e0b0821c83dd5c2c33bd2ee0e931e347a8896ba41d456cde09e4f106312583eaf0f21163dd09759376d4fa1daaff609eebcf20ad9c38a583e068bffe12ce3acc7abf0b3710f623ace55b87606b2910bc1044c2d3634c8bd838a88601fbba8bd82150f6fa21ed5bc767f1c210d81de127634ab9ec07ea3a12ce049c8105c3775b663af34740dc5408bd1debbd703513e80542b0b85fb3e22f146e8f1650d3fe124c432245bc63e06366c2c7b3650c1cdd5c471d1f57b1fc4cf4607c8e85cb84d5c0bf7775aea35979a5d44711784db9996cc2d75b820df9e2f7dc918f546c47209e1ab6249de5148d54ccc97c9ed972969a30d069e15dbbaaa12bda8269ac9c21a49375eaebb7c1b7fb3be8ff606182dff66d8c3982f24148dbe36cf4733597f3f39cf4eee04582c644c5137a2c51d6c39f1447dc6d939f93f6ba9a86ade678c810a84ba774fc7ed05b5b950a3bca8bf160482cb91950a8224e9f897e8b7e65cfa600b10aef3f9c0a3458236d0c26da27e4bd0ca7f5f58bda815007f069f9b93891b03b5eaae48fb45bd75ec3e21cdfedcce330fae6f529fc144f01530e28538152ecb0bbabddb9f3869907e544796e8a2efd09e47a6a7e213b79b6584e3be894215e86cf204739cbe799ecb6d3da7fd8b128ae859c166e691a1f45a53040f03b3b2f1dccc2300079bee9d6ed49fad1d28554a436a1d8f6a8a581319227fb935abb7cde39f06495aacdd5912019dbbc02d79f18a23e72e7ba58d93fa3567a33b3e165f97a7e4ba3798b3cfa4aba5aa9ce54294cdfce99755f54d6c29c5eb5c20940bb3579cc574b13d30f1d24c5d8931b443bca54cb3609a4c37cb6eb8bc5de4fdf7e9a20513b71bba94d53704bfc540424a7d4d03d8aab3b101ef75d63bbac8ef17538a7068de7867721fd1968d9c7a816bee7618f975cd5096ba24ee248dcf9023ab8d7cf1a86f5a4ff89bd0eb0f02aa26221eb10f71670957d99869c5abce4827397f0cd5f6a633920388aa0e571e0eb3e48eb2c8e57a2ad0767bb2667a750b312f99266a2929a8663b217ccc673734ef5cedba021356750cf2dcd4ecb6a194996955bc5b46c653b900cfc41d7fb73c17f3cb9c0e97d02bcf7659ae34c48b2b2014b95f3e467ffec292e1f8bf677e0e88be4b9f5f3cc9a0b9dd7bb0c37f0ae9dfaa3003c3035431a7499cd7596b209525daed4d9251a3b95197ff88a2cf0cb0c03e009ca24a4e23d2f9356548b2853d786bd6c5b5b6da3bb3ce40bc48c0527cbe517b2a325cce56f88f13f46eeed4d97df366b15129d59d756c3489a41fb393faf4c5d80ea446154171b12ce9e239027a91101fc4a4389c4161aafa68c61dc3b52c1fdb7e778cab7bf698c6327041f1e00620e1ce0c2c3f699e18935b84633ebc235f629665e411b9f211659054b6a5475832cf258e819ab69e177db43296d7b1594e6b2211aa92caa05263833647d3f3f02ea1dd5a729e47132e9383b1d1b79d2543902d6e65edb355e2ab76400e1808c811bb4ec95eee0ad5b10fd63b3a0d7e08f4da9ec57c7883c0cee70b0d70c9c1c6dd1dbbdfc0bc2a480c88cedab199e4792ec460c13668a578724dc962b2453dd8b1f1f529dc47d1ab8c24b9ed38840c36a0a64aeb92c16ea559fbaa8fd8d9c7888cd4c9e5644c118e40a584a6ea1ec3a09b983938e3d6957a91275333be8ec2e285566e82b325c54d0f0f6f1b7b0fbe32c77a5038fc56840a621864807c8615826db34ec8c5f48e0068f9498</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 计划 </tag>
            
            <tag> privacy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心理学-随机激励</title>
      <link href="/2023/02/16/bi-ji/xin-li-xue-sui-ji-ji-li/"/>
      <url>/2023/02/16/bi-ji/xin-li-xue-sui-ji-ji-li/</url>
      
        <content type="html"><![CDATA[<p>三个行为实验：巴普洛夫的狗、华生的婴儿、史金纳的鸽子</p><p>人的行为是后天可控制的：</p><ol><li>调节环境</li><li>设定行为后果：<ol><li>强化（增加）：正强化、负强化</li><li>惩罚（减少）：正强化、负强化</li></ol></li></ol><p>通过强化得到的行为在去除外力后依然会得到保持<br>而通过惩罚得到的行为会在去除惩罚后消失</p><p><font color="red">随机激励会上瘾</font>（大脑会分泌多巴胺）<br>克服随机激励：</p><ol><li>调节环境：互助小组，感官正激励</li><li>自我正激励强化：只做对的事，正激励强化信心</li><li>良性循环</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心理学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哲学-斯多葛主义</title>
      <link href="/2023/02/16/bi-ji/zhe-xue-si-duo-ge-zhu-yi/"/>
      <url>/2023/02/16/bi-ji/zhe-xue-si-duo-ge-zhu-yi/</url>
      
        <content type="html"><![CDATA[<p>幸福就是心灵的安宁（不动心）<br>克己制欲（理性）</p><p><font color="red">控制二分法</font>（尽人事，知天命）<br>把手头的事情分为可控制的和不可控制的，只关注可以控制的部分，彻底放弃不可控的部分</p><p><font color="red">消极想象法</font>（做好最坏的打算）<br>恐惧源自无知无明<br>愤怒源自绝对的意外</p><p>过去的事情无法改变可不控，未来的事情不可控制<br><strong>感恩当下拥有的一切</strong>，思考哪些是可控的，哪些是不可控的</p><blockquote><p>如果你相信命运，你会被命运牵着走；<br>如果你不相信命运，你会被命运拖着走。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-4.Bean生命周期源码解析</title>
      <link href="/2023/02/15/coding/spring-4-bean-sheng-ming-zhou-qi-yuan-ma-jie-xi/"/>
      <url>/2023/02/15/coding/spring-4-bean-sheng-ming-zhou-qi-yuan-ma-jie-xi/</url>
      
        <content type="html"><![CDATA[<h1><code>Bean</code> 的生成过程</h1><h2 id="1-生成-BeanDefinition">1.生成 <code>BeanDefinition</code></h2><p><code>Spring</code>启动的时候会进行扫描，会先调用<code>org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider#scanCandidateComponents(String basePackage)</code><br>扫描某个包路径，并得到<code>BeanDefinition</code>的<code>Set</code>集合。</p><p><code>Spring</code>扫描底层流程：<a href="https://www.processon.com/view/link/61370ee60e3e7412ecd95d43">https://www.processon.com/view/link/61370ee60e3e7412ecd95d43</a></p><ol><li>首先，通过<code>ResourcePatternResolver</code>获得指定包路径下的所有<code>.class</code>文件（<code>Spring</code>源码中将此文件包装成了<code>Resource</code>对象）</li><li>遍历每个<code>Resource</code>对象</li><li>利用<code>MetadataReaderFactory</code>解析<code>Resource</code>对象得到<code>MetadataReader</code>（在<code>Spring</code>源码中<code>MetadataReaderFactory</code>具体的实现类为<code>CachingMetadataReaderFactory</code>，<code>MetadataReader</code>的具体实现类为<code>SimpleMetadataReader</code>）</li><li>利用<code>MetadataReader</code>进行<code>excludeFilters</code>和<code>includeFilters</code>，以及条件注解<code>@Conditional</code>的筛选（条件注解并不能理解：某个类上是否存在<code>@Conditional</code>注解，如果存在则调用注解中所指定的类的<code>match</code>方法进行匹配，匹配成功则通过筛选，匹配失败则pass掉。）</li><li>筛选通过后，基于<code>metadataReader</code>生成<code>ScannedGenericBeanDefinition</code></li><li>再基于<code>metadataReader</code>判断是不是对应的类是不是接口或抽象类</li><li>如果筛选通过，那么就表示扫描到了一个<code>Bean</code>，将<code>ScannedGenericBeanDefinition</code>加入结果集</li></ol><p><code>MetadataReader</code>表示类的元数据读取器，主要包含了一个<code>AnnotationMetadata</code>，功能有</p><ol><li>获取类的名字、</li><li>获取父类的名字</li><li>获取所实现的所有接口名</li><li>获取所有内部类的名字</li><li>判断是不是抽象类</li><li>判断是不是接口</li><li>判断是不是一个注解</li><li>获取拥有某个注解的方法集合</li><li>获取类上添加的所有注解信息</li><li>获取类上添加的所有注解类型集合</li></ol><p>值得注意的是，<code>CachingMetadataReaderFactory</code>解析某个<code>.class</code>文件得到<code>MetadataReader</code>对象是利用的<code>ASM</code>技术，并没有加载这个类到<code>JVM</code>。并且，最终得到的<code>ScannedGenericBeanDefinition</code>对象，<code>beanClass</code>属性存储的是当前类的名字，而不是<code>class</code>对象。（<code>beanClass</code>属性的类型是<code>Object</code>，它即可以存储类的名字，也可以存储<code>class</code>对象）</p><p>最后，上面是说的通过扫描得到<code>BeanDefinition</code>对象，我们还可以通过直接定义<code>BeanDefinition</code>，或解析<code>spring.xml</code>文件的<code>&lt;bean/&gt;</code>，或者<code>@Bean</code>注解得到<code>BeanDefinition</code>对象。（后面会分析<code>@Bean</code>注解是怎么生成<code>BeanDefinition</code>的）。</p><h2 id="2-合并-BeanDefinition">2.合并 <code>BeanDefinition</code></h2><p>通过扫描得到所有<code>BeanDefinition</code>之后，就可以根据<code>BeanDefinition</code>创建<code>Bean</code>对象了，但是在<code>Spring</code>中支持父子<code>BeanDefinition</code>，和<code>Java</code>父子类类似，但是完全不是一回事。</p><p>父子<code>BeanDefinition</code>实际用的比较少，使用是这样的，比如：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu.service.Parent<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prototype<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu.service.Child<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这么定义的情况下，<code>child</code>是单例<code>Bean</code>。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu.service.Parent<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prototype<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu.service.Child<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是这么定义的情况下，<code>child</code>就是原型<code>Bean</code>了。<br>因为<code>child</code>的父<code>BeanDefinition</code>是<code>parent</code>，所以会继承<code>parent</code>上所定义的<code>scope</code>属性。<br>而在根据<code>child</code>来生成<code>Bean</code>对象之前，需要进行<code>BeanDefinition</code>的合并，得到完整的<code>child</code>的<code>BeanDefinition</code>。</p><h2 id="3-加载类">3.加载类</h2><p><code>BeanDefinition</code>合并之后，就可以去创建<code>Bean</code>对象了，而创建<code>Bean</code>就必须实例化对象，而实例化就必须先加载当前<code>BeanDefinition</code>所对应的<code>class</code>，在<code>AbstractAutowireCapableBeanFactory</code>类的<code>createBean()</code>方法中，一开始就会调用：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resolvedClass <span class="token operator">=</span> <span class="token function">resolveBeanClass</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这行代码就是去加载类，该方法是这么实现的：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">hasBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> mbd<span class="token punctuation">.</span><span class="token function">getBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedExceptionAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span><span class="token function">doResolveBeanClass</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> typesToMatch<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">doResolveBeanClass</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> typesToMatch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanClass <span class="token keyword">instanceof</span> <span class="token class-name">Class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果<code>beanClass</code>属性的类型是<code>Class</code>，那么就直接返回，如果不是，则会根据类名进行加载（<code>doResolveBeanClass</code>方法所做的事情）<br>会利用<code>BeanFactory</code>所设置的类加载器来加载类，如果没有设置，则默认使用<code>ClassUtils.getDefaultClassLoader()</code>所返回的类加载器来加载。<br><code>ClassUtils.getDefaultClassLoader()</code></p><ol><li>优先返回当前线程中的<code>ClassLoader</code></li><li>线程中类加载器为<code>null</code>的情况下，返回<code>ClassUtils</code>类的类加载器</li><li>如果<code>ClassUtils</code>类的类加载器为空，那么则表示是<code>Bootstrap</code>类加载器加载的<code>ClassUtils</code>类，那么则返回系统类加载器</li></ol><h2 id="4-实例化前">4.实例化前</h2><p>当前<code>BeanDefinition</code>对应的类成功加载后，就可以实例化对象了，但是在<code>Spring</code>中，实例化对象之前，<code>Spring</code>提供了一个扩展点，允许用户来控制是否在某个或某些<code>Bean</code>实例化之前做一些启动动作。这个扩展点叫<code>InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation()</code>。比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInstantiation</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"实例化前"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上代码会导致，在<code>userService</code>这个<code>Bean</code>实例化前，会进行打印。<br>值得注意的是，<code>postProcessBeforeInstantiation()</code>是有返回值的，如果这么实现：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInstantiation</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"实例化前"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>userService</code>这个<code>Bean</code>，在实例化前会直接返回一个由我们所定义的<code>UserService</code>对象。如果是这样，表示不需要<code>Spring</code>来实例化了，并且后续的<code>Spring</code>依赖注入也不会进行了，会跳过一些步骤，<font color="red">直接执行初始化后这一步</font>。</p><h2 id="5-实例化">5.实例化</h2><p>在这个步骤中就会根据<code>BeanDefinition</code>去创建一个对象了。</p><h3 id="5-1Supplier创建对象">5.1<code>Supplier</code>创建对象</h3><p>首先判断<code>BeanDefinition</code>中是否设置了<code>Supplier</code>，如果设置了则调用<code>Supplier</code>的<code>get()</code>得到对象。<br>得直接使用<code>BeanDefinition</code>对象来设置<code>Supplier</code>，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AbstractBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token class-name">BeanDefinitionBuilder</span><span class="token punctuation">.</span><span class="token function">genericBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>beanDefinition<span class="token punctuation">.</span><span class="token function">setInstanceSupplier</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2工厂方法创建对象">5.2工厂方法创建对象</h3><p>如果没有设置<code>Supplier</code>，则检查<code>BeanDefinition</code>中是否设置了<code>factoryMethod</code>，也就是工厂方法，有两种方式可以设置<code>factoryMethod</code>，比如：<br>方式一：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userService<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu.service.UserService<span class="token punctuation">"</span></span> <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>createUserService<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对应的<code>UserService</code>类为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">UserService</span> <span class="token function">createUserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行createUserService()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> userService<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方式二：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>commonService<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu.service.CommonService<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userService1<span class="token punctuation">"</span></span> <span class="token attr-name">factory-bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>commonService<span class="token punctuation">"</span></span> <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>createUserService<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>对应的<code>CommonService</code>的类为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonService</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token class-name">UserService</span> <span class="token function">createUserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Spring</code>发现当前<code>BeanDefinition</code>方法设置了工厂方法后，就会区分这两种方式，然后调用工厂方法得到对象。<br>值得注意的是，我们通过<code>@Bean</code>所定义的<code>BeanDefinition</code>，是存在<code>factoryMethod</code>和<code>factoryBean</code>的，也就是和上面的方式二非常类似，<code>@Bean</code>所注解的方法就是<code>factoryMethod</code>，<code>AppConfig</code>对象就是<code>factoryBean</code>。如果<code>@Bean</code>所所注解的方法是<code>static</code>的，那么对应的就是方式一。</p><h3 id="5-3推断构造方法">5.3推断构造方法</h3><p>推断完构造方法后，就会使用构造方法来进行实例化了。<br>在推断构造方法逻辑中除开会去选择构造方法以及查找入参对象意外，还会判断是否在对应的类中是否存在使用<code>@Lookup</code>注解了方法。如果存在则把该方法封装为<code>LookupOverride</code>对象并添加到<code>BeanDefinition</code>中。</p><p>在实例化时，如果判断出来当前<code>BeanDefinition</code>中没有<code>LookupOverride</code>，那就直接用构造方法反射得到一个实例对象。如果存在<code>LookupOverride</code>对象，也就是类中存在<code>@Lookup</code>注解了的方法，那就会生成一个代理对象。</p><p><code>@Lookup</code>注解就是方法注入，使用<code>demo</code>如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span><span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">OrderService</span> orderService <span class="token operator">=</span> <span class="token function">createOrderService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>orderService<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Lookup</span><span class="token punctuation">(</span><span class="token string">"orderService"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">OrderService</span> <span class="token function">createOrderService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-BeanDefinition-的后置处理">6. <code>BeanDefinition</code> 的后置处理</h2><p><code>Bean</code>对象实例化出来之后，接下来就应该给对象的属性赋值了。在真正给属性赋值之前，<code>Spring</code>又提供了一个扩展点<code>MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition()</code>，可以对此时的<code>BeanDefinition</code>进行加工，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuMergedBeanDefinitionPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">MergedBeanDefinitionPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessMergedBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">RootBeanDefinition</span> beanDefinition<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanType<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>beanDefinition<span class="token punctuation">.</span><span class="token function">getPropertyValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"orderService"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">OrderService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>Spring</code>源码中，<code>AutowiredAnnotationBeanPostProcessor</code>就是一个<code>MergedBeanDefinitionPostProcessor</code>，它的<code>postProcessMergedBeanDefinition()</code>中会去查找注入点，并缓存在<code>AutowiredAnnotationBeanPostProcessor</code>对象的一个<code>Map</code>中（<code>injectionMetadataCache</code>）。</p><h2 id="7-实例化后">7.实例化后</h2><p>在处理完<code>BeanDefinition</code>后，<code>Spring</code>又设计了一个扩展点：<code>InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation()</code>，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuInstantiationAwareBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">postProcessAfterInstantiation</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> bean<span class="token punctuation">;</span>userService<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述代码就是对<code>userService</code>所实例化出来的对象进行处理。<br>这个扩展点，在<code>Spring</code>源码中基本没有怎么使用。</p><h2 id="8-自动注入">8.自动注入</h2><p>这里的自动注入指的是<code>Spring</code>的自动注入（<code>AUTOWIRE_BY_NAME</code> 和 <code>AUTOWIRE_BY_TYPE</code>），目前已经弃用<br>后续依赖注入课程中单独讲</p><h2 id="9-处理属性">9.处理属性</h2><p>这个步骤中，就会处理<code>@Autowired、@Resource、@Value</code>等注解，也是通过<code>InstantiationAwareBeanPostProcessor.postProcessProperties()</code>扩展点来实现的，比如我们甚至可以实现一个自己的自动注入功能，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuInstantiationAwareBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">PropertyValues</span> <span class="token function">postProcessProperties</span><span class="token punctuation">(</span><span class="token class-name">PropertyValues</span> pvs<span class="token punctuation">,</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> field <span class="token operator">:</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>field<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span><span class="token class-name">ZhouyuInject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span>field<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> <span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> pvs<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于<code>@Autowired、@Resource、@Value</code>的底层源码，会在后续的依赖注入课程中详解。</p><h2 id="10-执行Aware">10.执行<code>Aware</code></h2><p>完成了属性赋值之后，<code>Spring</code>会执行一些回调，包括：</p><ol><li><code>BeanNameAware</code>：回传<code>beanName</code>给<code>bean</code>对象。</li><li><code>BeanClassLoaderAware</code>：回传<code>classLoader</code>给<code>bean</code>对象。</li><li><code>BeanFactoryAware</code>：回传<code>beanFactory</code>给对象。</li></ol><h2 id="11-初始化前">11.初始化前</h2><p>初始化前，也是<code>Spring</code>提供的一个扩展点：<code>BeanPostProcessor.postProcessBeforeInitialization()</code>，比如</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化前"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用初始化前，可以对进行了依赖注入的<code>Bean</code>进行处理。<br>在<code>Spring</code>源码中：</p><ol><li><code>InitDestroyAnnotationBeanPostProcessor</code>会在初始化前这个步骤中执行<code>@PostConstruct</code>的方法，</li><li><code>ApplicationContextAwareProcessor</code>会在初始化前这个步骤中进行其他<code>Aware</code>的回调：<br>a. <code>EnvironmentAware</code>：回传环境变量<br>b. <code>EmbeddedValueResolverAware</code>：回传占位符解析器<br>c. <code>ResourceLoaderAware</code>：回传资源加载器<br>d. <code>ApplicationEventPublisherAware</code>：回传事件发布器<br>e. <code>MessageSourceAware</code>：回传国际化资源<br>f. <code>ApplicationStartupAware</code>：回传应用其他监听对象，可忽略<br>g. <code>ApplicationContextAware</code>：回传<code>Spring</code>容器<code>ApplicationContext</code></li></ol><h2 id="12-初始化">12.初始化</h2><ol><li>查看当前<code>Bean</code>对象是否实现了<code>InitializingBean</code>接口，如果实现了就调用其<code>afterPropertiesSet()</code>方法</li><li>执行<code>BeanDefinition</code>中指定的初始化方法</li></ol><h2 id="13-初始化后">13.初始化后</h2><p>这是<code>Bean</code>创建生命周期中的最后一个步骤，也是<code>Spring</code>提供的一个扩展点：<code>BeanPostProcessor.postProcessAfterInitialization()</code>，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化后"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以在这个步骤中，对<code>Bean</code>最终进行处理，<code>Spring</code>中的<code>AOP</code>就是基于初始化后实现的，初始化后返回的对象才是最终的<code>Bean</code>对象。</p><h3 id="总结-BeanPostProcessor">总结 <code>BeanPostProcessor</code></h3><ol><li><code>InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation()</code></li><li>实例化</li><li><code>MergedBeanDefinitionPostProcessor.postProcessMergedBeanDefinition()</code></li><li><code>InstantiationAwareBeanPostProcessor.postProcessAfterInstantiation()</code></li><li>自动注入</li><li><code>InstantiationAwareBeanPostProcessor.postProcessProperties()</code></li><li><code>Aware</code></li><li><code>BeanPostProcessor.postProcessBeforeInitialization()</code></li><li>初始化</li><li><code>BeanPostProcessor.postProcessAfterInitialization()</code></li></ol><h1><code>Bean</code> 的销毁过程</h1><p>两种方式：<br>一、在<code>Spring</code>容器关闭时</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>userService<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>二、在进程关闭时<br>注册进程关闭钩子</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span><span class="token function">registerShutdownHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>userService<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="销毁-Bean">销毁 <code>Bean</code></h2><p>在<code>Bean</code>创建过程中，在最后（初始化之后），有一个步骤会去判断当前创建的<code>Bean</code>是不是<code>DisposableBean</code>：</p><ol><li>当前<code>Bean</code>是否实现了<code>DisposableBean</code>接口</li><li>或者，当前<code>Bean</code>是否实现了<code>AutoCloseable</code>接口</li><li><code>BeanDefinition</code>中是否指定了<code>destroyMethod</code>，包括自定义销毁方法为<code>(inferred)</code>，会调用<code>close</code>和<code>shutdown</code>方法</li><li>调用<code>DestructionAwareBeanPostProcessor.requiresDestruction(bean)</code>进行判断<br>a. <code>ApplicationListenerDetector</code>中直接使得<code>ApplicationListener</code>是<code>DisposableBean</code><br>b. <code>InitDestroyAnnotationBeanPostProcessor</code>中使得拥有<code>@PreDestroy</code>注解了的方法就是<code>DisposableBean</code></li><li>把符合上述任意一个条件的<code>Bean</code>适配成<code>DisposableBeanAdapter</code>对象，并存入<code>disposableBeans</code>中（一个<code>LinkedHashMap</code>）</li></ol><p>在<code>Spring</code>容器关闭过程时：</p><ol><li>首先发布<code>ContextClosedEvent</code>事件</li><li>调用<code>lifecycleProcessor</code>的<code>onCloese()</code>方法</li><li>销毁单例<code>Bean</code><br>a. 遍历<code>disposableBeans</code><br>ⅰ. 把每个<code>disposableBean</code>从单例池中移除<br>ⅱ. 调用<code>disposableBean</code>的<code>destroy()</code><br>ⅲ. 如果这个<code>disposableBean</code>还被其他<code>Bean</code>依赖了，那么也得销毁其他<code>Bean</code><br>ⅳ. 如果这个<code>disposableBean</code>还包含了<code>inner beans</code>，将这些<code>Bean</code>从单例池中移除掉 (<code>inner bean</code>参考<a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-inner-beans">https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-inner-beans</a>)<br>b. 清空<code>manualSingletonNames</code>，是一个<code>Set</code>，存的是用户手动注册的单例<code>Bean</code>的<code>beanName</code><br>c. 清空<code>allBeanNamesByType</code>，是一个<code>Map</code>，<code>key</code>是<code>bean</code>类型，<code>value</code>是该类型所有的<code>beanName</code>数组<br>d. 清空<code>singletonBeanNamesByType</code>，和<code>allBeanNamesByType</code>类似，只不过只存了单例<code>Bean</code></li></ol><p>这里涉及到一个设计模式：适配器模式<br>在销毁时，<code>Spring</code>会找出实现了<code>DisposableBean</code>接口的<code>Bean</code>。<br>但是我们在定义一个<code>Bean</code>时，如果这个<code>Bean</code>实现了<code>DisposableBean</code>接口，或者实现了<code>AutoCloseable</code>接口，或者在<code>BeanDefinition</code>中指定了<code>destroyMethodName</code>，那么这个<code>Bean</code>都属于“<code>DisposableBean</code>”，这些<code>Bean</code>在容器关闭时都要调用相应的销毁方法。</p><p>所以，这里就需要进行适配，将实现了<code>DisposableBean</code>接口、或者<code>AutoCloseable</code>接口等适配成实现了<code>DisposableBean</code>接口，所以就用到了<code>DisposableBeanAdapter</code>。<br>会把实现了<code>AutoCloseable</code>接口的类封装成<code>DisposableBeanAdapter</code>，而<code>DisposableBeanAdapter</code>实现了<code>DisposableBean</code>接口。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL-kali linux 子系统安装软件包</title>
      <link href="/2023/02/12/yun-wei/wsl-kali-linux-zi-xi-tong-an-zhuang-ruan-jian-bao/"/>
      <url>/2023/02/12/yun-wei/wsl-kali-linux-zi-xi-tong-an-zhuang-ruan-jian-bao/</url>
      
        <content type="html"><![CDATA[<p>一次性安装软件包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> kali-linux-default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>1、系统</p><ul><li><code>kali-linux-core</code>：基本<code>Kali Linux</code>系统 - 始终包含的核心项目</li><li><code>kali-linux-headless</code>：不需要 <code>GUI</code> 的默认安装</li><li><code>kali-linux-default</code>：“默认”桌面 （<code>amd64/i386</code>） 映像包括这些工具</li><li><code>kali-linux-arm</code>：适用于 <code>ARM</code> 设备的所有工具</li><li><code>kali-linux-nethunter</code>：用作<code>Kali NetHunter</code>一部分的工具</li></ul><p>2、桌面环境<code>DM</code>/窗口管理器<code>WM</code></p><ul><li><code>kali-desktop-core</code>：<code>GUI</code> 映像所需的任何关键工具</li><li><code>kali-desktop-e17</code>： <code>Enlightenment (WM)</code></li><li><code>kali-desktop-gnome</code>：<code>GNOME（DM）</code></li><li><code>kali-desktop-i3</code>： <code>i3 （WM）</code></li><li><code>kali-desktop-kde</code>： <code>KDE（DM）</code></li><li><code>kali-desktop-lxde</code>： <code>LXDE（WM）</code></li><li><code>kali-desktop-mate</code>： <code>MATE（DM）</code></li><li><code>kali-desktop-xfce</code>： <code>Xfce（WM）</code></li></ul><p>3、工具</p><ul><li><code>kali-tools-gpu</code>：受益于访问<code>GPU</code>硬件的工具</li><li><code>kali-tools-hardware</code>： 硬件黑客工具</li><li><code>kali-tools-crypto-stego</code>：基于密码学和隐写术的工具</li><li><code>kali-tools-fuzzing</code>：用于模糊测试实验方案</li><li><code>kali-tools-802-11</code>： <code>802.11</code> （通常称为“<code>Wi-Fi</code>”）</li><li><code>kali-tools-bluetooth</code>：用于定位蓝牙设备</li><li><code>kali-tools-rfid</code>：射频识别工具</li><li><code>kali-tools-sdr</code>： 软件定义无线电工具</li><li><code>kali-tools-voip</code>：<code>IP</code> 语音工具</li><li><code>kali-tools-windows-resources</code>：可以在 <code>Windows</code> 主机上执行的任何资源</li></ul><p>4、菜单</p><ul><li><code>kali-tools-information-gathering</code>：用于开源智能（<code>OSINT</code>）和信息收集</li><li><code>kali-tools-vulnerability</code>：漏洞评估工具</li><li><code>kali-tools-web</code>：设计用于进行<code>Web</code>应用程序攻击</li><li><code>kali-tools-database</code>：基于任何数据库攻击</li><li><code>kali-tools-passwords</code>：有助于密码破解攻击 - 在线和离线</li><li><code>kali-tools-wireless</code>：所有工具都基于无线协议 - <code>802.11</code>，蓝牙，<code>RFID</code>和<code>SDR</code></li><li><code>kali-tools-reverse-engineering</code>：用于逆向工程二进制文件</li><li><code>kali-tools-exploitation</code>：通常用于进行开发</li><li><code>kali-tools-social-engineering</code>：旨在进行社会工程技术</li><li><code>kali-tools-sniffing-spoofing</code>：任何用于嗅探和欺骗的工具</li><li><code>kali-tools-post-exploitation</code>： 开发后阶段的技巧</li><li><code>kali-tools-forensics</code>： 取证工具 – 实时和离线</li><li><code>kali-tools-reporting</code>：报告工具</li></ul><p>5、其它</p><ul><li><code>kali-linux-large</code>：我们之前的默认工具适用于 <code>amd64/i386</code> 图像</li><li><code>kali-linux-everything</code>：此处列出的每个元包和工具</li><li><code>kali-tools-top10</code>：最常用的工具</li><li><code>kali-desktop-live</code>：从映像引导时在实时会话期间使用</li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> Kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哲学-海德格尔-存在与时间</title>
      <link href="/2023/02/12/bi-ji/zhe-xue-hai-de-ge-er-cun-zai-yu-shi-jian/"/>
      <url>/2023/02/12/bi-ji/zhe-xue-hai-de-ge-er-cun-zai-yu-shi-jian/</url>
      
        <content type="html"><![CDATA[<p>能感觉到一个物体的存在，是有待上手状态<br>习惯了一个物体就会感觉不到他的存在（上手状态）</p><p>人被抛在四维空间中<br>一旦融入其中，就沉沦了，就感觉不到时间的存在，时间就没有意义了（此在交出）<br>此在的交出会导致好奇、寄挂、闲谈、操心、好事（非本真）<br>突然惊醒，认识到自己的存在（畏）<br><strong>独自面对虚无的可能性，把此在逼回了自身（本真，才有时间，人生才有意义）(无为，无心而为)</strong></p><p>只有两种可以穿越四维空间：<font color="red">思维和空间位置的转变</font></p><p>存在永远存在，存在者有生有死，所以此在必然会死<br>死亡是此在的本己的，无所关联的，确知而不确定的，超不过的可能性<br>畏：<font color="red">死平时是遮掩的，同时给予了生的意义（向死而生）</font></p><p>不断跳脱的沉沦，一次次的死亡带来一次次的新生。<br>那么我做什么才有意义。我应该怎样度过精彩的一生。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哲学-维特根斯坦-逻辑哲学论</title>
      <link href="/2023/02/11/bi-ji/zhe-xue-wei-te-gen-si-tan-luo-ji-zhe-xue-lun/"/>
      <url>/2023/02/11/bi-ji/zhe-xue-wei-te-gen-si-tan-luo-ji-zhe-xue-lun/</url>
      
        <content type="html"><![CDATA[<p>世界是一切发生的事<br>事是事实<br>事实是诸事态的存在<br>存在的逻辑图像是思想<br>思想是有意义的命题（语言）<br>命题是基本命题的真值函项（语言的组合）</p><p>所以语言是有边界的，所以语言不可能描述理性世界<br><font color="red">凡是可说的都可以说清楚，凡是不可说的都要保持沉默</font></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-3.底层架构核心概念解析</title>
      <link href="/2023/02/11/coding/spring-3-di-ceng-jia-gou-he-xin-gai-nian-jie-xi/"/>
      <url>/2023/02/11/coding/spring-3-di-ceng-jia-gou-he-xin-gai-nian-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="BeanDefinition"><code>BeanDefinition</code></h2><p><code>BeanDefinition</code>表示<code>Bean</code>定义，<code>BeanDefinition</code>中存在很多属性用来描述一个<code>Bean</code>的特点。比如：</p><ul><li><code>class</code>，表示<code>Bean</code>类型</li><li><code>scope</code>，表示<code>Bean</code>作用域，单例或原型等</li><li><code>lazyInit</code>，表示<code>Bean</code>是否是懒加载</li><li><code>initMethodName</code>，表示<code>Bean</code>初始化时要执行的方法</li><li><code>destroyMethodName</code>，表示<code>Bean</code>销毁时要执行的方法</li><li>还有很多…</li></ul><p>在<code>Spring</code>中，我们经常会通过以下几种方式来定义<code>Bean</code>：</p><ol><li><code>&lt;bean/&gt;</code></li><li><code>@Bean</code></li><li><code>@Component</code>(<code>@Service</code>,<code>@Controller</code>)</li></ol><p>这些，我们可以称之申明式定义<code>Bean</code>。<br>我们还可以编程式定义<code>Bean</code>，那就是直接通过<code>BeanDefinition</code>，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 生成一个BeanDefinition对象，并设置beanClass为User.class，并注册到ApplicationContext中</span><span class="token class-name">AbstractBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token class-name">BeanDefinitionBuilder</span><span class="token punctuation">.</span><span class="token function">genericBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>beanDefinition<span class="token punctuation">.</span><span class="token function">setBeanClass</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们还可以通过<code>BeanDefinition</code>设置一个<code>Bean</code>的其他属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">beanDefinition<span class="token punctuation">.</span><span class="token function">setScope</span><span class="token punctuation">(</span><span class="token string">"prototype"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置作用域</span>beanDefinition<span class="token punctuation">.</span><span class="token function">setInitMethodName</span><span class="token punctuation">(</span><span class="token string">"init"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置初始化方法</span>beanDefinition<span class="token punctuation">.</span><span class="token function">setLazyInit</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置懒加载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>和申明式事务、编程式事务类似，通过<code>&lt;bean/&gt;</code>，<code>@Bean</code>，<code>@Component</code>等申明式方式所定义的<code>Bean</code>，最终都会被<code>Spring</code>解析为对应的<code>BeanDefinition</code>对象，并放入<code>Spring</code>容器中。</p><h2 id="BeanDefinitionReader"><code>BeanDefinitionReader</code></h2><p>接下来，我们来介绍几种在<code>Spring</code>源码中所提供的<code>BeanDefinition</code>读取器（<code>BeanDefinitionReader</code>），这些<code>BeanDefinitionReader</code>在我们使用<code>Spring</code>时用得少，但在<code>Spring</code>源码中用得多，相当于<code>Spring</code>源码的基础设施。</p><h3 id="AnnotatedBeanDefinitionReader"><code>AnnotatedBeanDefinitionReader</code></h3><p>可以直接把某个类转换为<code>BeanDefinition</code>，并且会解析该类上的注解，比如</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AnnotatedBeanDefinitionReader</span> annotatedBeanDefinitionReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotatedBeanDefinitionReader</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将User.class解析为BeanDefinition</span>annotatedBeanDefinitionReader<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：它能解析的注解是：<code>@Conditional</code>、<code>@Scope</code>、<code>@Lazy</code>、<code>@Primary</code>、<code>@DependsOn</code>、<code>@Role</code>、<code>@Description</code></p><h3 id="XmlBeanDefinitionReader"><code>XmlBeanDefinitionReader</code></h3><p>可以解析<code>&lt;bean/&gt;</code>标签</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">XmlBeanDefinitionReader</span> xmlBeanDefinitionReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionReader</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> i <span class="token operator">=</span> xmlBeanDefinitionReader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token string">"spring.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ClassPathBeanDefinitionScanner"><code>ClassPathBeanDefinitionScanner</code></h3><p><code>ClassPathBeanDefinitionScanner</code>是扫描器，但是它的作用和<code>BeanDefinitionReader</code>类似，它可以进行扫描，扫描某个包路径，对扫描到的类进行解析，比如，扫描到的类上如果存在<code>@Component</code>注解，那么就会把这个类解析为一个<code>BeanDefinition</code>，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ClassPathBeanDefinitionScanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathBeanDefinitionScanner</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token string">"com.zhouyu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="BeanFactory"><code>BeanFactory</code></h2><p><code>BeanFactory</code>表示<code>Bean</code>工厂，所以很明显，<code>BeanFactory</code>会负责创建<code>Bean</code>，并且提供获取<code>Bean</code>的<code>API</code>。<br>而<code>ApplicationContext</code>是<code>BeanFactory</code>的一种，在<code>Spring</code>源码中，是这么定义的：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ApplicationContext</span> <span class="token keyword">extends</span> <span class="token class-name">EnvironmentCapable</span><span class="token punctuation">,</span> <span class="token class-name">ListableBeanFactory</span><span class="token punctuation">,</span> <span class="token class-name">HierarchicalBeanFactory</span><span class="token punctuation">,</span><span class="token class-name">MessageSource</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationEventPublisher</span><span class="token punctuation">,</span> <span class="token class-name">ResourcePatternResolver</span> <span class="token punctuation">{</span>            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ApplicationContext</code>继承了<code>ListableBeanFactory</code>和<code>HierarchicalBeanFactory</code>，而<code>ListableBeanFactory</code>和<code>HierarchicalBeanFactory</code>都继承至<code>BeanFactory</code>，所以我们可以认为<code>ApplicationContext</code>继承了<code>BeanFactory</code>，拥有<code>BeanFactory</code>支持的所有功能，不过<code>ApplicationContext</code>比<code>BeanFactory</code>更加强大，<code>ApplicationContext</code>还继承了其他接口，也就表示<code>ApplicationContext</code>还拥有其他功能，比如<code>MessageSource</code>表示国际化，<code>ApplicationEventPublisher</code>表示事件发布，<code>EnvironmentCapable</code>表示获取环境变量，等等，关于<code>ApplicationContext</code>后面再详细讨论。</p><p>在<code>Spring</code>的源码实现中，当我们<code>new</code>一个<code>ApplicationContext</code>时，其底层会<code>new</code>一个<code>BeanFactory</code>出来，当使用<code>ApplicationContext</code>的某些方法时，比如<code>getBean()</code>，底层调用的是<code>BeanFactory</code>的<code>getBean()</code>方法。<br>在<code>Spring</code>源码中，<code>BeanFactory</code>接口存在一个非常重要的实现类是：<code>DefaultListableBeanFactory</code>，也是非常核心的。<br>所以，我们可以直接来使用<code>DefaultListableBeanFactory</code>，而不用使用<code>ApplicationContext</code>的某个实现类，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultListableBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AbstractBeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token class-name">BeanDefinitionBuilder</span><span class="token punctuation">.</span><span class="token function">genericBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>beanDefinition<span class="token punctuation">.</span><span class="token function">setBeanClass</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>beanFactory<span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>DefaultListableBeanFactory</code>是非常强大的，支持很多功能，可以通过查看<code>DefaultListableBeanFactory</code>的类继承实现结构来看:<br><img src="../static/DefaultListableBeanFactory.png" alt="DefaultListableBeanFactory"><br>这部分现在看不懂没关系，源码熟悉一点后回来再来看都可以。<br>它实现了很多接口，表示它拥有很多功能：</p><ol><li><code>AliasRegistry</code>：支持别名功能，一个名字可以对应多个别名</li><li><code>BeanDefinitionRegistry</code>：可以注册、保存、移除、获取某个<code>BeanDefinition</code></li><li><code>BeanFactory</code>：<code>Bean</code>工厂，可以根据某个bean的名字、或类型、或别名获取某个<code>Bean</code>对象</li><li><code>SingletonBeanRegistry</code>：可以直接注册、获取某个单例<code>Bean</code></li><li><code>SimpleAliasRegistry</code>：它是一个类，实现了<code>AliasRegistry</code>接口中所定义的功能，支持别名功能</li><li><code>ListableBeanFactory</code>：在<code>BeanFactory</code>的基础上，增加了其他功能，可以获取所有<code>BeanDefinition</code>的<code>beanNames</code>，可以根据某个类型获取对应的<code>beanNames</code>，可以根据某个类型获取{类型：对应的<code>Bean</code>}的映射关系</li><li><code>HierarchicalBeanFactory</code>：在<code>BeanFactory</code>的基础上，添加了获取父<code>BeanFactory</code>的功能</li><li><code>DefaultSingletonBeanRegistry</code>：它是一个类，实现了<code>SingletonBeanRegistry</code>接口，拥有了直接注册、获取某个单例<code>Bean</code>的功能</li><li><code>ConfigurableBeanFactory</code>：在<code>HierarchicalBeanFactory</code>和<code>SingletonBeanRegistry</code>的基础上，添加了设置父<code>BeanFactory</code>、类加载器（表示可以指定某个类加载器进行类的加载）、设置<code>Spring EL</code>表达式解析器（表示该<code>BeanFactory</code>可以解析<code>EL</code>表达式）、设置类型转化服务（表示该<code>BeanFactory</code>可以进行类型转化）、可以添加<code>BeanPostProcessor</code>（表示该<code>BeanFactory</code>支持<code>Bean</code>的后置处理器），可以合并<code>BeanDefinition</code>，可以销毁某个<code>Bean</code>等等功能</li><li><code>FactoryBeanRegistrySupport</code>：支持了<code>FactoryBean</code>的功能</li><li><code>AutowireCapableBeanFactory</code>：是直接继承了<code>BeanFactory</code>，在<code>BeanFactory</code>的基础上，支持在创建<code>Bean</code>的过程中能对<code>Bean</code>进行自动装配</li><li><code>AbstractBeanFactory</code>：实现了<code>ConfigurableBeanFactory</code>接口，继承了<code>FactoryBeanRegistrySupport</code>，这个<code>BeanFactory</code>的功能已经很全面了，但是不能自动装配和获取<code>beanNames</code></li><li><code>ConfigurableListableBeanFactory</code>：继承了<code>ListableBeanFactory</code>、<code>AutowireCapableBeanFactory</code>、<code>ConfigurableBeanFactory</code></li><li><code>AbstractAutowireCapableBeanFactory</code>：继承了<code>AbstractBeanFactory</code>，实现了<code>AutowireCapableBeanFactory</code>，拥有了自动装配的功能</li><li><code>DefaultListableBeanFactory</code>：继承了<code>AbstractAutowireCapableBeanFactory</code>，实现了<code>ConfigurableListableBeanFactory</code>接口和<code>BeanDefinitionRegistry</code>接口，所以<code>DefaultListableBeanFactory</code>的功能很强大</li></ol><h2 id="ApplicationContext"><code>ApplicationContext</code></h2><p>上面有分析到，<code>ApplicationContext</code>是个接口，实际上也是一个<code>BeanFactory</code>，不过比<code>BeanFactory</code>更加强大，比如：</p><ol><li><code>HierarchicalBeanFactory</code>：拥有获取父<code>BeanFactory</code>的功能</li><li><code>ListableBeanFactory</code>：拥有获取<code>beanNames</code>的功能</li><li><code>ResourcePatternResolver</code>：资源加载器，可以一次性获取多个资源（文件资源等等）</li><li><code>EnvironmentCapable</code>：可以获取运行时环境（没有设置运行时环境功能）</li><li><code>ApplicationEventPublisher</code>：拥有广播事件的功能（没有添加事件监听器的功能）</li><li><code>MessageSource</code>：拥有国际化功能</li></ol><p>我们先来看<code>ApplicationContext</code>两个比较重要的实现类：</p><ol><li><code>AnnotationConfigApplicationContext</code></li><li><code>ClassPathXmlApplicationContext</code></li></ol><h3 id="AnnotationConfigApplicationContext"><code>AnnotationConfigApplicationContext</code></h3><p><img src="../static/AnnotationConfigApplicationContext.png" alt="AnnotationConfigApplicationContext"><br>这部分现在看不懂没关系，源码熟悉一点后回来再来看都可以。</p><ol><li><code>ConfigurableApplicationContext</code>：继承了<code>ApplicationContext</code>接口，增加了，添加事件监听器、添加<code>BeanFactoryPostProcessor</code>、设置<code>Environment</code>，获取<code>ConfigurableListableBeanFactory</code>等功能</li><li><code>AbstractApplicationContext</code>：实现了<code>ConfigurableApplicationContext</code>接口</li><li><code>GenericApplicationContext</code>：继承了<code>AbstractApplicationContext</code>，实现了<code>BeanDefinitionRegistry</code>接口，拥有了所有<code>ApplicationContext</code>的功能，并且可以注册<code>BeanDefinition</code>，注意这个类中有一个属性(<code>DefaultListableBeanFactory beanFactory</code>)</li><li><code>AnnotationConfigRegistry</code>：可以单独注册某个为类为<code>BeanDefinition</code>（可以处理该类上的<code>@Configuratio</code>n注解，已经可以处理<code>@Bean</code>注解），同时可以扫描</li><li><code>AnnotationConfigApplicationContext</code>：继承了<code>GenericApplicationContext</code>，实现了<code>AnnotationConfigRegistry</code>接口，拥有了以上所有的功能</li></ol><h3 id="ClassPathXmlApplicationContext"><code>ClassPathXmlApplicationContext</code></h3><p><img src="../static/ClassPathXmlApplicationContext.png" alt="ClassPathXmlApplicationContext"><br>它也是继承了<code>AbstractApplicationContext</code>，但是相对于<code>AnnotationConfigApplicationContext</code>而言，功能没有<code>AnnotationConfigApplicationContext</code>强大，比如不能注册<code>BeanDefinition</code></p><h3 id="国际化">国际化</h3><p>先定义一个<code>MessageSource</code>:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">MessageSource</span> <span class="token function">messageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">ResourceBundleMessageSource</span> messageSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResourceBundleMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>messageSource<span class="token punctuation">.</span><span class="token function">setBasename</span><span class="token punctuation">(</span><span class="token string">"messages"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> messageSource<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有了这个<code>Bean</code>，你可以在你任意想要进行国际化的地方使用该<code>MessageSource</code>。<br>同时，因为<code>ApplicationContext</code>也拥有国际化的功能，所以可以直接这么用：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">context<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Locale</span><span class="token punctuation">(</span><span class="token string">"en_CN"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="资源加载">资源加载</h3><p><code>ApplicationContext</code>还拥有资源加载的功能，比如，可以直接利用<code>ApplicationContext</code>获取某个文件的内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Resource</span> resource <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"file://D:\\IdeaProjects\\spring-framework-5.3.10\\tuling\\src\\main\\java\\com\\zhouyu\\service\\UserService.java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">contentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Resource</span> resource <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"file://D:\\IdeaProjects\\spring-framework-5.3.10\\tuling\\src\\main\\java\\com\\zhouyu\\service\\UserService.java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">contentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Resource</span> resource1 <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource1<span class="token punctuation">.</span><span class="token function">contentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource1<span class="token punctuation">.</span><span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Resource</span> resource2 <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"classpath:spring.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource2<span class="token punctuation">.</span><span class="token function">contentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource2<span class="token punctuation">.</span><span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> resources <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token string">"classpath:com/zhouyu/*.class"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> resource <span class="token operator">:</span> resources<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">contentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取运行时环境">获取运行时环境</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> systemEnvironment <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>systemEnvironment<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"======="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> systemProperties <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>systemProperties<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"======="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">MutablePropertySources</span> propertySources <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertySources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>propertySources<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"======="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"NO_PROXY"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"sun.jnu.encoding"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"zhouyu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，可以这样来使得某个<code>properties</code>文件中的参数添加到运行时环境中</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span><span class="token string">"classpath:spring.properties"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="事件发布">事件发布</h3><p>先定义一个事件监听器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">ApplicationListener</span> <span class="token function">applicationListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"接收到了一个事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后发布一个事件：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">context<span class="token punctuation">.</span><span class="token function">publishEvent</span><span class="token punctuation">(</span><span class="token string">"kkk"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="类型转化">类型转化</h2><p>在<code>Spring</code>源码中，有可能需要把<code>String</code>转成其他类型，所以在<code>Spring</code>源码中提供了一些技术来更方便的做对象的类型转化，关于类型转化的应用场景， 后续看源码的过程中会遇到很多。</p><h3 id="PropertyEditor"><code>PropertyEditor</code></h3><p>这其实是<code>JDK</code>中提供的类型转化工具类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringToUserPropertyEditor</span> <span class="token keyword">extends</span> <span class="token class-name">PropertyEditorSupport</span> <span class="token keyword">implements</span> <span class="token class-name">PropertyEditor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAsText</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IllegalArgumentException</span> <span class="token punctuation">{</span><span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">StringToUserPropertyEditor</span> propertyEditor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringToUserPropertyEditor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>propertyEditor<span class="token punctuation">.</span><span class="token function">setAsText</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">User</span> value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> propertyEditor<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如何向<code>Spring</code>中注册<code>PropertyEditor</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">CustomEditorConfigurer</span> <span class="token function">customEditorConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">CustomEditorConfigurer</span> customEditorConfigurer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomEditorConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">PropertyEditor</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> propertyEditorMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 表示StringToUserPropertyEditor可以将String转化成User类型，在Spring源码中，如果发现当前对象是String，而需要的类型是User，就会使用该PropertyEditor来做类型转化</span>propertyEditorMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">StringToUserPropertyEditor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>customEditorConfigurer<span class="token punctuation">.</span><span class="token function">setCustomEditors</span><span class="token punctuation">(</span>propertyEditorMap<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> customEditorConfigurer<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">User</span> user<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>那么<code>test</code>属性就能正常的完成属性赋值</p><h3 id="ConversionService"><code>ConversionService</code></h3><p><code>Spring</code>中提供的类型转化服务，它比<code>PropertyEditor</code>更强大</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringToUserConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ConditionalGenericConverter</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">matches</span><span class="token punctuation">(</span><span class="token class-name">TypeDescriptor</span> sourceType<span class="token punctuation">,</span> <span class="token class-name">TypeDescriptor</span> targetType<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> sourceType<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> targetType<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConvertiblePair</span><span class="token punctuation">&gt;</span></span> <span class="token function">getConvertibleTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConvertiblePair</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">Object</span> source<span class="token punctuation">,</span> <span class="token class-name">TypeDescriptor</span> sourceType<span class="token punctuation">,</span> <span class="token class-name">TypeDescriptor</span> targetType<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> user<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">DefaultConversionService</span> conversionService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultConversionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>conversionService<span class="token punctuation">.</span><span class="token function">addConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringToUserConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">User</span> value <span class="token operator">=</span> conversionService<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如何向<code>Spring</code>中注册<code>ConversionService</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">ConversionServiceFactoryBean</span> <span class="token function">conversionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">ConversionServiceFactoryBean</span> conversionServiceFactoryBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConversionServiceFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>conversionServiceFactoryBean<span class="token punctuation">.</span><span class="token function">setConverters</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringToUserConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> conversionServiceFactoryBean<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="TypeConverter"><code>TypeConverter</code></h3><p>整合了<code>PropertyEditor</code>和<code>ConversionService</code>的功能，是<code>Spring</code>内部用的</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">SimpleTypeConverter</span> typeConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleTypeConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>typeConverter<span class="token punctuation">.</span><span class="token function">registerCustomEditor</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">StringToUserPropertyEditor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//typeConverter.setConversionService(conversionService);</span><span class="token class-name">User</span> value <span class="token operator">=</span> typeConverter<span class="token punctuation">.</span><span class="token function">convertIfNecessary</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="OrderComparator"><code>OrderComparator</code></h2><p><code>OrderComparator</code>是<code>Spring</code>所提供的一种比较器，可以用来根据<code>@Order</code>注解或实现<code>Ordered</code>接口来执行值进行比较，从而可以进行排序。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">implements</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">implements</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">A</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// order=3</span><span class="token class-name">B</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// order=2</span><span class="token class-name">OrderComparator</span> comparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderComparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1</span><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 按order值升序排序</span>list<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>comparator<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// B，A</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外，<code>Spring</code>中还提供了一个<code>OrderComparator</code>的子类：<code>AnnotationAwareOrderComparator</code>，它支持用<code>@Order</code>来指定<code>order</code>值。比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">A</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// order=3</span><span class="token class-name">B</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// order=2</span><span class="token class-name">AnnotationAwareOrderComparator</span> comparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationAwareOrderComparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 按order值升序排序</span>list<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>comparator<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// B，A</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="BeanPostProcessor"><code>BeanPostProcessor</code></h2><p><code>BeanPostProcess</code>表示<code>Bena</code>的后置处理器，我们可以定义一个或多个<code>BeanPostProcessor</code>，比如通过一下代码定义一个<code>BeanPostProcessor</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化前"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"初始化后"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个<code>BeanPostProcessor</code>可以在任意一个<code>Bean</code>的初始化之前以及初始化之后去额外的做一些用户自定义的逻辑，当然，我们可以通过判断<code>beanName</code>来进行针对性处理（针对某个<code>Bean</code>，或某部分<code>Bean</code>）。<br>我们可以通过定义<code>BeanPostProcessor</code>来干涉<code>Spring</code>创建<code>Bean</code>的过程。</p><h2 id="BeanFactoryPostProcessor"><code>BeanFactoryPostProcessor</code></h2><p><code>BeanFactoryPostProcessor</code>表示<code>Bean</code>工厂的后置处理器，其实和<code>BeanPostProcessor</code>类似，<code>BeanPostProcessor</code>是干涉<code>Bean</code>的创建过程，<code>BeanFactoryPostProcessor</code>是干涉<code>BeanFactory</code>的创建过程。比如，我们可以这样定义一个<code>BeanFactoryPostProcessor</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuBeanFactoryPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanFactoryPostProcessor</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"加工beanFactory"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以在<code>postProcessBeanFactory()</code>方法中对<code>BeanFactory</code>进行加工。</p><h2 id="FactoryBean"><code>FactoryBean</code></h2><p>上面提到，我们可以通过<code>BeanPostPorcessor</code>来干涉<code>Spring</code>创建<code>Bean</code>的过程，但是如果我们想一个<code>Bean</code>完完全全由我们来创造，也是可以的，比如通过<code>FactoryBean</code>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZhouyuFactoryBean</span> <span class="token keyword">implements</span> <span class="token class-name">FactoryBean</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> userService<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面这段代码，我们自己创造了一个<code>UserService</code>对象，并且它将成为<code>Bean</code>。但是通过这种方式创造出来的<code>UserService</code>的<code>Bean</code>，只会经过初始化后，其他<code>Spring</code>的生命周期步骤是不会经过的，比如依赖注入。<br>通过<code>@Bean</code>也可以自己生成一个对象作为<code>Bean</code>，那么和<code>FactoryBean</code>的区别是什么呢？其实在很多场景下他俩是可以替换的，但是站在原理层面来说的，区别很明显，<code>@Bean</code>定义的<code>Bean</code>是会经过完整的<code>Bean</code>生命周期的。</p><h2 id="ExcludeFilter和IncludeFilter"><code>ExcludeFilter</code>和<code>IncludeFilter</code></h2><p>这两个<code>Filter</code>是<code>Spring</code>扫描过程中用来过滤的。<code>ExcludeFilter</code>表示排除过滤器，<code>IncludeFilter</code>表示包含过滤器。<br>比如以下配置，表示扫描<code>com.zhouyu</code>这个包下面的所有类，但是排除<code>UserService</code>类，也就是就算它上面有<code>@Component</code>注解也不会成为<code>Bean</code>。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"com.zhouyu"</span><span class="token punctuation">,</span>excludeFilters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@ComponentScan.Filter</span><span class="token punctuation">(</span>            type <span class="token operator">=</span> <span class="token class-name">FilterType</span><span class="token punctuation">.</span><span class="token constant">ASSIGNABLE_TYPE</span><span class="token punctuation">,</span>             classes <span class="token operator">=</span> <span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再比如以下配置，就算<code>UserService</code>类上没有<code>@Component</code>注解，它也会被扫描成为一个<code>Bean</code>。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"com.zhouyu"</span><span class="token punctuation">,</span>includeFilters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@ComponentScan.Filter</span><span class="token punctuation">(</span>            type <span class="token operator">=</span> <span class="token class-name">FilterType</span><span class="token punctuation">.</span><span class="token constant">ASSIGNABLE_TYPE</span><span class="token punctuation">,</span>             classes <span class="token operator">=</span> <span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>FilterType</code>分为：</p><ol><li><code>ANNOTATION</code>：表示是否包含某个注解</li><li><code>ASSIGNABLE_TYPE</code>：表示是否是某个类</li><li><code>ASPECTJ</code>：表示否是符合某个<code>Aspectj</code>表达式</li><li><code>REGEX</code>：表示是否符合某个正则表达式</li><li><code>CUSTOM</code>：自定义</li></ol><p>在<code>Spring</code>的扫描逻辑中，默认会添加一个<code>AnnotationTypeFilter</code>给<code>includeFilters</code>，表示默认情况下<code>Spring</code>扫描过程中会认为类上有<code>@Component</code>注解的就是<code>Bean</code>。</p><h2 id="MetadataReader、ClassMetadata、AnnotationMetadata"><code>MetadataReader</code>、<code>ClassMetadata</code>、<code>AnnotationMetadata</code></h2><p>在<code>Spring</code>中需要去解析类的信息，比如类名、类中的方法、类上的注解，这些都可以称之为类的元数据，所以<code>Spring</code>中对类的元数据做了抽象，并提供了一些工具类。<br><code>MetadataReader</code>表示类的元数据读取器，默认实现类为<code>SimpleMetadataReader</code>。比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token class-name">SimpleMetadataReaderFactory</span> simpleMetadataReaderFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleMetadataReaderFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 构造一个MetadataReader</span>        <span class="token class-name">MetadataReader</span> metadataReader <span class="token operator">=</span> simpleMetadataReaderFactory<span class="token punctuation">.</span><span class="token function">getMetadataReader</span><span class="token punctuation">(</span><span class="token string">"com.zhouyu.service.UserService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 得到一个ClassMetadata，并获取了类名</span>        <span class="token class-name">ClassMetadata</span> classMetadata <span class="token operator">=</span> metadataReader<span class="token punctuation">.</span><span class="token function">getClassMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>classMetadata<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 获取一个AnnotationMetadata，并获取类上的注解信息</span>        <span class="token class-name">AnnotationMetadata</span> annotationMetadata <span class="token operator">=</span> metadataReader<span class="token punctuation">.</span><span class="token function">getAnnotationMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> annotationType <span class="token operator">:</span> annotationMetadata<span class="token punctuation">.</span><span class="token function">getAnnotationTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>annotationType<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>需要注意的是，<code>SimpleMetadataReader</code>去解析类时，使用的<code>ASM</code>技术。<br>为什么要使用<code>ASM</code>技术，<code>Spring</code>启动的时候需要去扫描，如果指定的包路径比较宽泛，那么扫描的类是非常多的，会导致在<code>Spring</code>启动时就把这些类全部加载进<code>JVM</code>了，这样不太好，所以使用了<code>ASM</code>技术。</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-2.手写模拟Spring底层原理</title>
      <link href="/2023/02/11/coding/spring-2-shou-xie-mo-ni-spring-di-ceng-yuan-li/"/>
      <url>/2023/02/11/coding/spring-2-shou-xie-mo-ni-spring-di-ceng-yuan-li/</url>
      
        <content type="html"><![CDATA[<p><code>github</code> 仓库地址：<a href="https://github.com/jxch-study/spring-imitate.git">https://github.com/jxch-study/spring-imitate.git</a></p><ol><li>通过模拟，了解<code>Spring</code>的底层源码启动过程</li><li>通过模拟，了解<code>BeanDefinition</code>、<code>BeanPostProcessor</code>的概念</li><li>通过模拟，了解<code>Spring</code>解析配置类等底层源码工作流程</li><li>通过模拟，了解依赖注入，<code>Aware</code>回调等底层源码工作流程</li><li>通过模拟，了解<code>Spring AOP</code>的底层源码工作流程</li></ol>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-1.底层核心原理解析</title>
      <link href="/2023/02/11/coding/spring-1-di-ceng-he-xin-yuan-li-jie-xi/"/>
      <url>/2023/02/11/coding/spring-1-di-ceng-he-xin-yuan-li-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="Spring-核心知识点"><code>Spring</code> 核心知识点</h2><ol><li>Bean的生命周期底层原理</li><li>依赖注入底层原理</li><li>初始化底层原理</li><li>推断构造方法底层原理</li><li>AOP底层原理</li><li>Spring事务底层原理</li></ol><h2 id="Spring-入门"><code>Spring</code> 入门</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ClassPathXmlApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"spring.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>userService<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol><li>第一行代码，会构造一个<code>ClassPathXmlApplicationContext</code>对象，<code>ClassPathXmlApplicationContext</code>该如何理解，调用该构造方法除开会实例化得到一个对象，还会做哪些事情？</li><li>第二行代码，会调用<code>ClassPathXmlApplicationContext</code>的<code>getBean</code>方法，会得到一个<code>UserService</code>对象，<code>getBean()</code>是如何实现的？返回的<code>UserService</code>对象和我们自己直接<code>new</code>的<code>UserService</code>对象有区别吗？</li><li>第三行代码，就是简单的调用<code>UserService</code>的<code>test()</code>方法，不难理解。</li></ol><p>但是用<code>ClassPathXmlApplicationContext</code>其实已经过时了，在新版的<code>Spring MVC</code>和<code>Spring Boot</code>的底层主要用的都是<code>AnnotationConfigApplicationContext</code>，比如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>userService<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到<code>AnnotationConfigApplicationContext</code>的用法和<code>ClassPathXmlApplicationContext</code>是非常类似的，只不过需要传入的是一个<code>class</code>，而不是一个<code>xml</code>文件。<br>而<code>AppConfig.class</code>和<code>spring.xml</code>一样，表示<code>Spring</code>的配置，比如可以指定扫描路径，可以直接定义<code>Bean</code>，比如：<br><code>spring.xml</code>中的内容为：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userService<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.zhouyu.service.UserService<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>AppConfig</code>中的内容为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span><span class="token string">"com.zhouyu"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppConfig</span> <span class="token punctuation">{</span><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">UserService</span> <span class="token function">userService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以<code>spring.xml</code>和<code>AppConfig.class</code>本质上是一样的。<br>目前，我们基本很少直接使用上面这种方式来用<code>Spring</code>，而是使用<code>Spring MVC</code>，或者<code>Spring Boot</code>，但是它们都是基于上面这种方式的，都需要在内部去创建一个<code>ApplicationContext的</code>，只不过：</p><ol><li><code>Spring MVC</code>创建的是<code>XmlWebApplicationContext</code>，和<code>ClassPathXmlApplicationContext</code>类似，都是基于<code>XML</code>配置的</li><li><code>Spring Boot</code>创建的是<code>AnnotationConfigApplicationContext</code></li></ol><h2 id="Spring-中是如何创建一个对象的"><code>Spring</code> 中是如何创建一个对象的</h2><p>其实不管是<code>AnnotationConfigApplicationContext</code>还是<code>ClassPathXmlApplicationContext</code>，目前，我们都可以简单的将它们理解为就是用来创建<code>Java</code>对象的，比如调用<code>getBean()</code>就会去创建对象（此处不严谨，<code>getBean</code>可能也不会去创建对象，后续课程详解）。<br>在<code>Java</code>语言中，肯定是根据某个类来创建一个对象的。我们在看一下实例代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">AppConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>userService<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>当我们调用<code>context.getBean("userService")</code>时，就会去创建一个对象，但是<code>getBean</code>方法内部怎么知道<code>"userService"</code>对应的是<code>UserService</code>类呢？<br>所以，我们就可以分析出来，在调用<code>AnnotationConfigApplicationContext</code>的构造方法时，也就是第一行代码，会去做一些事情：</p><ol><li>解析<code>AppConfig.class</code>，得到扫描路径</li><li>遍历扫描路径下的所有<code>Java</code>类，如果发现某个类上存在<code>@Component</code>、<code>@Service</code>等注解，那么<code>Spring</code>就把这个类记录下来，存在一个<code>Map</code>中，比如<code>Map&lt;String, Class&gt;</code>。（实际上，<code>Spring</code>源码中确实存在类似的这么一个<code>Map</code>，叫做<code>BeanDefinitionMap</code>，后续课程会讲到）</li><li><code>Spring</code>会根据某个规则生成当前类对应的<code>beanName</code>，作为<code>key</code>存入<code>Map</code>，当前类作为<code>value</code></li></ol><p>这样，但调用<code>context.getBean("userService")</code>时，就可以根据<code>"userService"</code>找到<code>UserService</code>类，从而就可以去创建对象了。</p><h2 id="Bean-的创建过程"><code>Bean</code> 的创建过程</h2><p>那么<code>Spring</code>到底是如何来创建一个<code>Bean</code>的呢，这个就是`Bean创建的生命周期，大致过程如下</p><ol><li>利用该类的构造方法来实例化得到一个对象（但是如何一个类中有多个构造方法，Spring则会进行选择，这个叫做推断构造方法）</li><li>得到一个对象后，<code>Spring</code>会判断该对象中是否存在被<code>@Autowired</code>注解了的属性，把这些属性找出来并由<code>Spring</code>进行赋值（依赖注入）</li><li>依赖注入后，<code>Spring</code>会判断该对象是否实现了<code>BeanNameAware</code>接口、<code>BeanClassLoaderAware</code>接口、<code>BeanFactoryAware</code>接口，如果实现了，就表示当前对象必须实现该接口中所定义的<code>setBeanName()</code>、<code>setBeanClassLoader()</code>、<code>setBeanFactory()</code>方法，那<code>Spring</code>就会调用这些方法并传入相应的参数（<code>Aware</code>回调）</li><li><code>Aware</code>回调后，<code>Spring</code>会判断该对象中是否存在某个方法被<code>@PostConstruct</code>注解了，如果存在，<code>Spring</code>会调用当前对象的此方法（初始化前）</li><li>紧接着，<code>Spring</code>会判断该对象是否实现了<code>InitializingBean</code>接口，如果实现了，就表示当前对象必须实现该接口中的<code>afterPropertiesSet()</code>方法，那<code>Spring</code>就会调用当前对象中的<code>afterPropertiesSet()</code>方法（初始化）</li><li>最后，<code>Spring</code>会判断当前对象需不需要进行<code>AOP</code>，如果不需要那么<code>Bean</code>就创建完了，如果需要进行<code>AOP</code>，则会进行动态代理并生成一个代理对象做为<code>Bean</code>（初始化后）</li></ol><p>通过最后一步，我们可以发现，当<code>Spring</code>根据<code>UserService</code>类来创建一个<code>Bean</code>时：</p><ol><li>如果不用进行<code>AOP</code>，那么<code>Bean</code>就是<code>UserService</code>类的构造方法所得到的对象。</li><li>如果需要进行<code>AOP</code>，那么<code>Bean</code>就是<code>UserService</code>的代理类所实例化得到的对象，而不是<code>UserService</code>本身所得到的对象。</li></ol><p><code>Bean</code>对象创建出来后：</p><ol><li>如果当前<code>Bean</code>是单例<code>Bean</code>，那么会把该<code>Bean</code>对象存入一个<code>Map&lt;String, Object&gt;</code>，<code>Map</code>的<code>key</code>为<code>beanName</code>，<code>value</code>为<code>Bean</code>对象。这样下次<code>getBean</code>时就可以直接从<code>Map</code>中拿到对应的<code>Bean</code>对象了。（实际上，在<code>Spring</code>源码中，这个<code>Map</code>就是单例池）</li><li>如果当前<code>Bean</code>是原型<code>Bean</code>，那么后续没有其他动作，不会存入一个<code>Map</code>，下次<code>getBean</code>时会再次执行上述创建过程，得到一个新的<code>Bean</code>对象。</li></ol><h2 id="推断构造方法">推断构造方法</h2><p><code>Spring</code>在基于某个类生成<code>Bean</code>的过程中，需要利用该类的构造方法来实例化得到一个对象，但是如果一个类存在多个构造方法，<code>Spring</code>会使用哪个呢？<br><code>Spring</code>的判断逻辑如下：</p><ol><li>如果一个类只存在一个构造方法，不管该构造方法是无参构造方法，还是有参构造方法，<code>Spring</code>都会用这个构造方法</li><li>如果一个类存在多个构造方法<br>a. 这些构造方法中，存在一个无参的构造方法，那么<code>Spring</code>就会用这个无参的构造方法<br>b. 这些构造方法中，不存在一个无参的构造方法，那么<code>Spring</code>就会报错</li></ol><p><code>Spring</code>的设计思想是这样的：</p><ol><li>如果一个类只有一个构造方法，那么没得选择，只能用这个构造方法</li><li>如果一个类存在多个构造方法，<code>Spring</code>不知道如何选择，就会看是否有无参的构造方法，因为无参构造方法本身表示了一种默认的意义</li><li>不过如果某个构造方法上加了<code>@Autowired</code>注解，那就表示程序员告诉<code>Spring</code>就用这个加了注解的方法，那<code>Spring</code>就会用这个加了<code>@Autowired</code>注解构造方法了</li></ol><p>需要重视的是，如果<code>Spring</code>选择了一个有参的构造方法，<code>Spring</code>在调用这个有参构造方法时，需要传入参数，那这个参数是怎么来的呢？<br><code>Spring</code>会根据入参的类型和入参的名字去<code>Spring</code>中找<code>Bean</code>对象（以单例<code>Bean</code>为例，<code>Spring</code>会从单例池那个<code>Map</code>中去找）：</p><ol><li>先根据入参类型找，如果只找到一个，那就直接用来作为入参</li><li>如果根据类型找到多个，则再根据入参名字来确定唯一一个</li><li>最终如果没有找到，则会报错，无法创建当前<code>Bean</code>对象</li></ol><p>确定用哪个构造方法，确定入参的<code>Bean</code>对象，这个过程就叫做推断构造方法。</p><h2 id="AOP-大致流程"><code>AOP</code> 大致流程</h2><p><code>AOP</code>就是进行动态代理，在创建一个<code>Bean</code>的过程中，<code>Spring</code>在最后一步会去判断当前正在创建的这个<code>Bean</code>是不是需要进行<code>AOP</code>，如果需要则会进行动态代理。</p><p>如何判断当前<code>Bean</code>对象需不需要进行<code>AOP</code>:</p><ol><li>找出所有的切面<code>Bean</code></li><li>遍历切面中的每个方法，看是否写了<code>@Before</code>、<code>@After</code>等注解</li><li>如果写了，则判断所对应的<code>Pointcut</code>是否和当前<code>Bean</code>对象的类是否匹配</li><li>如果匹配则表示当前<code>Bean</code>对象有匹配的的<code>Pointcut</code>，表示需要进行<code>AOP</code></li></ol><p>利用<code>cglib</code>进行<code>AOP</code>的大致流程：</p><ol><li>生成代理类<code>UserServiceProxy</code>，代理类继承<code>UserService</code></li><li>代理类中重写了父类的方法，比如<code>UserService</code>中的<code>test()</code>方法</li><li>代理类中还会有一个<code>target</code>属性，该属性的值为被代理对象（也就是通过<code>UserService</code>类推断构造方法实例化出来的对象，进行了依赖注入、初始化等步骤的对象）</li><li>代理类中的<code>test()</code>方法被执行时的逻辑如下：<br>a. 执行切面逻辑（<code>@Before</code>）<br>b. 调用<code>target.test()</code></li></ol><p>当我们从<code>Spring</code>容器得到<code>UserService</code>的<code>Bean</code>对象时，拿到的就是<code>UserServiceProxy</code>所生成的对象，也就是代理对象。<br><code>UserService代理对象.test()</code>—&gt;执行切面逻辑—&gt;<code>target.test()</code>，注意<code>target</code>对象不是代理对象，而是被代理对象。</p><h2 id="Spring-事务"><code>Spring</code> 事务</h2><p>当我们在某个方法上加了<code>@Transactional</code>注解后，就表示该方法在调用时会开启<code>Spring</code>事务，而这个方法所在的类所对应的<code>Bean</code>对象会是该类的代理对象。<br><code>Spring</code>事务的代理对象执行某个方法时的步骤：</p><ol><li>判断当前执行的方法是否存在<code>@Transactional</code>注解</li><li>如果存在，则利用事务管理器（<code>TransactionMananger</code>）新建一个数据库连接</li><li>修改数据库连接的<code>autocommit</code>为<code>false</code></li><li>执行<code>target.test()</code>，执行程序员所写的业务逻辑代码，也就是执行<code>sql</code></li><li>执行完了之后如果没有出现异常，则提交，否则回滚</li></ol><p><code>Spring</code>事务是否会失效的判断标准：某个加了<code>@Transactional</code>注解的方法被调用时，要判断到底是不是直接被代理对象调用的，如果是则事务会生效，如果不是则失效。还有一种情况是<code>TransactionMananger</code>和<code>jdbctemplate</code>没有使用同一个数据源（比如配置类忘记加<code>@Configuration</code>，导致<code>datasource()</code>方法返回两个数据源）</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哲学-康德-物自体世界</title>
      <link href="/2023/02/11/bi-ji/zhe-xue-kang-de-wu-zi-ti-shi-jie/"/>
      <url>/2023/02/11/bi-ji/zhe-xue-kang-de-wu-zi-ti-shi-jie/</url>
      
        <content type="html"><![CDATA[<p><img src="../static/%E5%BA%B7%E5%BE%B7-%E7%89%A9%E8%87%AA%E4%BD%93.png" alt="康德-物自体世界"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-西江月·春风将近无马</title>
      <link href="/2023/02/09/zuo-pin/shi-ci-xi-jiang-yue-chun-feng-jiang-jin-wu-ma/"/>
      <url>/2023/02/09/zuo-pin/shi-ci-xi-jiang-yue-chun-feng-jiang-jin-wu-ma/</url>
      
        <content type="html"><![CDATA[<blockquote><p>西江月<br>春风将近无马，碧涛万里无船。独倚小窗星点点，不耐今宵梦寒。<br>人情秋云冷暖，红尘似水流年。多少风雨碎心尖，最后轻轻拂面。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile-Flask镜像</title>
      <link href="/2023/02/05/yun-wei/dockerfile-flask-jing-xiang/"/>
      <url>/2023/02/05/yun-wei/dockerfile-flask-jing-xiang/</url>
      
        <content type="html"><![CDATA[<h2 id="导出依赖包">导出依赖包</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip list <span class="token parameter variable">--format</span><span class="token operator">=</span>freeze <span class="token operator">&gt;</span> requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除 distribute, pip, setuptools, wheel 这些不必要的包</p><h2 id="制作-Dockerfile">制作 Dockerfile</h2><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><code class="language-Dockerfile">FROM pythonADD . /codeWORKDIR /codeENV FLASK_APP=app.pyENV FLASK_ENV='production'ENV FLASK_RUN_HOST=0.0.0.0RUN /usr/local/bin/python -m pip install --upgrade pipRUN pip install -r requirements.txtEXPOSE 15000COPY . .CMD ["flask", "run", "-p", "15000"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="构建并发布镜像">构建并发布镜像</h2><p>powershell:</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">docker buildx build <span class="token operator">--</span>platform=linux/arm64<span class="token punctuation">,</span>linux/amd64 <span class="token operator">-</span>t jxch/capital-server:$<span class="token punctuation">(</span><span class="token function">Get-Date</span> <span class="token operator">-</span>Format <span class="token string">'yyyyMMdd'</span><span class="token punctuation">)</span> <span class="token operator">-</span>t jxch/capital-server:latest <span class="token punctuation">.</span> <span class="token operator">--</span>push<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>bash:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">sudo</span> <span class="token function">docker</span> buildx build <span class="token parameter variable">--platform</span><span class="token operator">=</span>linux/arm64,linux/amd64  <span class="token parameter variable">-t</span>  jxch/capital-ds3:<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span> <span class="token parameter variable">-t</span> jxch/capital-ds3:latest <span class="token builtin class-name">.</span> <span class="token parameter variable">--push</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flask </tag>
            
            <tag> Dockerfile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana-部署</title>
      <link href="/2023/02/04/yun-wei/grafana-bu-shu/"/>
      <url>/2023/02/04/yun-wei/grafana-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">grafana</span><span class="token punctuation">:</span>     <span class="token key atrule">image</span><span class="token punctuation">:</span> grafana/grafana<span class="token punctuation">:</span>latest     <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3000<span class="token punctuation">:</span><span class="token number">3000</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> TZ=Asia/Shanghai    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> ./grafana<span class="token punctuation">:</span>/var/lib/grafana<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="docker-swarm">docker swarm</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">grafana</span><span class="token punctuation">:</span>     <span class="token key atrule">image</span><span class="token punctuation">:</span> grafana/grafana<span class="token punctuation">:</span>latest     <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3000<span class="token punctuation">:</span><span class="token number">3000</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> TZ=Asia/Shanghai    <span class="token key atrule">networks</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> capital_overlay_network    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> <span class="token string">"grafana_data:/var/lib/grafana"</span><span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">grafana_data</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> local    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"nfs"</span>      <span class="token key atrule">o</span><span class="token punctuation">:</span> <span class="token string">"addr=10.0.0.58,rw"</span>      <span class="token key atrule">device</span><span class="token punctuation">:</span> <span class="token string">":/grafana"</span><span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">capital_overlay_network</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> overlay<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFS-Docker挂载NFS</title>
      <link href="/2023/02/04/coding/nfs-docker-gua-zai-nfs/"/>
      <url>/2023/02/04/coding/nfs-docker-gua-zai-nfs/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker-Server-发布">Docker Server 发布</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建 volume</span><span class="token function">docker</span> volume create <span class="token parameter variable">--driver</span> <span class="token builtin class-name">local</span> <span class="token punctuation">\</span>    <span class="token parameter variable">--opt</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>nfs <span class="token punctuation">\</span>    <span class="token parameter variable">--opt</span> <span class="token assign-left variable">o</span><span class="token operator">=</span>addr<span class="token operator">=</span><span class="token number">111.111</span>.3.41,rw <span class="token punctuation">\</span>    <span class="token parameter variable">--opt</span> <span class="token assign-left variable">device</span><span class="token operator">=</span>:/root/share <span class="token punctuation">\</span>    foo33<span class="token comment"># 查看 volume</span><span class="token function">docker</span> volume <span class="token function">ls</span><span class="token function">docker</span> volume inspect foo33<span class="token comment"># 发布服务</span><span class="token function">docker</span> <span class="token function">service</span> create <span class="token punctuation">\</span>  <span class="token parameter variable">--name</span> test-nginx-nfs <span class="token punctuation">\</span>  <span class="token parameter variable">--publish</span> <span class="token number">84</span>:80 <span class="token punctuation">\</span>  <span class="token parameter variable">--mount</span> <span class="token assign-left variable">type</span><span class="token operator">=</span>volume,source<span class="token operator">=</span>foo33,destination<span class="token operator">=</span>/app/share <span class="token punctuation">\</span>  <span class="token parameter variable">--replicas</span> <span class="token number">3</span> <span class="token punctuation">\</span>  nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Docker-Stack-发布">Docker Stack 发布</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nginx-test5</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>latest    <span class="token key atrule">deploy</span><span class="token punctuation">:</span>      <span class="token key atrule">mode</span><span class="token punctuation">:</span> replicated      <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>      <span class="token key atrule">restart_policy</span><span class="token punctuation">:</span>        <span class="token key atrule">condition</span><span class="token punctuation">:</span> on<span class="token punctuation">-</span>failure    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"88:80"</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token key atrule">my-overlay-network</span><span class="token punctuation">:</span>        <span class="token key atrule">aliases</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> nginx<span class="token punctuation">-</span>test5    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"foo_new:/app/share"</span><span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token key atrule">foo_new</span><span class="token punctuation">:</span>    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"nfs"</span>      <span class="token key atrule">o</span><span class="token punctuation">:</span> <span class="token string">"addr=111.111.3.41,rw"</span>      <span class="token key atrule">device</span><span class="token punctuation">:</span> <span class="token string">":/root/share"</span><span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">my-overlay-network</span><span class="token punctuation">:</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> overlay<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> stack deploy <span class="token parameter variable">-c</span> docker-compose.yml app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFS-Ubuntu安装NFS</title>
      <link href="/2023/02/04/coding/nfs-ubuntu-an-zhuang-nfs/"/>
      <url>/2023/02/04/coding/nfs-ubuntu-an-zhuang-nfs/</url>
      
        <content type="html"><![CDATA[<h2 id="安装NFC服务端">安装NFC服务端</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nfs-kernel-server<span class="token function">sudo</span> <span class="token function">cat</span> /proc/fs/nfsd/versions<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="安装NFS客户端">安装NFS客户端</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nfs-common<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>配置 NFC 服务: <a href="/2023/04/21/coding/nfs-linux-pei-zhi-nfs-fu-wu/" title="NFS-Linux配置NFS服务">NFS-Linux配置NFS服务</a></p>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间轴-人生大事件时间轴</title>
      <link href="/2023/01/25/ri-ji/shi-jian-zhou-ren-sheng-da-shi-jian-shi-jian-zhou/"/>
      <url>/2023/01/25/ri-ji/shi-jian-zhou-ren-sheng-da-shi-jian-shi-jian-zhou/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="d4b70ced1ab064600231525866865cf1f39d0b849a92b88f1ee279d4bfdf8515">775986d9acbb0b15ae59994c4d3eed101417c86bd2b7a2fe094c546156a7c52d6abc8874c7f0c85b512b8d33f3bd5cded69ec1fb4cf735c8f77bc9533ecd931ef5adb577e3f99e479aeebd3686b6c1c8b534e5242143d4234108aa217bd77f1d524d12756903480abc350c70ee4a2f414a1b32bde6e7fc46131a9aace7e532da</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 时间轴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230125-世人皆说聪明好,我被聪明误半生</title>
      <link href="/2023/01/25/ri-ji/ri-ji-20230125-shi-ren-jie-shuo-cong-ming-hao-wo-bei-cong-ming-wu-ban-sheng/"/>
      <url>/2023/01/25/ri-ji/ri-ji-20230125-shi-ren-jie-shuo-cong-ming-hao-wo-bei-cong-ming-wu-ban-sheng/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="46fc527754b13da050976dc5941b4dec5948bc2ded7e104982684f2bc3843ac3">775986d9acbb0b15ae59994c4d3eed10352fcb793d0f108f1df0e86de8c9060bae189ed1e0e2d51c6f697f626162e08ea4b550732d2da2b921631255746b767aaa6b3940008e5930f812678c9f54d772a416845ab911f63f2ff181ea21535c658bf61a57bfc9c83b6d9520126ad8d8d891f5fa31e51643eddb2edc907ed4438c591a33970f5d5647d816835d761c2f4e3288eb1abec09c0c8bc2095cfe454d1a3a268a039c8ed9921f41d629aae0495e69fc4958ae5386f84c66dcb74303f82f5097bf14568432e5221aca6c5f6efb1f64007141c4fae950991d7f24b081bfc8c7f07a8877a93271ef010b3d666496abf651dfbf69e680af5b0b53ba87bcc0baa5aaf5d04c6fc4e839f46717fae81d5627c937d6e4e59bbf9e753346b74d28035e532f0e15e63c308ab10712fb55a7224c2dca5f77c0dff40ed926434d25a2521c7881d3882f92ac99d3396b890ac028209249105545bacb008455d9bfc9370ef1736877b240218e185f03a7712d20473ee383852afd179dd61bd9f831a61d12417a24f2fb14fb161a5352e99e02f9beaa54eb2235859bfa0028a406ca1fe35aca4788495dfb03ac47886537b6d9c67d59ffc9fe52052a0bed6dcab0f1851c0a31089b4c4c7f7f188020ef3e5e5e409a7081ac01722c1b85f083763146cf4551d548077a4cd3be6be87b277d9ade189f4ba4a7e12837bd814dc6f2beecc4faae0af475f54dd1f6082609a9df0ec52a55eec30181ac53789555f7412d913573c0e2a45b402881a81c6b8ce321799152b7f25b335bf88be644d063b2f77c10fda327dafd05a377adcc745e677eaa855dcfb76e448e39c79842c3ee293cf319025de8639822418f40bd97520dda3c3620b91c43cebfed864a507911fe1c6537c3cde1ff25279f964d5babbc6007fca792af</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-8.论以罪恶获得君主国的人们</title>
      <link href="/2023/01/17/jun-zhu-lun/jun-zhu-lun-8-lun-yi-zui-e-huo-de-jun-zhu-guo-de-ren-men/"/>
      <url>/2023/01/17/jun-zhu-lun/jun-zhu-lun-8-lun-yi-zui-e-huo-de-jun-zhu-guo-de-ren-men/</url>
      
        <content type="html"><![CDATA[<h2 id="从平民成为君主的另外两种方式">从平民成为君主的另外两种方式</h2><blockquote><p>一个人从平民成为君主，还有两种方式——这两种方式都不能完全归之于机运或德能，因此，我认为对这两者不应该略而不谈，尽管其中一种方式在具体论述共和国的时候还可以更充分地探讨。</p><ol><li>一个人依靠某种罪恶而卑鄙的办法获得君权<br>拿破仑：坚决不同意这种说法。不管经由何种途径，达到目的不才是最重要的吗？马基雅维利以道德家的立场来论述这些问题，这是严重的错误。</li><li>一个平民依靠其公民同胞的支持，跃升为其祖国的君主<br>拿破仑：人们总是为表象所欺骗。<br>说到第一种方式，有两个例子可以用来说明：一个是古代的，另一个是现代的；无须进一步考虑这种方式的是非功罪，因为我认为，对于任何必须仿效他们的人来说，这就足够了。<br>拿破仑：道德家的谨慎，离国家事务太远。</li></ol></blockquote><h2 id="范例——阿伽托克勒斯">范例——阿伽托克勒斯</h2><blockquote><p>西西里人阿伽托克勒斯仅是从平民运道，而且是从低贱、卑下的运道跃升为叙拉古国王的。<br>拿破仑：此人与我有亲缘关系，比他晚一些的希耶罗则更加确定无疑地名列于我祖先的谱系之上。</p><ol><li>这个人是陶工出身，他终其一生在每个职位上都过着罪恶的生活；<br>拿破仑：这种坚韧是果决与勇敢最明显的一个标志。</li><li>然而，他的罪恶也伴随着身心两方面地德能，这种德能使他从军后，经过各种职位，擢升为叙拉古的执政官。<br>拿破仑：尤其是内心：这是根本。</li><li>取得这个职位之后，他决定要成为君主，并且打算依靠暴力而不必对他人承担责任来保有人们经过同意授予他的东西。<br>拿破仑：有人任命我做十年任期的执政官，我很快就会成为终身的；我们走着瞧！</li><li>为此，他把他的计划透露给了迦太基人哈米尔卡，后者当时正率领他的军队在西西里作战。</li><li>他在一个早上召集了叙拉古的人们和元老院，好像要同他们决定共和国的国事</li><li>在发出一个约定好的信号后，他让他的士兵杀害了全体元老和人民中最富有的人。</li><li>这些人死后，他便夺取并保有这个城市的君权而没有任何公民反抗<br>拿破仑：瞧我在雾月十八日的政变及其成效！这场政变为我带来了更大的利益，又没有犯下这些罪行。</li><li>而且，虽然他曾两次被迦太基人打败，并最后被围攻，但是他不但能够保卫他的城市，而且在留下部分人马抵御围城之后，以其余兵力进攻非洲。</li><li>这样，他很快就解除了叙拉古之围，并使迦太基人陷入极端的窘境，迫于必然性同他讲和</li><li>迦太基人满足于占领非洲，而把西西里让给了阿伽托克勒斯。<br>拿破仑：我得到的更多。阿伽托克勒斯与我相比不过是个侏儒。</li></ol></blockquote><p>马基雅维利的评价：</p><blockquote><p>因此，任何人只要考虑这个人的行动与德能，都会看到他没有什么或者很少有什么可以归功于机运的。因为，正如上面所说，他取得君权并没有依靠任何人的支持，而是凭借军中各种职位晋升，那是他历尽千难万险为自己赢得的；<br>拿破仑：我也是以同样的代价换来了权力。<br>其后，他又以许多大胆的、危险的策略维持之。<br>拿破仑：我也是这样做的。</p></blockquote><p>马基雅维利认为他的残酷使他失去德能，无法跻身于最卓越的人物：</p><blockquote><p>然而，屠杀公民，出卖盟友，缺乏信义，毫无仁慈之心，没有宗教信仰，是不能称作德能（德性）的；以这样的方式只能获取统治权，但不能赢得荣耀。<br>拿破仑：这些都是幼稚的偏见！荣耀总是伴随着成功而来，不管这种成功是如何取得的。<br>因为，如果考虑到阿伽托克勒斯出入危殆之境的德能、忍受和克服逆境的精神的伟大，我们看不出何以非要认为他比任何一个最卓越的将领逊色。<br>然而，他的野蛮残酷和毫无人道，连同他无数的罪恶，不允许他跻身于最卓越的人物之列，<br>拿破仑：又是道德！老好人马基雅维利真没有胆识。</p></blockquote><p>所以他没有依靠机运或德能而取得成就：</p><blockquote><p>因此，我们不能把他的成就归功于机运或德能，因为他取得成功没有依靠它们中任何一种。<br>拿破仑：我两者兼备。</p></blockquote><h2 id="范例——奥利韦罗托">范例——奥利韦罗托</h2><blockquote><p>在我们的时代里，在亚历山大六世当政期间，奥利韦罗托·达·费尔莫早年是一个没有父亲的孤儿，由他的一位叫作乔瓦尼·福利亚尼的舅父抚养成人。<br>拿破仑：老奸巨猾的人！从我童年时代开始，他就激发我产生了许多绝妙的主意。</p><ol><li>在他非常年轻的时候，他被送到保罗·维泰利部下当兵，这样他经过训练就能够在军中取得卓越的地位。<br>拿破仑：沃布瓦，你就是我的维泰利，我诚挚地感谢你。</li><li>保罗死后，他在保罗的兄弟维泰洛佐麾下从军</li><li>由于他机智勇敢、身强胆壮，很快就成为其军中第一号人物</li><li>但他觉得在他人手下服役是屈辱的事情</li><li>所以，他想在费尔莫某些公民——这些人认为奴役胜过他们祖国的自由——的帮助下和维泰利家族的支持下，夺取费尔莫。<br>拿破仑：共和主义的思想。（奴役胜过他们祖国的自由）</li><li>于是，他写信给乔瓦尼·福利亚尼说，他背井离乡已经有些年头，想要回去看望他和他的城市，顺带确认一下自己的遗产；除了获取荣誉之外，再也没有什么让他牵肠挂肚了，他希望由他的朋友和仆从组成一百名骑兵陪伴荣归故里，从而让他的公民同胞看到他并没有虚度年华。<br>拿破仑：调皮鬼！奥利韦罗托的整个故事，在不同情况下都让我受益匪浅。</li><li>他请求乔瓦尼乐意做出安排，使自己受到费尔莫居民的光荣接待，这不仅是他自己的荣誉，也是乔瓦尼本人的荣誉，因为奥利韦罗托是他养育的。</li><li>于是，乔瓦尼毫无保留地尽了对外甥的义务，使他受到费尔莫居民的光荣接待，并把他安顿在乔瓦尼家里住宿。</li><li>过了几天，奥利韦罗托为他未来的罪恶做好必要的秘密安排后，他举行了一个盛大的宴会，邀请乔瓦尼·福利亚尼和费尔莫所有首要的人物出席。<br>拿破仑：这有点像果月之后我从意大利回来，众议员们请我在圣叙尔皮斯教堂进行的盛大晚餐；不过那时时机尚不成熟。</li><li>在酒足饭饱以及这种宴会所常有的其他娱乐完毕后，奥利韦罗托一本正经地开始发表某种重要的谈话，说起教皇亚历山大和他的儿子切萨雷·博尔贾及其事业的伟大。</li><li>当乔瓦尼和其他人对这些谈话作出回应时，奥利韦罗托突然站起来说，这些事情应当在一个更为秘密的地方谈论。</li><li>然后，他退入一个房间，乔瓦尼和其他所有人也都跟随他进去。</li><li>但他们刚要落座，士兵们就从秘藏的地方涌上来，杀死了乔瓦尼和其他所有人。</li><li>在这场谋杀之后，奥利韦罗托跨上马背，在城里巡行，并把最高行政长官围困在市政宫中，他们迫于恐惧不得不对他唯命是从，并建立一个由他出任君主的政府。<br>拿破仑：这件事我做得足够完美，雾月十八日，尤其是第二天在圣克卢。</li><li>此后，他除掉了所有那些心怀不满从而可能加害于他的人，同时以新的民政和军政秩序来巩固自己的地位。<br>拿破仑：目前，我只需恐吓他们，击溃他们，让他们逃之夭夭，这样就足够了。我曾郑重地对巴拉斯说，我不喜欢流血。我必须证实这句话。<br>拿破仑：我很快制定出了《民法典》，我要让它冠上我的名字！<br>拿破仑：这完全取决于我，我按照自己的意愿循序渐进地制定了军政制度。</li><li>这样，在他保有君权的一年中，他不但在费尔莫城是安全稳固的，而且让所有的邻邦都惧怕。<br>拿破仑：傻瓜，谁在掌握君权的时候还会丢掉性命！</li></ol></blockquote><p>总结：</p><blockquote><p>正如前面所说，当切萨雷·博尔贾在赛尼迦利亚对付奥尔西尼家族和维泰利家族的时候，如果奥利韦罗托没有上当受骗，推翻他就会像推翻阿伽托克勒斯一样困难了。<br>在奥利韦罗托弑亲一年后，他本人以及他在德能和罪恶两方面拜作老师的维泰洛佐一道被勒死了。<br>拿破仑：通过用这个贬义词，马基雅维利似乎把他看作一个罪人。可怜的家伙！<br>拿破仑：好人们说奥利韦罗托罪有应得，而博尔贾就是公正惩罚的工具。然而，我却为奥利韦罗托鸣不平；如果世界上还有人比我更像切萨雷·博尔贾，这对于我来说可不是个好兆头。</p></blockquote><h2 id="为什么他们通过罪恶的手段却可以获得成功">为什么他们通过罪恶的手段却可以获得成功</h2><blockquote><p>有人可能会问：为什么阿伽托克勒斯以及像他那样的人，无比的背信弃义、残酷无情，却能够长期地在他的祖国安全稳固，保护自己抵御外部敌人的入侵，而本国的公民从未阴谋反对他；相反，其他许多人，依靠残酷手段，即使在和平时期也不能维持他们的国家，更不用说在战争的不确定时期了。</p></blockquote><p>妥善地使用残酷：</p><blockquote><p>我相信，这取决于恶劣地还是妥善地使用残酷：所谓“妥善地使用”（如果恶也可以称善的话）是指：</p><ol><li>出于保护自己安全的必然性<br>拿破仑：幸亏他们对此不太关注。——厄尔巴岛时期</li><li>一次性地使用残酷手段<br>拿破仑：如果以这种手段开头，就像查理二世和其他许多人一样，那么我的事业早就失败了。整个世界都盼着这一天，没有人会发出抱怨；很快，人民就不会再想起它，彻底把我遗忘。——厄尔巴岛时期</li><li>其后，除非为臣民谋取最大可能的好处，否则绝不继续使用<br>拿破仑：这很容易。——厄尔巴岛时期<br>拿破仑：如果他们拖延这件事，就会与其利益背道而驰。当我们关于必须惩罚之罪行的那份记忆淡化时，实施惩罚的人就会被认为是生性残酷的，因为我们已经忘记了这是公正的惩罚。</li></ol></blockquote><p>恶劣的使用是指：</p><blockquote><p>尽管一开始很少使用残酷手段，但其后与时俱增，而非日渐消歇。<br>拿破仑：这种手段，我对大臣们用过的唯一手段，于我有百利而无一弊。</p></blockquote><p>结论：</p><blockquote><p>那些采取第一种方式的人，在上帝与人的佑助下，对他们的国家有所补救，就像阿伽托克勒斯那样，而其他人却连维护自己的地位都不可能。<br>拿破仑：很快就会有一个新例子。</p></blockquote><h2 id="如何实施侵害以及如何施恩布惠">如何实施侵害以及如何施恩布惠</h2><p>如何实施侵害：</p><blockquote><p>因此，必须指出：</p><ol><li>夺取了一个国家的人在控制它的时候，应当审视自己必须实施的一切侵害，并且要毕其功于一役，以使今后不必日复一日地故伎重演。<br>拿破仑：结果是公正的，准则就得严格。——厄尔巴岛时期</li><li>由于不必一再实施侵害，他就能够让人们获得安全感，并通过施恩布惠的办法把他们争取过来。</li></ol></blockquote><p>如果反其道而行之：</p><blockquote><ol><li>无论谁反其道而行之——要么由于怯懦要么由于听信谗言——就会迫于必然性而一直手持屠刀<br>拿破仑：两者造成的毁灭都要算在他的头上；后者的主动性几乎完全掌握在我手里。——厄尔巴岛时期</li><li>他也绝不可能信赖其臣民，因为只要新的伤害持续不断，他们就不可能从他那里获得安全感。</li></ol></blockquote><p>结论：</p><blockquote><ol><li>伤害必须一下子施加，这样被人品味得越少，它们造成的侵害就会越小。<br>必须要么绝不侵害任何人，要么一次性施加所有侵害，这样才能打消人们的疑虑，并且让他们有理由保持精神的安宁和平静。<br>拿破仑：那些行动动手得太晚了，胆怯地从最弱小的开始下手，会引起强大者的声讨和反抗，结果让他们收益。——厄尔巴岛时期</li><li>而恩惠应该点滴赐予，以使它们更好地被人品尝。<br>拿破仑：要是大量地赐予恩惠，许多不配的人就会占便宜；还有的人几乎一点都不知感激。——厄尔巴岛时期</li><li>同时，一位君主首先应当与其臣民生活在一起，以免发生任何意外事件——无论是坏的还是好的——迫使他改弦易辙：<br>拿破仑：就如同站在中心轴上！——厄尔巴岛时期<br>3.1. 因为如果（改变的）必然性是在危难时期发生的，这时你要采取恶劣手段就太迟了；<br>拿破仑：他们会体验到的！——厄尔巴岛时期<br>3.2. 而你做良善之事也于事无补，因为人们会认为你是被迫如此，从而得不到任何感激。<br>一个共和国或一位君主不应当推迟到迫不得已时再实惠于人民。<br>拿破仑：就算许诺甚至给予再多的好处，也毫无用处，因为人民自然而然地对由于缺乏远见和不得已的给予不以为然。</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-7.论依靠他人的武装和机运获取的新君主国</title>
      <link href="/2023/01/17/jun-zhu-lun/jun-zhu-lun-7-lun-yi-kao-ta-ren-de-wu-zhuang-he-ji-yun-huo-qu-de-xin-jun-zhu-guo/"/>
      <url>/2023/01/17/jun-zhu-lun/jun-zhu-lun-7-lun-yi-kao-ta-ren-de-wu-zhuang-he-ji-yun-huo-qu-de-xin-jun-zhu-guo/</url>
      
        <content type="html"><![CDATA[<h2 id="单靠机运从平民成为君主的人在维护自己的地位时困难重重">单靠机运从平民成为君主的人在维护自己的地位时困难重重</h2><blockquote><p>那些单单靠机运从平民成为君主的人，在发迹时很少艰辛劳苦，但在维护自己的地位时就要艰苦得多。<br>拿破仑：比如那些随波逐流，自己不知如何争取的傻瓜们。<br>他们在中途没有什么困难，因为他们在那里飞翔；但等到他们落脚之后，一切困难就都接踵而来。那些要么依靠金钱要么依靠他人恩惠赐予而获得一个国家的君主就是如此。<br>拿破仑：对于这种人，一切都应该很困难。</p></blockquote><p>他们获取机运的种类：</p><blockquote><p>在爱奥尼亚和赫勒斯滂的希腊城邦里，就有好些这样的人：</p><ol><li>他们在那里由大流士立为君主，为的是使他们为了大流士的安全和荣耀而继续保有这些城邦；<br>拿破仑：除此之外，这些盟国几乎没有别的目标。</li><li>还有那些依靠收买士兵，由平民获得帝国的皇帝也是如此。</li></ol></blockquote><p>维护自己的地位时会遇到的困难：</p><blockquote><ol><li>这些人完全依赖他人给予他们一个国家的意愿和机运，而这两者都是变化无常、极不稳定的。</li><li>他们既不懂得如何保有而且也不可能保有那种地位</li></ol></blockquote><p>为什么既不懂得也不可能：</p><blockquote><ol><li>他们之所以不懂得，是因为如果他们不是具有巨大才智和德能的人，那么，相信那些始终生活在平民运道中的人懂得如何发号施令是不合乎情理的<br>拿破仑：就像某个普通人远离了自己习以为常的处境；这是同一回事。</li><li>他们之所以不可能保有那种地位，是因为他们并不拥有对自己保持友好和忠诚的军队。</li><li>再者，倏然而至的国家，就像自然界其他一切迅速滋生长大的东西一样，不可能根深蒂固、枝桠交错，一旦遇到狂风暴雨就会连根拔起。<br>拿破仑：这比卡尔卡斯的预言更加令人信服。<br>拿破仑：无论一个人生来有如何显赫的命运，当他已经在家庭这样的私人圈子里生活了二十三年、远离那个性格几乎全然不同的民族的时候，他突然借机运之翼、假他人之手来到这里、要统治这里：就如同马基雅维利此处所谈论的那一类新国家。在那里，古老的、约定俗成的道德声誉已经中断太久，名存实亡。</li></ol></blockquote><p>如何克服——德能</p><blockquote><p>事实上，除非像刚才说过的，那些倏然之间成为君主的人拥有如此大的德能，以致他们随即懂得如何做好准备来保持机运投送到他们怀中的东西，并在成为君主之后奠定其他人在成为君主之前就已经奠定了的基础。<br>拿破仑：在成为君主之前，我就已经奠定了我的基础。</p></blockquote><h2 id="范例——佛朗切斯科·斯福尔扎和切萨雷·博尔贾">范例——佛朗切斯科·斯福尔扎和切萨雷·博尔贾</h2><p>佛朗切斯科·斯福尔扎：</p><blockquote><p>他凭借适当的手段，运用自己巨大的德能，由平民跃升为米兰的公爵；<br>他获取其地位历尽千辛万苦，而维持其地位却轻松异常。</p></blockquote><p>切萨雷·博尔贾（瓦伦蒂诺公爵）——马基雅维利推崇的榜样：</p><blockquote><p>他依靠其父亲的机运而获取他的国家，亦随着这种机运的消失而失去它；<br>注：切萨雷·博尔贾在1503年教皇亚历山大六世去世的时候，本人也身患重病。<br>尽管他在他人的武装和机运所赐予的国家里，为了扎下根来，已经采取了各种行动，并且凡是一个审慎的、有德能的人应该做的一切事情他都做了。<br>拿破仑：通常不错，有时也不对。</p></blockquote><p>要通过巨大的德能奠定统治基础，为未来的权势奠定牢不可破的基础：</p><blockquote><ol><li>无论是谁一开始也许都不可能奠定基础，但后来可以凭借巨大的德能去打基础<br>拿破仑：就是去统治。其他的不过是些眩人耳目的废话。</li><li>虽然这对于建筑师来说可能是困难的，对于建筑物来说可能是危险的。<br>拿破仑：尤其当他只是在小心翼翼地摸索时……</li></ol></blockquote><p>瓦伦蒂诺公爵的失败：</p><blockquote><p>如果说他的秩序（措施）并没有给他带来补益的话，那也不是他的过错，而是由于机运异常而极端的恶毒折磨。<br>拿破仑：我也要抱怨时运不济，但我会改变机运。——厄尔巴岛时期</p></blockquote><h2 id="范例——瓦伦蒂诺公爵">范例——瓦伦蒂诺公爵</h2><p>起因：</p><blockquote><p>亚历山大六世决意壮大他的儿子（瓦伦蒂诺公爵）的势力，但是不管是当时还是后来，都遇到了重重困难。</p></blockquote><p>困难：</p><blockquote><ol><li>首先，他看到没有办法使他的儿子成为教会（教皇国）之外任何一个国家的统治者</li><li>而如果他决意取得教会（教皇国）的话，他知道米兰公爵和威尼斯人是不会同意的，因为法恩扎和里米尼已经长期处于威尼斯人的保护之下。<br>拿破仑：我的情况与之相似，但更麻烦。我能否有更好的办法，把王国分给我的约瑟夫、热罗姆……至于路易，如果还有剩下的王国便分给他。——执政官时期<br>拿破仑：在这个问题上，我踌躇再三是对的。但是那个忘恩负义的卑鄙小人，叛徒若阿基姆（缪拉）！……需要弥补自己的过错。——厄尔巴岛时期</li><li>除此之外，他看到意大利的武装，特别是他本来可以加以利用的武装，全都掌握在那些害怕教皇势力坐大的人手里</li><li>因此，他不能信赖他们，这些人全都属于奥尔西尼家族和科隆纳家族及其追随者。<br>注：奥尔西尼家族和科隆纳家族是罗马两个主要的贵族世家，也是著名的雇佣军家族，他们为了争夺对罗马的控制权和教皇的宝座长期对立。</li></ol></blockquote><p>公爵的解决进程：</p><blockquote><ol><li>所以，为了使自己稳固地成为他们当中一部分人地统治者，他就必须打乱这些秩序，并使他们的国家陷入动乱。<br>拿破仑：一部分人！对我来说太少了。<br>拿破仑：教皇亚历山大都不会否认我比亚历山大大帝的成就更大。</li><li>对他来说，这是再容易不过的，因为他发现，威尼斯人由于其他理由的驱使，愿意把法国人再次招回意大利<br>拿破仑：我懂得制造其他的混乱，它们越适合我和我的时代，对我就越有利。</li><li>对此，他非但不反对，反而还帮助路易国王解除了先前的婚姻关系，使事情更加顺利。<br>注：可以联系 3.论混合君主国 中有关路易十二的部分阅读。<br>拿破仑：我已尝试过这种方法。我让出了乌尔比诺公国以获得政教协定，这说明不管是在罗马还是在别处，不管是当时还是现在，都应该留一只手去洗另一只手</li><li>于是，法国国王在威尼斯人的帮助和亚历山大的同意下进入意大利<br>拿破仑：热那亚人认为法国给他们的利益将会分文不少地兑现，怀着这种疯狂的期待，他们为我打开了意大利的大门：“人为财死”。不过，至少我会善待他们多于其他意大利人。</li><li>他刚刚到达米兰，教皇便为了在罗马涅发动战事向他借兵，而罗马涅摄于国王的声望，便向教皇屈服了。</li><li>这样，公爵在获取（征服）罗马涅、打垮科隆纳家族之后，想要维持收获并继续推进，便遇到了双重障碍。</li></ol></blockquote><p>公爵的双重障碍：</p><blockquote><ol><li>他的军队在他看来并不忠诚。</li><li>法国的意愿。</li></ol></blockquote><p>军队和法国障碍：</p><blockquote><ol><li>也就是说，他迄今为止所利用的奥尔西尼家族的军队有可能背弃他，不但阻止他进一步获取（征服），而且夺走他已经获取（征服）的</li><li>法国国王也可能是一丘之貉。<br>拿破仑：由于对德意志地区我的保护国和盟国没有这样的防备，我付出了高昂的代价。——厄尔巴岛时期</li><li>在他夺取乌尔比诺公国后进攻托斯卡纳时，法国国王阻止了这项战事，于是，他对国王的心思也就看透了。就心中有数了。<br>注：1502年6月，在切萨雷·博尔贾的党羽维泰洛佐·维泰利的怂恿下，佛罗伦萨的属地、托斯卡纳的重要城市阿雷佐以及基亚纳谷地以南的地区开始反叛佛罗伦萨。这样，博尔贾对佛罗伦萨构成了严重威胁，但同时也引起了法王路易十二的警惕，在他的干涉下，佛罗伦萨很快收复了这些地方。<br>因此，公爵决定再不依靠他人的武装和机运<br>拿破仑：我还能怎么做呢！——厄尔巴岛时期</li></ol></blockquote><p>削弱罗马的奥尔西尼派和科隆纳派：</p><blockquote><ol><li>为此，他笼络所有他们的支持者，通过厚赏使这些贵族成为自己的贵族：按照他们的品性，给他们加官进爵，赐予荣誉（名为）。<br>拿破仑：我的科隆纳家族是保王党；我的奥尔西尼家族是雅各宾派；而我的贵族们是两边各自的头目。</li><li>于是，几个月间，他们心中的派性情感就消失殆尽，所有情感都转向了公爵。<br>拿破仑：早在执政府前，我就已经部分地开始了这项工作，待到执政府时期，我早早地就完成了这些重要步骤。</li><li>在他分化瓦解了科隆纳家族的首领之后</li><li>他便等待机会消灭奥尔西尼家族的首领，一个绝佳的机会果然到来，并且他很好地抓住了它<br>拿破仑：这两者本来不能同时做到尽善尽美，但自我以后，它发生了。</li></ol></blockquote><p>消灭奥尔西尼家族的首领的机会：</p><blockquote><p>因为奥尔西尼家族终于意识到（虽然为时已晚），公爵和教会的强大就意味着自己的灭亡，于是他们在佩鲁贾附近的马焦内举行了一次会议。<br>由此，乌尔比诺的反叛和罗马涅的骚乱爆发了，这给公爵带来了无数危险。<br>注：1502年9-10月，奥尔西尼家族、维泰利家族、博洛尼亚的本蒂沃利奥家族以及其他受到切萨雷·博尔贾的野心威胁的政治势力，结成反博尔贾的联盟。1502年12月被博尔贾剿杀。<br>拿破仑：我也见过同样的情况……就是皮舍格吕、马莱这些人。我没有依靠外国力量就获得了胜利。<br>然而，在法国人的帮助下，所有这一切危险他都克服了<br>拿破仑：我单靠自己就做到了这一点。</p></blockquote><p>转而诉诸欺骗——解决奥尔西尼家族问题：</p><blockquote><ol><li>在恢复他的声望之后，他不再信赖法国或其他外部力量，为了不再受制于他们，他转而诉诸欺骗。他深深懂得如何掩饰自己的意图，通过保罗大人（保罗·奥尔西尼），他使奥尔西尼家族同自己和解。<br>拿破仑：“不知伪装者，不知统治之道”。路易十一对此认识还不够深刻。他应该说：“不知欺骗者，不知统治之道”。</li><li>为了稳住保罗大人，公爵尽心履行各种义务，给他奉送金钱、华服和骏马，于是，他们的单纯使他们在赛尼迦利亚落入公爵之手。<br>拿破仑：在我的科隆纳家族和奥尔西尼家族中，那些反对我最厉害的人都没能从我手上逃脱。</li></ol></blockquote><p>获取罗马涅全境和乌尔比诺公国：</p><blockquote><p>公爵消灭了这些首领并把他们的党羽变成自己的盟友后，他据有了罗马涅全境和乌尔比诺公国，这就给他的权势打下了非常良好的基础。<br>尤其是，他认为自己获取了罗马涅的友谊，争取了那里所有人民的支持，因为他们现在已经开始尝到幸福的甜头。</p></blockquote><h2 id="瓦伦蒂诺公爵恢复罗马涅秩序，巩固罗马涅统治">瓦伦蒂诺公爵恢复罗马涅秩序，巩固罗马涅统治</h2><p>乱世用重典——委派雷米罗以严刑峻法</p><blockquote><p>拿破仑：他伤害的只是少数夸夸其谈的傻瓜，造福的却是数以千倍计的人民。</p></blockquote><p>施政理由：</p><blockquote><ol><li>公爵占领罗马涅后发现，罗马涅过去处于一些孱弱无能的领主的支配之下，他们与其说是纠治其臣民，倒不如说是掠夺他们</li><li>给臣民们制造事端，使之分崩离析而不是团结一致。</li><li>由于这个地区充满了抢劫、动乱以及其他各种无法无天的事情</li><li>所以他认为，要想使当地恢复和平并服从于王权，就有必要给它建立一个优良的政府。<br>拿破仑：一切都与我统治之前的法国相似。<br>拿破仑：这不正是我所做的吗？要镇压无政府状态，必须强硬而严厉。</li><li>于是，他给那里选派了一个残酷而干练的人雷米罗·德·奥尔科大人，并授予他全权。<br>注：雷米罗·德·奥尔科在1501年被切萨雷·博尔贾派往罗马涅代理博尔贾统治，次年被处决。</li></ol></blockquote><p>施政结果：</p><blockquote><p>雷米罗在很短的时间内就使之恢复了和平与统一，因此获得了极大的声望。<br>后来，公爵认为没有必要再授予这样过分的权力，因为他担心这会惹人憎恨。</p></blockquote><p>残忍处死雷米罗——消除民怨，进一步巩固统治：</p><blockquote><ol><li>于是，他在这个地区的中心设立了一个民政法庭，委派一名非常卓越的庭长，让每一个城市都在那里有自己的辩护人。<br>拿破仑：设立一个维护个人自由的元老院委员会，不过，他只能做我想做的事。</li><li>因为他知道，过去的严酷已经引发人民对雷米罗的某种仇恨，为此，他要涤荡那里人民的怨气，并把他们完全争取过来</li><li>他希望表明，过去实施的任何残酷行为，都不是来自他本人，而是来自其大臣的残暴天性。<br>拿破仑：没有人比他牺牲的更多，正是在公众舆论的压力下，他成了我的替罪羊。</li><li>他抓住这个机会，在一个早晨把雷米罗斫为两段，曝尸在切塞纳的广场上，尸体旁放着一块砧木和一把血淋淋的刀子。<br>拿破仑：我只能疏远他，却不能让其元气大伤，这令我怒火中烧。</li><li>这一残忍的场面既让人民感到心满意足，又让人民感到惶惑不安。<br>拿破仑：在一个晴朗的日子里实施这些惩罚，这是他罪有应得！</li></ol></blockquote><h2 id="瓦伦蒂诺公爵面对法国如何自保">瓦伦蒂诺公爵面对法国如何自保</h2><p>当前环境：</p><blockquote><p>这时公爵觉得自己十分强大了，而且有几分把握应对当前的危险——因为他已经按照自己的心愿武装起来，并且大体消灭了那些邻近可能攻击自己的武装。<br>现在就剩法国国王需要考虑了，如果他想继续进行获取（征服）的话。<br>因为他知道，一旦国王稍晚察觉到自己的错误，是不能对此再容忍的。</p></blockquote><p>解决方案：</p><blockquote><ol><li>于是，他开始寻求新的盟友</li><li>当法国人远征那波利王国以抗击正在围攻加埃塔的西班牙人时，公爵对法国虚与委蛇。<br>他的意图是保护自己的安全免于其患；对此，假如教皇亚历山大还活着的话，公爵本来可以迅速取得成功的。</li></ol></blockquote><h2 id="瓦伦蒂诺公爵的困境">瓦伦蒂诺公爵的困境</h2><blockquote><p>这些就是公爵对于当前的事件所采取的措施。但是，对于未来，他不能不有所担心。</p><ol><li>首先，教会新的继位者可能对他并不友好</li><li>而且可能试图夺走亚历山大已经给予他的东西</li></ol></blockquote><p>他考虑为了保护自己的安全，可以采取四种方式应对之：</p><blockquote><ol><li>灭绝那些被他废黜的领主们的血脉世系，使（新）教皇无可乘之机</li><li>如上所说，把在罗马的所有贵族都笼络过来，以便能够用他们来羁绊（新）教皇</li><li>尽可能使枢机主教团倒向自己</li><li>在（亚历山大）教皇未死之前获取更大的统治权，以便能够依靠自己的力量抵御最初的进攻。</li></ol></blockquote><p>在亚历山大去世的时候，公爵已经完成了这四件事情当中的三件，第四件也几乎完成了：</p><blockquote><ol><li>对于那些被废黜的领主们，他已经能杀多少就杀多少，只有极少数活命</li><li>罗马的贵族已经被他笼络过来</li><li>在枢机主教团里，大部分人都是他的同党，他占领了佩鲁贾和皮翁比诺，并且已经把比萨置于自己的保护之下。<br>并且，一旦不再需要顾忌法国（他事实上已经无须顾忌，因为法国人已经被西班牙人驱逐出（那波利）王国，所以他们中的任何一方都不得不迫于必然性向他买好），他就会攫取比萨。<br>此后，卢卡和锡耶纳很快也会投降，一来出于对佛罗伦萨人的嫉妒，二来出于恐惧，对此，佛罗伦萨人毫无补救办法。<br>如果他的这些计划成功实施（在亚历山大去世的那一年他是接近成功的），他就会获取如此之大的力量和声望，以致他可以以此自立，不再依靠机运和他人的力量，而是依靠自己的权势和德能。<br>拿破仑：没有类似情况的羁绊，我大可走得更远。<br>拿破仑：不应有任何依赖。</li></ol></blockquote><p>机运异常而极端的恶毒折磨：</p><blockquote><p>但是，在他开始拔剑出鞘后的第五年，亚历山大死了。他给公爵留下的只有罗马涅这个国家是巩固的，其他所有的国家夹在两支非常强大的敌军之间摇摆不定，而且公爵本人也已病危。<br>拿破仑：他太不幸了：要牢记，永远都不要生病，让自己坚不可摧。</p></blockquote><p>惋惜：</p><blockquote><p>然而，公爵如此勇猛、如此富有德能，他深知如何才能把人们争取过来、如何就会失去他们，而他在如此短促的时间里所奠定的基础又是如此稳固；<br>假如没有那些敌军在他背后，或者假如他的身体已经康复，那么他是能够摆平一切困难的。而且，从罗马涅等待他一个多月这件事可以看出，他的基础是非常牢靠的。<br>拿破仑：正如在莫斯科的灾难之后，法国扔等着我。<br>在罗马，虽然他已是半死不活，但仍然是安全稳固的<br>拿破仑：在斯摩棱斯克，虽然从政治上说我也是半死不活，但我从不担心我的安全。<br>虽然巴廖尼家族、维泰利家族和奥尔西尼家族的人进入了罗马，却没有人追随他们反对他。<br>如果说他不能使他属意的人成为教皇，但他至少可以阻止他不喜欢的人当选。<br>拿破仑：对我来说者不难：单是我在佛雷瑞斯登陆的消息就已经排除了有悖于我的选择。<br>但是，假如在亚历山大去世的时候公爵的身体已经康复，那么，对他来说，一切事情都会好办。<br>在尤利乌斯二世当选教皇的那一天，公爵告诉我说，他已经考虑到他父亲垂死时可能会发生的一切，并且已经找到一条万全的补救办法，唯独没有料到他父亲去世的时候他自己也会濒临死亡。<br>拿破仑：总之，正常来说，当一个人想要光荣地统治时，最好永远不要考虑这个问题。这个想法让我最为大胆的计划流产了。</p></blockquote><h2 id="瓦伦蒂诺公爵的总结">瓦伦蒂诺公爵的总结</h2><blockquote><p>因此，如果让我总结一下公爵的所有行动，我会认为他没有可以指责之处；相反，我觉得应该像我这样把公爵推出来，让所有那些依靠机运和他人的武装而取得统治权的人来仿效。<br>拿破仑：那些蹩脚的文人说，这适用于所有的君主，甚至适用于那些没有处于也不可能处于相同境地的君主。他们简直无知至极。在整个欧洲，除了我，这一典范不适合任何人。<br>因为他具有伟大的精神和崇高的意图，他的行动义无反顾；<br>拿破仑：我也是这样做的，我的处境让我需要这么做，进而变成必须这么做。<br>只是由于亚历山大的短命和他自己患病，他的鸿图才终成泡影<br>拿破仑：我的挫败也正是由于相同的原因，对此，我的才华毫无用武之地</p></blockquote><p>公爵的优点：</p><blockquote><ol><li>所以，无论谁只要认为有必要在他的新君主国中保护自己的安全免遭敌人侵害，</li><li>为自己赢得盟友支持，</li><li>依靠武力或欺诈克敌制胜，</li><li>使人民对自己既爱戴又畏惧并让士兵对自己既服从又敬畏，</li><li>把那些能够或者势必加害于你的人消灭掉，</li><li>以新的模式更新旧的秩序，</li><li>要想冷峻严酷却又亲善悦人、宽宏大量、慷慨大方，</li><li>要消灭不忠诚的军队而建立新的军队，</li><li>要维持同国王们和君主们的友谊，使他们不得不要么欣然对你施恩布惠，要么犹豫着不敢加害于你；<br>那么，他都找不到比这个人（公爵）的行动更鲜活的范例了。<br>拿破仑：但愿我也是一个范例，不仅更加鲜活，而且更加完美，更加让人赞赏。</li></ol></blockquote><p>公爵犯的错误：</p><blockquote><p>我们可以责难他的唯有让尤利乌斯二世当选教皇这一件事，在这个问题上他做出了错误的选择。<br>拿破仑：疾病让他头脑混乱。<br>因为，正如已经说过的，他纵使不能按照自己的心愿选择一个教皇，他也可以阻止任何人当选<br>拿破仑：要是他的当选不合我意，我会很快打垮他。<br>对于教皇之位，他绝不应该同意选举一个自己已经得罪的枢机主教或者一个当上教皇就会害怕自己的枢机主教来担任。<br>拿破仑：除了我们选择的那个人，所有人都知道或预料到他们应该害怕我。<br>因为人们加害于你要么出于恐惧，要么出于仇恨。<br>在公爵曾经得罪的人当中，有“锁链中的”圣彼得、科隆纳、圣乔治和阿斯卡尼奥等人。<br>拿破仑：害怕这些人怨恨的时代已经一去不复返了。<br>其他所有人一旦当上教皇，势必会害怕他<br>拿破仑：单单我的名字就会让他们颤抖，我会让他们像绵羊一样匍匐在我的王座下。<br>只有鲁昂和西班牙人例外：西班牙人由于亲缘和恩义，鲁昂则由于其权势同法兰西王国联系在一起。<br>拿破仑：真是指望这些人的好理由啊！马基雅维利也太讲诚信了。<br>所以，当务之急，公爵应该选立一个西班牙人当教皇；如果做不到这一点，他就应该同意选立鲁昂，而不是“锁链中的”圣彼得。<br>任何人如果相信给予新的恩惠会使大人物忘却旧的伤害，他就是自欺欺人。<br>拿破仑：只要他们的激情愿意如此，他们似乎可以忘掉过去，但是千万别相信表象。<br>因此，公爵在这次选择中犯了错，这就是他最终灭亡的原因。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计划-2023年计划</title>
      <link href="/2023/01/17/ri-ji/ji-hua-2023-nian-ji-hua/"/>
      <url>/2023/01/17/ri-ji/ji-hua-2023-nian-ji-hua/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/2023%E5%B9%B4%E8%AE%A1%E5%88%92%20.png" alt="2023年计划"></p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
          <category> private </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计划-专业技能树</title>
      <link href="/2023/01/17/ri-ji/ji-hua-zhuan-ye-ji-neng-shu/"/>
      <url>/2023/01/17/ri-ji/ji-hua-zhuan-ye-ji-neng-shu/</url>
      
        <content type="html"><![CDATA[<p><img src="/static/%E4%B8%93%E4%B8%9A%E6%8A%80%E8%83%BD%E6%A0%91.png" alt="专业技能树"></p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230117-伤官不可伤</title>
      <link href="/2023/01/17/ri-ji/ri-ji-20230117-shang-guan-bu-ke-shang/"/>
      <url>/2023/01/17/ri-ji/ri-ji-20230117-shang-guan-bu-ke-shang/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="47fc467ac1f7d81bd217bfbc1b34f4b2de9a4610e538f7e817f2ba6904ff2e86">775986d9acbb0b15ae59994c4d3eed101bf7a3e8ad6b84dfa0351767d126dafb8b69a16c6a67f4927877e98f76434ede80826f375f2215784c20b8b168970d07b37e610156567cfac4d902d9504953ee419d6051be980aff04356e271e073538ef42776e2b5fe38e5d8835358981a0a9219786478e86e30b2b1af0302e3922dea9c9d8dafc06d17a094c6536f7d0fecfafae423c016c87bc9879005e832c5d6798b5f67b6e6c89216107082397f41342653aaa4133d69e732f8f0a0f34b4b69d4992c3ab51c93d8f89f666f4c39f46ad7171589f7f58db231479fba26225035a266365214befecd61adc4e087946a53a9ebd117cc5ef416d7ae8c4de021dc45728104dbd3d2d74e74bc75e588d6ada4e20353d025861aced4812eb7369a698a11f1ee3c7db9bf9656ba466cd010e23c9660538a001a864c8048675b53dcf6a0d55479feec64a4585297b50fe50f000822485d8452be4c5d9c101c25229309c561fdb31947e0f223d193534efaf856ce88ec6fbcf5de97af7e0bdc5e6b8d3cb757e650e9d2016ffdd548db6049d4cae79ccd510190b4997748638727cf847f606e8ec6802baf37989fa95022db8eb7440af4b3ccb3fd0e911ec8d969a714efc68c8d1fc5570f924357b6d7baa8b663e1423a323de17857863630369373c95ad54de639ebe4d8593eae773c9b87b8a456321732875a9cde10f8f7a00b585846aa28a2ae66197065c683e5c917e620ae3f140165f15e046ddc4252c14ef412deda9ed17ad3963ca2161e4b31ec3f269c8cd4aa78e727ea40d675eedef99f055d5dfa96c50ffc7ba3a0b285da9e1d4c665b2577204e3dc1173889455fd8b92eb1293037577efda452818598089d08ef9e4c8cc148fd1d574765330932eaa7ab39e83</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-临江仙·杨柳风</title>
      <link href="/2023/01/13/zuo-pin/shi-ci-lin-jiang-xian-yang-liu-feng/"/>
      <url>/2023/01/13/zuo-pin/shi-ci-lin-jiang-xian-yang-liu-feng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>临江仙·杨柳风<br>细雨柳丝千万缕，随分随聚任风。人间万事荣辱惊。问君与谁同，长恨总飘蓬。<br>早知天意非如此，从前错怨天公。常言闲处过平生。此身不再是，江湖烟雨中。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-送别</title>
      <link href="/2023/01/13/zuo-pin/shi-ci-song-bie/"/>
      <url>/2023/01/13/zuo-pin/shi-ci-song-bie/</url>
      
        <content type="html"><![CDATA[<blockquote><p>惆怅最是独自眠，当时寻常不堪言。<br>夜雨吹风滴滴恨，游院惊梦五更寒。<br>沉思平生志又广，门前秋枣再团团。<br>更生芳草十万里，一路清月代我传。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-江城子·恨别</title>
      <link href="/2023/01/13/zuo-pin/shi-ci-jiang-cheng-zi-hen-bie/"/>
      <url>/2023/01/13/zuo-pin/shi-ci-jiang-cheng-zi-hen-bie/</url>
      
        <content type="html"><![CDATA[<blockquote><p>江城子·恨别</p><p>清风夕阳晚凉天。棋盘前，道前欢。<br>手把棋子、犹豫玩笑间。<br>佳节重逢会依然。月如钩，月如圆。</p><p>寒风肠断凄凉天。面对面，再无言。<br>泪眼叠衣、满地欲送难。<br>年年从此不相见。思年年，恨年年。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20230102-我人生悲剧的原点</title>
      <link href="/2023/01/02/ri-ji/ri-ji-20230102-wo-ren-sheng-bei-ju-de-yuan-dian/"/>
      <url>/2023/01/02/ri-ji/ri-ji-20230102-wo-ren-sheng-bei-ju-de-yuan-dian/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="4fc27e93e88793ca132f23ea6fc01e2a296badbcf80e08c67b4a8db54d5d35a4">775986d9acbb0b15ae59994c4d3eed10f199514b0bca31621e02c42d537cf12f5272ac9599f582887119dd75a5dc1722d14b914169866d4f04d964095501c2b5eb6eff516c0bd3b78a44fb9f85a4b78a9541c0d75e17c062eaaf50ca47456d500ead17e401dabb73400d52be57976dcf7d130245c54fba410b2b5abafa1b5e6c115913229e8fbd268fc6d0688d7e3f6d1a23f117a755cf1105437b0e507eae3641523ba9cabf8d919b87dd061c5d24c6ffe1dab4199c3c3740b88bfd010ce055868f68c160288823cf47b0336f7d8bc1824b65b05ce761659a6a215800e868e02f429f414b686cbecbc30f70af3bb60feb60eae076e1ae68c9709f2ee5e8a4b246982e555e59ddad6c0758c068d07ac6849cc12bb0ee736a133d2745211f7743c9f5be3dead1e4a5709a4738ebecd0c7e22d1fa40b62c1f54e2286a673945ddf821c44f881c7123cf90c55434e10fc229c74601ed0992dd071fcb8dfde45ad65a33110d78672f0bd677c8df74192cf6ab7b7c1971d94e70d7e2c490586c2075b0b2f4368839bc563cb5fbb6ff2eaa8aa294fc71871fadb54e1dc2d8e38f695f193b6da5773321dabc182591854d423e9713ff02c9294d34660e8d766f6794ed8057cfbdeca7fe5927632fa1df97f9becba4ca050210997733737a757b9ecdfbdadbd00daa8e70fab0efad6127b88c0e9e9701c056f6cb755bb5f770c628625cde54eabff4d99fd932cf78fc624057555bdc7cfcc15e109c9aacbbe7f2df28a5199482436cc05c75d80172a6b16ebc49b15f5f47f0d6326e55864b46a8995c15cc8d36aa00b888e1c0cdc6edd00f6d8f4a64c77a4df0224b86938e95124afe26552220df3933ef5b4df8e017f132b2ae248e93b1213052c2446025d041df2a2aa5691a7772d1c6288cdc71f5ec599d47f4ea938c279fb930942890a0be64081d1877366420dd95119385711c90ef6f85e64fc229da75646cbafce9cdd96d5b89a0b1d3b469ef722d188476c728df3b19780426dc3f32c33b3259c650e1c8da317c57e621167217e21fd39bb08b7b60e430933bb80b9b565ca86d88f60e96ef039</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-格言联璧-名句-1</title>
      <link href="/2023/01/02/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-1/"/>
      <url>/2023/01/02/bi-ji/zhai-chao-ge-yan-lian-bi-ming-ju-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">静坐常思己过，闲谈莫论人非</font><br>怒是猛虎，欲是深渊<br><font color="red">鱼离水则身枯，心离书则神索</font><br><font color="red">修己以清心为要，涉世以慎言为先</font><br>谦，美德也，过谦者怀诈。默，懿行也，过默者藏奸<br><font color="red">天欲祸人，先以微福骄之；天欲福人，先以微祸儆之</font><br>日日行不怕千万里，常常做不怕千万事<br>对失意人，莫谈得意事。处得意日，莫忘失意时<br><font color="red">以情恕人，以理律己</font><br><font color="red">恶莫大于纵己之欲，祸莫大于言人之非</font><br>此生不学一可惜，此日闲过二可惜，此身一败三可惜<br>人之谤我也，与其能辩，不如能容；人之侮我也，与其能防，不如能化<br><font color="red">提得起，放得下，算得到，做得完，看得破，撇得开</font><br><font color="red">是非窝里，人用口，我用耳；热闹场中，人向前，我落后</font><br><font color="red">事有机缘，不先不后，刚刚凑巧。命若蹭蹬，走来走去，步步踏空</font><br>胆欲大，心欲小；智欲圆，行欲方<br><font color="red">事当快意时须转，言到快意时须住</font><br>不自重者取辱，不自畏者招祸，不自满者受益，不自是者博闻<br>读书即未成名，究竟人高品雅。修德不期获报，自然梦稳心安<br>以恕己之心恕人，则全交。以责人之心责己，则寡过<br>世人以七尺为性命，君子以性命为七尺<br>在古人之后议古人之失，则易；处古人之位为古人之事，则难<br>读未见书，如得良友；见已读书，如逢故人<br>事不可做尽，言不可道尽，势不可倚尽，福不可享尽<br><font color="red">不可吃尽，不可穿尽，不可说尽；又要洞得，又要做得，又要耐得</font><br><font color="red">有才而性缓，定属大才。有智而气和，斯为大智</font><br>何思何虑，居心当如止水；勿取勿忘，为学当如流水<br>案上不可多书，心中不可少书<br>辱人以不堪，必反辱；伤人以已甚，必反伤<br>无事时埋藏着许多小人，多事时识破了许多君子<br>不自反者，看不出一身病痛；不耐烦者，做不成一件事业<br>无心者公，无我者明<br>论人当节取其长，曲谅其短；做事必先审其害，后计其利<br>人好刚，我以柔胜之；人用术，我以诚感之；人使气，我以理屈之<br>盛喜中勿许人物，盛怒中勿答人书<br>不可不存时时可死之心，不可不行步步求生之事<br>见事贵乎理明，处事贵乎心公<br>气忌盛，心忌满，才忌露<br><font color="red">一念疏忽，是错起头。一念决裂，是错到底</font><br><font color="red">龙吟虎啸，凤翥鸾翔，大丈夫之气象</font><br><font color="red">缓事宜急干，敏则有功；急事宜缓办，忙则多错</font><br>直道事人，虚衷御物<br>小人乐闻君子之过，君子耻闻小人之恶<br><font color="red">不近人情，举足尽是危机；不体物情，一生俱成梦境</font><br><font color="red">心慎杂欲，则有余灵；目慎杂观，则有余明</font><br>眼界要阔，遍历名山大川；度量要宏，熟读五经诸史<br>步步占先者，必有人以挤之。事事争胜者，必有人以挫之<br><font color="red">顽石之中良玉隐焉，寒灰之中星火寓焉</font><br><font color="red">下手处是自强不息，成就处是至诚无息</font><br><font color="red">自责之外，无胜人之术。自强之外，无上人之术</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 格言联璧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间轴-2022大事记</title>
      <link href="/2023/01/02/ri-ji/shi-jian-zhou-2022-da-shi-ji/"/>
      <url>/2023/01/02/ri-ji/shi-jian-zhou-2022-da-shi-ji/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="2b71e9aeeed02278fe13118b633c9ce338a353044c2a43d7c523f9959468113a">775986d9acbb0b15ae59994c4d3eed101417c86bd2b7a2fe094c546156a7c52d6abc8874c7f0c85b512b8d33f3bd5cde6a008f452629d39b453eb68c089a0d6f1cb481c3cfd37964cf33e8feed8f88a943d485c8e6889d8caee9d00fc4487820cfcea16cc8080e6f5e4b6f65314ec542</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 时间轴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄-素书</title>
      <link href="/2023/01/01/bi-ji/zhai-chao-su-shu/"/>
      <url>/2023/01/01/bi-ji/zhai-chao-su-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="原始">原始</h2><blockquote><p>夫道、德、仁、义、礼五者，一体也。<br>道者，人之所蹈，使万物不知其所由。<br>德者，人之所得，使万物各得其所欲。<br>仁者，人之所亲，有慈慧恻隐之心，以遂其生存。<br>义者，人之所宜，赏善罚恶，以立功立事。<br>礼者，人之所履，夙兴夜寐，以成人伦之序。<br>夫欲为人之本，不可无一焉。<br>贤人君子，明于盛衰之道，通乎成败之数，审乎治乱之势，达乎去就之理。故潜居抱道以待其时。<br>若时至而行，则能极人臣之位；<br>得机而动，则能成绝代之功。如其不遇，没身而已。<br>是以其道足高，而名重于后代。</p></blockquote><h2 id="正道">正道</h2><blockquote><p>德足以怀远，信足以一异，义足以得众，才足以鉴古，明足以照下，此人之俊也。<br>行足以为仪表，智足以决嫌疑，信可以使守约，廉可以使分财，此人之豪也。<br>守职而不废，处义而不回，见嫌而不苟免，见利而不苟得，此人之杰也。</p></blockquote><h2 id="求人之志">求人之志</h2><blockquote><p>绝嗜禁欲，所以除累。抑非损恶，所以禳过。贬酒阙色，所以无污。<br>避嫌远疑，所以不误。博学切问，所以广知。高行微言，所以修身。<br>恭俭谦约，所以自守。深计远虑，所以不穷。亲仁友直，所以扶颠。<br>近恕笃行，所以接人。任材使能，所以济物。殚恶斥谗，所以止乱。<br>推古验今，所以不惑。先揆后度，所以应卒。设变致权，所以解结。<br>括囊顺会，所以无咎。橛橛梗梗，所以立功。孜孜淑淑，所以保终。</p></blockquote><h2 id="本德宗道">本德宗道</h2><blockquote><p>夫志心笃行之术。<br>长莫长于博谋，安莫安于忍辱，先莫先于修德，乐莫乐于好善，<br>神莫神于至诚，明莫明于体物，吉莫吉于知足，苦莫苦于多愿，<br>悲莫悲于精散，病莫病于无常，短莫短于苟得，幽莫幽于贪鄙，<br>孤莫孤于自恃，危莫危于任疑，败莫败于多私。</p></blockquote><h2 id="遵义">遵义</h2><blockquote><p>以明示下者暗，有过不知者蔽，迷而不返者惑，<br>以言取怨者祸，令与心乖者废，后令缪前者毁，<br>怒而无威者犯，好众辱人者殃，戮辱所任者危，<br>慢其所敬者凶，貌合心离者孤，亲谗远忠者亡，<br>近色远贤者昏，女谒公行者乱，私人以官者浮，<br>凌下取胜者侵，名不胜实者耗。<br>略己而责人者不治，自厚而薄人者弃废。<br>以过弃功者损，群下外异者沦，既用不任者疏，<br>行赏吝色者沮，多许少与者怨，既迎而拒者乖。<br>薄施厚望者不报，贵而忘贱者不久。<br>念旧恶而弃新功者凶 ，用人不得正者殆，强用人者不畜，<br>为人择官者乱，失其所强者弱，决策于不仁者险，<br>阴计外泄者败，厚敛薄施者凋。<br>战士贫，游士富者衰；货赂公行者昧；<br>闻善忽略，记过不忘者暴；所任不可信，所信不可任者浊。<br>牧人以德者集，绳人以刑者散。<br>小功不赏，则大功不立；小怨不赦，则大怨必生。<br>赏不服人，罚不甘心者叛。赏及无功，罚及无罪者酷。<br>听谗而美，闻谏而仇者亡。能有其有者安，贪人之有者残。</p></blockquote><h2 id="安礼">安礼</h2><blockquote><p>怨在不舍小过，患在不预定谋。福在积善，祸在积恶。<br>饥在贱农，寒在堕织。安在得人，危在失士。<br>富在迎来，贫在弃时。上无常操，下多疑心。<br>轻上生罪，侮下无亲。近臣不重，远臣轻之。<br>自疑不信人，自信不疑人。枉士无正友，曲上无直下。<br>危国无贤人，乱政无善人。爱人深者求贤急，乐得贤者养人厚。<br>国将霸者士皆归，邦将亡者贤先避。<br>地薄者大物不产，水浅者大鱼不游，树秃者大禽不栖，林疏者大兽不居。<br>山峭者崩，泽满者溢。弃玉取石者盲，羊质虎皮者柔。<br>衣不举领者倒，走不视地者颠。柱弱者屋坏，辅弱者国倾。<br>足寒伤心，人怨伤国。山将崩者下先隳，国将衰者人先弊。<br>根枯枝朽，人困国残。与覆车同轨者倾，与亡国同事者灭。<br>见已生者慎将生，恶其迹者须避之。畏危者安，畏亡者存。<br>夫人之所行，有道则吉，无道则凶。吉者，百福所归；凶者，百祸所攻。<br>非其神圣，自然所钟。务善策者无恶事，无远虑者有近忧。<br>同志相得，同仁相忧，同恶相党，同爱相求，同美相妒，同智相谋，<br>同贵相害，同利相忌，同声相应，同气相感，同类相依，同义相亲，<br>同难相济，同道相成，同艺相规，同巧相胜：此乃数之所得，不可与理违。<br>释己而教人者逆，正己而化人者顺。<br>逆者难从，顺者易行，难从则乱，易行则理。<br>如此理身、理家、理国，可也！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-6.论依靠自己的武装和德能获取的新君主国</title>
      <link href="/2022/12/31/jun-zhu-lun/jun-zhu-lun-6-lun-yi-kao-zi-ji-de-wu-zhuang-he-de-neng-huo-qu-de-xin-jun-zhu-guo/"/>
      <url>/2022/12/31/jun-zhu-lun/jun-zhu-lun-6-lun-yi-kao-zi-ji-de-wu-zhuang-he-de-neng-huo-qu-de-xin-jun-zhu-guo/</url>
      
        <content type="html"><![CDATA[<h2 id="仿效最卓越的人">仿效最卓越的人</h2><blockquote><p>人民似乎总是走在他人走过的道路上，仿效他人的行动，尽管并不能完全沿着他人的道路或者获得你所仿效的那些人的德能；然而，一个审慎的人总是应该追随伟大人物的足迹，仿效那些最卓越的人，因此即使他自己的德能达不到那样的程度，但至少有几分相像。<br>他应该像那些审慎的射手那样行事：当他们想要射击的目标看起来太远，同时知道自己的弓力所及，他们瞄准时就比实际目标抬高很多，这并不是想把箭射到那么高的地方，而是为了能够借助这样的高度命中他想要射击的目标。<br>拿破仑：我会让人们看到，看似瞄准低处，也可以命中目标。</p></blockquote><h2 id="德能与机运">德能与机运</h2><blockquote><p>在全新的君主国中——那里有一位新君主——为了维持这种国家，他所遇到的困难是大是小，这取决于获取这种国家的人拥有的德能是多还是少。</p></blockquote><p>德能比机运重要：</p><blockquote><p>因为从平民跃升为君主，要么以德能要么以机运为前提条件，这两者中的任何一者似乎都可以部分地减缓许多困难；<br>拿破仑：德能比机运更重要；正是德能带来了机运。<br>然而，他越不倚靠机运，他就越是能够维护自己的地位。<br>如果君主没有其它的国家而不得不亲自到那里生活的话，那就更加容易了。</p></blockquote><p>考察先贤的行动和生平：摩西、居鲁士、罗穆卢斯、忒修斯</p><blockquote><p>除了机会之外，他们从机运那里一无所获；<br>机会给他们提供质料，他们想把它塑造成什么形式就什么形式。<br>拿破仑：我更不需要强求机会；机会早晚会来；要准备好抓住它。</p></blockquote><p>德能与机会的关系：</p><blockquote><p>如果没有这种机会，他们的精神德能就会消耗；<br>而如果没有这种德能，机会就会白白溜走。<br>拿破仑：总之，德能胜过一切。</p></blockquote><h2 id="先贤的德能：摩西、罗穆卢斯、忒修斯、居鲁士">先贤的德能：摩西、罗穆卢斯、忒修斯、居鲁士</h2><p>摩西：</p><blockquote><p>对摩西来说，必须找到在埃及被埃及人奴役与压迫的以色列人民，这样他们就会愿意追随他，以摆脱这种奴役。</p></blockquote><p>罗穆卢斯：</p><blockquote><p>罗穆卢斯活该在阿尔巴不被接纳，而应该在他出生的时候就被遗弃，这样他才能成为罗马的国王和祖国的奠基者。<br>拿破仑：有恩于我的母狼是布里埃纳。罗穆卢斯，我会让你相形见绌。</p></blockquote><p>居鲁士：</p><blockquote><p>居鲁士必须察觉到波斯人对米底人的统治心怀不满，而米底人则由于长期的和平而变得柔顺、懦弱。</p></blockquote><p>忒修斯：</p><blockquote><p>至于忒修斯，加入不曾遇到分散流离的雅典人，他就不能展现他的德能。<br>拿破仑：可怜的英雄！</p></blockquote><p>德能的重要性：</p><blockquote><p>这些机会使这些人功成名就，而他们卓越的德能使他们能够洞察到这种机会；而他们的祖国也由此日月重光，变得极为繁荣昌盛。<br>拿破仑：他们那一点点智慧足够应对今天的局面吗？</p></blockquote><h2 id="获取君主国时的困难和克服的方法——自身武力">获取君主国时的困难和克服的方法——自身武力</h2><blockquote><p>那些像他们这样依靠德能之路成为君主的人，在获取君主国的时候困难重重，但是保有它就轻而易举了</p></blockquote><p>困难：</p><blockquote><ol><li>在获取君主国时产生的困难，部分地来自于他们为了建立他们的国家和确保安全，不得不引入新的秩序和模式。<br>拿破仑：只要运用一点手腕，就能达到目的。</li><li>必须记住，再没有什么比带头引入新的秩序着手更加困难、成败更加不确定、实施起来更加危险的事情了。<br>拿破仑：他们难道不知道设立唯命是从的立法傀儡吗？</li><li>这是因为，引入者使所有旧秩序的既得利益者成为敌人，而那些可能受益于新秩序的人却只能是半心半意的拥护者。<br>拿破仑：心慈手软之人不知道如何获得能让其他人缴械投降的忠实拥护者。</li></ol></blockquote><p>为什么拥护者是半心半意的：</p><blockquote><ol><li>这种半心半意之所以产生，部分是因为这些人对他们的对手心存畏惧，因为法律站在后者一边；</li><li>部分是因为人类不轻易信任的心理：除非他们对此取得牢靠的经验，否则他们是不会真心相信新事物的。<br>拿破仑：这种情况只会发生在有一点小聪明，并且仍然保留着某种自由的人民的身上。</li></ol></blockquote><p>后果：</p><blockquote><ol><li>因此，任何时候只要那些敌人有机会发起进攻，他们就会沆瀣一气；</li><li>而其他进行防卫的人却是半心半意，同他们站在一起便会危险重重。</li></ol></blockquote><p>克服困难——自身武力的重要性：</p><blockquote><p>但是，如果我们想透彻地讨论这个问题，就必须考查这些革新者是依靠自己还是倚赖他人；换句话说，为了实施其行动，他们是必须乞求他人，还是事实上能够使用武力。<br>在第一种情况下，结果总是糟糕的，并且永远一事无成；<br>拿破仑：伟大的发现！谢天谢地！再胆小的懦夫，也不敢展现自己的软弱。<br>但是，如果他们依靠自己并且能够使用武力，那么他们就没有什么危险。</p></blockquote><p>武装的经验：</p><blockquote><p>由此观之，所有武装的先知都取得了胜利，<br>而没有武装的先知都灭亡了。<br>拿破仑：这些神谕屡试不爽。<br>拿破仑：再自然不过了。</p></blockquote><p>为什么没有武装的先知都灭亡了：</p><blockquote><ol><li>因为，除了已经说过的情况之外</li><li>人民的天性就是反复无常；</li><li>要说服他们相信某件事情是容易的，但要他们对这项说服坚信不疑，那就困难了。<br>拿破仑：今天，人民相信我，尤其是得到了教皇的认可之后，我是一个复兴宗教的虔诚信徒，一个上天派来的使者。</li></ol></blockquote><p>运用武力解决这种困难：</p><blockquote><p>因此，事情必须以这样一种方式做出安排：当他们不再相信的时候，能够用武力迫使他们相信。<br>拿破仑：我总有手段让他们相信。</p></blockquote><p>正例——摩西、居鲁士、忒修斯和罗穆卢斯：</p><blockquote><p>假如他们不曾武装起来，那么，他们就不可能使其人民长期地遵守他们的政制</p></blockquote><p>反例——吉罗拉莫·萨沃纳罗拉修士：</p><blockquote><p>一旦大众开始不再相信他，他便在他的新秩序中灭亡了，</p></blockquote><p>因为：</p><blockquote><ol><li>他既没有方式使那些信仰的人坚定信仰</li><li>也没有方式使那些不信仰的人信仰</li></ol></blockquote><p>结论：</p><blockquote><p>所以，像他们这样的人，在实施他们的事业时会发现巨大的困难；在前进的道路上充满了一切艰难险阻，他们必须运用德能加以克服。<br>但是，一旦他们克服了艰险，他们就会开始受人崇敬，在消灭了那些对他们的品性心怀嫉妒的人之后，他们就能继续享有权势、安全、荣誉和幸福。</p></blockquote><h2 id="补充范例——希耶罗">补充范例——希耶罗</h2><blockquote><p>他从平民跃升为叙拉古的君主，除了机会之外他并没有更多地受惠于机运。<br>拿破仑：从我童年时代接受的教育开始，他就从未离开过我的思想。他就像我的邻居；我也许与他属于同一家族。</p></blockquote><p>希耶罗的德能：</p><blockquote><ol><li>当时叙拉古人遭受压迫，于是选择他作为他们的将领，此后他便证明自己有资格成为他们的君主。<br>拿破仑：毫无疑问，只需一点帮助，我就可以像他一样。</li><li>他拥有如此大的德能，甚至在他身处平民运道的时候，就有人如此写道：“他要成为一位国王，除了一个王国之外，什么都不缺”。<br>拿破仑：我的母亲也常常对我说同样的事情；正是因为这些预言，我非常爱她。</li><li>希耶罗消灭了旧的军队，组织了一支新的军队；</li><li>抛弃了旧的盟友，建立了新的友谊；</li><li>当他有了自己的盟友和军队后，他就能够在这个基础之上建造任何建筑物；<br>因此，他在获取时历尽艰辛，但在维持时轻而易举。<br>拿破仑：这是一条出色的预言。</li></ol></blockquote><p>乞求他人，在获取时容易，但在维持时困难重重。<br>倚靠自己的武装和德能，在获取时历尽艰辛，但在维持时轻而易举。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-5.应当如何处置被占领前生活在自己法律下的城市或君主国</title>
      <link href="/2022/12/31/jun-zhu-lun/jun-zhu-lun-5-ying-dang-ru-he-chu-zhi-bei-zhan-ling-qian-sheng-huo-zai-zi-ji-fa-lu-xia-de-cheng-shi-huo-jun-zhu-guo/"/>
      <url>/2022/12/31/jun-zhu-lun/jun-zhu-lun-5-ying-dang-ru-he-chu-zhi-bei-zhan-ling-qian-sheng-huo-zai-zi-ji-fa-lu-xia-de-cheng-shi-huo-jun-zhu-guo/</url>
      
        <content type="html"><![CDATA[<h2 id="保有习惯于生活在他们自己的法律之下、生活在自由之中的国家">保有习惯于生活在他们自己的法律之下、生活在自由之中的国家</h2><blockquote><ol><li>毁灭他们</li><li>亲自前往生活在那里</li><li>让他们生活在自己的法律之下，但要求他们进贡并在其内部建立一个让他们对你保持友好的寡头国家。</li></ol></blockquote><p>好处：</p><blockquote><ol><li>因为这样一个国家是由那个君主建立的，他知道如果没有他的友谊和权势，他就不能立足，所以他竭尽全力地维护他。</li><li>而且，如果想要保全一个习惯于自由地生活地城市，那么，借助这个城市自己的公民来保有比依靠其他任何方式都容易。<br>拿破仑：在米兰，我设立了由三个忠实的人组成的执行委员会；就像我在热那亚设立的三人执行委员会一样。</li></ol></blockquote><h2 id="毁灭他们，以及关于君主国与共和国在处理上的不同">毁灭他们，以及关于君主国与共和国在处理上的不同</h2><p>斯巴达人的失败：</p><blockquote><p>斯巴达人通过在当地建立寡头国家来控制雅典和底比斯，但仍然再次失去他们。<br>注：在雅典，斯巴达在公元前404年扶持了“三十僭主”政府，随即在公元前403年被推翻。在底比斯，斯巴达在公元前382年建立了一个寡头政府，在公元前378年被佩洛皮达斯和埃帕米农达推翻。</p></blockquote><p>罗马人的失败与成功：</p><blockquote><p>罗马人为了保有卡普阿、迦太基和努曼提亚，摧毁了他们，就没有失去它们。<br>罗马人想要像斯巴达人那样保有希腊，允许它享有自由并保留它自己的法律，但他们却没有成功。<br>因此，他们为了保有希腊，不得不摧毁那个地区的许多城市。<br>因为要占领他们，除了毁灭他们之外，确实没有别的安全稳固的方式。<br>拿破仑：但是，我们可以通过多种方式完全达到目的而不必毁灭城市，当然，宪法是必须要改变的。</p></blockquote><p>毁灭的理由：</p><blockquote><ol><li>任何人成为一个习惯于自由生活的城市的宗主，却没有摧毁它，那他就是坐待被它摧毁</li><li>因为这个城市在反叛的时候，始终会以自由的名义和古老的秩序作为口实</li><li>而这两者无论是经久的岁月还是施恩布惠都不能使人忘怀</li><li>无论一个人如何主动出击或者积极预防，除非那里的居民四分五裂或者分散流离，否则他们是不会忘掉那个名义和那些秩序的</li><li>就像处在佛罗伦萨人奴役下百年之久的比萨一样，任何意外事件发生都会让他们立即想起这两者。<br>拿破仑：我对日内瓦尚有些许担忧；不过，我一点都不担心威尼斯人和热那亚人。</li></ol></blockquote><p>君主国的情况：</p><blockquote><p>如果一些城市或地区习惯了生活在一位君主的统治之下，并且他的血脉世系已经灭绝</p><ol><li>那么，由于一方面他们习惯了服从</li><li>另一方面他们没有了旧的君主，他们就既不会同意在他们当中另立一位君主，也不知道如何自由地生活。<br>所以：</li><li>他们不会很快拿起武器来反抗</li><li>而一位君主可以更加轻而易举地获得他们，并保护自己的安全免于其患。<br>拿破仑：尤其是当我们宣称将为人民带来自由和平等的时候。</li></ol></blockquote><p>共和国的情况：<br>在共和国里：</p><blockquote><ol><li>存在着更强的生命力、更大的仇恨感和更热切的复仇心</li><li>对其古老的自由的记忆不会也不能让他们平静</li></ol></blockquote><p>对共和国该怎样处理：</p><blockquote><p>因此，最安全稳固的办法就是消灭他们或者生活在他们中间。<br>拿破仑：让他们保持中立或改旗易帜就足够了。<br>拿破仑：如果已经彻底改变了他们，或者通过声称他们始终是自由的而牢牢地控制住了他们，就没必要再这么做了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-4.为什么亚历山大所夺取的大流士的王国在亚历山大死后没有反叛其后继者</title>
      <link href="/2022/12/31/jun-zhu-lun/jun-zhu-lun-4-wei-shi-me-ya-li-shan-da-suo-duo-qu-de-da-liu-shi-de-wang-guo-zai-ya-li-shan-da-si-hou-mei-you-fan-pan-qi-hou-ji-zhe/"/>
      <url>/2022/12/31/jun-zhu-lun/jun-zhu-lun-4-wei-shi-me-ya-li-shan-da-suo-duo-qu-de-da-liu-shi-de-wang-guo-zai-ya-li-shan-da-si-hou-mei-you-fan-pan-qi-hou-ji-zhe/</url>
      
        <content type="html"><![CDATA[<p><b>主要原因是大流士王国采用臣仆统治而非诸侯。</b></p><h2 id="君主国的两种统治方式">君主国的两种统治方式</h2><p>人类有记忆以来的君主国是通过两种不同的方式来统治的：</p><blockquote><ol><li>要么是由一位君主和所有其他的臣仆来统治——后者承蒙君主的恩惠和任命，作为大臣辅助统治王国；</li><li>要么是由一位君主和诸侯来统治——后者所保有的那种地位不是由于领主的恩惠而是由于血脉世系的古老得来。</li></ol></blockquote><p>两者的区别：</p><blockquote><ol><li>这些诸侯拥有他们自己的国家和臣民，这些臣民把他们奉为领主，对他们有着自然的情感。<br>拿破仑：我十分担心，如果我的将军们坚持要求这样的法律，那么我将不得不复活封建制的腐旧物。</li><li>至于那些由一位君主及其臣仆统治的国家，他们的君主拥有更大的权威，因为在他的地区全境只有他是至高无上的；如果他们服从其他任何人，他们也只是把此人看作大臣和官吏，并不对他抱有特别的爱戴。<br>拿破仑：非常好！我将尽力做到这一点。</li></ol></blockquote><h2 id="两种政体的特性">两种政体的特性</h2><p>土耳其苏丹是臣仆制；法兰西是诸侯制。</p><blockquote><ol><li>要获取（征服）土耳其苏丹的国家是困难的，但一旦攻克之，保有它是很容易的；</li><li>在某些方面夺取法兰西国家是比较容易的，但保有它却是非常困难的。</li></ol></blockquote><h2 id="为何夺取土耳其苏丹的王国十分困难，而保有却很容易">为何夺取土耳其苏丹的王国十分困难，而保有却很容易</h2><p>夺取：</p><blockquote><ol><li>入侵者不可能由那个王国的君主们召请进来，也不可能指望通过他（苏丹）周围的人反叛而使事业获得便利。</li><li>因为他们全都是君主的奴仆并对他负有恩义，要收买他们是非常困难的。</li><li>即使收买了他们，也不能指望从他们那里得到多少好处，因为他们不能让人民追随他们。</li><li>因此，任何向土耳其苏丹进攻的人都必须想到，他将会发现他的国家是团结一致的。</li><li>他最好把希望寄托在他自己的力量而不是他人的动乱之上。</li></ol></blockquote><p>保有：</p><blockquote><ol><li>一旦推翻了土耳其苏丹并且在战场上把他打得一败涂地以至不能够重振旗鼓。</li><li>那么，唯一可担心的就是君主的血脉世系了。</li><li>如果君主的血脉世系被灭绝，那么，就再没有什么人需要害怕了</li><li>因为其他人都不会得到人们的信任</li><li>并且，就像胜利者在取得胜利之前不曾寄望于他们一样，胜利之后也不用害怕他们。</li></ol></blockquote><h2 id="为何夺取法兰西王国十分容易，而保有却很困难">为何夺取法兰西王国十分容易，而保有却很困难</h2><p>夺取：</p><blockquote><ol><li>那里总会有心怀不满的人和想要革新的人</li><li>如果你把这个王国的某些诸侯笼络过来，就很容易进入那里。<br>拿破仑：打断他们的手臂，或者砍下他们的脑袋。</li><li>这些人会为你进入那个国家大开方便之门，让你顺利地取胜。</li></ol></blockquote><p>保有：</p><blockquote><ol><li>如果你想要维持这种胜利，你就会遇到无数的困难</li><li>既来自于那些曾经帮助过你的人</li><li>也来自于那些你已经压服的人</li><li>如果你只是灭绝了君主的血脉世系，那还不够</li><li>因为保留在那里的领主将会成为新变革的首领</li><li>而既然你既不能让他们满意</li><li>又不能消灭他们</li><li>那么，一旦他们的机会到来，你就会失去那个国家。<br>拿破仑：这句话简直字字珠玑。</li></ol></blockquote><h2 id="被征服者的情况的差异">被征服者的情况的差异</h2><p>亚历山大征服大流士：</p><blockquote><ol><li>大流士政府类似于土耳其苏丹的王国。</li><li>亚历山大必须首先在战场上把大流士完全击溃，并将其驱逐；</li><li>赢得这场胜利之后，随着大流士的死亡，基于上面讨论过的理由，那个国家对亚历山大来说仍然是稳固的。</li><li>而且，加入他的后继者们团结一致的话，他们本来是能够从容地享有它的，那个王国也不会发生任何骚乱，除非是他们自己引起的。</li></ol></blockquote><p>罗马人征服法兰西、西班牙和希腊：</p><blockquote><ol><li>对于像法国那样组织起来的国家，就不可能如此平稳地占领了。<br>拿破仑：我已经提供了平稳地环境，并且还会再接再厉。</li><li>西班牙、法兰西和希腊之所以屡屡发生反对罗马人地叛乱，就是因为在这些国家里有为数众多地小君主国。</li><li>只要他们地记忆尚存，罗马人的占领就始终不稳定</li><li>可一旦他们的记忆由于帝国的权势和长久的统治而消除，罗马人就成为他们稳固的占领者。<br>拿破仑：我也指望以这种优势维持统治。</li><li>即使后来罗马人发生内战的时候，他们也仍然占领那些地区</li><li>他们中的每一方都能够凭借各自在那些地区的某个部分所获得的权威而找到自己的支持者；<br>注：罗马共和国末期，马略、苏拉、庞培和凯撒等人在各行省都有自己的追随者。</li><li>因为那些地区先前的统治者的血脉世系已经灭绝，所以，除了罗马人之外，再没有其他人得到承认。</li></ol></blockquote><p>总结：</p><blockquote><ol><li>亚历山大保有亚洲的国家极为容易；</li><li>而像皮洛士以及许多像他那样的人，保全他们所获取（征服）的地方却困难重重。<br>注：伊庇鲁斯国王，在公元前279年以沉重代价打败罗马人，占领西西里和南意大利，公元前275年被罗马人击败。</li></ol></blockquote><p>原因：</p><blockquote><p>这并不是由于胜利者的德能有大有小，而是由于被征服者的情况有所差异。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-3.论混合君主国</title>
      <link href="/2022/12/31/jun-zhu-lun/jun-zhu-lun-3-lun-hun-he-jun-zhu-guo/"/>
      <url>/2022/12/31/jun-zhu-lun/jun-zhu-lun-3-lun-hun-he-jun-zhu-guo/</url>
      
        <content type="html"><![CDATA[<h2 id="如果新君主国并不是全新的-会面临新君主与新臣民的矛盾">如果新君主国并不是全新的, 会面临新君主与新臣民的矛盾</h2><p>马基雅维利在论述新君主国面临的困难时指出，如果新君主国并不是全新的，而是有人怀着改变自己境遇的信念去帮助他，会面临新君主与新臣民的矛盾：</p><blockquote><p>新君主由于他的重骑兵和新的获取（征服）所带来的无数其他损害，总是不可避免地侵害其新的臣民的利益。<br>由此，所有那些在你夺取该君主国的过程中侵害过的人都变成了你的敌人；而你又不能保持那些曾经帮助过你的人的友谊，因为你既不能依照他们期待的方式给予满足，又不能针对他们施以猛药，毕竟你对他们负有恩义。<br>还因为，纵使一个人拥有最为强大的军队，但他为了进入一个地区，也总是需要获得那个地区居民们的支持。</p></blockquote><p>拿破仑在执政官时期批注：</p><blockquote><p>不重要，胜者为王</p></blockquote><p>而在皇帝时期却批注：</p><blockquote><p>那些可恶的家伙！他们残酷地让我认清了这一真相。如果我不设法摆脱他们的控制，他们就会拿我开刀。</p></blockquote><p>我想到了中国皇帝的怀柔政策、杀功臣和杯酒释兵权。<br>同时也想到了大秦天王苻坚，靠假仁义拉拢投降者和反叛者，结果一旦战败，天下皆反。</p><h2 id="一度反叛的地区再度获取后就不那么容易丢失了">一度反叛的地区再度获取后就不那么容易丢失了</h2><blockquote><p>一度反叛的地方再度获取（征服）后就不会那么容易丧失了，因为统治者会抓住反叛提供的机会毫不迟疑地惩罚反叛者，揭露可疑分子，加强薄弱环节，巩固自己的安全。<br>为了扼杀在摇篮，还可以故意逼反某人。</p></blockquote><h2 id="巩固新占领土——语言、风俗、习惯或秩序相同的地区——灭族-怀柔">巩固新占领土——语言、风俗、习惯或秩序相同的地区——灭族+怀柔</h2><blockquote><p>那些被征服者合并到他已有国家的国家，要么与征服的国家属于同一地区、使用同一语言，要么并非如此。如果是前一种情况的话，尤其是如果他们不习惯自由地生活，那么保有这些国家是非常容易的；并且只要灭绝过去统治他们的君主的血脉世系，就足以稳固地占领这些国家。只要在其他事情上维持着他们旧的状态，而且在风俗习惯上没有什么差异，人民就会安然的生活下去。而且，尽管语言上可能有些差异，但是风俗习惯相同，因此他们容易相互容忍。<br>任何征服这些地方的人想要保有他们，就必须关注两个方面的问题：一方面是，要灭绝他们过去君主的血脉世系；另一方面就是，不要改变他们的法律或赋税；这样，在一个非常短的时间内，它就会同他们已有的君主国浑然一体。<br>总结：灭族+怀柔</p></blockquote><h2 id="巩固新占领土——语言、风俗、习惯和秩序都不同的地区——驻跸">巩固新占领土——语言、风俗、习惯和秩序都不同的地区——驻跸</h2><blockquote><p>征服者亲自前往，驻跸在那里。</p></blockquote><p>拿破仑：</p><blockquote><p>我会用副王或者傀儡国王来代替：他们唯我是从；稍有不从，立马换掉！</p></blockquote><p>我认为马基雅维利说得对，拿破仑的傀儡政策仅适用于弱势地区。如果被征服的土地人口和文化都很强势，那么只有驻跸。</p><p>马基雅维利关于驻跸的好处：</p><blockquote><ol><li>动乱稍一露头你就能察觉，从而就能够迅速地加以补救；但是，如果你不在跟前，那么只有天下大乱的时候你才能察觉，而那时你已经无力回天了</li><li>那个地区不会受你的官吏地掠夺。<br>拿破仑：要想让他们乐意为我效劳，就得让他们发点财。</li><li>臣民们由于能够随时求助于君主而感到满意；因此，那些愿意做良民地人势必更加爱戴他，而那些别有用心的人则势必更加畏惧他。<br>拿破仑：只要他们畏惧我就足够了。</li></ol></blockquote><p>拿破仑的这些观点在前期可能事半功倍，但如果长期施行的话，不利于长治久安。</p><h2 id="巩固新占领土——语言、风俗、习惯和秩序都不同的地区——殖民">巩固新占领土——语言、风俗、习惯和秩序都不同的地区——殖民</h2><blockquote><p>往一两个地方派遣移民，作为那个国家的羁绊；因为这样做是必然的，否则就必须以大批重骑兵和步兵来保有他们。<br>拿破仑：”此若不足，彼则补之“，我要两者兼顾。</p></blockquote><p>殖民的优点：</p><blockquote><ol><li>羁绊</li><li>在殖民这件事上不用花费太多，无须花自己的钱或者只要花自己很少的钱就可以向那里派遣移民并保有之；所侵害的只有那些其田地和房屋被征用给新居民的人，而他们只是那个国家中很少的一部分人。</li><li>受侵害的那些人是分散的、贫穷的，所以绝不会对他（君主）构成危害；而其他所有人一方面没有受到损害，所以他们容易安抚，另一方面，由于害怕自己遭到同样的掠夺，所以他们不敢有半点差错。</li></ol></blockquote><p>马基雅维利的结论：</p><blockquote><p>这种殖民花费不高，更加忠诚可靠，并且侵害性较小；而那些被侵害的人，如上所说，，既贫穷有分散，是不可能造成危害的。<br>拿破仑：在我的殖民地上，财产将归我所有，它们将被称为”国有财产“。</p></blockquote><p>西方人对殖民统治驾轻就熟，至今香港、印度等地依然保有对英国的羁绊。殖民或许真的是除驻跸以外最好的巩固统治的政策了。比中国古代的附属国更加影响深远，但是中国古代也有殖民政策。</p><blockquote><p>关于这一点，必须注意的是：对人们要么加以安抚，要么加以剪除；因为他们可以报复受到的轻微侵害，却无力报复受到的沉重侵害；所以，对一个人的侵害应当是无须害怕他复仇的那种侵害。</p></blockquote><p>对此，拿破仑在厄尔巴岛时期这样批注：</p><blockquote><p>我出于一时心软，只对自己的人民实施了轻微的侵害；结果他们仍要报复，损害我的利益。少数人的不满，就相当于许多人的怨恨；如果忽略了这一点，还谈何了解统治艺术的基本法则？<br>我没有很好地遵循这条规则；但他们将自己侵害地人武装起来，这些被侵害者就成了我的人。</p></blockquote><p>用武力统治地缺点：</p><blockquote><ol><li>如果为了保有一个国家而以重骑兵代替殖民地话，那么他将由于守卫它而不得不花费掉那个国家地全部收入，如此靡费甚巨。结果，获取反而变成了损失。<br>拿破仑：为了维持自身运转，需要加重赋税。</li><li>而且侵害更大，因为军队在周转调动中会危害整个国家，每个人都会感到痛苦，每个人都会变成他的敌人：这样的敌人就算被打败了，但仍然待在自己的家乡，所以足以构成危害。<br>因此，无论从哪个方面说，以驻军来守卫是无益的，而以殖民来守卫却是有益的。</li></ol></blockquote><h2 id="巩固新占领土——语言、风俗、习惯和秩序都不同的地区——制衡">巩固新占领土——语言、风俗、习惯和秩序都不同的地区——制衡</h2><blockquote><p>还要使自己成为邻近弱小势力的首领和保护者，设法削弱那个地区的强大势力，同时不要让一个同自己一样强大的外国势力利用某个意外事件介入那里。<br>拿破仑：要做到这一点，除了掠夺和占领以外，没有更好的方法。</p></blockquote><p>如何做：</p><blockquote><ol><li>总是会出现这样的情况：一个外国势力被那个地区心怀不满的人引入，要么由于过分的野心要么由于恐惧。</li><li>事态的发展往往是：一旦一个强大的外国势力进入一个地区，那里所有的弱小势力，就会出于对任何凌驾于他们之上的人的嫉妒，纷纷依附于他。</li><li>所以，这些弱小势力，笼络他们易如反掌，因为他们全部都会马上心甘情愿地同他在那里已经获取（征服）的国家结为一体。<br>拿破仑：笼络他们！我将毫不费力地达到目的；这些势力在我的逼迫下，尤其是通过我的莱茵联盟计划，只能选择归附于我。</li><li>他只需注意不要让这些弱小势力获得太大的力量和太大的权威；依靠自己的力量和他们的支持，它可以轻而易举地压服那些强大势力，从而继续成为那个地区完全的主宰。</li></ol></blockquote><p>马基雅维利对制衡同样十分看重：</p><blockquote><p>任何人只要没有很好地实施这个策略，他很快就会失去已经获取的一切，并且就算保有它，他也会在那里遇到无数的困难与烦恼。<br>拿破仑：马基雅维利钦佩这种艺术，而我知道自己完全不必这么做。</p></blockquote><p>制衡各方势力，笼络人心，首先通过笼络和扶持弱小势力立足，利用他们的矛盾，成为所有人的主宰。</p><h2 id="罗马人巩固经验">罗马人巩固经验</h2><blockquote><p>他们派遣移民，安抚弱小势力但不让其权势增长，镇压强大势力，不让强大的外国势力在那里赢得声望。<br>拿破仑：要诋毁他们。</p></blockquote><p>拿破仑说的很对。</p><blockquote><p>预见麻烦于未萌的罗马人总是能够找到补救办法，从不为了避免一场战争而任其发展，因为他们知道战争无可逃避，而拖延时日只会有利于他人。<br>拿破仑：非常重要的格言，我要将它作为我战争与政治行动的基本原则。</p></blockquote><p>非常重要的格言，我要将它作为我人生的基本原则。</p><p>理由：</p><blockquote><ol><li>所以，他们决意同腓力和安条克在希腊作战，以免将来不得不在意大利作战；虽然他们本来可以避免这两场战争，但他们不想这么做。</li><li>他们也不喜欢我们这个时代的聪明人整天挂在嘴上的那句话”享受时间的恩惠吧”，而宁愿享受自己德能和审慎的恩惠。<br>拿破仑：一群懦弱的小人；如果这种人以顾问身份出现在我面前，我会把他们……</li><li>因为时间把一切都推到跟前：它在带来好处的同时也带来坏处，而在带来坏处的同时也带来好处。<br>拿破仑：必须将这两方面都控制住。</li></ol></blockquote><p>时间不是朋友，是工具。</p><h2 id="路易十二的失败">路易十二的失败</h2><blockquote><p>他的所作所为，与想要在一个截然不同的地区保有一个国家所应当做的事情，恰好背道而驰。<br>拿破仑：从距离法国最近的皮埃蒙特开始，我将要求当地必须使用法语。要把一个民族的习俗推广到异国，推行这个民族的语言是最行之有效的方法。<br>让被征服地区的人产生精神上的认同感。</p></blockquote><h2 id="路易十二成功经验">路易十二成功经验</h2><p>路易由于威尼斯人的野心（想要半个伦巴第）而被引入意大利。<br>路易成功后，所有势力都逢迎他，威尼斯人才发觉自己采取的策略是多么冒失：</p><blockquote><p>为了获取伦巴第的两块土地，他们让国王成为意大利三分之二领土的统治者！<br>拿破仑：我假意将瓦尔泰利纳、贝尔加莫、曼托瓦、布雷西亚等地送给伦巴第人，又向他们植入了对共和主义的狂热，于是伦巴第人便帮了我这个同样的忙。一旦控制了这里，我很快就拿下意大利的其他地区。</p></blockquote><p>利用弱小势力对强大势力的嫉妒心，进行介入。</p><h2 id="路易十二失败原因">路易十二失败原因</h2><blockquote><p>如果国王遵循前面提到的规则，稳固维系并保护他的所有这些盟友的话，那么，他要在意大利维持自己的声望又有什么困难呢！<br>因为他们虽然为数众多，但既弱小又胆怯——有的害怕教会，有的害怕威尼斯人——因此，他们总是出于必然性而站在他这一边，而借助他们，他就总是能够轻而易举地保护自己的安全，对抗我们当中仍然强大的任何势力。</p></blockquote><p>路易的失误：</p><blockquote><ol><li>但是，他一进入米兰就反其道而行之：他援助教皇亚历山大六世，使教皇得以夺取罗马涅。</li><li>他没有注意到，由于此项决策，他削弱了自己的力量，失去了他的盟友和那些前来投靠他的人；</li><li>同时，在教会拥有如此巨大权威的精神权力之外，他又给他增加了如此巨大的世俗权力，使之势力壮大。<br>拿破仑：我必须让教廷之剑的双刃编钝。路易十二只是个白痴。<br>拿破仑：巨大的错误。</li><li>在犯了第一个错误之后，他就不得不继续错下去，直到最后为了制止亚历山大的野心，阻止其成为托斯卡纳的统治者，他不得不来到意大利。</li><li>他使教会的势力壮大并且失去了盟友之后好像还不够似的，他又垂涎于那波利王国，便同西班牙国王瓜分了他。<br>拿破仑：我也会拥有那波利，但与人共享不会让我失去至高无上的地位：我的好约瑟夫是永远不会对我说个不字的。</li><li>一开始他是意大利的主宰，而现在却引来一个同伙：结果，那个地区有野心的人和那些对他心怀不满的人在别处有了靠山；本来他可以在那个王国留一个向他纳贡称臣的人当国王，但他却把他撵走了，结果引来了一个能够把自己赶跑的人。<br>拿破仑：我不得不撤掉约瑟夫，对于我选定继承他的人，我也不无担忧。</li></ol></blockquote><h2 id="路易十二不应该和西班牙瓜分那波利">路易十二不应该和西班牙瓜分那波利</h2><blockquote><ol><li>获取的欲望确实是非常自然的、平常的事情；并且，只要在人们的能力范围之内，这样做总是会受到赞扬而不会受到非难；但是，如果这并非他们能力所及，却又千方百计地去做，那么，这就是错误而要受到非难了。</li><li>因此，如果法国能够依靠自己的力量进攻那波利的话，他就应该这样做；如果他没有这个能力，他就不应该瓜分那波利。</li><li>如果说他同威尼斯人瓜分伦巴第是因为法国需要借此在意大利获得立足之地而无可厚非的话，那么，这一次的瓜分就没有那种必然性为之开脱而要受到非难了。<br>拿破仑：自作自受。</li></ol></blockquote><h2 id="路易十二错误总结">路易十二错误总结</h2><p>因此，路易犯了这样六个错误：</p><blockquote><ol><li>他消灭了弱小势力</li><li>在意大利扩大了一个强大势力的权势</li><li>引入了一个非常强大的外国势力</li><li>他既没有亲自驻跸在那里</li><li>也没有向那里殖民</li><li>反威尼斯<br>假如他没有由于夺取威尼斯人的国家而犯下第六个错误的话，那么当他在世的时候，这些错误还不足以损害他。<br>拿破仑：他的错误在于他在这件事上急于求成了。</li></ol></blockquote><p>错误分析：</p><blockquote><ol><li>因为假如他不曾使教会势力壮大，不曾把西班牙引入意大利，那么他让威尼斯人屈服就是合乎情理的、必然的。</li><li>但是，既然他已经采取了那些策略，那么它就绝不应该同意威尼斯人的毁灭；</li><li>因为只要他们强大的话，他们就绝不会让他人染指伦巴第：不管是因为威尼斯人不会同意这种企图，除非他们自己成为那里的统治者；还是因为，其他人也不会想要从法国手中夺取伦巴第来送给威尼斯人，更不会有与这两者同时为敌的勇气。<br>拿破仑：就那个时代来说，这一推理已经足够有力了。</li><li>有人会说，路易国王是为了避免战争才把罗巴涅让给亚历山大六世、把那波利王国让给西班牙的；我可以根据上述理由回答说：人们绝不应该为了逃避一场战争而听任动乱继续，因为那非但不能避免战争，反而只能拖延战争而对你不利。<br>拿破仑：稍不满意，立刻宣战：这种决绝之心一旦传开，你的敌人就会慎重行事。</li><li>如果还有人援引国王对教皇许诺的信义：他支持教皇的事业是以教皇同意解除他的婚姻关系和授予鲁昂枢机主教的帽子作为回报的；关于这一点，后面论述君主的信义和应该如何守信时，我再给予回答。<br>拿破仑：这才是最高明的政治艺术；我的观点是，不要做过头。</li><li>因此，路易国王失去伦巴第就是因为他没有遵循那些夺取领土并希望保有领土的人所应当遵循的条件。</li></ol></blockquote><p>经验：</p><blockquote><ol><li>鲁昂枢机主教对我说：意大利人不懂战争；我回答他说，法国人不懂国家（治国术），因为如果他们懂得国家的话，就不会让教会的势力如此坐大。<br>拿破仑：罗马教廷把马基雅维利列入禁书目录是否还远远不够？</li><li>经验也许可以表明：教会和西班牙在意大利的强大是由法国促成的，而法国的毁灭是由它们促成的。</li><li>由此，我们可以得出一条从不会出错或者极少出错的一般性规则：谁是促使他人强大的原因，谁就是自取灭亡；<br>拿破仑：我永远不会这么做。</li><li>因为这种强大是由他要么通过费尽心机要么通过武力促成的，而这两者对于任何已经变得强大的人来说都是可疑的。<br>拿破仑：我的敌人似乎察觉不到这些。</li></ol></blockquote><p>君以此始，必以此终。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-2.论世袭君主国</title>
      <link href="/2022/12/31/jun-zhu-lun/jun-zhu-lun-2-lun-shi-xi-jun-zhu-guo/"/>
      <url>/2022/12/31/jun-zhu-lun/jun-zhu-lun-2-lun-shi-xi-jun-zhu-guo/</url>
      
        <content type="html"><![CDATA[<p>马基雅维利在《李维史诗》中探讨过共和制，所以他说他将只探讨君主制，而拿破仑是这样批注的：</p><blockquote><p>不管他们怎么说，只有这种制度（君主制）才是好的；然而，我必须附和他们，直到新的秩序建立。（将军时期）</p></blockquote><p>马基雅维利：</p><blockquote><p>在人们已经习惯了他们君主血脉世系统治的世袭国家里比在新的国家里维持国家，困难要小得多（拿破仑：我将尽我所能成为欧洲其他统治者得宗主，以弥补这种劣势。-将军时期）<br>因为君主只要不背离其先人定下得秩序，然后在遇到意外事件时能够随机应变，就足够了。这样，一位君主只要付出寻常的努力，就总是能够维持他在国家中的地位，除非遇到某种超乎寻常、格外强大得势力，它才可能被篡夺；即便如此，一旦篡夺者发生祸患，他还能收复之。</p></blockquote><p>马基雅维利承认后世君主的平庸，认为君主血脉世系统治可以弥补这种平庸。</p><p>拿破仑（皇帝时期）：</p><blockquote><p>这一点让我们拭目以待。对我有利的地方是，我并未夺取君权，我的权力是从第三者——那些把局面搞得一塌糊涂得共和主义者——手中得来的。篡夺者得可憎名号不会落到我头上。那些被我收买的喉舌已经说服大家：”他只是推翻了无政府状态“。我对法国王位的权利在勒芒的小说中就可以确立。但对意大利的王位，我就需要蒙加的论说文了，这套办法适合于辩手一般的意大利人，但对于法国人，一本小说就足够了。普通民众不识字，那就让主教们和教士们给他们讲道，况且我的教理是得到教皇特使批准的。在这一魔力面前，他们根本不会抵抗。教皇已经为我的帝国加冕，那它就是无可指摘的。所以，我比波旁王室的任何人都要名正言顺。</p></blockquote><p>拿破仑对宗教的利用让我想起了马克思对宗教的一段阐述：</p><blockquote><p>宗教是被压迫灵魂的叹息，是无情世界的感情，是没有精神的制度的精神，宗教是人民的鸦片。</p></blockquote><p>马基雅维利：</p><blockquote><p>因为自然的（世袭的）君主侵害人民的理由和必然性都较少，所以他理当更受爱戴。只要没有超乎寻常的恶行使他为人所憎恨，那么合乎情理的是，他将自然而然地获得民众的好感。</p></blockquote><p>这让我想起中国历朝历代天下大乱时，总会有人打起前朝的旗帜。这也让我想起马克思所说的”召唤亡灵的行动“：</p><blockquote><p>人们自己创造自己的历史，但是他们并不是随心所欲地创造，并不是在他们自己选定的条件下创造，而是在直接碰到的、既定的、从过去承继下来的条件下创造。一切已死的先辈们的传统，像梦魇一样纠缠着活人的头脑。当人们好像刚好在忙于改造自己和周围的事物并创造前所未有的事物时，恰好在这种革命危机时代，他们战战兢兢的请出亡灵来为自己效劳，借用它们的名字、战斗口号和衣服，以便穿着这种久受崇敬的服装，用这种借来的语言，演出世界历史的新的一幕。<br>就像一个刚学会一种新语言的人总是要把它翻译成本国语言一样；只有当他能够不必在心里把新语言翻译成本国语言，能够忘掉本国语言而运用新语言的时候，他才算领会了新语言的精神，才算是运用自如。</p></blockquote><p>由此也可以看出马克思的革命观并不极端。革命也不应该极端。</p><p>马基雅维利：</p><blockquote><p>革新的记忆和理由，由于统治的古老和持续而消除；因为每次变革总是为下一次变革留下凹槽。</p></blockquote><p>这是非常有智慧的观察，且言简意赅。<br>拿破仑在厄尔巴岛时期这样批注：</p><blockquote><p>人们为我留下了多少凹槽啊！所有属于我的仍然在那里；除非它们一个都不剩了，我所有的希望才会落空。我的雄鹰，我的N，我的头像，我的雕塑，也许还有我加冕时的帝国马车，我将在凹槽里把这些悉数找回来。这一切一直维系着人民对我的支持，并一直召唤着我。</p></blockquote><p>马克思的”亡灵“，马基雅维利的”凹槽“和拿破仑对回归的自信，其实都是一个道理。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-1.君主国有多少种类,获取它们的方式有哪些</title>
      <link href="/2022/12/31/jun-zhu-lun/jun-zhu-lun-1-jun-zhu-guo-you-duo-shao-chong-lei-huo-qu-ta-men-de-fang-shi-you-na-xie/"/>
      <url>/2022/12/31/jun-zhu-lun/jun-zhu-lun-1-jun-zhu-guo-you-duo-shao-chong-lei-huo-qu-ta-men-de-fang-shi-you-na-xie/</url>
      
        <content type="html"><![CDATA[<p>马基雅维利放弃了传统的政体三分法或六分法（君主制、贵族制、平民制、僭主制、寡头制、暴民制），而采用君主制、共和制或王国、共和国的二分法。<br>马基雅维利认为国家分为：共和国和君主国</p><p>君主国分为：世袭君主国和新君主国</p><p>拿破仑在将军时期就在新君主国处批准：</p><blockquote><p>如有上帝相助，我的国家亦将如此。</p></blockquote><p>马基雅维利：</p><blockquote><p>而新君主国，要么是全新的，要么是像肢体那样嫁接于获取了它们的世袭君主国。如此获取领地，要么习惯于生活在一位君主的统治之下，要么习惯于自由的生活；其获取方式，要么是依靠他人或自己的武装，要么是凭借机运或德能。</p></blockquote><p>马基雅维利和拿破仑一致认为自己的武装和德能才是对自己而言最可靠的力量。</p><p>拿破仑认为君主制才是最好的政体，他在第2章中是这样批注的：</p><blockquote><p>不管他们怎么说，只有这种制度才是好的；然而，我必须附和他们，直到新的秩序建立。（将军时期）</p></blockquote><p>现存君主制有：君主专制、二元君主制和议会君主制（君主立宪制）。<br>大多数都是君主立宪制。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>君主论-0.献词</title>
      <link href="/2022/12/31/jun-zhu-lun/jun-zhu-lun-0-xian-ci/"/>
      <url>/2022/12/31/jun-zhu-lun/jun-zhu-lun-0-xian-ci/</url>
      
        <content type="html"><![CDATA[<p>马基雅维利：</p><blockquote><p>就像那些绘制风景画的人，为了考察山峦和高地的特性而置身于平原，为了考察低地的特性而置身于山巅；同样，要深刻认识人民的特性，就必须成为君主，而要深刻认识君主的特性，就必须属于人民。</p></blockquote><p>拿破仑：</p><blockquote><p>我就是从这里开始，也应该从这里开始。站在山巅后才能更好地看清谷底。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 君主论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL-linux子系统迁移</title>
      <link href="/2022/12/30/yun-wei/wsl-linux-zi-xi-tong-qian-yi/"/>
      <url>/2022/12/30/yun-wei/wsl-linux-zi-xi-tong-qian-yi/</url>
      
        <content type="html"><![CDATA[<ol><li><code>wsl -l -v</code> 查看需要迁移的子系统</li><li><code>wsl --export  docker-desktop-data D:\virtual\docker-desktop-data.tar</code> 导出子系统</li><li><code>wsl --unregister docker-desktop-data</code> 注销子系统</li><li><code>wsl --import docker-desktop-data D:\virtual\docker-desktop-data D:\virtual\docker-desktop-data.tar --version 2</code> 导入子系统</li><li>删除<code>tar</code>文件: <code>D:\virtual\docker-desktop-data.tar</code></li><li><code>wsl -l -v</code> 查看是否导入成功</li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-江湖有重逢</title>
      <link href="/2022/12/30/zuo-pin/shi-ci-jiang-hu-you-chong-feng/"/>
      <url>/2022/12/30/zuo-pin/shi-ci-jiang-hu-you-chong-feng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>江湖有重逢</p><p>劳劳飞燕入此亭，又入江湖风雨迎。<br>二十春来伤心事，八百里外游子情。<br>何处梅舒冰骨香，谁家灯酒叹飘零。<br>斜月寒风任侠气，枕上龙泉独自鸣。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WIN-安装Android子系统</title>
      <link href="/2022/12/30/yun-wei/win-an-zhuang-android-zi-xi-tong/"/>
      <url>/2022/12/30/yun-wei/win-an-zhuang-android-zi-xi-tong/</url>
      
        <content type="html"><![CDATA[<ol><li>打开链接 <a href="https://store.rg-adguard.net/">https://store.rg-adguard.net/</a></li><li>输入 <a href="https://www.microsoft.com/store/productid/9p3395vx91nr">https://www.microsoft.com/store/productid/9p3395vx91nr</a></li><li>选择 slow，点击 √</li><li><code>MicrosoftCorporationII.WindowsSubsystemForAndroid_1.8.32837.0_neutral_~_8wekyb3d8bbwe.msixbundle</code>，右键这个链接，复制链接地址，新建标签页，打开这个链接，开始下载</li><li>进入管理员模式 PS</li><li><code>Add-AppxPackage "D:\xicheng_jiang\下载\浏览器\MicrosoftCorporationII.WindowsSubsystemForAndroid_1.8.32837.0_neutral___8wekyb3d8bbwe.Msixbundle"</code></li></ol><hr><p>若报错则以同样的方式安装 <code>Microsoft.UI.Xaml.2.6_2.62112.3002.0_x64__8wekyb3d8bbwe.appx</code><br>然后重试</p>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIN </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络-线性回归</title>
      <link href="/2022/12/28/coding/shen-jing-wang-luo-xian-xing-hui-gui/"/>
      <url>/2022/12/28/coding/shen-jing-wang-luo-xian-xing-hui-gui/</url>
      
        <content type="html"><![CDATA[<h1>单变量</h1><h2 id="单变量代价函数">单变量代价函数</h2><p>$$Hypothesis:\qquad h_\theta(x)=\theta_0+\theta_1x$$<br>$$Parameters:\qquad \theta_0, \theta_1$$<br>$$Cost Function:\qquad J(\theta_0,\theta_1)=\frac{1}{2m} \sum_{i=0}^m (h_\theta(x^{(i)})-y^{(i)})^2$$<br>$$Goal:\qquad minimize_{\theta_0,\theta_1}J(\theta_0,\theta_1)$$</p><hr><h2 id="单变量-Batch-梯度下降">单变量 Batch 梯度下降</h2><p>$$repeat \ until \ convergence:\qquad \theta_j:=\theta_j-\alpha\frac{\partial}{\partial\theta_j}J(\theta_0,\theta_1)\quad(simultaneously \  update \  j=0 \  and \  j=1 )$$</p><p>$\alpha$是学习速率，控制梯度下降的速度。过大可能会导致发散而非收敛；过小可能导致运算量过大。<br>$\theta$可以有多个</p><h1>多变量</h1><h2 id="多变量代价函数">多变量代价函数</h2><p>$$Hypothesis:\qquad h_\theta(x)=\theta_0x_0+\theta_1x_1+\theta_2x_2+\theta_3x_3+…+\theta_nx_n$$<br>$$Parameters:\qquad \theta$$<br>$$Cost Function:\qquad J(\theta)=\frac{1}{2m} \sum_{i=0}^m (h_\theta(x^{(i)})-y^{(i)})^2$$<br>$$Goal:\qquad minimize_{\theta}J(\theta)$$</p><h2 id="多变量-Batch-梯度下降">多变量 Batch 梯度下降</h2><p>$$repeat \ until \ convergence:\qquad \theta_j:=\theta_j-\alpha\frac{\partial}{\partial\theta_j}J(\theta)\quad(simultaneously \  update \  for \ every \ j=0 \ ,…, \ n)$$</p><p>使特征值的范围相近（缩放），可以较快的进行梯度下降<br>使用归一化：$x_i=\frac{x_i-u_i}{s_i}$; $u_i$是平均值，$s_i$是范围（标准差或是最大值减去最小值）</p><p>可以把特征值使用多项式回归来更好的拟合数据:<br>$x_1 = a$<br>$x_2 = a^2$<br>$x_3 = a^3$<br>$x_4 = a^4$<br>或<br>$x_1 = a$<br>$x_2 = \sqrt{a}$<br>如果这样做的话，就必需要对$x_1,x_2,x_3,x_4$进行归一化，否则取值范围相差太大</p><h2 id="正规方程直接求解最小值">正规方程直接求解最小值</h2><p>$$求偏导:\qquad\frac{\partial}{\partial\theta_j}J(\theta)=…=0 \quad (for \ every \ j) \quad Slove \ for \ \theta_0,\theta_1,…,\theta_n\quad\theta\in R^{n+1}$$</p><p>$$结论:\qquad\theta=(X^TX)^{-1}X^Ty$$</p><p>缺点：</p><ol><li>计算矩阵的逆时间复杂度是$O(n^{3})$，所以当特征很多的时候，这个方法会很慢，不如使用梯度下降法快（上万个特征就会变慢）</li><li>不适用于复杂算法</li></ol><p>$X^TX$不可逆（奇异矩阵）的情况（<code>pinv</code>函数依然会计算出伪逆）</p><ol><li>检查是否使用了相同的特征值</li><li>特征比训练样本要多很多<ul><li>删除一些特征</li><li>正规化</li></ul></li></ol><h2 id="向量化-便于求解">向量化-便于求解</h2><p>$$\theta:=\theta-\alpha\delta \quad \theta\in R^{n+1}, \ \delta\in R^{n+1}, \ \alpha\in R$$<br>$$\delta=\frac{1}{m}\sum_{i=0}^m(h_0(x^{(i)})-y^{(i)})x^{(i)} \quad  \ x \in R^{n+1}, \ (h_0(x^{(i)})-y^{(i)}) \in R$$</p><p>直接使用矩阵运算，同时更新所有$\theta$</p>]]></content>
      
      
      <categories>
          
          <category> IT学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记-20221205-反思自己，愿赌服输</title>
      <link href="/2022/12/05/ri-ji/ri-ji-20221205-fan-si-zi-ji-yuan-du-fu-shu/"/>
      <url>/2022/12/05/ri-ji/ri-ji-20221205-fan-si-zi-ji-yuan-du-fu-shu/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="93a35e9ac014f20d640515ee03aac913fef06d94c7010e274540914c3c961424">775986d9acbb0b15ae59994c4d3eed1075ad306a951372002f773d4b2ec3a84e6ba30ae9511ad4d610bf37df8f7545edb8c0f7a38e4250e599fd6db2255fdc93b13404717e42e4fec055df604050b2b479e090b989c8ef5e92e3d1a32db49ce0dec0491533d3b7cb6de6dad78cac35e68ada93672fc5afaade7a195bb31b7fa2e2e4b5632b87dc0615b8e4cf2d817a4b4b4a2cfff0aa5a0b9424390cd357de046c513c2bf00828b3b10d75b6f661b5fb272b22473d59cae458915404f78be228b9681f8d7455b768604eed89835481f81415b5dac362c3f4eadb1e24047d34edea3c16c101388082293685f6696ae4ba8575da8df21a31ece2221595779b4a117d095ebf91485dfabef2b327e2e0a94a59a357d879ec3c9885bf71413eb49ca8996da18936dc86781cf3b5e9b7395e5caee140f2a700ab5cdffd174599e96a5c199fb015049d03807ff764b988a7648f819a44929c1f14a011399f91901345eb7997a4a3b0cbf458eaa7dfe4e5302006420ac28e4057d0b1aa0cb92971ca8207cd1f02f52628a439eb5e717375db7338eb20e149a62405dfe75d80c1fcc1b884d5f9be746aa8cea706ea4636342dcc102b89ffa3eca1d10d324d13388a9941c5fc393cdfd478279c65cda2b07a2cd292a48e148c24c3990a96cb7edf4c98115df1d8d6fc0866f002b1059bef34ef062de587e19856169cf51d0f744da3a9341da4dce0b28cff305e345378f8686003d4a9d1eba813623131626ec0f453ea87eb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-天净沙·渐远</title>
      <link href="/2022/11/20/zuo-pin/shi-ci-tian-jing-sha-jian-yuan/"/>
      <url>/2022/11/20/zuo-pin/shi-ci-tian-jing-sha-jian-yuan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>天净沙·渐远<br>花花雨雨点点，莺莺燕燕翩翩，事事心心念念。<br>渐渐、渐渐。渐渐远远连连。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>route-在连接VPN的同时保持对互联网的访问</title>
      <link href="/2022/11/18/coding/route-zai-lian-jie-vpn-de-tong-shi-bao-chi-dui-hu-lian-wang-de-fang-wen/"/>
      <url>/2022/11/18/coding/route-zai-lian-jie-vpn-de-tong-shi-bao-chi-dui-hu-lian-wang-de-fang-wen/</url>
      
        <content type="html"><![CDATA[<ol><li><code>win+R</code> 输入 <code>ncpa.cpl</code>，按回车</li><li>右键需要操作的 VPN 设备，点击<code>属性</code></li><li>点击<code>网络</code>选项卡，双击 <code>TCP/IPv4</code>，点击<code>高级</code></li><li>取消勾选：<code>在远程网络上使用默认网关</code></li><li>连接VPN</li><li>管理员模式打开 <code>powershell</code> 或 <code>cmd</code></li><li>输入命令 <code>ipconfig /all</code> 回车，查看需要操作的VPN（如PPP连接）的IP地址，如<code>192.168.33.19</code></li><li>添加永久静态路由：<code>route add 172.16.0.0 mask 255.255.0.0  192.168.33.19 -p</code></li></ol><p>这条命令的意思是：将 <code>172.16.0.0</code> 网段，子网掩码为 <code>255.255.0.0</code> 的所有流量通过 <code>192.168.33.19</code> 接口访问，而 <code>192.168.33.19</code> 正是该VPN的接口</p><hr><p>可以使用以下 powershell 脚本，在连接VPN的时候自动更新路由表<br>下载脚本：<code>https://github.com/jxch/Shell-Tools/blob/main/auto-vpn-route.ps1</code></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># auto-vpn-route.ps1</span><span class="token keyword">param</span><span class="token punctuation">(</span><span class="token namespace">[String]</span><span class="token variable">$vpn</span><span class="token punctuation">,</span> <span class="token namespace">[String]</span><span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token namespace">[String]</span><span class="token variable">$mask</span><span class="token punctuation">)</span><span class="token variable">$vpn_ipv4</span> = <span class="token punctuation">(</span><span class="token function">Get-NetIPAddress</span> <span class="token punctuation">|</span> <span class="token function">Where-Object</span> <span class="token punctuation">{</span><span class="token variable">$_</span><span class="token punctuation">.</span>InterfaceAlias <span class="token operator">-eq</span> <span class="token variable">$vpn</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>IPAddress<span class="token function">Write-Host</span> <span class="token string">"vpn: <span class="token variable">$vpn</span>; vpn-ipv4: <span class="token variable">$vpn_ipv4</span>"</span><span class="token keyword">If</span><span class="token punctuation">(</span><span class="token namespace">[String]</span>::IsNullOrEmpty<span class="token punctuation">(</span><span class="token variable">$vpn_ipv4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Write-Warning</span> <span class="token string">"请连接 VPN：<span class="token variable">$vpn</span>"</span><span class="token punctuation">}</span> <span class="token keyword">Else</span> <span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"route delete <span class="token variable">$ip</span>"</span> <span class="token operator">-</span>ForegroundColor DarkGray    route delete <span class="token variable">$ip</span>    <span class="token function">Write-Host</span> <span class="token string">"route add <span class="token variable">$ip</span> mask <span class="token variable">$mask</span> <span class="token variable">$vpn_ipv4</span>"</span> <span class="token operator">-</span>ForegroundColor DarkGray    route add <span class="token variable">$ip</span> mask <span class="token variable">$mask</span> <span class="token variable">$vpn_ipv4</span>    <span class="token keyword">If</span><span class="token punctuation">(</span><span class="token namespace">[String]</span>::IsNullOrEmpty<span class="token punctuation">(</span><span class="token punctuation">(</span>route print <span class="token punctuation">|</span> <span class="token function">Select-String</span> <span class="token operator">-</span>Pattern <span class="token string">"\s0.0.0.0"</span> <span class="token punctuation">|</span> <span class="token function">Select-String</span> <span class="token variable">$vpn_ipv4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">Write-Host</span> <span class="token string">"操作完成！可使用 route print | select-string <span class="token variable">$ip</span> 查询路由表是否修改。"</span>    <span class="token punctuation">}</span> <span class="token keyword">Else</span> <span class="token punctuation">{</span>        <span class="token function">Write-Host</span> <span class="token string">"route delete <span class="token variable">$ip</span>"</span> <span class="token operator">-</span>ForegroundColor DarkGray        route delete <span class="token variable">$ip</span>        <span class="token function">Write-Warning</span> <span class="token string">"请去控制面板关闭 <span class="token variable">$vpn</span> 网卡的默认网关功能"</span>         <span class="token function">Write-Warning</span> <span class="token string">"参见：ncpa.cpl -&gt; <span class="token variable">$vpn</span> -&gt; 属性 -&gt; 网络 -&gt; (TCP/IPv4) -&gt; 高级 -&gt; 在远程网络上使用默认网关"</span>         <span class="token function">Write-Warning</span> <span class="token string">"重新连接 <span class="token variable">$vpn</span>"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用方法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token punctuation">.</span>\auto-vpn-route<span class="token punctuation">.</span>ps1 <span class="token operator">-</span>vpn 云开发 <span class="token operator">-</span>ip 172<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0 <span class="token operator">-</span>mask 255<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 使用手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> route </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks-部署</title>
      <link href="/2022/11/18/yun-wei/shadowsocks-bu-shu/"/>
      <url>/2022/11/18/yun-wei/shadowsocks-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-compose-yml">docker-compose.yml</h2><h3 id="compose">compose</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">shadowsocks</span><span class="token punctuation">:</span>     <span class="token key atrule">image</span><span class="token punctuation">:</span> shadowsocks/shadowsocks<span class="token punctuation">-</span>libev     <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> 12346<span class="token punctuation">:</span><span class="token number">12346</span>      <span class="token punctuation">-</span> 12346<span class="token punctuation">:</span>12346/udp     <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> ./shadowsocks<span class="token punctuation">:</span>/etc/shadowsocks<span class="token punctuation">-</span>libev    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> DNS_ADDRS=8.8.8.8<span class="token punctuation">,</span>8.8.4.4    <span class="token key atrule">command</span><span class="token punctuation">:</span> ss<span class="token punctuation">-</span>server <span class="token punctuation">-</span>c /etc/shadowsocks<span class="token punctuation">-</span>libev/config.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="swarm">swarm</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">shadowsocks</span><span class="token punctuation">:</span>     <span class="token key atrule">image</span><span class="token punctuation">:</span> shadowsocks/shadowsocks<span class="token punctuation">-</span>libev     <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> 12346<span class="token punctuation">:</span><span class="token number">12346</span>      <span class="token punctuation">-</span> 12346<span class="token punctuation">:</span>12346/udp     <span class="token key atrule">configs</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span> shadowsocks_config        <span class="token key atrule">target</span><span class="token punctuation">:</span> /etc/shadowsocks<span class="token punctuation">-</span>libev/config.json     <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> DNS_ADDRS=8.8.8.8<span class="token punctuation">,</span>8.8.4.4    <span class="token key atrule">command</span><span class="token punctuation">:</span> ss<span class="token punctuation">-</span>server <span class="token punctuation">-</span>c /etc/shadowsocks<span class="token punctuation">-</span>libev/config.json<span class="token key atrule">configs</span><span class="token punctuation">:</span>  <span class="token key atrule">shadowsocks_config</span><span class="token punctuation">:</span>    <span class="token key atrule">file</span><span class="token punctuation">:</span> /root/server/config/shadowsocks/config.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="config-json">config.json</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"server"</span><span class="token operator">:</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"server_port"</span><span class="token operator">:</span><span class="token number">12346</span><span class="token punctuation">,</span>    <span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"UUID"</span><span class="token punctuation">,</span>    <span class="token property">"timeout"</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">,</span>    <span class="token property">"method"</span><span class="token operator">:</span><span class="token string">"aes-256-gcm"</span><span class="token punctuation">,</span>    <span class="token property">"fast_open"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"tcp_and_udp"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="amd版-旧版">[amd版] 旧版</h2><h3 id="docker-compose-yml-2">docker-compose.yml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">shadowsocks</span><span class="token punctuation">:</span>   <span class="token key atrule">image</span><span class="token punctuation">:</span> appso/shadowsocks<span class="token punctuation">-</span>libev   <span class="token key atrule">ports</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> 12346<span class="token punctuation">:</span><span class="token number">12346</span>    <span class="token punctuation">-</span> 12346<span class="token punctuation">:</span>12346/udp   <span class="token key atrule">volumes</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> ./shadowsocks<span class="token punctuation">:</span>/etc/shadowsocks<span class="token punctuation">-</span>libev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="config-json-2">config.json</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"server"</span><span class="token operator">:</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"server_port"</span><span class="token operator">:</span><span class="token number">12346</span><span class="token punctuation">,</span>    <span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"UUID"</span><span class="token punctuation">,</span>    <span class="token property">"timeout"</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span>    <span class="token property">"method"</span><span class="token operator">:</span><span class="token string">"aes-256-gcm"</span><span class="token punctuation">,</span>    <span class="token property">"fast_open"</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"mode"</span><span class="token operator">:</span><span class="token string">"tcp_and_udp"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-无题二</title>
      <link href="/2022/11/18/zuo-pin/shi-ci-wu-ti-er/"/>
      <url>/2022/11/18/zuo-pin/shi-ci-wu-ti-er/</url>
      
        <content type="html"><![CDATA[<blockquote><p>钱不寒似东流水，人间自有花满天。<br>多情最是逐利客，伤心总在晴雨间。<br>恃才傲物贪欢日，算尽机关却等闲。<br>笑指当时楼上月，几人沧海已桑田。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-无题一</title>
      <link href="/2022/11/17/zuo-pin/shi-ci-wu-ti-yi/"/>
      <url>/2022/11/17/zuo-pin/shi-ci-wu-ti-yi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>韶华十年不堪问，总在烟雨朦胧中。<br>蓦然一瞥颜色动，千山万水转头空。<br>几许秋风送归雁，何处春江映花红。<br>年年今夜是此月，月月照得人不同。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-鹊桥仙·新婚</title>
      <link href="/2022/11/07/zuo-pin/shi-ci-que-qiao-xian-xin-hun/"/>
      <url>/2022/11/07/zuo-pin/shi-ci-que-qiao-xian-xin-hun/</url>
      
        <content type="html"><![CDATA[<blockquote><p>鹊桥仙·新婚<br>预祝哥嫂新婚快乐，写首小词助助兴！<br>纤纤素手，盈盈一水，一片惊鸿一入。相逢一醉了相思，却卧在红尘深处。<br>银花争流，飞红如雨，十月春风一路。鹊桥一步一回头，又岂是一年一度。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Fly-部署</title>
      <link href="/2022/11/06/yun-wei/v2fly-bu-shu/"/>
      <url>/2022/11/06/yun-wei/v2fly-bu-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="v2fly-服务端">v2fly 服务端</h2><h3 id="docker-compose-yml">docker-compose.yml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">v2fly</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> v2fly/v2fly<span class="token punctuation">-</span>core    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 12345<span class="token punctuation">:</span><span class="token number">12345</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./v2fly<span class="token punctuation">:</span>/etc/v2ray    <span class="token key atrule">entrypoint</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v2ray"</span><span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span>  <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"/etc/v2ray/config.json"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="docker-swarm">docker swarm</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.8'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">v2fly</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> v2fly/v2fly<span class="token punctuation">-</span>core    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 12345<span class="token punctuation">:</span><span class="token number">12345</span>    <span class="token key atrule">configs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span> v2fly.conf        <span class="token key atrule">target</span><span class="token punctuation">:</span> /etc/v2ray/config.json    <span class="token key atrule">entrypoint</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v2ray"</span><span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span>  <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"/etc/v2ray/config.json"</span><span class="token punctuation">]</span><span class="token key atrule">configs</span><span class="token punctuation">:</span>  <span class="token key atrule">v2fly.conf</span><span class="token punctuation">:</span>    <span class="token key atrule">file</span><span class="token punctuation">:</span> /root/config/v2fly/config.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="config-json">config.json</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"log"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"access"</span><span class="token operator">:</span> <span class="token string">"/var/log/v2ray/access.log"</span><span class="token punctuation">,</span>        <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">"/var/log/v2ray/error.log"</span><span class="token punctuation">,</span>        <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"warning"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"inbound"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>        <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"vmess"</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"clients"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"UUID"</span><span class="token punctuation">,</span>                    <span class="token property">"level"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                    <span class="token property">"alterId"</span><span class="token operator">:</span> <span class="token number">0</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"outbound"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"freedom"</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"inboundDetour"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"outboundDetour"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"blackhole"</span><span class="token punctuation">,</span>            <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"blocked"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"routing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"strategy"</span><span class="token operator">:</span> <span class="token string">"rules"</span><span class="token punctuation">,</span>        <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"rules"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">{</span>                    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>                    <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                        <span class="token string">"0.0.0.0/8"</span><span class="token punctuation">,</span>                        <span class="token string">"10.0.0.0/8"</span><span class="token punctuation">,</span>                        <span class="token string">"100.64.0.0/10"</span><span class="token punctuation">,</span>                        <span class="token string">"127.0.0.0/8"</span><span class="token punctuation">,</span>                        <span class="token string">"169.254.0.0/16"</span><span class="token punctuation">,</span>                        <span class="token string">"172.16.0.0/12"</span><span class="token punctuation">,</span>                        <span class="token string">"192.0.0.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"192.0.2.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"192.168.0.0/16"</span><span class="token punctuation">,</span>                        <span class="token string">"198.18.0.0/15"</span><span class="token punctuation">,</span>                        <span class="token string">"198.51.100.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"203.0.113.0/24"</span><span class="token punctuation">,</span>                        <span class="token string">"::1/128"</span><span class="token punctuation">,</span>                        <span class="token string">"fc00::/7"</span><span class="token punctuation">,</span>                        <span class="token string">"fe80::/10"</span>                    <span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"blocked"</span>                <span class="token punctuation">}</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="v2fly-客户端">v2fly 客户端</h2><h3 id="docker-compose-yml-2">docker-compose.yml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">v2fly</span><span class="token punctuation">:</span>     <span class="token key atrule">image</span><span class="token punctuation">:</span> v2fly/v2fly<span class="token punctuation">-</span>core    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped     <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> host    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>       <span class="token punctuation">-</span> ./v2fly<span class="token punctuation">:</span>/etc/v2ray    <span class="token key atrule">entrypoint</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v2ray"</span><span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span>  <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"/etc/v2ray/config.json"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="config-json-2">config.json</h3><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"log"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"access"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token property">"error"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token property">"loglevel"</span><span class="token operator">:</span> <span class="token string">"warning"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"inbounds"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"socks"</span><span class="token punctuation">,</span>      <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">10808</span><span class="token punctuation">,</span>      <span class="token property">"listen"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"socks"</span><span class="token punctuation">,</span>      <span class="token property">"sniffing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"destOverride"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"http"</span><span class="token punctuation">,</span>          <span class="token string">"tls"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"auth"</span><span class="token operator">:</span> <span class="token string">"noauth"</span><span class="token punctuation">,</span>        <span class="token property">"udp"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"allowTransparent"</span><span class="token operator">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"http"</span><span class="token punctuation">,</span>      <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">10809</span><span class="token punctuation">,</span>      <span class="token property">"listen"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"http"</span><span class="token punctuation">,</span>      <span class="token property">"sniffing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"destOverride"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"http"</span><span class="token punctuation">,</span>          <span class="token string">"tls"</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"auth"</span><span class="token operator">:</span> <span class="token string">"noauth"</span><span class="token punctuation">,</span>        <span class="token property">"udp"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"allowTransparent"</span><span class="token operator">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"outbounds"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"proxy"</span><span class="token punctuation">,</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"vmess"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"vnext"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"IP"</span><span class="token punctuation">,</span>            <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">12345</span><span class="token punctuation">,</span>            <span class="token property">"users"</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token punctuation">{</span>                <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"UUID"</span><span class="token punctuation">,</span>                <span class="token property">"alterId"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"t@t.tt"</span><span class="token punctuation">,</span>                <span class="token property">"security"</span><span class="token operator">:</span> <span class="token string">"auto"</span>              <span class="token punctuation">}</span>            <span class="token punctuation">]</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"streamSettings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"network"</span><span class="token operator">:</span> <span class="token string">"tcp"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"mux"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"concurrency"</span><span class="token operator">:</span> <span class="token number">-1</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"freedom"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"tag"</span><span class="token operator">:</span> <span class="token string">"block"</span><span class="token punctuation">,</span>      <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"blackhole"</span><span class="token punctuation">,</span>      <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"response"</span><span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"http"</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"routing"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"domainStrategy"</span><span class="token operator">:</span> <span class="token string">"IPIfNonMatch"</span><span class="token punctuation">,</span>    <span class="token property">"rules"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"inboundTag"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"api"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"api"</span><span class="token punctuation">,</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>        <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"domain:example-example.com"</span><span class="token punctuation">,</span>          <span class="token string">"domain:example-example2.com"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"block"</span><span class="token punctuation">,</span>        <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"geosite:category-ads-all"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>        <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"geosite:cn"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"direct"</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token string">"geoip:private"</span><span class="token punctuation">,</span>          <span class="token string">"geoip:cn"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"field"</span><span class="token punctuation">,</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token string">"0-65535"</span><span class="token punctuation">,</span>        <span class="token property">"outboundTag"</span><span class="token operator">:</span> <span class="token string">"proxy"</span><span class="token punctuation">,</span>        <span class="token property">"enabled"</span><span class="token operator">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose.yml </tag>
            
            <tag> V2Ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dnsmasq-部署</title>
      <link href="/2022/11/05/yun-wei/dnsmasq-bu-shu/"/>
      <url>/2022/11/05/yun-wei/dnsmasq-bu-shu/</url>
      
        <content type="html"><![CDATA[<h1>docker 部署</h1><h2 id="docker-compose-yml">docker-compose.yml</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">dns-server</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> jpillora/dnsmasq    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> dns<span class="token punctuation">-</span>server    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> TZ=Asia/Shanghai      <span class="token punctuation">-</span> HTTP_USER=username      <span class="token punctuation">-</span> HTTP_PASS=password    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"53:53/udp"</span>      <span class="token punctuation">-</span> <span class="token string">"5380:8080"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"./dns/dnsmasq.conf:/etc/dnsmasq.conf"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="dnsmasq-conf">dnsmasq.conf</h2><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf"># 服务器上游DNS服务器地址resolv-file=/etc/resolv.conf# 默认缓存条数150，这里增加到1000cache-size=1000# 重启后清空缓存clear-on-reload# DNS 服务器server=8.8.4.4server=8.8.8.8server=4.2.2.1server=4.2.2.2server=114.114.114.114# 自定义域名address=/example.com/192.168.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dnsmasq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗词-明月照清河</title>
      <link href="/2022/11/05/zuo-pin/shi-ci-ming-yue-zhao-qing-he/"/>
      <url>/2022/11/05/zuo-pin/shi-ci-ming-yue-zhao-qing-he/</url>
      
        <content type="html"><![CDATA[<blockquote><p>清河何年生明月，明月何处入清河<br>清河明月两不知，明月清河两不厌<br>清风不识人，风却吹的心儿乱<br>你我两不知，我却随风飘走<br>月在天外，我在河边</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
